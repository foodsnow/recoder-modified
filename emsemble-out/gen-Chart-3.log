stdout: else_statement -> BlockStatement
using GPU
p
path org.jfree.data.time.TimeSeries
createCopy
Position(line=1048, column=12)
FOUND IT!
[{'bugid': 'Chart-3', 'treeroot': <Searchnode.Node object at 0x7f47e454dd90>, 'troot': <Searchnode.Node object at 0x7f47e454dd90>, 'oldcode': '        copy.data = new java.util.ArrayList();', 'filepath': 'buggy/Chart-3/source/org/jfree/data/time/TimeSeries.java', 'subroot': <Searchnode.Node object at 0x7f47e45378d0>, 'vardic': {'createCopy_ter': 'meth0', 'start_ter': 'par0', 'end_ter': 'par1', 'copy_ter': 'loc0', 'index_ter': 'loc1', 'item_ter': 'loc2', 'clone_ter': 'loc3'}, 'typedic': {'start_ter': 'int', 'end_ter': 'int', 'copy_ter': 'TimeSeries', 'index_ter': 'int', 'item_ter': 'TimeSeriesDataItem', 'clone_ter': 'TimeSeriesDataItem'}, 'idss': 'Chart-3', 'classname': 'org.jfree.data.time.TimeSeries', 'precode': '/* ===========================================================\n * JFreeChart : a free chart library for the Java(tm) platform\n * ===========================================================\n *\n * (C) Copyright 2000-2009, by Object Refinery Limited and Contributors.\n *\n * Project Info:  http://www.jfree.org/jfreechart/index.html\n *\n * This library is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public\n * License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,\n * USA.\n *\n * [Java is a trademark or registered trademark of Sun Microsystems, Inc.\n * in the United States and other countries.]\n *\n * ---------------\n * TimeSeries.java\n * ---------------\n * (C) Copyright 2001-2009, by Object Refinery Limited.\n *\n * Original Author:  David Gilbert (for Object Refinery Limited);\n * Contributor(s):   Bryan Scott;\n *                   Nick Guenther;\n *\n * Changes\n * -------\n * 11-Oct-2001 : Version 1 (DG);\n * 14-Nov-2001 : Added listener mechanism (DG);\n * 15-Nov-2001 : Updated argument checking and exceptions in add() method (DG);\n * 29-Nov-2001 : Added properties to describe the domain and range (DG);\n * 07-Dec-2001 : Renamed TimeSeries --> BasicTimeSeries (DG);\n * 01-Mar-2002 : Updated import statements (DG);\n * 28-Mar-2002 : Added a method add(TimePeriod, double) (DG);\n * 27-Aug-2002 : Changed return type of delete method to void (DG);\n * 04-Oct-2002 : Added itemCount and historyCount attributes, fixed errors\n *               reported by Checkstyle (DG);\n * 29-Oct-2002 : Added series change notification to addOrUpdate() method (DG);\n * 28-Jan-2003 : Changed name back to TimeSeries (DG);\n * 13-Mar-2003 : Moved to com.jrefinery.data.time package and implemented\n *               Serializable (DG);\n * 01-May-2003 : Updated equals() method (see bug report 727575) (DG);\n * 14-Aug-2003 : Added ageHistoryCountItems method (copied existing code for\n *               contents) made a method and added to addOrUpdate.  Made a\n *               public method to enable ageing against a specified time\n *               (eg now) as opposed to lastest time in series (BS);\n * 15-Oct-2003 : Added fix for setItemCount method - see bug report 804425.\n *               Modified exception message in add() method to be more\n *               informative (DG);\n * 13-Apr-2004 : Added clear() method (DG);\n * 21-May-2004 : Added an extra addOrUpdate() method (DG);\n * 15-Jun-2004 : Fixed NullPointerException in equals() method (DG);\n * 29-Nov-2004 : Fixed bug 1075255 (DG);\n * 17-Nov-2005 : Renamed historyCount --> maximumItemAge (DG);\n * 28-Nov-2005 : Changed maximumItemAge from int to long (DG);\n * 01-Dec-2005 : New add methods accept notify flag (DG);\n * ------------- JFREECHART 1.0.x ---------------------------------------------\n * 24-May-2006 : Improved error handling in createCopy() methods (DG);\n * 01-Sep-2006 : Fixed bugs in removeAgedItems() methods - see bug report\n *               1550045 (DG);\n * 22-Mar-2007 : Simplified getDataItem(RegularTimePeriod) - see patch 1685500\n *               by Nick Guenther (DG);\n * 21-Jun-2007 : Removed JCommon dependencies (DG);\n * 29-Jun-2007 : Changed first parameter in constructors from String to\n *               Comparable (DG);\n * 31-Oct-2007 : Implemented faster hashCode() (DG);\n * 21-Nov-2007 : Fixed clone() method (bug 1832432) (DG);\n * 10-Jan-2008 : Fixed createCopy(RegularTimePeriod, RegularTimePeriod) (bug\n *               1864222) (DG);\n * 13-Jan-2009 : Fixed constructors so that timePeriodClass doesn\'t need to\n *               be specified in advance (DG);\n * 26-May-2009 : Added cache for minY and maxY values (DG);\n * 09-Jun-2009 : Ensure that TimeSeriesDataItem objects used in underlying\n *               storage are cloned to keep series isolated from external\n *               changes (DG);\n * 10-Jun-2009 : Added addOrUpdate(TimeSeriesDataItem) method (DG);\n * 31-Aug-2009 : Clear minY and maxY cache values in createCopy (DG);\n *\n */\n\npackage org.jfree.data.time;\n\nimport java.io.Serializable;\nimport java.lang.reflect.InvocationTargetException;\nimport java.lang.reflect.Method;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.Date;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.TimeZone;\n\nimport org.jfree.chart.util.ObjectUtilities;\nimport org.jfree.data.general.Series;\nimport org.jfree.data.event.SeriesChangeEvent;\nimport org.jfree.data.general.SeriesException;\n\n/**\n * Represents a sequence of zero or more data items in the form (period, value)\n * where \'period\' is some instance of a subclass of {@link RegularTimePeriod}.\n * The time series will ensure that (a) all data items have the same type of\n * period (for example, {@link Day}) and (b) that each period appears at\n * most one time in the series.\n */\npublic class TimeSeries extends Series implements Cloneable, Serializable {\n\n    /** For serialization. */\n    private static final long serialVersionUID = -5032960206869675528L;\n\n    /** Default value for the domain description. */\n    protected static final String DEFAULT_DOMAIN_DESCRIPTION = "Time";\n\n    /** Default value for the range description. */\n    protected static final String DEFAULT_RANGE_DESCRIPTION = "Value";\n\n    /** A description of the domain. */\n    private String domain;\n\n    /** A description of the range. */\n    private String range;\n\n    /** The type of period for the data. */\n    protected Class timePeriodClass;\n\n    /** The list of data items in the series. */\n    protected List data;\n\n    /** The maximum number of items for the series. */\n    private int maximumItemCount;\n\n    /**\n     * The maximum age of items for the series, specified as a number of\n     * time periods.\n     */\n    private long maximumItemAge;\n\n    /**\n     * The minimum y-value in the series.\n     *\n     * @since 1.0.14\n     */\n    private double minY;\n\n    /**\n     * The maximum y-value in the series.\n     *\n     * @since 1.0.14\n     */\n    private double maxY;\n\n    /**\n     * Creates a new (empty) time series.  By default, a daily time series is\n     * created.  Use one of the other constructors if you require a different\n     * time period.\n     *\n     * @param name  the series name (<code>null</code> not permitted).\n     */\n    public TimeSeries(Comparable name) {\n        this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION);\n    }\n\n    /**\n     * Creates a new time series that contains no data.\n     * <P>\n     * Descriptions can be specified for the domain and range.  One situation\n     * where this is helpful is when generating a chart for the time series -\n     * axis labels can be taken from the domain and range description.\n     *\n     * @param name  the name of the series (<code>null</code> not permitted).\n     * @param domain  the domain description (<code>null</code> permitted).\n     * @param range  the range description (<code>null</code> permitted).\n     *\n     * @since 1.0.13\n     */\n    public TimeSeries(Comparable name, String domain, String range) {\n        super(name);\n        this.domain = domain;\n        this.range = range;\n        this.timePeriodClass = null;\n        this.data = new java.util.ArrayList();\n        this.maximumItemCount = Integer.MAX_VALUE;\n        this.maximumItemAge = Long.MAX_VALUE;\n        this.minY = Double.NaN;\n        this.maxY = Double.NaN;\n    }\n\n    /**\n     * Returns the domain description.\n     *\n     * @return The domain description (possibly <code>null</code>).\n     *\n     * @see #setDomainDescription(String)\n     */\n    public String getDomainDescription() {\n        return this.domain;\n    }\n\n    /**\n     * Sets the domain description and sends a <code>PropertyChangeEvent</code>\n     * (with the property name <code>Domain</code>) to all registered\n     * property change listeners.\n     *\n     * @param description  the description (<code>null</code> permitted).\n     *\n     * @see #getDomainDescription()\n     */\n    public void setDomainDescription(String description) {\n        String old = this.domain;\n        this.domain = description;\n        firePropertyChange("Domain", old, description);\n    }\n\n    /**\n     * Returns the range description.\n     *\n     * @return The range description (possibly <code>null</code>).\n     *\n     * @see #setRangeDescription(String)\n     */\n    public String getRangeDescription() {\n        return this.range;\n    }\n\n    /**\n     * Sets the range description and sends a <code>PropertyChangeEvent</code>\n     * (with the property name <code>Range</code>) to all registered listeners.\n     *\n     * @param description  the description (<code>null</code> permitted).\n     *\n     * @see #getRangeDescription()\n     */\n    public void setRangeDescription(String description) {\n        String old = this.range;\n        this.range = description;\n        firePropertyChange("Range", old, description);\n    }\n\n    /**\n     * Returns the number of items in the series.\n     *\n     * @return The item count.\n     */\n    public int getItemCount() {\n        return this.data.size();\n    }\n\n    /**\n     * Returns the list of data items for the series (the list contains\n     * {@link TimeSeriesDataItem} objects and is unmodifiable).\n     *\n     * @return The list of data items.\n     */\n    public List getItems() {\n        // FIXME: perhaps we should clone the data list\n        return Collections.unmodifiableList(this.data);\n    }\n\n    /**\n     * Returns the maximum number of items that will be retained in the series.\n     * The default value is <code>Integer.MAX_VALUE</code>.\n     *\n     * @return The maximum item count.\n     *\n     * @see #setMaximumItemCount(int)\n     */\n    public int getMaximumItemCount() {\n        return this.maximumItemCount;\n    }\n\n    /**\n     * Sets the maximum number of items that will be retained in the series.\n     * If you add a new item to the series such that the number of items will\n     * exceed the maximum item count, then the FIRST element in the series is\n     * automatically removed, ensuring that the maximum item count is not\n     * exceeded.\n     *\n     * @param maximum  the maximum (requires >= 0).\n     *\n     * @see #getMaximumItemCount()\n     */\n    public void setMaximumItemCount(int maximum) {\n        if (maximum < 0) {\n            throw new IllegalArgumentException("Negative \'maximum\' argument.");\n        }\n        this.maximumItemCount = maximum;\n        int count = this.data.size();\n        if (count > maximum) {\n            delete(0, count - maximum - 1);\n        }\n    }\n\n    /**\n     * Returns the maximum item age (in time periods) for the series.\n     *\n     * @return The maximum item age.\n     *\n     * @see #setMaximumItemAge(long)\n     */\n    public long getMaximumItemAge() {\n        return this.maximumItemAge;\n    }\n\n    /**\n     * Sets the number of time units in the \'history\' for the series.  This\n     * provides one mechanism for automatically dropping old data from the\n     * time series. For example, if a series contains daily data, you might set\n     * the history count to 30.  Then, when you add a new data item, all data\n     * items more than 30 days older than the latest value are automatically\n     * dropped from the series.\n     *\n     * @param periods  the number of time periods.\n     *\n     * @see #getMaximumItemAge()\n     */\n    public void setMaximumItemAge(long periods) {\n        if (periods < 0) {\n            throw new IllegalArgumentException("Negative \'periods\' argument.");\n        }\n        this.maximumItemAge = periods;\n        removeAgedItems(true);  // remove old items and notify if necessary\n    }\n\n    /**\n     * Returns the smallest y-value in the series, ignoring any null and\n     * Double.NaN values.  This method returns Double.NaN if there is no\n     * smallest y-value (for example, when the series is empty).\n     *\n     * @return The smallest y-value.\n     *\n     * @see #getMaxY()\n     *\n     * @since 1.0.14\n     */\n    public double getMinY() {\n        return this.minY;\n    }\n\n    /**\n     * Returns the largest y-value in the series, ignoring any Double.NaN\n     * values.  This method returns Double.NaN if there is no largest y-value\n     * (for example, when the series is empty).\n     *\n     * @return The largest y-value.\n     *\n     * @see #getMinY()\n     *\n     * @since 1.0.14\n     */\n    public double getMaxY() {\n        return this.maxY;\n    }\n\n    /**\n     * Returns the time period class for this series.\n     * <p>\n     * Only one time period class can be used within a single series (enforced).\n     * If you add a data item with a {@link Year} for the time period, then all\n     * subsequent data items must also have a {@link Year} for the time period.\n     *\n     * @return The time period class (may be <code>null</code> but only for\n     *     an empty series).\n     */\n    public Class getTimePeriodClass() {\n        return this.timePeriodClass;\n    }\n\n    /**\n     * Returns a data item from the dataset.  Note that the returned object\n     * is a clone of the item in the series, so modifying it will have no\n     * effect on the data series.\n     *\n     * @param index  the item index.\n     *\n     * @return The data item.\n     *\n     * @see #getDataItem(RegularTimePeriod)\n     */\n    public TimeSeriesDataItem getDataItem(int index) {\n        TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n        return (TimeSeriesDataItem) item.clone();\n    }\n\n    /**\n     * Returns the data item for a specific period.  Note that the returned\n     * object is a clone of the item in the series, so modifying it will have\n     * no effect on the data series.\n     *\n     * @param period  the period of interest (<code>null</code> not allowed).\n     *\n     * @return The data item matching the specified period (or\n     *         <code>null</code> if there is no match).\n     *\n     * @see #getDataItem(int)\n     */\n    public TimeSeriesDataItem getDataItem(RegularTimePeriod period) {\n        int index = getIndex(period);\n        if (index >= 0) {\n            return getDataItem(index);\n        }\n        else {\n            return null;\n        }\n    }\n\n    /**\n     * Returns a data item for the series.  This method returns the object\n     * that is used for the underlying storage - you should not modify the\n     * contents of the returned value unless you know what you are doing.\n     *\n     * @param index  the item index (zero-based).\n     *\n     * @return The data item.\n     *\n     * @see #getDataItem(int)\n     *\n     * @since 1.0.14\n     */\n    TimeSeriesDataItem getRawDataItem(int index) {\n        return (TimeSeriesDataItem) this.data.get(index);\n    }\n\n    /**\n     * Returns a data item for the series.  This method returns the object\n     * that is used for the underlying storage - you should not modify the\n     * contents of the returned value unless you know what you are doing.\n     *\n     * @param period  the item index (zero-based).\n     *\n     * @return The data item.\n     *\n     * @see #getDataItem(RegularTimePeriod)\n     *\n     * @since 1.0.14\n     */\n    TimeSeriesDataItem getRawDataItem(RegularTimePeriod period) {\n        int index = getIndex(period);\n        if (index >= 0) {\n            return (TimeSeriesDataItem) this.data.get(index);\n        }\n        else {\n            return null;\n        }\n    }\n\n    /**\n     * Returns the time period at the specified index.\n     *\n     * @param index  the index of the data item.\n     *\n     * @return The time period.\n     */\n    public RegularTimePeriod getTimePeriod(int index) {\n        return getRawDataItem(index).getPeriod();\n    }\n\n    /**\n     * Returns a time period that would be the next in sequence on the end of\n     * the time series.\n     *\n     * @return The next time period.\n     */\n    public RegularTimePeriod getNextTimePeriod() {\n        RegularTimePeriod last = getTimePeriod(getItemCount() - 1);\n        return last.next();\n    }\n\n    /**\n     * Returns a collection of all the time periods in the time series.\n     *\n     * @return A collection of all the time periods.\n     */\n    public Collection getTimePeriods() {\n        Collection result = new java.util.ArrayList();\n        for (int i = 0; i < getItemCount(); i++) {\n            result.add(getTimePeriod(i));\n        }\n        return result;\n    }\n\n    /**\n     * Returns a collection of time periods in the specified series, but not in\n     * this series, and therefore unique to the specified series.\n     *\n     * @param series  the series to check against this one.\n     *\n     * @return The unique time periods.\n     */\n    public Collection getTimePeriodsUniqueToOtherSeries(TimeSeries series) {\n        Collection result = new java.util.ArrayList();\n        for (int i = 0; i < series.getItemCount(); i++) {\n            RegularTimePeriod period = series.getTimePeriod(i);\n            int index = getIndex(period);\n            if (index < 0) {\n                result.add(period);\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Returns the index for the item (if any) that corresponds to a time\n     * period.\n     *\n     * @param period  the time period (<code>null</code> not permitted).\n     *\n     * @return The index.\n     */\n    public int getIndex(RegularTimePeriod period) {\n        if (period == null) {\n            throw new IllegalArgumentException("Null \'period\' argument.");\n        }\n        TimeSeriesDataItem dummy = new TimeSeriesDataItem(\n              period, Integer.MIN_VALUE);\n        return Collections.binarySearch(this.data, dummy);\n    }\n\n    /**\n     * Returns the value at the specified index.\n     *\n     * @param index  index of a value.\n     *\n     * @return The value (possibly <code>null</code>).\n     */\n    public Number getValue(int index) {\n        return getRawDataItem(index).getValue();\n    }\n\n    /**\n     * Returns the value for a time period.  If there is no data item with the\n     * specified period, this method will return <code>null</code>.\n     *\n     * @param period  time period (<code>null</code> not permitted).\n     *\n     * @return The value (possibly <code>null</code>).\n     */\n    public Number getValue(RegularTimePeriod period) {\n        int index = getIndex(period);\n        if (index >= 0) {\n            return getValue(index);\n        }\n        else {\n            return null;\n        }\n    }\n\n    /**\n     * Adds a data item to the series and sends a {@link SeriesChangeEvent} to\n     * all registered listeners.\n     *\n     * @param item  the (timeperiod, value) pair (<code>null</code> not\n     *              permitted).\n     */\n    public void add(TimeSeriesDataItem item) {\n        add(item, true);\n    }\n\n    /**\n     * Adds a data item to the series and sends a {@link SeriesChangeEvent} to\n     * all registered listeners.\n     *\n     * @param item  the (timeperiod, value) pair (<code>null</code> not\n     *              permitted).\n     * @param notify  notify listeners?\n     */\n    public void add(TimeSeriesDataItem item, boolean notify) {\n        if (item == null) {\n            throw new IllegalArgumentException("Null \'item\' argument.");\n        }\n        item = (TimeSeriesDataItem) item.clone();\n        Class c = item.getPeriod().getClass();\n        if (this.timePeriodClass == null) {\n            this.timePeriodClass = c;\n        }\n        else if (!this.timePeriodClass.equals(c)) {\n            StringBuffer b = new StringBuffer();\n            b.append("You are trying to add data where the time period class ");\n            b.append("is ");\n            b.append(item.getPeriod().getClass().getName());\n            b.append(", but the TimeSeries is expecting an instance of ");\n            b.append(this.timePeriodClass.getName());\n            b.append(".");\n            throw new SeriesException(b.toString());\n        }\n\n        // make the change (if it\'s not a duplicate time period)...\n        boolean added = false;\n        int count = getItemCount();\n        if (count == 0) {\n            this.data.add(item);\n            added = true;\n        }\n        else {\n            RegularTimePeriod last = getTimePeriod(getItemCount() - 1);\n            if (item.getPeriod().compareTo(last) > 0) {\n                this.data.add(item);\n                added = true;\n            }\n            else {\n                int index = Collections.binarySearch(this.data, item);\n                if (index < 0) {\n                    this.data.add(-index - 1, item);\n                    added = true;\n                }\n                else {\n                    StringBuffer b = new StringBuffer();\n                    b.append("You are attempting to add an observation for ");\n                    b.append("the time period ");\n                    b.append(item.getPeriod().toString());\n                    b.append(" but the series already contains an observation");\n                    b.append(" for that time period. Duplicates are not ");\n                    b.append("permitted.  Try using the addOrUpdate() method.");\n                    throw new SeriesException(b.toString());\n                }\n            }\n        }\n        if (added) {\n            updateBoundsForAddedItem(item);\n            // check if this addition will exceed the maximum item count...\n            if (getItemCount() > this.maximumItemCount) {\n                TimeSeriesDataItem d = (TimeSeriesDataItem) this.data.remove(0);\n                updateBoundsForRemovedItem(d);\n            }\n\n            removeAgedItems(false);  // remove old items if necessary, but\n                                     // don\'t notify anyone, because that\n                                     // happens next anyway...\n            if (notify) {\n                fireSeriesChanged();\n            }\n        }\n\n    }\n\n    /**\n     * Adds a new data item to the series and sends a {@link SeriesChangeEvent}\n     * to all registered listeners.\n     *\n     * @param period  the time period (<code>null</code> not permitted).\n     * @param value  the value.\n     */\n    public void add(RegularTimePeriod period, double value) {\n        // defer argument checking...\n        add(period, value, true);\n    }\n\n    /**\n     * Adds a new data item to the series and sends a {@link SeriesChangeEvent}\n     * to all registered listeners.\n     *\n     * @param period  the time period (<code>null</code> not permitted).\n     * @param value  the value.\n     * @param notify  notify listeners?\n     */\n    public void add(RegularTimePeriod period, double value, boolean notify) {\n        // defer argument checking...\n        TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);\n        add(item, notify);\n    }\n\n    /**\n     * Adds a new data item to the series and sends\n     * a {@link org.jfree.data.general.SeriesChangeEvent} to all registered\n     * listeners.\n     *\n     * @param period  the time period (<code>null</code> not permitted).\n     * @param value  the value (<code>null</code> permitted).\n     */\n    public void add(RegularTimePeriod period, Number value) {\n        // defer argument checking...\n        add(period, value, true);\n    }\n\n    /**\n     * Adds a new data item to the series and sends a {@link SeriesChangeEvent}\n     * to all registered listeners.\n     *\n     * @param period  the time period (<code>null</code> not permitted).\n     * @param value  the value (<code>null</code> permitted).\n     * @param notify  notify listeners?\n     */\n    public void add(RegularTimePeriod period, Number value, boolean notify) {\n        // defer argument checking...\n        TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);\n        add(item, notify);\n    }\n\n    /**\n     * Updates (changes) the value for a time period.  Throws a\n     * {@link SeriesException} if the period does not exist.\n     *\n     * @param period  the period (<code>null</code> not permitted).\n     * @param value  the value (<code>null</code> permitted).\n     */\n    public void update(RegularTimePeriod period, Number value) {\n        TimeSeriesDataItem temp = new TimeSeriesDataItem(period, value);\n        int index = Collections.binarySearch(this.data, temp);\n        if (index < 0) {\n            throw new SeriesException("There is no existing value for the "\n                    + "specified \'period\'.");\n        }\n        update(index, value);\n    }\n\n    /**\n     * Updates (changes) the value of a data item.\n     *\n     * @param index  the index of the data item.\n     * @param value  the new value (<code>null</code> permitted).\n     */\n    public void update(int index, Number value) {\n        TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n        boolean iterate = false;\n        Number oldYN = item.getValue();\n        if (oldYN != null) {\n            double oldY = oldYN.doubleValue();\n            if (!Double.isNaN(oldY)) {\n                iterate = oldY <= this.minY || oldY >= this.maxY;\n            }\n        }\n        item.setValue(value);\n        if (iterate) {\n            findBoundsByIteration();\n        }\n        else if (value != null) {\n            double yy = value.doubleValue();\n            this.minY = minIgnoreNaN(this.minY, yy);\n            this.maxY = maxIgnoreNaN(this.maxY, yy);\n        }\n        fireSeriesChanged();\n    }\n\n    /**\n     * Adds or updates data from one series to another.  Returns another series\n     * containing the values that were overwritten.\n     *\n     * @param series  the series to merge with this.\n     *\n     * @return A series containing the values that were overwritten.\n     */\n    public TimeSeries addAndOrUpdate(TimeSeries series) {\n        TimeSeries overwritten = new TimeSeries("Overwritten values from: "\n                + getKey());\n        for (int i = 0; i < series.getItemCount(); i++) {\n            TimeSeriesDataItem item = series.getRawDataItem(i);\n            TimeSeriesDataItem oldItem = addOrUpdate(item.getPeriod(),\n                    item.getValue());\n            if (oldItem != null) {\n                overwritten.add(oldItem);\n            }\n        }\n        return overwritten;\n    }\n\n    /**\n     * Adds or updates an item in the times series and sends a\n     * {@link SeriesChangeEvent} to all registered listeners.\n     *\n     * @param period  the time period to add/update (<code>null</code> not\n     *                permitted).\n     * @param value  the new value.\n     *\n     * @return A copy of the overwritten data item, or <code>null</code> if no\n     *         item was overwritten.\n     */\n    public TimeSeriesDataItem addOrUpdate(RegularTimePeriod period,\n                                          double value) {\n        return addOrUpdate(period, new Double(value));\n    }\n\n    /**\n     * Adds or updates an item in the times series and sends a\n     * {@link SeriesChangeEvent} to all registered listeners.\n     *\n     * @param period  the time period to add/update (<code>null</code> not\n     *                permitted).\n     * @param value  the new value (<code>null</code> permitted).\n     *\n     * @return A copy of the overwritten data item, or <code>null</code> if no\n     *         item was overwritten.\n     */\n    public TimeSeriesDataItem addOrUpdate(RegularTimePeriod period,\n                                          Number value) {\n        return addOrUpdate(new TimeSeriesDataItem(period, value));\n    }\n\n    /**\n     * Adds or updates an item in the times series and sends a\n     * {@link SeriesChangeEvent} to all registered listeners.\n     *\n     * @param item  the data item (<code>null</code> not permitted).\n     *\n     * @return A copy of the overwritten data item, or <code>null</code> if no\n     *         item was overwritten.\n     *\n     * @since 1.0.14\n     */\n    public TimeSeriesDataItem addOrUpdate(TimeSeriesDataItem item) {\n\n        if (item == null) {\n            throw new IllegalArgumentException("Null \'period\' argument.");\n        }\n        Class periodClass = item.getPeriod().getClass();\n        if (this.timePeriodClass == null) {\n            this.timePeriodClass = periodClass;\n        }\n        else if (!this.timePeriodClass.equals(periodClass)) {\n            String msg = "You are trying to add data where the time "\n                    + "period class is " + periodClass.getName()\n                    + ", but the TimeSeries is expecting an instance of "\n                    + this.timePeriodClass.getName() + ".";\n            throw new SeriesException(msg);\n        }\n        TimeSeriesDataItem overwritten = null;\n        int index = Collections.binarySearch(this.data, item);\n        if (index >= 0) {\n            TimeSeriesDataItem existing\n                    = (TimeSeriesDataItem) this.data.get(index);\n            overwritten = (TimeSeriesDataItem) existing.clone();\n            // figure out if we need to iterate through all the y-values\n            // to find the revised minY / maxY\n            boolean iterate = false;\n            Number oldYN = existing.getValue();\n            double oldY = oldYN != null ? oldYN.doubleValue() : Double.NaN;\n            if (!Double.isNaN(oldY)) {\n                iterate = oldY <= this.minY || oldY >= this.maxY;\n            }\n            existing.setValue(item.getValue());\n            if (iterate) {\n                findBoundsByIteration();\n            }\n            else if (item.getValue() != null) {\n                double yy = item.getValue().doubleValue();\n                this.minY = minIgnoreNaN(this.minY, yy);\n                this.maxY = minIgnoreNaN(this.maxY, yy);\n            }\n        }\n        else {\n            item = (TimeSeriesDataItem) item.clone();\n            this.data.add(-index - 1, item);\n            updateBoundsForAddedItem(item);\n\n            // check if this addition will exceed the maximum item count...\n            if (getItemCount() > this.maximumItemCount) {\n                TimeSeriesDataItem d = (TimeSeriesDataItem) this.data.remove(0);\n                updateBoundsForRemovedItem(d);\n            }\n        }\n        removeAgedItems(false);  // remove old items if necessary, but\n                                 // don\'t notify anyone, because that\n                                 // happens next anyway...\n        fireSeriesChanged();\n        return overwritten;\n\n    }\n\n    /**\n     * Age items in the series.  Ensure that the timespan from the youngest to\n     * the oldest record in the series does not exceed maximumItemAge time\n     * periods.  Oldest items will be removed if required.\n     *\n     * @param notify  controls whether or not a {@link SeriesChangeEvent} is\n     *                sent to registered listeners IF any items are removed.\n     */\n    public void removeAgedItems(boolean notify) {\n        // check if there are any values earlier than specified by the history\n        // count...\n        if (getItemCount() > 1) {\n            long latest = getTimePeriod(getItemCount() - 1).getSerialIndex();\n            boolean removed = false;\n            while ((latest - getTimePeriod(0).getSerialIndex())\n                    > this.maximumItemAge) {\n                this.data.remove(0);\n                removed = true;\n            }\n            if (removed) {\n                findBoundsByIteration();\n                if (notify) {\n                    fireSeriesChanged();\n                }\n            }\n        }\n    }\n\n    /**\n     * Age items in the series.  Ensure that the timespan from the supplied\n     * time to the oldest record in the series does not exceed history count.\n     * oldest items will be removed if required.\n     *\n     * @param latest  the time to be compared against when aging data\n     *     (specified in milliseconds).\n     * @param notify  controls whether or not a {@link SeriesChangeEvent} is\n     *                sent to registered listeners IF any items are removed.\n     */\n    public void removeAgedItems(long latest, boolean notify) {\n        if (this.data.isEmpty()) {\n            return;  // nothing to do\n        }\n        // find the serial index of the period specified by \'latest\'\n        long index = Long.MAX_VALUE;\n        try {\n            Method m = RegularTimePeriod.class.getDeclaredMethod(\n                    "createInstance", new Class[] {Class.class, Date.class,\n                    TimeZone.class});\n            RegularTimePeriod newest = (RegularTimePeriod) m.invoke(\n                    this.timePeriodClass, new Object[] {this.timePeriodClass,\n                            new Date(latest), TimeZone.getDefault()});\n            index = newest.getSerialIndex();\n        }\n        catch (NoSuchMethodException e) {\n            e.printStackTrace();\n        }\n        catch (IllegalAccessException e) {\n            e.printStackTrace();\n        }\n        catch (InvocationTargetException e) {\n            e.printStackTrace();\n        }\n\n        // check if there are any values earlier than specified by the history\n        // count...\n        boolean removed = false;\n        while (getItemCount() > 0 && (index\n                - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge) {\n            this.data.remove(0);\n            removed = true;\n        }\n        if (removed) {\n            findBoundsByIteration();\n            if (notify) {\n                fireSeriesChanged();\n            }\n        }\n    }\n\n    /**\n     * Removes all data items from the series and sends a\n     * {@link SeriesChangeEvent} to all registered listeners.\n     */\n    public void clear() {\n        if (this.data.size() > 0) {\n            this.data.clear();\n            this.timePeriodClass = null;\n            this.minY = Double.NaN;\n            this.maxY = Double.NaN;\n            fireSeriesChanged();\n        }\n    }\n\n    /**\n     * Deletes the data item for the given time period and sends a\n     * {@link SeriesChangeEvent} to all registered listeners.  If there is no\n     * item with the specified time period, this method does nothing.\n     *\n     * @param period  the period of the item to delete (<code>null</code> not\n     *                permitted).\n     */\n    public void delete(RegularTimePeriod period) {\n        int index = getIndex(period);\n        if (index >= 0) {\n            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.remove(\n                    index);\n            updateBoundsForRemovedItem(item);\n            if (this.data.isEmpty()) {\n                this.timePeriodClass = null;\n            }\n            fireSeriesChanged();\n        }\n    }\n\n    /**\n     * Deletes data from start until end index (end inclusive).\n     *\n     * @param start  the index of the first period to delete.\n     * @param end  the index of the last period to delete.\n     */\n    public void delete(int start, int end) {\n        delete(start, end, true);\n    }\n\n    /**\n     * Deletes data from start until end index (end inclusive).\n     *\n     * @param start  the index of the first period to delete.\n     * @param end  the index of the last period to delete.\n     * @param notify  notify listeners?\n     *\n     * @since 1.0.14\n     */\n    public void delete(int start, int end, boolean notify) {\n        if (end < start) {\n            throw new IllegalArgumentException("Requires start <= end.");\n        }\n        for (int i = 0; i <= (end - start); i++) {\n            this.data.remove(start);\n        }\n        findBoundsByIteration();\n        if (this.data.isEmpty()) {\n            this.timePeriodClass = null;\n        }\n        if (notify) {\n            fireSeriesChanged();\n        }\n    }\n\n    /**\n     * Returns a clone of the time series.\n     * <P>\n     * Notes:\n     * <ul>\n     *   <li>no need to clone the domain and range descriptions, since String\n     *     object is immutable;</li>\n     *   <li>we pass over to the more general method clone(start, end).</li>\n     * </ul>\n     *\n     * @return A clone of the time series.\n     *\n     * @throws CloneNotSupportedException not thrown by this class, but\n     *         subclasses may differ.\n     */\n    public Object clone() throws CloneNotSupportedException {\n        TimeSeries clone = (TimeSeries) super.clone();\n        clone.data = (List) ObjectUtilities.deepClone(this.data);\n        return clone;\n    }\n\n    /**\n     * Creates a new timeseries by copying a subset of the data in this time\n     * series.\n     *\n     * @param start  the index of the first time period to copy.\n     * @param end  the index of the last time period to copy.\n     *\n     * @return A series containing a copy of this times series from start until\n     *         end.\n     *\n     * @throws CloneNotSupportedException if there is a cloning problem.\n     */\n    public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException("Requires start >= 0.");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException("Requires start <= end.");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();', 'aftercode': '        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimeSeriesDataItem item\n                        = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        return copy;\n    }\n\n    /**\n     * Creates a new timeseries by copying a subset of the data in this time\n     * series.\n     *\n     * @param start  the first time period to copy (<code>null</code> not\n     *         permitted).\n     * @param end  the last time period to copy (<code>null</code> not\n     *         permitted).\n     *\n     * @return A time series containing a copy of this time series from start\n     *         until end.\n     *\n     * @throws CloneNotSupportedException if there is a cloning problem.\n     */\n    public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)\n        throws CloneNotSupportedException {\n\n        if (start == null) {\n            throw new IllegalArgumentException("Null \'start\' argument.");\n        }\n        if (end == null) {\n            throw new IllegalArgumentException("Null \'end\' argument.");\n        }\n        if (start.compareTo(end) > 0) {\n            throw new IllegalArgumentException(\n                    "Requires start on or before end.");\n        }\n        boolean emptyRange = false;\n        int startIndex = getIndex(start);\n        if (startIndex < 0) {\n            startIndex = -(startIndex + 1);\n            if (startIndex == this.data.size()) {\n                emptyRange = true;  // start is after last data item\n            }\n        }\n        int endIndex = getIndex(end);\n        if (endIndex < 0) {             // end period is not in original series\n            endIndex = -(endIndex + 1); // this is first item AFTER end period\n            endIndex = endIndex - 1;    // so this is last item BEFORE end\n        }\n        if ((endIndex < 0)  || (endIndex < startIndex)) {\n            emptyRange = true;\n        }\n        if (emptyRange) {\n            TimeSeries copy = (TimeSeries) super.clone();\n            copy.data = new java.util.ArrayList();\n            return copy;\n        }\n        else {\n            return createCopy(startIndex, endIndex);\n        }\n\n    }\n\n    /**\n     * Tests the series for equality with an arbitrary object.\n     *\n     * @param obj  the object to test against (<code>null</code> permitted).\n     *\n     * @return A boolean.\n     */\n    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof TimeSeries)) {\n            return false;\n        }\n        TimeSeries that = (TimeSeries) obj;\n        if (!ObjectUtilities.equal(getDomainDescription(),\n                that.getDomainDescription())) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(getRangeDescription(),\n                that.getRangeDescription())) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.timePeriodClass,\n                that.timePeriodClass)) {\n            return false;\n        }\n        if (getMaximumItemAge() != that.getMaximumItemAge()) {\n            return false;\n        }\n        if (getMaximumItemCount() != that.getMaximumItemCount()) {\n            return false;\n        }\n        int count = getItemCount();\n        if (count != that.getItemCount()) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.data, that.data)) {\n            return false;\n        }\n        return super.equals(obj);\n    }\n\n    /**\n     * Returns a hash code value for the object.\n     *\n     * @return The hashcode\n     */\n    public int hashCode() {\n        int result = super.hashCode();\n        result = 29 * result + (this.domain != null ? this.domain.hashCode()\n                : 0);\n        result = 29 * result + (this.range != null ? this.range.hashCode() : 0);\n        result = 29 * result + (this.timePeriodClass != null\n                ? this.timePeriodClass.hashCode() : 0);\n        // it is too slow to look at every data item, so let\'s just look at\n        // the first, middle and last items...\n        int count = getItemCount();\n        if (count > 0) {\n            TimeSeriesDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            TimeSeriesDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            TimeSeriesDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (int) this.maximumItemAge;\n        return result;\n    }\n\n    /**\n     * Updates the cached values for the minimum and maximum data values.\n     *\n     * @param item  the item added (<code>null</code> not permitted).\n     *\n     * @since 1.0.14\n     */\n    private void updateBoundsForAddedItem(TimeSeriesDataItem item) {\n        Number yN = item.getValue();\n        if (item.getValue() != null) {\n            double y = yN.doubleValue();\n            this.minY = minIgnoreNaN(this.minY, y);\n            this.maxY = maxIgnoreNaN(this.maxY, y);\n        }\n    }\n\n    /**\n     * Updates the cached values for the minimum and maximum data values on\n     * the basis that the specified item has just been removed.\n     *\n     * @param item  the item added (<code>null</code> not permitted).\n     *\n     * @since 1.0.14\n     */\n    private void updateBoundsForRemovedItem(TimeSeriesDataItem item) {\n        Number yN = item.getValue();\n        if (yN != null) {\n            double y = yN.doubleValue();\n            if (!Double.isNaN(y)) {\n                if (y <= this.minY || y >= this.maxY) {\n                    findBoundsByIteration();\n                }\n            }\n        }\n    }\n\n    /**\n     * Finds the bounds of the x and y values for the series, by iterating\n     * through all the data items.\n     *\n     * @since 1.0.14\n     */\n    private void findBoundsByIteration() {\n        this.minY = Double.NaN;\n        this.maxY = Double.NaN;\n        Iterator iterator = this.data.iterator();\n        while (iterator.hasNext()) {\n            TimeSeriesDataItem item = (TimeSeriesDataItem) iterator.next();\n            updateBoundsForAddedItem(item);\n        }\n    }\n\n    /**\n     * A function to find the minimum of two values, but ignoring any\n     * Double.NaN values.\n     *\n     * @param a  the first value.\n     * @param b  the second value.\n     *\n     * @return The minimum of the two values.\n     */\n    private double minIgnoreNaN(double a, double b) {\n        if (Double.isNaN(a)) {\n            return b;\n        }\n        else {\n            if (Double.isNaN(b)) {\n                return a;\n            }\n            else {\n                return Math.min(a, b);\n            }\n        }\n    }\n\n    /**\n     * A function to find the maximum of two values, but ignoring any\n     * Double.NaN values.\n     *\n     * @param a  the first value.\n     * @param b  the second value.\n     *\n     * @return The maximum of the two values.\n     */\n    private double maxIgnoreNaN(double a, double b) {\n        if (Double.isNaN(a)) {\n            return b;\n        }\n        else {\n            if (Double.isNaN(b)) {\n                return a;\n            }\n            else {\n                return Math.max(a, b);\n            }\n        }\n    }\n}', 'tree': 'MethodDeclaration modifiers public_ter ^ ^ return_type ReferenceType name TimeSeries_ter ^ ^ ^ ^ name meth0 ^ ^ parameters FormalParameter type BasicType name int_ter ^ ^ ^ ^ name par0 ^ ^ ^ FormalParameter type BasicType name int_ter ^ ^ ^ ^ name par1 ^ ^ ^ ^ throws CloneNotSupportedException_ter ^ ^ body IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name TimeSeries_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ReferenceType name TimeSeries_ter ^ ^ ^ ^ expression SuperMethodInvocation member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ForStatement control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^ body BlockStatement statements LocalVariableDeclaration type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ expression This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Cast type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc2 ^ ^ member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ TryStatement block StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ catches CatchClause parameter CatchClauseParameter types SeriesException_ter ^ ^ name e_ter ^ ^ ^ ^ block StatementExpression expression MethodInvocation qualifier e_ter ^ ^ member printStackTrace_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 1057, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  ^ ^ ; ['copy-MemberReference']
copynode 0:  root LocalVariableDeclaration ^ ^ ; ['root -> LocalVariableDeclaration']
before@1 batch0 x: -12.813127517700195: root LocalVariableDeclaration ^ ^  ; ['root -> LocalVariableDeclaration']
after@1 batch0 x: -12.813127517700195: root LocalVariableDeclaration ^ ^  ; ['root -> LocalVariableDeclaration']
copynode -0.7226386666297913:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -0.6655917167663574:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -0.6655917167663574:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.7226386666297913:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -0.6655917167663574:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -0.7226386666297913:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.7226386666297913:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -0.6655917167663574:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -0.6655917167663574:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -0.6655917167663574:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -0.6655917167663574:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -0.6655917167663574:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -0.7226386666297913:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -0.6655917167663574:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -0.6655917167663574:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter']
copynode -8.259477615356445:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -0.7226386666297913:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter']
copynode -10.126091003417969:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -10.42983627319336:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -0.7226386666297913:  root modified ^ BreakStatement_ter ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter']
copynode -10.81801986694336:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -10.87962532043457:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -0.7226386666297913:  root modified ^ LocalVariableDeclaration ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration']
copynode -0.7226386666297913:  root modified ^ control ^ ^ ; ['root -> modified', 'root -> control']
copynode -0.7226386666297913:  root modified ^ ContinueStatement_ter ^ ^ ; ['root -> modified', 'root -> ContinueStatement_ter']
copynode -8.259477615356445:  root ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -11.828435897827148:  root MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member']
copynode -11.828435897827148:  root MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member']
copynode -10.126091003417969:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -12.813127517700195:  root LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -10.81801986694336:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -10.42983627319336:  root StatementExpression expression MethodInvocation qualifier e_ter ^ ^ member printStackTrace_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.42983627319336:  root StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.813127517700195:  root LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -10.81801986694336:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -11.828435897827148:  root MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -10.81801986694336:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -11.828435897827148:  root MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> selectors member']
copynode -12.813127517700195:  root LocalVariableDeclaration type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ expression This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -12.813127517700195:  root LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -12.813127517700195:  root LocalVariableDeclaration type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Cast type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc2 ^ ^ member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -10.126091003417969:  root return_type ReferenceType name TimeSeries_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'copy-return_type']
copynode -11.828435897827148:  root MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -10.81801986694336:  root parameters FormalParameter type BasicType name int_ter ^ ^ ^ ^ name par0 ^ ^ ^ FormalParameter type BasicType name int_ter ^ ^ ^ ^ name par1 ^ ^ ^ ^ ^ ; ['root -> parameters', 'copy-parameters']
copynode -10.42983627319336:  root StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.828435897827148:  root MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -11.828435897827148:  root MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -8.259477615356445:  root ReturnStatement par1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -12.813127517700195:  root LocalVariableDeclaration type ReferenceType name TimeSeries_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ReferenceType name TimeSeries_ter ^ ^ ^ ^ expression SuperMethodInvocation member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -8.259477615356445:  root ReturnStatement par0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -12.813127517700195:  root LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -12.813127517700195:  root LocalVariableDeclaration unknown ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'start -> unknown']
copynode -10.81801986694336:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -12.813127517700195:  root LocalVariableDeclaration par0 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -10.126091003417969:  root return_type par0 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -11.828435897827148:  root MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -8.259477615356445:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -12.813127517700195:  root LocalVariableDeclaration par1 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -10.87962532043457:  root IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.87962532043457:  root IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.828435897827148:  root MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier selectors member']
copynode -10.126091003417969:  root return_type par1 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -10.42983627319336:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -10.81801986694336:  root parameters loc0 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -10.81801986694336:  root parameters loc2 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -10.87962532043457:  root IfStatement condition BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ForStatement control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^ body BlockStatement statements LocalVariableDeclaration type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ expression This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Cast type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc2 ^ ^ member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ TryStatement block StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ catches CatchClause parameter CatchClauseParameter types SeriesException_ter ^ ^ name e_ter ^ ^ ^ ^ block StatementExpression expression MethodInvocation qualifier e_ter ^ ^ member printStackTrace_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.81801986694336:  root parameters par0 ^ ^ ^ ; ['root -> parameters', 'copy-FormalParameter']
copynode -10.81801986694336:  root parameters loc3 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -10.87962532043457:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -11.828435897827148:  root MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  postfix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators qualifier member']
copynode -10.87962532043457:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -10.87962532043457:  root IfStatement par0 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -10.42983627319336:  root StatementExpression par0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -10.87962532043457:  root IfStatement par1 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -10.42983627319336:  root StatementExpression par1 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -10.126091003417969:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -10.87962532043457:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -10.126091003417969:  root return_type loc2 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.126091003417969:  root return_type loc3 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.126091003417969:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.126091003417969:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -8.259477615356445:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.259477615356445:  root ReturnStatement loc3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.259477615356445:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.259477615356445:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.42983627319336:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -10.42983627319336:  root StatementExpression loc2 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -10.42983627319336:  root StatementExpression loc3 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -10.87962532043457:  root IfStatement loc1 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch0 x: -35.03235054016113: root IfStatement loc1 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch0 x: -35.03235054016113: root IfStatement loc1 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -0.7796445190906525:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.051501214504242:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -1.9583216905593872:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -4.454962730407715:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -4.6523550152778625:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -5.480787813663483:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -4.6523550152778625:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -5.780688285827637:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -6.336361885070801:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -6.293150901794434:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -4.454962730407715:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.657841682434082:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -6.335232734680176:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -0.7796445190906525:  root modified ^ StatementExpression expression MethodInvocation qualifier e_ter ^ ^ member printStackTrace_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -0.7796445190906525:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.9583216905593872:  root add ^ StatementExpression expression MethodInvocation qualifier e_ter ^ ^ member printStackTrace_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.9583216905593872:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.441084444522858:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.583077430725098:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -6.335232734680176:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-control']
copynode -7.924424171447754:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> End']
copynode -4.6523550152778625:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -8.686281740665436:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter', 'root -> End']
copynode -4.6523550152778625:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -8.283471524715424:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -8.283471524715424:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -0.7796445190906525:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.335232734680176:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -4.6523550152778625:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -6.336361885070801:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -10.452117502689362:  root modified ^ BreakStatement_ter ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> End']
copynode -5.780688285827637:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -4.6523550152778625:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -1.9583216905593872:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.780688285827637:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -6.336361885070801:  root add ^ LocalVariableDeclaration type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ expression This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -8.283471524715424:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -6.336361885070801:  root add ^ LocalVariableDeclaration type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Cast type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc2 ^ ^ member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.123587191104889:  root modified ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -10.439505744725466:  root StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -10.88002021954162:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -10.439505744725466:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -11.324358522891998:  root modified ^ control EnhancedForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl']
copynode -4.6523550152778625:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -10.237096384167671:  root return_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -6.293150901794434:  root add ^ AssertStatement condition ^ value ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition value']
copynode -10.856924761086702:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -11.716925203800201:  root modified ^ ContinueStatement_ter ^ ^ ; ['root -> modified', 'root -> ContinueStatement_ter', 'root -> End']
copynode -10.237096384167671:  root return_type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -8.283471524715424:  root ReturnStatement expression This_ter ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This_ter']
copynode -7.441084444522858:  root modified ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -10.856924761086702:  root parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -10.237096384167671:  root return_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -8.283471524715424:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -6.336361885070801:  root add ^ LocalVariableDeclaration type ReferenceType name TimeSeries_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ReferenceType name TimeSeries_ter ^ ^ ^ ^ expression SuperMethodInvocation member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.583077430725098:  root add ^ BreakStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> IfStatement']
copynode -1.051501214504242:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -5.780688285827637:  root add ^ ReturnStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement']
copynode -7.583077430725098:  root add ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -1.051501214504242:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -5.780688285827637:  root add ^ ReturnStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> BreakStatement_ter']
copynode -12.463478565216064:  root ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -8.283471524715424:  root ReturnStatement expression Cast ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast']
copynode -10.88002021954162:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -5.780688285827637:  root add ^ ReturnStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ContinueStatement_ter']
copynode -7.924424171447754:  root add ^ ContinueStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> IfStatement']
copynode -6.335232734680176:  root add ^ control ForControl_ter ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl_ter']
copynode -5.780688285827637:  root add ^ ReturnStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement_ter']
copynode -12.868151243776083:  root LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -8.283471524715424:  root ReturnStatement expression ClassCreator ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator']
copynode -6.335232734680176:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -12.631762266159058:  root return_type BasicType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'BasicType -> name']
copynode -10.88002021954162:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -7.924424171447754:  root add ^ ContinueStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> StatementExpression']
copynode -12.53325217962265:  root MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -8.283471524715424:  root ReturnStatement expression This ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This']
copynode -6.336361885070801:  root add ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -10.237096384167671:  root return_type ReferenceType name TimeSeries_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -10.237096384167671:  root return_type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -4.6523550152778625:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -10.237096384167671:  root return_type ReferenceType name ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -10.237096384167671:  root return_type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -7.583077430725098:  root add ^ BreakStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ReturnStatement']
copynode -1.051501214504242:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ForStatement control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^ body BlockStatement statements LocalVariableDeclaration type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ expression This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Cast type ReferenceType name TimeSeriesDataItem_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc2 ^ ^ member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ TryStatement block StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ catches CatchClause parameter CatchClauseParameter types SeriesException_ter ^ ^ name e_ter ^ ^ ^ ^ block StatementExpression expression MethodInvocation qualifier e_ter ^ ^ member printStackTrace_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -6.335232734680176:  root add ^ control par1 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -10.439505744725466:  root StatementExpression expression This ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -7.583077430725098:  root add ^ BreakStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> BreakStatement_ter']
copynode -12.534856140613556:  root MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.283471524715424:  root ReturnStatement expression TernaryExpression ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression']
copynode -12.53325217962265:  root MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -7.583077430725098:  root add ^ BreakStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ContinueStatement_ter']
copynode -5.780688285827637:  root add ^ ReturnStatement_ter ^ control ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> control']
copynode -5.780688285827637:  root add ^ ReturnStatement_ter ^ WhileStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> WhileStatement']
copynode -8.283471524715424:  root ReturnStatement expression SuperMethodInvocation member loc3 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -7.583077430725098:  root add ^ BreakStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ReturnStatement_ter']
copynode -10.856924761086702:  root parameters FormalParameter type BasicType name int_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'copy-FormalParameter']
copynode -10.237096384167671:  root return_type ReferenceType name TimeSeries_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -6.336361885070801:  root add ^ LocalVariableDeclaration par0 ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-FormalParameter']
before@3 batch0 x: -14.020896911621094: root add ^ LocalVariableDeclaration par0 ^ ^ ^  ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-FormalParameter']
after@3 batch0 x: -14.020896911621094: root add ^ LocalVariableDeclaration par0 ^ ^ ^  ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -0.784955722745508:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -1.0517587397189345:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -1.0517587397189345:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -1.9681466277688742:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -1.9681466277688742:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -0.784955722745508:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -1.0517587397189345:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -0.784955722745508:  root modified ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -1.9681466277688742:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -4.575204685330391:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -5.13307586312294:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -1.9681466277688742:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -1.0517587397189345:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -4.575204685330391:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -5.481107762956526:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -0.784955722745508:  root modified ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -6.385864078998566:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -1.9681466277688742:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -1.9681466277688742:  root add ^ StatementExpression expression SuperConstructorInvocation_ter ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation_ter']
copynode -6.67147421836853:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -6.657021760940552:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.728461295366287:  root modified ^ StatementExpression expression MethodInvocation qualifier e_ter ^ ^ member printStackTrace_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.771840125322342:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.436891466379166:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -5.723129451274872:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -0.784955722745508:  root modified ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -1.0517587397189345:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -6.662333667743951:  root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -1.0517587397189345:  root add ^ IfStatement condition Cast ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast']
copynode -1.9681466277688742:  root add ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -7.193673253059387:  root add ^ StatementExpression expression MethodInvocation qualifier e_ter ^ ^ member printStackTrace_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.481107762956526:  root modified ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -5.723129451274872:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -1.0517587397189345:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -5.13307586312294:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -1.0517587397189345:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -0.784955722745508:  root modified ^ StatementExpression expression unknown ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'start -> unknown']
copynode -7.445510029792786:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -1.9681466277688742:  root add ^ StatementExpression expression SuperConstructorInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation']
copynode -4.575204685330391:  root add ^ ReturnStatement expression This_ter ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This_ter']
copynode -5.723129451274872:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -5.481107762956526:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -6.662333667743951:  root add ^ WhileStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MethodInvocation']
copynode -4.575204685330391:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -1.9681466277688742:  root add ^ StatementExpression expression ExplicitConstructorInvocation_ter ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> ExplicitConstructorInvocation_ter']
copynode -5.723129451274872:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.436891466379166:  root add ^ AssertStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MemberReference']
copynode -6.436891466379166:  root add ^ AssertStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MethodInvocation']
copynode -5.13307586312294:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -7.886597514152527:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-control', 'root -> End']
copynode -1.0517587397189345:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -5.723129451274872:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member data_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.454300326295197:  root modified ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -6.662333667743951:  root add ^ WhileStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MemberReference']
copynode -5.723129451274872:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.575204685330391:  root add ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -5.13307586312294:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  qualifier loc1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1']
copynode -7.454300326295197:  root modified ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -5.723129451274872:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -1.0517587397189345:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -5.13307586312294:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  qualifier e_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -6.385864078998566:  root add ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -5.723129451274872:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -8.645828545093536:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -5.723129451274872:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member data_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -0.784955722745508:  root modified ^ StatementExpression expression SuperConstructorInvocation_ter ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation_ter']
copynode -5.481107762956526:  root modified ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -9.161229193210602:  root ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -5.723129451274872:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -7.454300326295197:  root modified ^ ReturnStatement expression ClassCreator ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator']
copynode -0.784955722745508:  root modified ^ StatementExpression expression SuperConstructorInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation']
copynode -4.575204685330391:  root add ^ ReturnStatement expression ArrayCreator ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator']
copynode -6.436891466379166:  root add ^ AssertStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> Literal']
copynode -7.886597514152527:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> control', 'copy-control', 'root -> StatementExpression']
copynode -4.575204685330391:  root add ^ ReturnStatement expression SuperMethodInvocation member loc3 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -5.481107762956526:  root modified ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -7.193673253059387:  root add ^ StatementExpression expression MethodInvocation qualifier e_ter ^ ^ member printStackTrace_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -9.206328392028809:  root ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -4.575204685330391:  root add ^ ReturnStatement expression ClassCreator ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator']
copynode -0.784955722745508:  root modified ^ StatementExpression expression ClassCreator ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> ClassCreator']
copynode -7.445510029792786:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -0.784955722745508:  root modified ^ StatementExpression expression BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> BinaryOperation']
copynode -4.575204685330391:  root add ^ ReturnStatement expression This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -9.987498790025711:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.454300326295197:  root modified ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -7.193673253059387:  root add ^ StatementExpression expression MethodInvocation qualifier e_ter ^ ^ member printStackTrace_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -1.9681466277688742:  root add ^ StatementExpression expression ExplicitConstructorInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> ExplicitConstructorInvocation']
copynode -4.575204685330391:  root add ^ ReturnStatement expression Cast ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast']
copynode -9.206328392028809:  root ReturnStatement expression MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.454300326295197:  root modified ^ ReturnStatement expression ArrayCreator ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator']
copynode -9.090280830860138:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  prefix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ++_ter']
copynode -10.179962456226349:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  qualifier loc0 ^ ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member', 'qualifier -> loc0']
copynode -9.090280830860138:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  prefix_operators ~_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ~_ter']
before@4 batch0 x: -10.452518126141513: root modified ^ BreakStatement_ter ^ ^  ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> End']
after@4 batch0 x: -10.452518126141513: root modified ^ BreakStatement_ter ^ ^  ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> End']
copynode -0.9539752430282533:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -1.480121407279512:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.9575116094201803:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -2.5533215735049453:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.636161332949996:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.0040221041999757:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.636161332949996:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.0040221041999757:  root modified ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.5533215735049453:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -3.3007659647555556:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -3.3007659647555556:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -2.5533215735049453:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.0040221041999757:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.3007659647555556:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.3007659647555556:  root add ^ IfStatement condition MemberReference prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -4.943319065030664:  root modified ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -4.975535934790969:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -2.636161332949996:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.5533215735049453:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -5.11345000565052:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -2.636161332949996:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.5533215735049453:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.82087143411627:  root modified ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.5533215735049453:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -2.5533215735049453:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -5.408254211768508:  root add ^ StatementExpression expression SuperMethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member']
copynode -5.657457325229188:  root add ^ IfStatement condition This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors']
copynode -5.351064935326576:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -5.351064935326576:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -3.0040221041999757:  root modified ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.809088543057442:  root add ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -2.5533215735049453:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -6.511205499991775:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -6.657991236075759:  root add ^ StatementExpression expression SuperConstructorInvocation_ter ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation_ter', 'root -> End']
copynode -6.355731708463281:  root modified ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -5.408254211768508:  root add ^ StatementExpression expression SuperMethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member']
copynode -2.636161332949996:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -5.809088543057442:  root add ^ ReturnStatement expression MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.970915973186493:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.9581030905246735:  root add ^ AssertStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.5533215735049453:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.217341721523553:  root add ^ WhileStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.408254211768508:  root add ^ StatementExpression expression SuperMethodInvocation member loc3 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'copy-SuperMethodInvocation']
copynode -5.657457325229188:  root add ^ IfStatement condition This prefix_operators ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors']
copynode -3.0040221041999757:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -2.5533215735049453:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -7.48898047208786:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -6.468910843133926:  root add ^ LocalVariableDeclaration type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -0.9539752430282533:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'copy-Assignment']
copynode -7.601974231656641:  root modified ^ StatementExpression expression unknown ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'start -> unknown', 'root -> End']
copynode -7.080751163419336:  root modified ^ StatementExpression expression SuperMethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member']
copynode -7.724726617336273:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -7.71706660091877:  root add ^ ReturnStatement expression This_ter ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This_ter', 'root -> End']
copynode -7.711381262168288:  root add ^ StatementExpression expression SuperConstructorInvocation arguments ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation', 'SuperConstructorInvocation -> arguments']
copynode -5.657457325229188:  root add ^ IfStatement condition This qualifier ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> qualifier selectors']
copynode -7.594640880823135:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  qualifier unknown ^ ^ member data_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'copy-member']
copynode -7.318641636142274:  root add ^ IfStatement condition Cast type ^ expression ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast', 'Cast -> type expression']
copynode -3.3007659647555556:  root add ^ IfStatement condition MemberReference qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier selectors member']
copynode -7.5636958811373916:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.598655674228212:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.177657577762147:  root add ^ IfStatement condition Literal selectors ^ value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal', 'Literal -> selectors value']
copynode -1.480121407279512:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.405709570273757:  root add ^ StatementExpression expression Cast type ^ expression ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast', 'Cast -> type expression']
copynode -2.636161332949996:  root add ^ StatementExpression expression MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -7.177657577762147:  root add ^ IfStatement condition Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal', 'Literal -> value']
copynode -7.449693730974104:  root modified ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -1.480121407279512:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.405709570273757:  root add ^ StatementExpression expression Cast type ReferenceType name TimeSeries_ter ^ ^ ^ ^ expression SuperMethodInvocation member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast', 'copy-Cast']
copynode -8.260366266593337:  root add ^ StatementExpression expression ExplicitConstructorInvocation_ter ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> ExplicitConstructorInvocation_ter', 'root -> End']
copynode -8.28499311208725:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -1.480121407279512:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.3007659647555556:  root add ^ IfStatement condition MemberReference prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier selectors member']
copynode -3.0040221041999757:  root modified ^ StatementExpression expression MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -6.468910843133926:  root add ^ LocalVariableDeclaration type ReferenceType name ArrayList_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -1.480121407279512:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -8.470252692699432:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member data_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -7.8333073173998855:  root modified ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.3007659647555556:  root add ^ IfStatement condition MemberReference selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> selectors member']
copynode -6.468910843133926:  root add ^ LocalVariableDeclaration type ReferenceType name TimeSeries_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.351064935326576:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -3.3007659647555556:  root add ^ IfStatement condition MemberReference prefix_operators ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -8.6504585146904:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -7.318641636142274:  root add ^ IfStatement condition Cast type ReferenceType name TimeSeries_ter ^ ^ ^ ^ expression SuperMethodInvocation member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast', 'copy-Cast']
copynode -6.355731708463281:  root modified ^ StatementExpression expression MemberReference selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> selectors member']
copynode -6.468910843133926:  root add ^ LocalVariableDeclaration type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -8.134919241070747:  root add ^ ReturnStatement expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.080751163419336:  root modified ^ StatementExpression expression SuperMethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member']
copynode -8.413547489413759:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -8.799041193909943:  root modified ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
before@5 batch0 x: -8.803339509293437: root modified ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
after@5 batch0 x: -8.803339509293437: root modified ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -0.9595247255638242:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -1.485131668014219:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -1.485131668014219:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -2.958100378571544:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -1.485131668014219:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter']
copynode -3.3260535929293837:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -2.958100378571544:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -3.7108933753333986:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -4.285300952848047:  root modified ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.43221852518036:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -3.3787467535585165:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -4.55630848146393:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -1.485131668014219:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -3.3787467535585165:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -1.485131668014219:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.5350032780261245:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.3260535929293837:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -4.925319406756898:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -3.72696197591722:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -3.7108933753333986:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -4.810235721524805:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.018305545672774:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -1.485131668014219:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -5.120264525525272:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -3.72696197591722:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -1.485131668014219:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -1.485131668014219:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -4.983269309159368:  root modified ^ StatementExpression expression This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -4.999774143099785:  root add ^ StatementExpression expression This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -4.9115750525088515:  root add ^ IfStatement condition MemberReference qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -3.3787467535585165:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -4.7834739420504775:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -2.958100378571544:  root add ^ StatementExpression expression Assignment expressionl This ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This']
copynode -5.45537755227997:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.032300922641298:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0']
copynode -3.72696197591722:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -3.72696197591722:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -3.3787467535585165:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -3.3260535929293837:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -3.3787467535585165:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2']
copynode -0.9595247255638242:  root modified ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -5.986900541553041:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -5.314100986346602:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.026404354342958:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.089557304978371:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'root -> End']
copynode -6.137617960572243:  root modified ^ MemberReference-MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^  qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -4.999774143099785:  root add ^ StatementExpression expression This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -6.0652960870356765:  root add ^ IfStatement condition This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -4.983269309159368:  root modified ^ StatementExpression expression This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -6.413491222629091:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter']
copynode -4.9115750525088515:  root add ^ IfStatement condition MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -3.3787467535585165:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -6.03531569801271:  root add ^ StatementExpression expression SuperMethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -3.3260535929293837:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -1.485131668014219:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter']
copynode -3.72696197591722:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -5.032300922641298:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown']
copynode -6.704503243789077:  root add ^ StatementExpression expression SuperMethodInvocation member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member', 'member -> meth0']
copynode -3.3260535929293837:  root add ^ IfStatement condition MethodInvocation qualifier e_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -3.3787467535585165:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1']
copynode -3.72696197591722:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -3.3260535929293837:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -5.8699994822382:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.8699994822382:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.286702854093164:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -3.72696197591722:  root add ^ StatementExpression expression MethodInvocation qualifier e_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.810235721524805:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -4.7834739420504775:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -6.6448217537254095:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'copy-postfix_operators']
copynode -4.5350032780261245:  root add ^ IfStatement condition MemberReference member data_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.7834739420504775:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -4.7834739420504775:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -3.72696197591722:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -4.5350032780261245:  root add ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.841118291020393:  root add ^ ReturnStatement expression MemberReference qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -5.8699994822382:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.314100986346602:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -3.3787467535585165:  root add ^ StatementExpression expression MethodInvocation qualifier e_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -7.425662967929384:  root add ^ IfStatement condition This prefix_operators !_ter ^ ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter']
copynode -7.4214368518441916:  root add ^ StatementExpression expression SuperMethodInvocation member loc3 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'copy-SuperMethodInvocation', 'root -> End']
copynode -7.482320043811342:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter']
copynode -3.3260535929293837:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -7.513179332017899:  root add ^ LocalVariableDeclaration type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -5.314100986346602:  root add ^ StatementExpression expression MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -3.7108933753333986:  root modified ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.286702854093164:  root modified ^ StatementExpression expression MethodInvocation arguments ClassCreator ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> ClassCreator']
copynode -7.599123520310968:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'copy-Assignment', 'root -> End']
copynode -4.5350032780261245:  root add ^ IfStatement condition MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -3.7108933753333986:  root modified ^ StatementExpression expression MethodInvocation qualifier e_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
before@6 batch0 x: -7.635366661008447: root modified ^ StatementExpression expression MethodInvocation qualifier e_ter ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
after@6 batch0 x: -7.635366661008447: root modified ^ StatementExpression expression MethodInvocation qualifier e_ter ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -0.9672650615684688:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator']
copynode -2.510168003005674:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -2.4524935950466897:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -0.9672650615684688:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -3.518229007779155:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -2.4524935950466897:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This']
copynode -3.879755470523378:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -2.510168003005674:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This']
copynode -3.7706431616970804:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference']
copynode -4.1309423870407045:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -4.295354892034084:  root modified ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -4.032194674073253:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator']
copynode -3.518229007779155:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier ^ member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member']
copynode -4.562661313539138:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -4.791004108352354:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.433700858236989:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0']
copynode -5.039708649739623:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -2.4524935950466897:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -4.627633975906065:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -5.16490654181689:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.264617806300521:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -4.839377645024797:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -0.9672650615684688:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference']
copynode -5.358176027890295:  root modified ^ StatementExpression expression This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -3.7706431616970804:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> This']
copynode -5.385435625910759:  root add ^ StatementExpression expression This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -2.510168003005674:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -4.931948925921461:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0']
copynode -5.431189119874034:  root add ^ StatementExpression expression Assignment expressionl This selectors ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors']
copynode -5.278219150466612:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -5.5156897362321615:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -5.546192055568099:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -4.525189405307174:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference']
copynode -5.110471652908018:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -5.390387747058412:  root add ^ IfStatement condition MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -5.490565333137056:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation']
copynode -0.9672650615684688:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value Cast ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Cast']
copynode -4.7821722086519:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -4.032194674073253:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -5.329503940505674:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
copynode -4.433700858236989:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -2.4524935950466897:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl Literal ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> Literal']
copynode -4.525189405307174:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal']
copynode -5.870609733829042:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -2.510168003005674:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl Literal ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> Literal']
copynode -6.027840605558595:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.489621959248325:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.02680123411119:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.879755470523378:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member isEmpty_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'member -> isEmpty_ter']
copynode -5.014417765196413:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ClassCreator ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> ClassCreator']
copynode -6.225044551858446:  root add ^ IfStatement condition This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -4.627633975906065:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This']
copynode -0.9672650615684688:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value TernaryExpression ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> TernaryExpression']
copynode -0.9672650615684688:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal']
copynode -3.7706431616970804:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MethodInvocation']
copynode -5.014417765196413:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -0.9672650615684688:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value BinaryOperation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation']
copynode -5.884601687081158:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier ^ member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.41590023599565:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MemberReference']
copynode -2.4524935950466897:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> BinaryOperation']
copynode -4.839377645024797:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -6.242106293793768:  root modified ^ StatementExpression expression This selectors MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.627633975906065:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation']
copynode -6.5490948017686605:  root add ^ StatementExpression expression SuperMethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.989201422402402:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.591120725497603:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -2.510168003005674:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> BinaryOperation']
copynode -6.177946612238884:  root add ^ StatementExpression expression This selectors MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.420139405498048:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -4.7821722086519:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -5.884601687081158:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -4.931948925921461:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.67122638784349:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -5.110471652908018:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> This']
copynode -6.571669075259706:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -4.1309423870407045:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'member -> meth0']
copynode -6.821989266201854:  root add ^ StatementExpression expression SuperMethodInvocation member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member', 'member -> meth0', 'root -> End']
copynode -6.725375387439271:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -5.41590023599565:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> Literal']
copynode -5.873011594638228:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2', 'arguments -> MemberReference']
copynode -4.525189405307174:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> This_ter']
copynode -4.433700858236989:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0']
copynode -5.329503940505674:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> This']
copynode -4.525189405307174:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments']
copynode -6.8340415690036025:  root add ^ IfStatement condition MethodInvocation qualifier e_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.415400273137493:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter', 'qualifier -> loc0']
copynode -4.7821722086519:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -5.390387747058412:  root add ^ IfStatement condition MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -5.420139405498048:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments This ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> This']
copynode -5.110471652908018:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation']
copynode -7.016273384913802:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
before@7 batch0 x: -7.076332816854119: root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
after@7 batch0 x: -7.076332816854119: root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
copynode -1.0900300736539066:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments']
copynode -1.0900300736539066:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type']
copynode -2.9089987148472574:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -2.9281367232033517:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.5344080249778926:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.9281367232033517:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -4.265780014451593:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -3.849198520241771:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -1.0900300736539066:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors ^ type ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments']
copynode -4.175439493817976:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.9108981360623147:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors']
copynode -1.0900300736539066:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors ^ type ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type']
copynode -4.089800166053465:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors']
copynode -4.032356563577196:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -4.803088188229594:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -1.0900300736539066:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'copy-ClassCreator']
copynode -3.9108981360623147:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This']
copynode -5.0007152427861:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.389887273369823:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments']
copynode -5.015185414435109:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0', 'start -> unknown']
copynode -4.089800166053465:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This']
copynode -2.9089987148472574:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -4.822441213851562:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -5.3171456921845675:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -4.389887273369823:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type']
copynode -5.124132083816221:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.5344080249778926:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.175439493817976:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.450529979600105:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.477101521653822:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.577738834545016:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'root -> End']
copynode -3.849198520241771:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.600164128467441:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'root -> End']
copynode -5.444152500102064:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0', 'start -> unknown']
copynode -5.42685334579437:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.157774316234281:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.3623740202747285:  root modified ^ StatementExpression expression This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.032356563577196:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement']
copynode -4.032356563577196:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression']
copynode -5.336863927077502:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MemberReference qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> qualifier member']
copynode -1.0900300736539066:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'copy-ClassCreator']
copynode -5.719569033011794:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.714110783766955:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value Cast type ^ expression ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Cast', 'Cast -> type expression']
copynode -5.977985745295882:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value']
copynode -5.9708976020046975:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl Literal value ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> Literal', 'Literal -> value']
copynode -5.157774316234281:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.387841299641877:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.047222303313902:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl Literal value ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> Literal', 'Literal -> value']
copynode -1.0900300736539066:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'copy-ClassCreator']
copynode -3.5344080249778926:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MethodInvocation member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.377435373229673:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> This', 'This -> selectors']
copynode -5.6004394348710775:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.6541532744595315:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.9108981360623147:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This']
copynode -5.684060696134111:  root add ^ IfStatement condition MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -6.293963841628283:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -5.336863927077502:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member']
copynode -5.377435373229673:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> This', 'copy-This']
copynode -5.85059409038513:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.171772954519838:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> ClassCreator', 'copy-ClassCreator']
copynode -5.7011422101350036:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.089800166053465:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This']
copynode -6.3733782093040645:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value']
copynode -5.6004394348710775:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.726400911866222:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.7011422101350036:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.6541532744595315:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.441228322219104:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.469172989018261:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -6.055007231043419:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -3.5344080249778926:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.508654240140459:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.480789112014463:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.524032299872488:  root modified ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.032356563577196:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ContinueStatement_ter']
copynode -3.849198520241771:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par1 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.702471738681197:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -4.032356563577196:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -6.672003196639707:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.692866489291191:  root add ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.725302396342158:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -6.021799865731737:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -6.759583038743585:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'member -> meth0', 'root -> End']
copynode -6.3840538729855325:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.85059409038513:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.421099660452455:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
before@8 batch0 x: -6.8545200801454484: root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
after@8 batch0 x: -6.8545200801454484: root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -1.7839570040814579:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType ^ ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType']
copynode -2.0094055528752506:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType']
copynode -3.015938045544317:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.273106055421522:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.9178472976200283:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -4.166595952672651:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -3.015938045544317:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.470032095443457:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation ^ ^ type ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation']
copynode -4.523889469070127:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -4.768908142577857:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation ^ ^ type ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type', 'selectors -> MethodInvocation']
copynode -4.784123169345548:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -4.9232560391537845:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'copy-ClassCreator', 'type -> =_ter']
copynode -3.273106055421522:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.042610347329173:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType ^ ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType']
copynode -4.849572442530189:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -3.015938045544317:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.349457025586162:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal']
copynode -5.206300960941007:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -5.358646631299052:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType']
copynode -4.504312561912229:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.461744176282082:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -4.504312561912229:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.453392284078291:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -5.118122390093049:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -3.273106055421522:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.406847374601057:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -3.9178472976200283:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -5.441566995810717:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.765905482228845:  root modified ^ StatementExpression expression This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -5.120935844344785:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal']
copynode -3.273106055421522:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.812713447579881:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.844334005843848:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'copy-ClassCreator', 'type -> =_ter']
copynode -5.904832966160029:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value Cast type ReferenceType ^ ^ expression ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Cast', 'Cast -> type expression', 'type -> ReferenceType']
copynode -5.699259476823499:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -5.036180203867843:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.6284697652445175:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ClassCreator ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> ClassCreator']
copynode -5.806428614625474:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.036180203867843:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.018056916160276:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal']
copynode -3.015938045544317:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.993036942643812:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl Literal value null_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.837292842101306:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MemberReference qualifier loc0 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -6.061954469507327:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl Literal value null_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.349457025586162:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation']
copynode -5.645246561238309:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -6.070984243880957:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'copy-ClassCreator', 'type -> =_ter']
copynode -6.03527768002823:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -6.019010471267393:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -6.187143973540515:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MethodInvocation member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.515554638666799:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -3.273106055421522:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.19341521160095:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.710645662707975:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.018056916160276:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference']
copynode -3.273106055421522:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -3.015938045544317:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.334061590489:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> ClassCreator', 'copy-ClassCreator', 'arguments -> End']
copynode -4.349457025586162:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference']
copynode -5.120935844344785:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr']
copynode -6.32177739040344:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr ReferenceType ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> This', 'copy-This', 'operandr -> ReferenceType']
copynode -4.504312561912229:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.482881413860014:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -4.349457025586162:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Cast ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Cast']
copynode -6.305183100979775:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value TernaryExpression condition BinaryOperation ^ ^ if_true ^ if_false ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation']
copynode -6.387075847014785:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -6.618549171456834:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ContinueStatement_ter', 'root -> End']
copynode -6.599281152244657:  root modified ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -6.355754751333734:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.018056916160276:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr']
copynode -6.709073844918748:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -5.986890211701393:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -3.273106055421522:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.515554638666799:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.526077918242663:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ selectors ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0']
copynode -6.750181078910828:  root add ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
before@9 batch0 x: -6.809827350080013: root add ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
after@9 batch0 x: -6.809827350080013: root add ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -1.7841588457813486:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -2.009606679173885:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -3.696417095226934:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -4.191414437722415:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -4.253883691591909:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -3.9467898775765207:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -1.7841588457813486:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -4.621568927628687:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -2.009606679173885:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -4.568304866086692:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member ^ ^ ^ type ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.900237241847208:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -4.454655053181341:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal']
copynode -4.931494520511478:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'copy-ClassCreator', 'type -> =_ter', 'root -> End']
copynode -4.867385178338736:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member ^ ^ ^ type ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.696417095226934:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -5.234838008938823:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value']
copynode -5.284304248256376:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -3.9467898775765207:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -5.128565313381841:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal']
copynode -5.534950280649355:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -5.415260123176267:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ReferenceType ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> ReferenceType']
copynode -5.031155066651991:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal']
copynode -5.51853876010864:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr ReferenceType ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> ReferenceType']
copynode -1.7841588457813486:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -1.7841588457813486:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ^ ^ ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'ReferenceType -> name']
copynode -3.9467898775765207:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -4.454655053181341:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -5.8063537348934915:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal', 'Literal -> value']
copynode -5.044487986306194:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.8523028655909:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'copy-ClassCreator', 'type -> =_ter', 'root -> End']
copynode -2.009606679173885:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'ReferenceType -> name']
copynode -2.009606679173885:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.0709096566424705:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'value -> Literal']
copynode -6.012146638793638:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal', 'Literal -> value']
copynode -6.078814085107297:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'copy-ClassCreator', 'type -> =_ter', 'root -> End']
copynode -5.360616954800207:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -1.7841588457813486:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ^ arguments ^ ^ ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -4.568304866086692:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation arguments ^ member ^ ^ ^ type ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.200268055777997:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MethodInvocation member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'type -> =_ter']
copynode -4.253883691591909:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -2.009606679173885:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ^ arguments ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -6.112287091178587:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -6.292390072805574:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.056720889639109:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -5.674547867936781:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal']
copynode -6.0014493945927825:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -5.464634764532093:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.8516413379402366:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -4.867385178338736:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation arguments ^ member ^ ^ ^ type ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.015297176403692:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal']
copynode -5.781862459611148:  root modified ^ StatementExpression expression This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.823445515794447:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal']
copynode -5.044487986306194:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.128565313381841:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -6.0200180710235145:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl Literal value null_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MemberReference']
copynode -6.471060203475645:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> End']
copynode -5.781862459611148:  root modified ^ StatementExpression expression This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.939213221980026:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.600473332684487:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value TernaryExpression condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.06572997229523:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl Literal value null_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MemberReference']
copynode -6.010851329279831:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.031155066651991:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -6.654091221746057:  root modified ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -6.075868129788432:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.910585473291576:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value Cast type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ expression ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.031155066651991:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference']
copynode -6.539332674903562:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr ReferenceType ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> ReferenceType']
copynode -5.687879161996534:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member length_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'member -> length_ter']
copynode -5.0709096566424705:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'value -> MethodInvocation']
copynode -6.688073116907617:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -5.687879161996534:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -6.575766505760839:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
before@10 batch0 x: -6.79262954191654: root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
after@10 batch0 x: -6.79262954191654: root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -2.1584139067854267:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'copy-ReferenceType', 'type -> =_ter']
copynode -1.9207750161876902:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference']
copynode -1.9207750161876902:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation']
copynode -4.066482337279012:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -1.9207750161876902:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal']
copynode -4.3789653847925365:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'type -> =_ter']
copynode -4.504633562726667:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -4.664650758000789:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'copy-ReferenceType', 'type -> =_ter']
copynode -4.824341594707221:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.906515361828497:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value']
copynode -1.9207750161876902:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> This_ter']
copynode -4.476747425360372:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal']
copynode -5.127127348911017:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.624375054234406:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -1.9207750161876902:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ClassCreator ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> ClassCreator']
copynode -4.530230184434913:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ arguments MemberReference ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference']
copynode -5.174371602101019:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> End']
copynode -1.9207750161876902:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation']
copynode -4.903554969787365:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.6007919331023:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value']
copynode -5.693762974900892:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value']
copynode -1.9207750161876902:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Cast ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Cast']
copynode -1.9207750161876902:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments This ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> This']
copynode -5.617705570621183:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr ReferenceType ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> ReferenceType']
copynode -5.8196589500585105:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -1.9207750161876902:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-arguments']
copynode -5.4697210957237985:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal']
copynode -5.810504319233587:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> End']
copynode -1.9207750161876902:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-arguments']
copynode -5.942832072469173:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'copy-ReferenceType', 'type -> =_ter']
copynode -4.624375054234406:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.476747425360372:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> MemberReference']
copynode -6.021158434508834:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'value -> Literal', 'Literal -> value']
copynode -6.135016890999395:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'copy-ReferenceType', 'type -> =_ter']
copynode -6.033872533676913:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.777327438234352:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name']
copynode -4.476747425360372:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'copy-operandr']
copynode -6.204132111044601:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MethodInvocation member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'type -> =_ter', 'root -> End']
copynode -4.903554969787365:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.873554547521053:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name']
copynode -5.255081569834147:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -4.530230184434913:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ arguments MethodInvocation ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation']
copynode -5.806660311383894:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.255081569834147:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -6.385063416790217:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'type -> =_ter']
copynode -6.399548666639021:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value']
copynode -6.433374005922815:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.436582672933582:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -5.739105840562843:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ arguments MemberReference ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference']
copynode -6.135046621202491:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ arguments ^ ^ ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name']
copynode -6.48952034310787:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value']
copynode -6.489584169816226:  root modified ^ StatementExpression expression This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.635586844844511:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> ReferenceType', 'copy-ReferenceType']
copynode -6.536162989301374:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value']
copynode -5.705231713218382:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> ReferenceType', 'copy-ReferenceType']
copynode -6.2475207645620685:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ arguments ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name']
copynode -6.2968992419482674:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.583501117391279:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> End']
copynode -5.583501117391279:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement']
copynode -6.597264474345138:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.56590390400379:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> End']
copynode -5.635586844844511:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> ReferenceType', 'copy-ReferenceType']
copynode -5.806660311383894:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.82841924164677:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference']
copynode -4.624375054234406:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.705231713218382:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> ReferenceType', 'copy-ReferenceType']
copynode -6.617771264485782:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl Literal value null_ter ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MemberReference', 'MemberReference -> member']
before@11 batch0 x: -6.851909425429767: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl Literal value null_ter ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MemberReference', 'MemberReference -> member']
after@11 batch0 x: -6.851909425429767: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl Literal value null_ter ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -2.16187834131415:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'copy-ReferenceType', 'type -> =_ter', 'root -> End']
copynode -2.6888821920147166:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -2.6888821920147166:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.075882943434408:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -3.698186238645576:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.214122136472724:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value']
copynode -4.382515772478655:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'type -> =_ter', 'root -> End']
copynode -4.5232799575605895:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.668190677388338:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'copy-ReferenceType', 'type -> =_ter', 'root -> End']
copynode -4.9161099671327975:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.909900605212897:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -5.18848297194927:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value']
copynode -5.135167439817451:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> This_ter', 'arguments -> End']
copynode -5.209339171182364:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -5.472245534299873:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.24040044247522:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -5.611005131242564:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.266635557054542:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.71283818790107:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.549316936492687:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -5.875300725339912:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-arguments', 'type -> =_ter']
copynode -5.891742156905821:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value']
copynode -5.921922286390327:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-arguments', 'type -> =_ter']
copynode -5.946333829982905:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'copy-ReferenceType', 'type -> =_ter', 'root -> End']
copynode -5.863376107154181:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -3.698186238645576:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.95725984274759:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -3.698186238645576:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.148017660540063:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'copy-ReferenceType', 'type -> =_ter', 'root -> End']
copynode -6.245717038604198:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'type -> =_ter']
copynode -3.698186238645576:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.980005892080953:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.249203999876045:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ClassCreator type ^ arguments ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> ClassCreator', 'ClassCreator -> type arguments']
copynode -6.262080704851542:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter']
copynode -5.249203999876045:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> ClassCreator', 'copy-ClassCreator']
copynode -6.223559552192455:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -5.266635557054542:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ arguments MemberReference member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.784098943113349:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> This', 'copy-This']
copynode -6.392178522888571:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -6.39117590157548:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> true_ter', 'type -> =_ter']
copynode -6.41953436852782:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.438909942371538:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.49790240926086:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.7415107091655955:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Cast type ^ expression ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Cast', 'Cast -> type expression']
copynode -4.909900605212897:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation ^ ^ type ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -6.552881537092617:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.24040044247522:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -6.546211674343795:  root modified ^ StatementExpression expression This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -6.590072559280088:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> ReferenceType', 'copy-ReferenceType', 'root -> End']
copynode -6.552436696452787:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> ReferenceType', 'copy-ReferenceType', 'root -> End']
copynode -6.311935206293128:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.209339171182364:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation ^ ^ type ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -6.489662428735755:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ arguments TypeArgument ^ ^ ^ ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument']
copynode -6.634092586202314:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.818158419890096:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> ReferenceType', 'copy-ReferenceType']
copynode -5.249203999876045:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ClassCreator type ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> ClassCreator', 'ClassCreator -> type']
copynode -5.818158419890096:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> ReferenceType', 'copy-ReferenceType']
copynode -6.666492329997709:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> ReferenceType', 'copy-ReferenceType', 'root -> End']
copynode -6.481554110883735:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.157881800172618:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.595930119248806:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ arguments TypeArgument ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument']
copynode -6.441696393361781:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference']
before@12 batch0 x: -6.956160652509425: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference']
after@12 batch0 x: -6.956160652509425: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference']
copynode -3.103891064762138:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -4.085062458267203:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -4.190371712087654:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -4.926616523502162:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -3.103891064762138:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -5.126743420492858:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ReferenceType ^ ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType']
copynode -4.240769285126589:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -5.20884593584924:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.397341807722114:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> This_ter', 'arguments -> End', 'type -> =_ter']
copynode -3.784282406209968:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.784282406209968:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.438465877901763:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ReferenceType ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType']
copynode -4.544630877760937:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -3.784282406209968:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -4.544630877760937:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -3.784282406209968:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.784282406209968:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member data_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.620385159825673:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -4.190371712087654:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -4.240769285126589:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -5.878838072647341:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-arguments', 'type -> =_ter', 'root -> End']
copynode -5.689442147850059:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -5.925302509800531:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-arguments', 'type -> =_ter', 'root -> End']
copynode -5.903375546535244:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.520089109777473:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -6.248216999665601:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'type -> =_ter', 'root -> End']
copynode -6.268306096433662:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ClassCreator type ReferenceType ^ ^ arguments ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType']
copynode -6.248434384702705:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.270318765251432:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter', 'root -> End']
copynode -6.28103895985987:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> ClassCreator', 'copy-ClassCreator', 'arguments -> End']
copynode -6.363641997217201:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> This', 'copy-This', 'arguments -> End']
copynode -4.240769285126589:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -6.011946042417549:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.399175403697882:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> true_ter', 'type -> =_ter', 'root -> End']
copynode -6.127342542051338:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0']
copynode -5.775049561023479:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> Literal']
copynode -5.741254646418383:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member data_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.4972082470485475:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -3.784282406209968:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member data_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -3.103891064762138:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier par0 ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -4.240769285126589:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value null_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.240769285126589:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value false_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -6.611147127579898:  root modified ^ StatementExpression expression This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -4.544630877760937:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression']
copynode -6.541421314119361:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Cast type ReferenceType ^ ^ expression ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType']
copynode -4.085062458267203:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression']
copynode -5.583320358389756:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference']
copynode -5.583320358389756:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> Literal']
copynode -6.597554811829468:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.509929830295732:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -4.544630877760937:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ContinueStatement_ter']
copynode -3.784282406209968:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.900506337522529:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ClassCreator type ReferenceType ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType']
before@13 batch0 x: -6.901944856974296: root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ClassCreator type ReferenceType ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType']
after@13 batch0 x: -6.901944856974296: root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ClassCreator type ReferenceType ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType']
copynode -3.330903654335998:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -4.538926919340156:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -3.330903654335998:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -5.132733303471468:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -5.12730201240629:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.39934175403323:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> This_ter', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -5.431075890897773:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -5.426603158353828:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -5.439008725516032:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.626335104345344:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -5.701843102811836:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -5.733618696569465:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member data_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -5.875893730088137:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -5.659456603316357:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.94305858304142:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.367007635621121:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.904585873126052:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -6.280737907974981:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
copynode -6.351643604575656:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> ClassCreator', 'copy-ClassCreator', 'arguments -> End', 'type -> =_ter']
copynode -6.429709022282623:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> This', 'copy-This', 'arguments -> End', 'type -> =_ter']
copynode -6.456423896714114:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End']
copynode -6.527483576297527:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> Literal', 'Literal -> value']
copynode -6.487616946338676:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation']
copynode -6.562918623327278:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member data_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -6.604718107148074:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value null_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -6.609671491547488:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value false_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -6.630960814742139:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.367007635621121:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -6.188746651052497:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference']
copynode -6.689959957351675:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -3.330903654335998:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -6.749412277335068:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> Literal', 'Literal -> value']
copynode -6.855781905440381:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ContinueStatement_ter', 'root -> End']
copynode -6.59995238983538:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier par0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.888137777685188:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End']
copynode -5.659456603316357:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.270041799056344:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -6.735282638663193:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.482802738784812:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.270041799056344:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ arguments ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
before@14 batch0 x: -7.290512656676583: root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ arguments ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
after@14 batch0 x: -7.290512656676583: root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ arguments ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -3.641775374650024:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End']
copynode -4.6830201199045405:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End']
copynode -4.95445430779364:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End']
copynode -5.195117383613251:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'type -> =_ter']
copynode -5.477466178475879:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'type -> =_ter']
copynode -5.496171084581874:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'type -> =_ter']
copynode -5.613038627139758:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType', 'type -> =_ter']
copynode -5.6811398876598105:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'type -> =_ter']
copynode -5.755292718647979:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'type -> =_ter']
copynode -5.846216400503181:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member data_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'type -> =_ter']
copynode -5.926250866963528:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'type -> =_ter']
copynode -5.963268809107831:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.2122839441290125:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End']
copynode -5.294561645947397:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference']
copynode -6.322746453224681:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'type -> =_ter']
copynode -6.353747177287005:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> ClassCreator', 'copy-ClassCreator', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -6.432029020856135:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments This selectors MemberReference member data_ter ^ ^ ^ MethodInvocation member size_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> This', 'copy-This', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -6.506973489536904:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'type -> =_ter']
copynode -6.540780093841022:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.637627167045139:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member data_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'type -> =_ter']
copynode -6.649964674725197:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value null_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'type -> =_ter']
copynode -6.657623744918965:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value false_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'type -> =_ter']
copynode -6.758129482506774:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End']
copynode -6.634775643586181:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.7648676117823925:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.961352725862525:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End', 'type -> =_ter']
copynode -6.699236057786038:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.956195076345466:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier par0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> End']
copynode -6.707925160764717:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.0296738074102905:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -5.294561645947397:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> This_ter']
copynode -3.641775374650024:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ MemberReference ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> MemberReference']
copynode -6.66434606545954:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -6.713677766820183:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -7.1277339955559:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.059473314875504:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
before@15 batch0 x: -7.449535617226502: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
after@15 batch0 x: -7.449535617226502: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -3.70503932738211:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End', 'type -> =_ter']
copynode -4.7188362864544615:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End', 'type -> =_ter']
copynode -4.990207893191837:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End', 'type -> =_ter']
copynode -5.196851235232316:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -5.479715145076625:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -5.499008651939221:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -5.614850221842062:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType', 'type -> =_ter', 'root -> End']
copynode -5.683367348392494:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -5.757529558497481:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -5.848879442899488:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member data_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -5.928312510135584:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -6.180760987190297:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.275882711051963:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End', 'type -> =_ter']
copynode -6.324541746405885:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -6.509140617097728:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -6.639977037557401:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member data_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -6.6516234163427725:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value null_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -6.65963408339303:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value false_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -6.561847910605138:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.2856288170441985:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.808078949688934:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End', 'type -> =_ter']
copynode -6.96445357252378:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -7.017866836278699:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier par0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> End', 'type -> =_ter']
copynode -7.132199666462839:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> This_ter', 'arguments -> End']
copynode -6.2856288170441985:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.825012942194007:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.225193705497077:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -6.9909272120276:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -7.052454789518379:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -7.183797364472412:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.371934834023705:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -6.836447492794832:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member data_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.445556749938987:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference qualifier loc0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
before@16 batch0 x: -7.6729648461332545: root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference qualifier loc0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
after@16 batch0 x: -7.6729648461332545: root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference qualifier loc0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -3.7083105297060683:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -4.721125159296207:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -4.993261925526895:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -6.185333924455335:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.279227230814286:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name ArrayList_ter ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -6.8110221434617415:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -6.8095304584130645:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -7.0210696895373985:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier par0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -7.1787379970774055:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> This_ter', 'arguments -> End', 'type -> =_ter']
copynode -7.227632440713933:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.203756680130027:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -7.225673101347638:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -7.345813532709144:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ MemberReference qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -7.234615301131271:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -7.372358593624085:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -7.6729648461332545:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -7.372358593624085:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
before@17 batch0 x: -8.842243704479188: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
after@17 batch0 x: -8.842243704479188: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -6.246454158885172:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.180089252768084:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> This_ter', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -7.232100057968637:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.961759737692773:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -7.563270871876739:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> MemberReference']
copynode -7.553444107412361:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -8.28989354276564:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End']
copynode -7.553444107412361:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -7.460739217203809:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator']
copynode -7.460739217203809:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference']
copynode -7.563270871876739:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal']
before@18 batch0 x: -8.970071857213043: root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal']
after@18 batch0 x: -8.970071857213043: root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal']
copynode -7.314414258667966:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.40875559207052:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End']
copynode -8.288728316663764:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End']
copynode -8.27584273123648:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
copynode -8.551727016805671:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End']
copynode -8.970071857213043:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value']
copynode -8.795973978441907:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments']
copynode -8.935212335985852:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member']
copynode -8.935212335985852:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MemberReference qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> qualifier member']
before@19 batch0 x: -9.65594252149458: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MemberReference qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> qualifier member']
after@19 batch0 x: -9.65594252149458: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value MemberReference qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.4791344022378325:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End', 'type -> =_ter']
copynode -8.35834690683987:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End', 'type -> =_ter']
copynode -8.608499986468814:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End', 'type -> =_ter']
copynode -8.406202202080749:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -8.979921535006724:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -9.565958938997937:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType ^ ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType']
copynode -8.406202202080749:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -8.979921535006724:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
before@20 batch0 x: -10.463856891146861: root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
after@20 batch0 x: -10.463856891146861: root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.483675125986338:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator selectors MethodInvocation member unknown ^ ^ ^ ^ type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -8.362748009501956:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -8.612947906716727:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -8.729478751658462:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -9.49052549933549:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End']
copynode -8.729478751658462:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -9.56726799820899:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -10.463856891146861:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
before@21 batch0 x: -10.49844584648963: root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
after@21 batch0 x: -10.49844584648963: root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -9.42194703721907:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End']
copynode -9.525015920749865:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'type -> =_ter']
copynode -9.695709501742385:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End']
copynode -10.49844584648963:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'type -> =_ter']
copynode -10.278115793218603:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference']
before@22 batch0 x: -11.2296693167591: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference']
after@22 batch0 x: -11.2296693167591: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference']
copynode -9.453270242898725:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End', 'type -> =_ter']
copynode -9.527132813469507:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -9.732076448737644:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End', 'type -> =_ter']
copynode -10.50053472572472:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -11.2296693167591:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
before@23 batch0 x: -11.88845358704566: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
after@23 batch0 x: -11.88845358704566: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -9.456074277521111:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -9.73490911454428:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End', 'type -> =_ter', 'root -> End']
copynode -11.88845358704566:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
before@24 batch0 x: -12.34665636633872: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
after@24 batch0 x: -12.34665636633872: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -12.34665636633872:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
before@25 batch0 x: -13.096385940065375: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
after@25 batch0 x: -13.096385940065375: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -13.096385940065375:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End']
before@26 batch0 x: -13.250294222583761: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End']
after@26 batch0 x: -13.250294222583761: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End']
copynode -13.250294222583761:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End', 'type -> =_ter']
before@27 batch0 x: -13.255138143053045: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End', 'type -> =_ter']
after@27 batch0 x: -13.255138143053045: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End', 'type -> =_ter']
copynode -13.255138143053045:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member data_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name java_ter ^ ^ sub_type ReferenceType name util_ter ^ ^ sub_type ReferenceType name ArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End', 'type -> =_ter', 'root -> End']
method
copy_ter {'start_ter': 'int', 'end_ter': 'int', 'copy_ter': 'TimeSeries', 'index_ter': 'int', 'item_ter': 'TimeSeriesDataItem', 'clone_ter': 'TimeSeriesDataItem'}
7 TimeSeries
method
7 
method
copy_ter {'start_ter': 'int', 'end_ter': 'int', 'copy_ter': 'TimeSeries', 'index_ter': 'int', 'item_ter': 'TimeSeriesDataItem', 'clone_ter': 'TimeSeriesDataItem'}
7 TimeSeries
method
copy_ter {'start_ter': 'int', 'end_ter': 'int', 'copy_ter': 'TimeSeries', 'index_ter': 'int', 'item_ter': 'TimeSeriesDataItem', 'clone_ter': 'TimeSeriesDataItem'}
7 TimeSeries
method
copy_ter {'start_ter': 'int', 'end_ter': 'int', 'copy_ter': 'TimeSeries', 'index_ter': 'int', 'item_ter': 'TimeSeriesDataItem', 'clone_ter': 'TimeSeriesDataItem'}
7 TimeSeries
method
7 
String  getDomainDescription 
None  setDomainDescription 
String  getRangeDescription 
None  setRangeDescription 
int  getItemCount 
List  getItems 
int  getMaximumItemCount 
None  setMaximumItemCount 
long  getMaximumItemAge 
None  setMaximumItemAge 
double  getMinY 
double  getMaxY 
Class  getTimePeriodClass 
TimeSeriesDataItem  getDataItem 
TimeSeriesDataItem  getDataItem 
TimeSeriesDataItem  getRawDataItem 
TimeSeriesDataItem  getRawDataItem 
RegularTimePeriod  getTimePeriod 
RegularTimePeriod  getNextTimePeriod 
Collection  getTimePeriods 
Collection  getTimePeriodsUniqueToOtherSeries 
int  getIndex 
Number  getValue 
Number  getValue 
None  add 
None  add 
None  add 
None  add 
None  add 
None  add 
None  update 
None  update 
TimeSeries  addAndOrUpdate 
TimeSeriesDataItem  addOrUpdate 
TimeSeriesDataItem  addOrUpdate 
TimeSeriesDataItem  addOrUpdate 
None  removeAgedItems 
None  removeAgedItems 
None  clear 
None  delete 
None  delete 
None  delete 
Object  clone 
TimeSeries  createCopy 
TimeSeries  createCopy 
boolean  equals 
int  hashCode 
None  updateBoundsForAddedItem 
None  updateBoundsForRemovedItem 
None  findBoundsByIteration 
double  minIgnoreNaN 
double  maxIgnoreNaN 
method
copy_ter {'start_ter': 'int', 'end_ter': 'int', 'copy_ter': 'TimeSeries', 'index_ter': 'int', 'item_ter': 'TimeSeriesDataItem', 'clone_ter': 'TimeSeriesDataItem'}
7 TimeSeries
String  getDomainDescription 
None  setDomainDescription 
String  getRangeDescription 
None  setRangeDescription 
int  getItemCount 
List  getItems 
int  getMaximumItemCount 
None  setMaximumItemCount 
long  getMaximumItemAge 
None  setMaximumItemAge 
double  getMinY 
double  getMaxY 
Class  getTimePeriodClass 
TimeSeriesDataItem  getDataItem 
TimeSeriesDataItem  getDataItem 
TimeSeriesDataItem  getRawDataItem 
TimeSeriesDataItem  getRawDataItem 
RegularTimePeriod  getTimePeriod 
RegularTimePeriod  getNextTimePeriod 
Collection  getTimePeriods 
Collection  getTimePeriodsUniqueToOtherSeries 
int  getIndex 
Number  getValue 
Number  getValue 
None  add 
None  add 
None  add 
None  add 
None  add 
None  add 
None  update 
None  update 
TimeSeries  addAndOrUpdate 
TimeSeriesDataItem  addOrUpdate 
TimeSeriesDataItem  addOrUpdate 
TimeSeriesDataItem  addOrUpdate 
None  removeAgedItems 
None  removeAgedItems 
None  clear 
None  delete 
None  delete 
None  delete 
Object  clone 
TimeSeries  createCopy 
TimeSeries  createCopy 
boolean  equals 
int  hashCode 
None  updateBoundsForAddedItem 
None  updateBoundsForRemovedItem 
None  findBoundsByIteration 
double  minIgnoreNaN 
double  maxIgnoreNaN 
method
clone_ter {'start_ter': 'int', 'end_ter': 'int', 'copy_ter': 'TimeSeries', 'index_ter': 'int', 'item_ter': 'TimeSeriesDataItem', 'clone_ter': 'TimeSeriesDataItem'}
7 TimeSeriesDataItem
RegularTimePeriod  getPeriod 
Number  getValue 
None  setValue 
boolean  isSelected 
None  setSelected 
boolean  equals 
int  hashCode 
int  compareTo 
Object  clone 
method
7 
method
index_ter {'start_ter': 'int', 'end_ter': 'int', 'copy_ter': 'TimeSeries', 'index_ter': 'int', 'item_ter': 'TimeSeriesDataItem', 'clone_ter': 'TimeSeriesDataItem'}
7 int
method
copy_ter {'start_ter': 'int', 'end_ter': 'int', 'copy_ter': 'TimeSeries', 'index_ter': 'int', 'item_ter': 'TimeSeriesDataItem', 'clone_ter': 'TimeSeriesDataItem'}
7 TimeSeries
method
7 
6 data_ter
6 data_ter
method
7 
method
7 
method
7 
method
copy_ter {'start_ter': 'int', 'end_ter': 'int', 'copy_ter': 'TimeSeries', 'index_ter': 'int', 'item_ter': 'TimeSeriesDataItem', 'clone_ter': 'TimeSeriesDataItem'}
7 TimeSeries
method
7 
method
copy_ter {'start_ter': 'int', 'end_ter': 'int', 'copy_ter': 'TimeSeries', 'index_ter': 'int', 'item_ter': 'TimeSeriesDataItem', 'clone_ter': 'TimeSeriesDataItem'}
7 TimeSeries
stderr: Check out program version: Chart-3b........................................ OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:20<00:00, 20.43s/it]100%|██████████| 1/1 [00:20<00:00, 20.43s/it]
