stdout: ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ 
return false;
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((var != null) && (var.getScope() == s));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var == null) && (var.getScope() == s)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return ((var != null) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member var_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == var)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() != s)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ 
return (var.getScope() == s);
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getName_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getName() == s)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
return (var != null);
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getString_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getString() == s)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) && !n.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier NodeUtil_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) && !NodeUtil.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member lhs_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == lhs)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) || !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member lhs_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) && !blacklistedVars.contains(lhs));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member canBeRedeclared_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) && !blacklistedVars.canBeRedeclared(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return ((((var != null) && (var.getScope() == s)) && !blacklistedVars.contains(var)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && !blacklistedVars.contains(var)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member canBeRedeclared_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.canBeRedeclared() == s)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getFirstChild() == s)) && !blacklistedVars.contains(var));
ReturnStatement expression MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ 
return !blacklistedVars.contains(var);
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member isName_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.isName() == s)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return ((var != null) || !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier s_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) && !s.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member isName_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) && !blacklistedVars.isName(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier assign_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) && !assign.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member s_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) && !blacklistedVars.contains(s));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member loc3 ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == )) && !blacklistedVars.contains(var));

ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member toString_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.toString() == s)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() > s)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) && !blacklistedVars.contains());
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) && (((var != null) && (var.getScope() == s)) && !blacklistedVars.contains(var)));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier LOG_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) && !LOG.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member getVar_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) && !blacklistedVars.getVar(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) && blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((((var != null) && (var.getScope() == s)) && !blacklistedVars.contains(var)) && (var.getScope() == s)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var > null) && (var.getScope() == s)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member n_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == n)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return ((((var != null) && (var.getScope() == s)) && (var.getScope() == s)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) && !contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member assign_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == assign)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((((var != null) && (var.getScope() == s)) && !blacklistedVars.contains(var)) && !blacklistedVars.contains(var)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member n_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) && !blacklistedVars.contains(n));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() >= s)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member isExprAssign_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) && !blacklistedVars.isExprAssign(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var >= null) && (var.getScope() == s)) && !blacklistedVars.contains(var));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member getScope_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member assign_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.getScope() == s)) && !blacklistedVars.contains(assign));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member var_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier var_ter ^ ^ member get_ter ^ ^ ^ ^ operandr MemberReference member s_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier blacklistedVars_ter ^ ^ arguments MemberReference member var_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
return (((var != null) && (var.get() == s)) && !blacklistedVars.contains(var));
stderr: 