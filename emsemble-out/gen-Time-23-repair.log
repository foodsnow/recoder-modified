stdout: StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value MemberReference member map_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
cZoneIdConversion = map;


StatementExpression expression MethodInvocation qualifier map_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
map.put("null", "null");

StatementExpression expression Assignment expressionl MemberReference member map_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name HashMap_ter ^ ^ arguments TypeArgument type ReferenceType name String_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name String_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
arg 
arg 
arg String, String
arg 
arg 
arg String, String
map = new HashMap<String, String>();

StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value MemberReference member map_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value MemberReference member map_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
cZoneIdConversion = map;
cZoneIdConversion = map;

ReturnStatement_ter ^ 
if (true) { return;
 }

StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value MemberReference member map_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value MemberReference member map_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value MemberReference member map_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
cZoneIdConversion = map;
cZoneIdConversion = map;
cZoneIdConversion = map;

StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value MemberReference member map_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
StatementExpression expression MethodInvocation qualifier map_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
cZoneIdConversion = map;
map.put("null", "null");

StatementExpression expression MethodInvocation qualifier map_ter ^ ^ arguments Literal value null_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
map.put(null, "null");

StatementExpression expression MethodInvocation qualifier map_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value MemberReference member map_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
map.put("null", "null");
cZoneIdConversion = map;

StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value MemberReference member map_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
cZoneIdConversion = map;

StatementExpression expression MethodInvocation qualifier map_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
map.put("null");

StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value MemberReference member map_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value MemberReference member map_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value MemberReference member map_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value MemberReference member map_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
cZoneIdConversion = map;
cZoneIdConversion = map;
cZoneIdConversion = map;
cZoneIdConversion = map;

StatementExpression expression MethodInvocation qualifier map_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
StatementExpression expression MethodInvocation qualifier map_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
map.put("null", "null");
map.put("null", "null");

StatementExpression expression MethodInvocation qualifier map_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
StatementExpression expression Assignment expressionl MemberReference member map_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name HashMap_ter ^ ^ arguments TypeArgument type ReferenceType name String_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name String_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
arg 
arg 
arg String, String
arg 
arg 
arg String, String
map.put("null", "null");
map = new HashMap<String, String>();

StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value MemberReference member map_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value MemberReference member map_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
StatementExpression expression MethodInvocation qualifier map_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
cZoneIdConversion = map;
cZoneIdConversion = map;
map.put("null", "null");

StatementExpression expression MethodInvocation qualifier map_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
map.put("null", "null", "null");


StatementExpression expression Assignment expressionl MemberReference member map_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name HashMap_ter ^ ^ arguments TypeArgument type ReferenceType name String_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name String_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
arg 
arg 
arg String, String
arg 
arg 
arg String, String
StatementExpression expression Assignment expressionl MemberReference member map_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name HashMap_ter ^ ^ arguments TypeArgument type ReferenceType name String_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name String_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
arg 
arg 
arg String, String
arg 
arg 
arg String, String
map = new HashMap<String, String>();
map = new HashMap<String, String>();

StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value MemberReference member map_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
StatementExpression expression MethodInvocation qualifier map_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value MemberReference member map_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
cZoneIdConversion = map;
map.put("null", "null");
cZoneIdConversion = map;

StatementExpression expression MethodInvocation qualifier map_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
map.put("null", "null");

StatementExpression expression MethodInvocation qualifier map_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
ReturnStatement_ter ^ 
map.put("null", "null");
return;

StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value MemberReference member map_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
ReturnStatement_ter ^ 
cZoneIdConversion = map;
return;

StatementExpression expression MethodInvocation qualifier map_ter ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
map.put(("null" + "null"));

BreakStatement_ter ^ 
break;

StatementExpression expression MethodInvocation qualifier map_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
map.put("null", ("null" + "null"));

StatementExpression expression Assignment expressionl MemberReference member map_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name HashMap_ter ^ ^ arguments TypeArgument type ReferenceType name String_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name String_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
arg 
arg 
arg String, String
arg 
arg 
arg String, String
map = new HashMap<String, String>("null", "null");

StatementExpression expression Assignment expressionl MemberReference member cZoneIdConversion_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name HashMap_ter ^ ^ arguments TypeArgument type ReferenceType name String_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name String_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
arg 
arg 
arg String, String
arg 
arg 
arg String, String
cZoneIdConversion = new HashMap<String, String>("null", "null");

ReturnStatement_ter ^ 
return;

StatementExpression expression Assignment expressionl MemberReference member map_ter ^ ^ ^ ^ value ClassCreator type ReferenceType name HashMap_ter ^ ^ arguments TypeArgument type ReferenceType name String_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name String_ter ^ ^ ^ ^ ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
arg 
arg 
arg String, String
arg 
arg 
arg String, String
map = new HashMap<String, String>("null", "null", "null");

stderr: 