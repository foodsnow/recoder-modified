stdout: else_statement -> BlockStatement
using GPU
p
path com.google.javascript.jscomp.ControlFlowAnalysis
computeFollowNode
Position(line=692, column=18)
FOUND IT!
[{'bugid': 'Closure-14', 'treeroot': <Searchnode.Node object at 0x7f0e4a34c410>, 'troot': <Searchnode.Node object at 0x7f0e62e62ed0>, 'oldcode': '              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);', 'filepath': 'buggy/Closure-14/src/com/google/javascript/jscomp/ControlFlowAnalysis.java', 'subroot': <Searchnode.Node object at 0x7f0e58ec6e10>, 'vardic': {'computeFollowNode_ter': 'meth0', 'finallyNode_ter': 'loc0', 'nextSibling_ter': 'loc1'}, 'typedic': {'finallyNode_ter': 'Node', 'nextSibling_ter': 'Node'}, 'idss': 'Closure-14', 'classname': 'com.google.javascript.jscomp.ControlFlowAnalysis', 'precode': '/*\n * Copyright 2008 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.javascript.jscomp;\n\nimport com.google.common.base.Preconditions;\nimport com.google.common.collect.HashMultimap;\nimport com.google.common.collect.Maps;\nimport com.google.common.collect.Multimap;\nimport com.google.javascript.jscomp.ControlFlowGraph.Branch;\nimport com.google.javascript.jscomp.NodeTraversal.Callback;\nimport com.google.javascript.jscomp.graph.DiGraph.DiGraphNode;\nimport com.google.javascript.rhino.Node;\nimport com.google.javascript.rhino.Token;\n\nimport java.util.ArrayDeque;\nimport java.util.Comparator;\nimport java.util.Deque;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.PriorityQueue;\n\n/**\n * This is a compiler pass that computes a control flow graph.\n *\n */\nfinal class ControlFlowAnalysis implements Callback, CompilerPass {\n\n  /**\n   * Based roughly on the first few pages of\n   *\n   * "Declarative Intraprocedural Flow Analysis of Java Source Code by\n   * Nilsson-Nyman, Hedin, Magnusson & Ekman",\n   *\n   * this pass computes the control flow graph from the AST. However, a full\n   * attribute grammar is not necessary. We will compute the flow edges with a\n   * single post order traversal. The "follow()" of a given node will be\n   * computed recursively in a demand driven fashion.\n   *\n   * As of this moment, we are not performing any inter-procedural analysis\n   * within our framework.\n   */\n\n  private final AbstractCompiler compiler;\n\n  private ControlFlowGraph<Node> cfg;\n\n  private Map<Node, Integer> astPosition;\n\n  // TODO(nicksantos): should these be node annotations?\n  private Map<DiGraphNode<Node, Branch>, Integer> nodePriorities;\n\n  // We order CFG nodes by by looking at the AST positions.\n  // CFG nodes that come first lexically should be visited first, because\n  // they will often be executed first in the source program.\n  private final Comparator<DiGraphNode<Node, Branch>> priorityComparator =\n      new Comparator<DiGraphNode<Node, Branch>>() {\n    @Override\n    public int compare(\n        DiGraphNode<Node, Branch> a, DiGraphNode<Node, Branch> b) {\n      return astPosition.get(a.getValue()) - astPosition.get(b.getValue());\n    }\n  };\n\n  private int astPositionCounter;\n  private int priorityCounter;\n\n  private final boolean shouldTraverseFunctions;\n  private final boolean edgeAnnotations;\n\n  // We need to store where we started, in case we aren\'t doing a flow analysis\n  // for the whole scope. This happens, for example, when running type inference\n  // on only the externs.\n  private Node root;\n\n  /*\n   * This stack captures the structure of nested TRY blocks. The top of the\n   * stack is the inner most TRY block. A FUNCTION node in this stack implies\n   * that the handler is determined by the caller of the function at runtime.\n   */\n  private final Deque<Node> exceptionHandler = new ArrayDeque<Node>();\n\n  /*\n   * This map is used to handle the follow of FINALLY. For example:\n   *\n   * while(x) {\n   *  try {\n   *    try {\n   *      break;\n   *    } catch (a) {\n   *    } finally {\n   *      foo();\n   *    }\n   *    fooFollow();\n   *  } catch (b) {\n   *  } finally {\n   *    bar();\n   *  }\n   *  barFollow();\n   * }\n   * END();\n   *\n   * In this case finallyMap will contain a map from:\n   *    first FINALLY -> bar()\n   *    second FINALLY -> END()\n   *\n   * When we are connecting foo() and bar() to to their respective follow, we\n   * must also look up this map and connect:\n   *   foo() -> bar()\n   *   bar() -> END\n   */\n  private final Multimap<Node, Node> finallyMap = HashMultimap.create();\n\n  /**\n   * Constructor.\n   *\n   * @param compiler Compiler instance.\n   * @param shouldTraverseFunctions Whether functions should be traversed (true\n   *    by default).\n   * @param edgeAnnotations Whether to allow edge annotations. By default,\n   *    only node annotations are allowed.\n   */\n  ControlFlowAnalysis(AbstractCompiler compiler,\n      boolean shouldTraverseFunctions, boolean edgeAnnotations) {\n    this.compiler = compiler;\n    this.shouldTraverseFunctions = shouldTraverseFunctions;\n    this.edgeAnnotations = edgeAnnotations;\n  }\n\n  ControlFlowGraph<Node> getCfg() {\n    return cfg;\n  }\n\n  @Override\n  public void process(Node externs, Node root) {\n    this.root = root;\n    astPositionCounter = 0;\n    astPosition = Maps.newHashMap();\n    nodePriorities = Maps.newHashMap();\n    cfg = new AstControlFlowGraph(computeFallThrough(root), nodePriorities,\n                                  edgeAnnotations);\n    NodeTraversal.traverse(compiler, root, this);\n    astPosition.put(null, ++astPositionCounter); // the implicit return is last.\n\n    // Now, generate the priority of nodes by doing a depth-first\n    // search on the CFG.\n    priorityCounter = 0;\n    DiGraphNode<Node, Branch> entry = cfg.getEntry();\n    prioritizeFromEntryNode(entry);\n\n    if (shouldTraverseFunctions) {\n      // If we\'re traversing inner functions, we need to rank the\n      // priority of them too.\n      for (DiGraphNode<Node, Branch> candidate : cfg.getDirectedGraphNodes()) {\n        Node value = candidate.getValue();\n        if (value != null && value.isFunction()) {\n          Preconditions.checkState(\n              !nodePriorities.containsKey(candidate) || candidate == entry);\n          prioritizeFromEntryNode(candidate);\n        }\n      }\n    }\n\n    // At this point, all reachable nodes have been given a priority, but\n    // unreachable nodes have not been given a priority. Put them last.\n    // Presumably, it doesn\'t really matter what priority they get, since\n    // this shouldn\'t happen in real code.\n    for (DiGraphNode<Node, Branch> candidate : cfg.getDirectedGraphNodes()) {\n      if (!nodePriorities.containsKey(candidate)) {\n        nodePriorities.put(candidate, ++priorityCounter);\n      }\n    }\n\n    // Again, the implicit return node is always last.\n    nodePriorities.put(cfg.getImplicitReturn(), ++priorityCounter);\n  }\n\n  /**\n   * Given an entry node, find all the nodes reachable from that node\n   * and prioritize them.\n   */\n  private void prioritizeFromEntryNode(DiGraphNode<Node, Branch> entry) {\n    PriorityQueue<DiGraphNode<Node, Branch>> worklist =\n        new PriorityQueue<DiGraphNode<Node, Branch>>(10, priorityComparator);\n    worklist.add(entry);\n\n    while (!worklist.isEmpty()) {\n      DiGraphNode<Node, Branch> current = worklist.remove();\n      if (nodePriorities.containsKey(current)) {\n        continue;\n      }\n\n      nodePriorities.put(current, ++priorityCounter);\n\n      List<DiGraphNode<Node, Branch>> successors =\n          cfg.getDirectedSuccNodes(current);\n      for (DiGraphNode<Node, Branch> candidate : successors) {\n        worklist.add(candidate);\n      }\n    }\n  }\n\n  @Override\n  public boolean shouldTraverse(\n      NodeTraversal nodeTraversal, Node n, Node parent) {\n    astPosition.put(n, astPositionCounter++);\n\n    switch (n.getType()) {\n      case Token.FUNCTION:\n        if (shouldTraverseFunctions || n == cfg.getEntry().getValue()) {\n          exceptionHandler.push(n);\n          return true;\n        }\n        return false;\n      case Token.TRY:\n        exceptionHandler.push(n);\n        return true;\n    }\n\n    /*\n     * We are going to stop the traversal depending on what the node\'s parent\n     * is.\n     *\n     * We are only interested in adding edges between nodes that change control\n     * flow. The most obvious ones are loops and IF-ELSE\'s. A statement\n     * transfers control to its next sibling.\n     *\n     * In case of an expression tree, there is no control flow within the tree\n     * even when there are short circuited operators and conditionals. When we\n     * are doing data flow analysis, we will simply synthesize lattices up the\n     * expression tree by finding the meet at each expression node.\n     *\n     * For example: within a Token.SWITCH, the expression in question does not\n     * change the control flow and need not to be considered.\n     */\n    if (parent != null) {\n      switch (parent.getType()) {\n        case Token.FOR:\n          // Only traverse the body of the for loop.\n          return n == parent.getLastChild();\n\n        // Skip the conditions.\n        case Token.IF:\n        case Token.WHILE:\n        case Token.WITH:\n          return n != parent.getFirstChild();\n        case Token.DO:\n          return n != parent.getFirstChild().getNext();\n        // Only traverse the body of the cases\n        case Token.SWITCH:\n        case Token.CASE:\n        case Token.CATCH:\n        case Token.LABEL:\n          return n != parent.getFirstChild();\n        case Token.FUNCTION:\n          return n == parent.getFirstChild().getNext().getNext();\n        case Token.CONTINUE:\n        case Token.BREAK:\n        case Token.EXPR_RESULT:\n        case Token.VAR:\n        case Token.RETURN:\n        case Token.THROW:\n          return false;\n        case Token.TRY:\n          /* Just before we are about to visit the second child of the TRY node,\n           * we know that we will be visiting either the CATCH or the FINALLY.\n           * In other words, we know that the post order traversal of the TRY\n           * block has been finished, no more exceptions can be caught by the\n           * handler at this TRY block and should be taken out of the stack.\n           */\n          if (n == parent.getFirstChild().getNext()) {\n            Preconditions.checkState(exceptionHandler.peek() == parent);\n            exceptionHandler.pop();\n          }\n      }\n    }\n    return true;\n  }\n\n  @Override\n  public void visit(NodeTraversal t, Node n, Node parent) {\n    switch (n.getType()) {\n      case Token.IF:\n        handleIf(n);\n        return;\n      case Token.WHILE:\n        handleWhile(n);\n        return;\n      case Token.DO:\n        handleDo(n);\n        return;\n      case Token.FOR:\n        handleFor(n);\n        return;\n      case Token.SWITCH:\n        handleSwitch(n);\n        return;\n      case Token.CASE:\n        handleCase(n);\n        return;\n      case Token.DEFAULT_CASE:\n        handleDefault(n);\n        return;\n      case Token.BLOCK:\n      case Token.SCRIPT:\n        handleStmtList(n);\n        return;\n      case Token.FUNCTION:\n        handleFunction(n);\n        return;\n      case Token.EXPR_RESULT:\n        handleExpr(n);\n        return;\n      case Token.THROW:\n        handleThrow(n);\n        return;\n      case Token.TRY:\n        handleTry(n);\n        return;\n      case Token.CATCH:\n        handleCatch(n);\n        return;\n      case Token.BREAK:\n        handleBreak(n);\n        return;\n      case Token.CONTINUE:\n        handleContinue(n);\n        return;\n      case Token.RETURN:\n        handleReturn(n);\n        return;\n      case Token.WITH:\n        handleWith(n);\n        return;\n      case Token.LABEL:\n        return;\n      default:\n        handleStmt(n);\n        return;\n    }\n  }\n\n  private void handleIf(Node node) {\n    Node thenBlock = node.getFirstChild().getNext();\n    Node elseBlock = thenBlock.getNext();\n    createEdge(node, Branch.ON_TRUE, computeFallThrough(thenBlock));\n\n    if (elseBlock == null) {\n      createEdge(node, Branch.ON_FALSE,\n          computeFollowNode(node, this)); // not taken branch\n    } else {\n      createEdge(node, Branch.ON_FALSE, computeFallThrough(elseBlock));\n    }\n    connectToPossibleExceptionHandler(\n        node, NodeUtil.getConditionExpression(node));\n  }\n\n  private void handleWhile(Node node) {\n    // Control goes to the first statement if the condition evaluates to true.\n    createEdge(node, Branch.ON_TRUE,\n        computeFallThrough(node.getFirstChild().getNext()));\n\n    // Control goes to the follow() if the condition evaluates to false.\n    createEdge(node, Branch.ON_FALSE,\n        computeFollowNode(node, this));\n    connectToPossibleExceptionHandler(\n        node, NodeUtil.getConditionExpression(node));\n  }\n\n  private void handleDo(Node node) {\n    // The first edge can be the initial iteration as well as the iterations\n    // after.\n    createEdge(node, Branch.ON_TRUE, computeFallThrough(node.getFirstChild()));\n    // The edge that leaves the do loop if the condition fails.\n    createEdge(node, Branch.ON_FALSE,\n        computeFollowNode(node, this));\n    connectToPossibleExceptionHandler(\n        node, NodeUtil.getConditionExpression(node));\n  }\n\n  private void handleFor(Node forNode) {\n    if (forNode.getChildCount() == 4) {\n      // We have for (init; cond; iter) { body }\n      Node init = forNode.getFirstChild();\n      Node cond = init.getNext();\n      Node iter = cond.getNext();\n      Node body = iter.getNext();\n      // After initialization, we transfer to the FOR which is in charge of\n      // checking the condition (for the first time).\n      createEdge(init, Branch.UNCOND, forNode);\n      // The edge that transfer control to the beginning of the loop body.\n      createEdge(forNode, Branch.ON_TRUE, computeFallThrough(body));\n      // The edge to end of the loop.\n      createEdge(forNode, Branch.ON_FALSE,\n          computeFollowNode(forNode, this));\n      // The end of the body will have a unconditional branch to our iter\n      // (handled by calling computeFollowNode of the last instruction of the\n      // body. Our iter will jump to the forNode again to another condition\n      // check.\n      createEdge(iter, Branch.UNCOND, forNode);\n      connectToPossibleExceptionHandler(init, init);\n      connectToPossibleExceptionHandler(forNode, cond);\n      connectToPossibleExceptionHandler(iter, iter);\n    } else {\n      // We have for (item in collection) { body }\n      Node item = forNode.getFirstChild();\n      Node collection = item.getNext();\n      Node body = collection.getNext();\n      // The collection behaves like init.\n      createEdge(collection, Branch.UNCOND, forNode);\n      // The edge that transfer control to the beginning of the loop body.\n      createEdge(forNode, Branch.ON_TRUE, computeFallThrough(body));\n      // The edge to end of the loop.\n      createEdge(forNode, Branch.ON_FALSE,\n          computeFollowNode(forNode, this));\n      connectToPossibleExceptionHandler(forNode, collection);\n    }\n  }\n\n  private void handleSwitch(Node node) {\n    // Transfer to the first non-DEFAULT CASE. if there are none, transfer\n    // to the DEFAULT or the EMPTY node.\n    Node next = getNextSiblingOfType(\n        node.getFirstChild().getNext(), Token.CASE, Token.EMPTY);\n    if (next != null) { // Has at least one CASE or EMPTY\n      createEdge(node, Branch.UNCOND, next);\n    } else { // Has no CASE but possibly a DEFAULT\n      if (node.getFirstChild().getNext() != null) {\n        createEdge(node, Branch.UNCOND, node.getFirstChild().getNext());\n      } else { // No CASE, no DEFAULT\n        createEdge(node, Branch.UNCOND, computeFollowNode(node, this));\n      }\n    }\n    connectToPossibleExceptionHandler(node, node.getFirstChild());\n  }\n\n  private void handleCase(Node node) {\n    // Case is a bit tricky....First it goes into the body if condition is true.\n    createEdge(node, Branch.ON_TRUE,\n        node.getFirstChild().getNext());\n    // Look for the next CASE, skipping over DEFAULT.\n    Node next = getNextSiblingOfType(node.getNext(), Token.CASE);\n    if (next != null) { // Found a CASE\n      Preconditions.checkState(next.isCase());\n      createEdge(node, Branch.ON_FALSE, next);\n    } else { // No more CASE found, go back and search for a DEFAULT.\n      Node parent = node.getParent();\n      Node deflt = getNextSiblingOfType(\n        parent.getFirstChild().getNext(), Token.DEFAULT_CASE);\n      if (deflt != null) { // Has a DEFAULT\n        createEdge(node, Branch.ON_FALSE, deflt);\n      } else { // No DEFAULT found, go to the follow of the SWITCH.\n        createEdge(node, Branch.ON_FALSE, computeFollowNode(node, this));\n      }\n    }\n    connectToPossibleExceptionHandler(node, node.getFirstChild());\n  }\n\n  private void handleDefault(Node node) {\n    // Directly goes to the body. It should not transfer to the next case.\n    createEdge(node, Branch.UNCOND, node.getFirstChild());\n  }\n\n  private void handleWith(Node node) {\n    // Directly goes to the body. It should not transfer to the next case.\n    createEdge(node, Branch.UNCOND, node.getLastChild());\n    connectToPossibleExceptionHandler(node, node.getFirstChild());\n  }\n\n  private void handleStmtList(Node node) {\n    Node parent = node.getParent();\n    // Special case, don\'t add a block of empty CATCH block to the graph.\n    if (node.isBlock() && parent != null &&\n        parent.isTry() &&\n        NodeUtil.getCatchBlock(parent) == node &&\n        !NodeUtil.hasCatchHandler(node)) {\n      return;\n    }\n\n    // A block transfer control to its first child if it is not empty.\n    Node child = node.getFirstChild();\n\n    // Function declarations are skipped since control doesn\'t go into that\n    // function (unless it is called)\n    while (child != null && child.isFunction()) {\n      child = child.getNext();\n    }\n\n    if (child != null) {\n      createEdge(node, Branch.UNCOND, computeFallThrough(child));\n    } else {\n      createEdge(node, Branch.UNCOND, computeFollowNode(node, this));\n    }\n\n    // Synthetic blocks\n    if (parent != null) {\n      switch (parent.getType()) {\n        case Token.DEFAULT_CASE:\n        case Token.CASE:\n        case Token.TRY:\n          break;\n        default:\n          if (node.isBlock() && node.isSyntheticBlock()) {\n            createEdge(node, Branch.SYN_BLOCK, computeFollowNode(node, this));\n          }\n          break;\n      }\n    }\n  }\n\n  private void handleFunction(Node node) {\n    // A block transfer control to its first child if it is not empty.\n    Preconditions.checkState(node.getChildCount() >= 3);\n    createEdge(node, Branch.UNCOND,\n        computeFallThrough(node.getFirstChild().getNext().getNext()));\n    Preconditions.checkState(exceptionHandler.peek() == node);\n    exceptionHandler.pop();\n  }\n\n  private void handleExpr(Node node) {\n    createEdge(node, Branch.UNCOND, computeFollowNode(node, this));\n    connectToPossibleExceptionHandler(node, node);\n  }\n\n  private void handleThrow(Node node) {\n    connectToPossibleExceptionHandler(node, node);\n  }\n\n  private void handleTry(Node node) {\n    createEdge(node, Branch.UNCOND, node.getFirstChild());\n  }\n\n  private void handleCatch(Node node) {\n    createEdge(node, Branch.UNCOND, node.getLastChild());\n  }\n\n  private void handleBreak(Node node) {\n    String label = null;\n    // See if it is a break with label.\n    if (node.hasChildren()) {\n      label = node.getFirstChild().getString();\n    }\n    Node cur;\n    Node previous = null;\n    Node lastJump;\n    Node parent = node.getParent();\n    /*\n     * Continuously look up the ancestor tree for the BREAK target or the target\n     * with the corresponding label and connect to it. If along the path we\n     * discover a FINALLY, we will connect the BREAK to that FINALLY. From then\n     * on, we will just record the control flow changes in the finallyMap. This\n     * is due to the fact that we need to connect any node that leaves its own\n     * FINALLY block to the outer FINALLY or the BREAK\'s target but those nodes\n     * are not known yet due to the way we traverse the nodes.\n     */\n    for (cur = node, lastJump = node;\n        !isBreakTarget(cur, label);\n        cur = parent, parent = parent.getParent()) {\n      if (cur.isTry() && NodeUtil.hasFinally(cur)\n          && cur.getLastChild() != previous) {\n        if (lastJump == node) {\n          createEdge(lastJump, Branch.UNCOND, computeFallThrough(\n              cur.getLastChild()));\n        } else {\n          finallyMap.put(lastJump, computeFallThrough(cur.getLastChild()));\n        }\n        lastJump = cur;\n      }\n      if (parent == null) {\n        if (compiler.isIdeMode()) {\n          // In IDE mode, we expect that the data flow graph may\n          // not be well-formed.\n          return;\n        } else {\n          throw new IllegalStateException("Cannot find break target.");\n        }\n      }\n      previous = cur;\n    }\n    if (lastJump == node) {\n      createEdge(lastJump, Branch.UNCOND, computeFollowNode(cur, this));\n    } else {\n      finallyMap.put(lastJump, computeFollowNode(cur, this));\n    }\n  }\n\n  private void handleContinue(Node node) {\n    String label = null;\n    if (node.hasChildren()) {\n      label = node.getFirstChild().getString();\n    }\n    Node cur;\n    Node previous = null;\n    Node lastJump;\n\n    // Similar to handBreak\'s logic with a few minor variation.\n    Node parent = node.getParent();\n    for (cur = node, lastJump = node;\n        !isContinueTarget(cur, parent, label);\n        cur = parent, parent = parent.getParent()) {\n      if (cur.isTry() && NodeUtil.hasFinally(cur)\n          && cur.getLastChild() != previous) {\n        if (lastJump == node) {\n          createEdge(lastJump, Branch.UNCOND, cur.getLastChild());\n        } else {\n          finallyMap.put(lastJump, computeFallThrough(cur.getLastChild()));\n        }\n        lastJump = cur;\n      }\n      Preconditions.checkState(parent != null, "Cannot find continue target.");\n      previous = cur;\n    }\n    Node iter = cur;\n    if (cur.getChildCount() == 4) {\n      iter = cur.getFirstChild().getNext().getNext();\n    }\n\n    if (lastJump == node) {\n      createEdge(node, Branch.UNCOND, iter);\n    } else {\n      finallyMap.put(lastJump, iter);\n    }\n  }\n\n  private void handleReturn(Node node) {\n    Node lastJump = null;\n    for (Iterator<Node> iter = exceptionHandler.iterator(); iter.hasNext();) {\n      Node curHandler = iter.next();\n      if (curHandler.isFunction()) {\n        break;\n      }\n      if (NodeUtil.hasFinally(curHandler)) {\n        if (lastJump == null) {\n          createEdge(node, Branch.UNCOND, curHandler.getLastChild());\n        } else {\n          finallyMap.put(lastJump,\n              computeFallThrough(curHandler.getLastChild()));\n        }\n        lastJump = curHandler;\n      }\n    }\n\n    if (node.hasChildren()) {\n      connectToPossibleExceptionHandler(node, node.getFirstChild());\n    }\n\n    if (lastJump == null) {\n      createEdge(node, Branch.UNCOND, null);\n    } else {\n      finallyMap.put(lastJump, null);\n    }\n  }\n\n  private void handleStmt(Node node) {\n    // Simply transfer to the next line.\n    createEdge(node, Branch.UNCOND, computeFollowNode(node, this));\n    connectToPossibleExceptionHandler(node, node);\n  }\n\n  static Node computeFollowNode(Node node, ControlFlowAnalysis cfa) {\n    return computeFollowNode(node, node, cfa);\n  }\n\n  static Node computeFollowNode(Node node) {\n    return computeFollowNode(node, node, null);\n  }\n\n  /**\n   * Computes the follow() node of a given node and its parent. There is a side\n   * effect when calling this function. If this function computed an edge that\n   * exists a FINALLY, it\'ll attempt to connect the fromNode to the outer\n   * FINALLY according to the finallyMap.\n   *\n   * @param fromNode The original source node since {@code node} is changed\n   *        during recursion.\n   * @param node The node that follow() should compute.\n   */\n  private static Node computeFollowNode(\n      Node fromNode, Node node, ControlFlowAnalysis cfa) {\n    /*\n     * This is the case where:\n     *\n     * 1. Parent is null implies that we are transferring control to the end of\n     * the script.\n     *\n     * 2. Parent is a function implies that we are transferring control back to\n     * the caller of the function.\n     *\n     * 3. If the node is a return statement, we should also transfer control\n     * back to the caller of the function.\n     *\n     * 4. If the node is root then we have reached the end of what we have been\n     * asked to traverse.\n     *\n     * In all cases we should transfer control to a "symbolic return" node.\n     * This will make life easier for DFAs.\n     */\n    Node parent = node.getParent();\n    if (parent == null || parent.isFunction() ||\n        (cfa != null && node == cfa.root)) {\n      return null;\n    }\n\n    // If we are just before a IF/WHILE/DO/FOR:\n    switch (parent.getType()) {\n      // The follow() of any of the path from IF would be what follows IF.\n      case Token.IF:\n        return computeFollowNode(fromNode, parent, cfa);\n      case Token.CASE:\n      case Token.DEFAULT_CASE:\n        // After the body of a CASE, the control goes to the body of the next\n        // case, without having to go to the case condition.\n        if (parent.getNext() != null) {\n          if (parent.getNext().isCase()) {\n            return parent.getNext().getFirstChild().getNext();\n          } else if (parent.getNext().isDefaultCase()) {\n            return parent.getNext().getFirstChild();\n          } else {\n            Preconditions.checkState(false, "Not reachable");\n          }\n        } else {\n          return computeFollowNode(fromNode, parent, cfa);\n        }\n        break;\n      case Token.FOR:\n        if (NodeUtil.isForIn(parent)) {\n          return parent;\n        } else {\n          return parent.getFirstChild().getNext().getNext();\n        }\n      case Token.WHILE:\n      case Token.DO:\n        return parent;\n      case Token.TRY:\n        // If we are coming out of the TRY block...\n        if (parent.getFirstChild() == node) {\n          if (NodeUtil.hasFinally(parent)) { // and have FINALLY block.\n            return computeFallThrough(parent.getLastChild());\n          } else { // and have no FINALLY.\n            return computeFollowNode(fromNode, parent, cfa);\n          }\n        // CATCH block.\n        } else if (NodeUtil.getCatchBlock(parent) == node){\n          if (NodeUtil.hasFinally(parent)) { // and have FINALLY block.\n            return computeFallThrough(node.getNext());\n          } else {\n            return computeFollowNode(fromNode, parent, cfa);\n          }\n        // If we are coming out of the FINALLY block...\n        } else if (parent.getLastChild() == node){\n          if (cfa != null) {\n            for (Node finallyNode : cfa.finallyMap.get(parent)) {', 'aftercode': "            }\n          }\n          return computeFollowNode(fromNode, parent, cfa);\n        }\n    }\n\n    // Now that we are done with the special cases follow should be its\n    // immediate sibling, unless its sibling is a function\n    Node nextSibling = node.getNext();\n\n    // Skip function declarations because control doesn't get pass into it.\n    while (nextSibling != null && nextSibling.isFunction()) {\n      nextSibling = nextSibling.getNext();\n    }\n\n    if (nextSibling != null) {\n      return computeFallThrough(nextSibling);\n    } else {\n      // If there are no more siblings, control is transferred up the AST.\n      return computeFollowNode(fromNode, parent, cfa);\n    }\n  }\n\n  /**\n   * Computes the destination node of n when we want to fallthrough into the\n   * subtree of n. We don't always create a CFG edge into n itself because of\n   * DOs and FORs.\n   */\n  static Node computeFallThrough(Node n) {\n    switch (n.getType()) {\n      case Token.DO:\n        return computeFallThrough(n.getFirstChild());\n      case Token.FOR:\n        if (NodeUtil.isForIn(n)) {\n          return n.getFirstChild().getNext();\n        }\n        return computeFallThrough(n.getFirstChild());\n      case Token.LABEL:\n        return computeFallThrough(n.getLastChild());\n      default:\n        return n;\n    }\n  }\n\n  /**\n   * Connects the two nodes in the control flow graph.\n   *\n   * @param fromNode Source.\n   * @param toNode Destination.\n   */\n  private void createEdge(Node fromNode, ControlFlowGraph.Branch branch,\n      Node toNode) {\n    cfg.createNode(fromNode);\n    cfg.createNode(toNode);\n    cfg.connectIfNotFound(fromNode, branch, toNode);\n  }\n\n  /**\n   * Connects cfgNode to the proper CATCH block if target subtree might throw\n   * an exception. If there are FINALLY blocks reached before a CATCH, it will\n   * make the corresponding entry in finallyMap.\n   */\n  private void connectToPossibleExceptionHandler(Node cfgNode, Node target) {\n    if (mayThrowException(target) && !exceptionHandler.isEmpty()) {\n      Node lastJump = cfgNode;\n      for (Node handler : exceptionHandler) {\n        if (handler.isFunction()) {\n          return;\n        }\n        Preconditions.checkState(handler.isTry());\n        Node catchBlock = NodeUtil.getCatchBlock(handler);\n\n        if (!NodeUtil.hasCatchHandler(catchBlock)) { // No catch but a FINALLY.\n          if (lastJump == cfgNode) {\n            createEdge(cfgNode, Branch.ON_EX, handler.getLastChild());\n          } else {\n            finallyMap.put(lastJump, handler.getLastChild());\n          }\n        } else { // Has a catch.\n          if (lastJump == cfgNode) {\n            createEdge(cfgNode, Branch.ON_EX, catchBlock);\n            return;\n          } else {\n            finallyMap.put(lastJump, catchBlock);\n          }\n        }\n        lastJump = handler;\n      }\n    }\n  }\n\n  /**\n   * Get the next sibling (including itself) of one of the given types.\n   */\n  private static Node getNextSiblingOfType(Node first, int ... types) {\n    for (Node c = first; c != null; c = c.getNext()) {\n      for (int type : types) {\n        if (c.getType() == type) {\n          return c;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Checks if target is actually the break target of labeled continue. The\n   * label can be null if it is an unlabeled break.\n   */\n  public static boolean isBreakTarget(Node target, String label) {\n    return isBreakStructure(target, label != null) &&\n      matchLabel(target.getParent(), label);\n  }\n\n  /**\n   * Checks if target is actually the continue target of labeled continue. The\n   * label can be null if it is an unlabeled continue.\n   */\n  private static boolean isContinueTarget(\n      Node target, Node parent, String label) {\n    return isContinueStructure(target) && matchLabel(parent, label);\n  }\n  /**\n   * Check if label is actually referencing the target control structure. If\n   * label is null, it always returns true.\n   */\n  private static boolean matchLabel(Node target, String label) {\n    if (label == null) {\n      return true;\n    }\n    while (target.isLabel()) {\n      if (target.getFirstChild().getString().equals(label)) {\n        return true;\n      }\n      target = target.getParent();\n    }\n    return false;\n  }\n\n  /**\n   * Determines if the subtree might throw an exception.\n   */\n  public static boolean mayThrowException(Node n) {\n    switch (n.getType()) {\n      case Token.CALL:\n      case Token.GETPROP:\n      case Token.GETELEM:\n      case Token.THROW:\n      case Token.NEW:\n      case Token.ASSIGN:\n      case Token.INC:\n      case Token.DEC:\n      case Token.INSTANCEOF:\n        return true;\n      case Token.FUNCTION:\n        return false;\n    }\n    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n      if (!ControlFlowGraph.isEnteringNewCfgNode(c) && mayThrowException(c)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Determines whether the given node can be terminated with a BREAK node.\n   */\n  static boolean isBreakStructure(Node n, boolean labeled) {\n    switch (n.getType()) {\n      case Token.FOR:\n      case Token.DO:\n      case Token.WHILE:\n      case Token.SWITCH:\n        return true;\n      case Token.BLOCK:\n      case Token.IF:\n      case Token.TRY:\n        return labeled;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Determines whether the given node can be advanced with a CONTINUE node.\n   */\n  static boolean isContinueStructure(Node n) {\n    switch (n.getType()) {\n      case Token.FOR:\n      case Token.DO:\n      case Token.WHILE:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Get the TRY block with a CATCH that would be run if n throws an exception.\n   * @return The CATCH node or null if it there isn't a CATCH before the\n   *     the function terminates.\n   */\n  static Node getExceptionHandler(Node n) {\n    for (Node cur = n;\n        !cur.isScript() && !cur.isFunction();\n        cur = cur.getParent()) {\n      Node catchNode = getCatchHandlerForBlock(cur);\n      if (catchNode != null) {\n        return catchNode;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Locate the catch BLOCK given the first block in a TRY.\n   * @return The CATCH node or null there is no catch handler.\n   */\n  static Node getCatchHandlerForBlock(Node block) {\n    if (block.isBlock() &&\n        block.getParent().isTry() &&\n        block.getParent().getFirstChild() == block) {\n      for (Node s = block.getNext(); s != null; s = s.getNext()) {\n        if (NodeUtil.hasCatchHandler(s)) {\n          return s.getFirstChild();\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * A {@link ControlFlowGraph} which provides a node comparator based on the\n   * pre-order traversal of the AST.\n   */\n  private static class AstControlFlowGraph extends ControlFlowGraph<Node> {\n    private final Map<DiGraphNode<Node, Branch>, Integer> priorities;\n\n    /**\n     * Constructor.\n     * @param entry The entry node.\n     * @param priorities The map from nodes to position in the AST (to be\n     *    filled by the {@link ControlFlowAnalysis#shouldTraverse}).\n     */\n    private AstControlFlowGraph(Node entry,\n        Map<DiGraphNode<Node, Branch>, Integer> priorities,\n        boolean edgeAnnotations) {\n      super(entry,\n          true /* node annotations */, edgeAnnotations);\n      this.priorities = priorities;\n    }\n\n    @Override\n    /**\n     * Returns a node comparator based on the pre-order traversal of the AST.\n     * @param isForward x 'before' y in the pre-order traversal implies\n     * x 'less than' y (if true) and x 'greater than' y (if false).\n     */\n    public Comparator<DiGraphNode<Node, Branch>> getOptionalNodeComparator(\n        boolean isForward) {\n      if (isForward) {\n        return new Comparator<DiGraphNode<Node, Branch>>() {\n          @Override\n          public int compare(\n              DiGraphNode<Node, Branch> n1, DiGraphNode<Node, Branch> n2) {\n            return getPosition(n1) - getPosition(n2);\n          }\n        };\n      } else {\n        return new Comparator<DiGraphNode<Node, Branch>>() {\n          @Override\n          public int compare(\n              DiGraphNode<Node, Branch> n1, DiGraphNode<Node, Branch> n2) {\n            return getPosition(n2) - getPosition(n1);\n          }\n        };\n      }\n    }\n\n    /**\n     * Gets the pre-order traversal position of the given node.\n     * @return An arbitrary counter used for comparing positions.\n     */\n    private int getPosition(DiGraphNode<Node, Branch> n) {\n      Integer priority = priorities.get(n);\n      Preconditions.checkNotNull(priority);\n      return priority;\n    }\n  }\n}", 'tree': 'body SwitchStatement expression MethodInvocation qualifier parent_ter ^ ^ member getType_ter ^ ^ ^ ^ cases SwitchStatementCase case MemberReference qualifier Token_ter ^ ^ member IF_ter ^ ^ ^ ^ statements ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ SwitchStatementCase case MemberReference qualifier Token_ter ^ ^ member CASE_ter ^ ^ ^ MemberReference qualifier Token_ter ^ ^ member DEFAULT_CASE_ter ^ ^ ^ ^ statements IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier parent_ter ^ ^ member getNext_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member isCase_ter ^ ^ ^ ^ member getNext_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ MethodInvocation member getNext_ter ^ ^ ^ ^ member getNext_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member isDefaultCase_ter ^ ^ ^ ^ member getNext_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getNext_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ arguments Literal value false_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member checkState_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ^ BreakStatement_ter ^ ^ ^ SwitchStatementCase case MemberReference qualifier Token_ter ^ ^ member FOR_ter ^ ^ ^ ^ statements IfStatement condition MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member isForIn_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MemberReference member parent_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements ReturnStatement expression MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member getNext_ter ^ ^ ^ MethodInvocation member getNext_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ SwitchStatementCase case MemberReference qualifier Token_ter ^ ^ member WHILE_ter ^ ^ ^ MemberReference qualifier Token_ter ^ ^ member DO_ter ^ ^ ^ ^ statements ReturnStatement expression MemberReference member parent_ter ^ ^ ^ ^ ^ ^ ^ SwitchStatementCase case MemberReference qualifier Token_ter ^ ^ member TRY_ter ^ ^ ^ ^ statements IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier parent_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr MemberReference member node_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member hasFinally_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MethodInvocation qualifier parent_ter ^ ^ member getLastChild_ter ^ ^ ^ ^ member computeFallThrough_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member getCatchBlock_ter ^ ^ ^ ^ operandr MemberReference member node_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member hasFinally_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MethodInvocation qualifier node_ter ^ ^ member getNext_ter ^ ^ ^ ^ member computeFallThrough_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier parent_ter ^ ^ member getLastChild_ter ^ ^ ^ ^ operandr MemberReference member node_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member cfa_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ForStatement control EnhancedForControl var VariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ ^ ^ ^ ^ iterable MethodInvocation qualifier cfa.finallyMap_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ body BlockStatement statements StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier node_ter ^ ^ member getNext_ter ^ ^ ^ ^ ^ ^ ^ ^ ', 'prob': [0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 767, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  ^ ^ ; ['copy-MemberReference']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root qualifier-qualifier cfa_ter ^ ^  ^ ^ ; ['copy-qualifier']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root MemberReference-MemberReference member fromNode_ter ^ ^ ^  ^ ^ ; ['copy-MemberReference']
before@1 batch0 x: -12.440777778625488: root MemberReference-MemberReference member fromNode_ter ^ ^ ^  ^ ^  ; ['copy-MemberReference']
after@1 batch0 x: -12.440777778625488: root MemberReference-MemberReference member fromNode_ter ^ ^ ^  ^ ^  ; ['copy-MemberReference']
copynode -0.13361716270446777:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -0.13361716270446777:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.13361716270446777:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -2.0809056758880615:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -2.0809056758880615:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -0.13361716270446777:  root modified ^ qualifier-qualifier cfa_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -0.13361716270446777:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.13361716270446777:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -2.0809056758880615:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.13361716270446777:  root modified ^ member-member createEdge_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -2.0809056758880615:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -0.13361716270446777:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -0.13361716270446777:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -2.0809056758880615:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -0.13361716270446777:  root modified ^ BreakStatement_ter ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter']
copynode -2.0809056758880615:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -2.0809056758880615:  root add ^ ^ ; ['root -> add', 'root -> End']
copynode -2.0809056758880615:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter']
copynode -2.0809056758880615:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -2.0809056758880615:  root add ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  ^ ^ ; ['root -> add', 'copy-MemberReference']
copynode -10.434221267700195:  root MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member']
copynode -10.434221267700195:  root MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member']
copynode -10.77503776550293:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -11.335437774658203:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -12.146665573120117:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -11.584761619567871:  root qualifier-qualifier cfa_ter ^ ^  unknown ^ ^ ^ ; ['copy-qualifier', 'start -> unknown']
copynode -12.440777778625488:  root MemberReference-MemberReference member fromNode_ter ^ ^ ^  member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member']
copynode -12.287769317626953:  root StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ arguments Literal value false_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member checkState_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.584761619567871:  root qualifier-qualifier cfa_ter ^ ^  cfa.finallyMap_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -12.287769317626953:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -10.77503776550293:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -11.335437774658203:  root ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -11.335437774658203:  root ReturnStatement expression MemberReference member parent_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -11.335437774658203:  root ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -11.584761619567871:  root qualifier-qualifier cfa_ter ^ ^  NodeUtil_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.584761619567871:  root qualifier-qualifier cfa_ter ^ ^  NodeUtil_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -12.440777778625488:  root MemberReference-MemberReference member fromNode_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member']
copynode -11.584761619567871:  root qualifier-qualifier cfa_ter ^ ^  node_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.584761619567871:  root qualifier-qualifier cfa_ter ^ ^  cfa_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -12.287769317626953:  root StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.584761619567871:  root qualifier-qualifier cfa_ter ^ ^  NodeUtil_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.335437774658203:  root ReturnStatement expression MethodInvocation arguments MethodInvocation qualifier node_ter ^ ^ member getNext_ter ^ ^ ^ ^ member computeFallThrough_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -11.584761619567871:  root qualifier-qualifier cfa_ter ^ ^  loc0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> loc0']
copynode -11.335437774658203:  root ReturnStatement expression MemberReference member parent_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -11.335437774658203:  root ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -11.584761619567871:  root qualifier-qualifier cfa_ter ^ ^  NodeUtil_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.584761619567871:  root qualifier-qualifier cfa_ter ^ ^  LOG_ter ^ ^ ^ ; ['copy-qualifier', 'qualifier -> LOG_ter']
copynode -11.335437774658203:  root ReturnStatement expression MethodInvocation arguments MethodInvocation qualifier parent_ter ^ ^ member getLastChild_ter ^ ^ ^ ^ member computeFallThrough_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -11.335437774658203:  root ReturnStatement expression MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ MethodInvocation member getNext_ter ^ ^ ^ ^ member getNext_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -10.434221267700195:  root MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -11.335437774658203:  root ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -10.434221267700195:  root MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> selectors member']
copynode -10.434221267700195:  root MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -10.434221267700195:  root MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -12.440777778625488:  root MemberReference-MemberReference member fromNode_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -10.434221267700195:  root MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -12.440777778625488:  root MemberReference-MemberReference member fromNode_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> selectors member']
copynode -12.440777778625488:  root MemberReference-MemberReference member fromNode_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -10.434221267700195:  root MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -10.434221267700195:  root MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier selectors member']
copynode -12.440777778625488:  root MemberReference-MemberReference member fromNode_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -12.146665573120117:  root IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member cfa_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ForStatement control EnhancedForControl var VariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ ^ ^ ^ ^ iterable MethodInvocation qualifier cfa.finallyMap_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ body BlockStatement statements StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.146665573120117:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member getCatchBlock_ter ^ ^ ^ ^ operandr MemberReference member node_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member hasFinally_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MethodInvocation qualifier node_ter ^ ^ member getNext_ter ^ ^ ^ ^ member computeFallThrough_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier parent_ter ^ ^ member getLastChild_ter ^ ^ ^ ^ operandr MemberReference member node_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member cfa_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ForStatement control EnhancedForControl var VariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ ^ ^ ^ ^ iterable MethodInvocation qualifier cfa.finallyMap_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ body BlockStatement statements StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.434221267700195:  root MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  prefix_operators ^ postfix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators postfix_operators member']
copynode -12.146665573120117:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier parent_ter ^ ^ member getLastChild_ter ^ ^ ^ ^ operandr MemberReference member node_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member cfa_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ForStatement control EnhancedForControl var VariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ ^ ^ ^ ^ iterable MethodInvocation qualifier cfa.finallyMap_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ body BlockStatement statements StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.146665573120117:  root IfStatement condition MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member hasFinally_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MethodInvocation qualifier node_ter ^ ^ member getNext_ter ^ ^ ^ ^ member computeFallThrough_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.146665573120117:  root IfStatement condition MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member isForIn_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MemberReference member parent_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements ReturnStatement expression MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member getNext_ter ^ ^ ^ MethodInvocation member getNext_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.146665573120117:  root IfStatement condition MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member hasFinally_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MethodInvocation qualifier parent_ter ^ ^ member getLastChild_ter ^ ^ ^ ^ member computeFallThrough_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.440777778625488:  root MemberReference-MemberReference member fromNode_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -12.146665573120117:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier parent_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr MemberReference member node_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member hasFinally_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MethodInvocation qualifier parent_ter ^ ^ member getLastChild_ter ^ ^ ^ ^ member computeFallThrough_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member getCatchBlock_ter ^ ^ ^ ^ operandr MemberReference member node_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member hasFinally_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MethodInvocation qualifier node_ter ^ ^ member getNext_ter ^ ^ ^ ^ member computeFallThrough_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier parent_ter ^ ^ member getLastChild_ter ^ ^ ^ ^ operandr MemberReference member node_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member cfa_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ForStatement control EnhancedForControl var VariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ ^ ^ ^ ^ iterable MethodInvocation qualifier cfa.finallyMap_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ body BlockStatement statements StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.146665573120117:  root IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier parent_ter ^ ^ member getNext_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member isCase_ter ^ ^ ^ ^ member getNext_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ MethodInvocation member getNext_ter ^ ^ ^ ^ member getNext_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member isDefaultCase_ter ^ ^ ^ ^ member getNext_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getNext_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ arguments Literal value false_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member checkState_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.287769317626953:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -12.146665573120117:  root IfStatement condition MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member isCase_ter ^ ^ ^ ^ member getNext_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ MethodInvocation member getNext_ter ^ ^ ^ ^ member getNext_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member isDefaultCase_ter ^ ^ ^ ^ member getNext_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getNext_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ arguments Literal value false_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member checkState_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.440777778625488:  root MemberReference-MemberReference member fromNode_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -10.77503776550293:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -12.440777778625488:  root MemberReference-MemberReference member fromNode_ter ^ ^ ^  prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier selectors member']
copynode -12.440777778625488:  root MemberReference-MemberReference member fromNode_ter ^ ^ ^  postfix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators selectors member']
copynode -10.77503776550293:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.77503776550293:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -12.287769317626953:  root StatementExpression loc1 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -12.287769317626953:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -12.287769317626953:  root StatementExpression loc0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
before@2 batch0 x: -31.172130584716797: root StatementExpression loc0 ^ ^ ^  ; ['root -> StatementExpression', 'copy-VariableDeclarator']
after@2 batch0 x: -31.172130584716797: root StatementExpression loc0 ^ ^ ^  ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -2.6680341958999634:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.4467813968658447:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -2.28608775138855:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -2.28608775138855:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -2.4467813968658447:  root modified ^ StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ arguments Literal value false_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member checkState_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.8754489421844482:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -3.4760212898254395:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -3.9966423511505127:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -3.687518835067749:  root modified ^ qualifier-qualifier cfa_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -4.327138662338257:  root modified ^ member-member createEdge_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -4.209007740020752:  root add ^ StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ arguments Literal value false_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member checkState_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.4760212898254395:  root add ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -3.687518835067749:  root modified ^ qualifier-qualifier cfa_ter ^ ^  cfa.finallyMap_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -4.209007740020752:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.1571948528289795:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -5.475393533706665:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -3.8754489421844482:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -3.4760212898254395:  root add ^ ReturnStatement expression MemberReference member parent_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -3.4760212898254395:  root add ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.2694923877716064:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -4.209007740020752:  root add ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.327138662338257:  root modified ^ member-member createEdge_ter ^ ^  computeFallThrough_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.4467813968658447:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.687518835067749:  root modified ^ qualifier-qualifier cfa_ter ^ ^  NodeUtil_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -3.9966423511505127:  root modified ^ ReturnStatement expression MemberReference member parent_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -3.687518835067749:  root modified ^ qualifier-qualifier cfa_ter ^ ^  NodeUtil_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -6.4672324657440186:  root add ^ control EnhancedForControl var VariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ ^ ^ ^ ^ iterable MethodInvocation qualifier cfa.finallyMap_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-control']
copynode -3.4760212898254395:  root add ^ ReturnStatement expression MethodInvocation arguments MethodInvocation qualifier node_ter ^ ^ member getNext_ter ^ ^ ^ ^ member computeFallThrough_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -3.687518835067749:  root modified ^ qualifier-qualifier cfa_ter ^ ^  NodeUtil_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -3.687518835067749:  root modified ^ qualifier-qualifier cfa_ter ^ ^  node_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -3.4760212898254395:  root add ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -3.4760212898254395:  root add ^ ReturnStatement expression MemberReference member parent_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -3.9966423511505127:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -3.687518835067749:  root modified ^ qualifier-qualifier cfa_ter ^ ^  NodeUtil_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -7.087498903274536:  root modified ^ BreakStatement_ter ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> End']
copynode -3.9966423511505127:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.346089124679565:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -6.4672324657440186:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -7.6229846477508545:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> End']
copynode -4.327138662338257:  root modified ^ member-member createEdge_ter ^ ^  computeFallThrough_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.9966423511505127:  root modified ^ ReturnStatement expression MemberReference member parent_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -3.4760212898254395:  root add ^ ReturnStatement expression MethodInvocation arguments MethodInvocation qualifier parent_ter ^ ^ member getLastChild_ter ^ ^ ^ ^ member computeFallThrough_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -2.28608775138855:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -3.687518835067749:  root modified ^ qualifier-qualifier cfa_ter ^ ^  parent_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -4.327138662338257:  root modified ^ member-member createEdge_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.4760212898254395:  root add ^ ReturnStatement expression MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ MethodInvocation member getNext_ter ^ ^ ^ ^ member getNext_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -2.28608775138855:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -3.9966423511505127:  root modified ^ ReturnStatement expression MethodInvocation arguments MethodInvocation qualifier node_ter ^ ^ member getNext_ter ^ ^ ^ ^ member computeFallThrough_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -3.4760212898254395:  root add ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -4.327138662338257:  root modified ^ member-member createEdge_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.9966423511505127:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -3.687518835067749:  root modified ^ qualifier-qualifier cfa_ter ^ ^  parent_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -3.687518835067749:  root modified ^ qualifier-qualifier cfa_ter ^ ^  Preconditions_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -3.9966423511505127:  root modified ^ ReturnStatement expression MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ MethodInvocation member getNext_ter ^ ^ ^ ^ member getNext_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.2694923877716064:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -3.9966423511505127:  root modified ^ ReturnStatement expression MethodInvocation arguments MethodInvocation qualifier parent_ter ^ ^ member getLastChild_ter ^ ^ ^ ^ member computeFallThrough_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -4.327138662338257:  root modified ^ member-member createEdge_ter ^ ^  checkState_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.9966423511505127:  root modified ^ ReturnStatement expression MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member getNext_ter ^ ^ ^ MethodInvocation member getNext_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -4.327138662338257:  root modified ^ member-member createEdge_ter ^ ^  createEdge_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -4.327138662338257:  root modified ^ member-member createEdge_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter']
copynode -8.830200910568237:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -4.327138662338257:  root modified ^ member-member createEdge_ter ^ ^  hasFinally_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -4.327138662338257:  root modified ^ member-member createEdge_ter ^ ^  hasFinally_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.28608775138855:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -3.8754489421844482:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -2.28608775138855:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -9.113126516342163:  root add ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member ^ ^ ^ ; ['root -> add', 'copy-MemberReference', 'MemberReference -> member']
copynode -2.28608775138855:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -7.087498903274536:  root modified ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -3.8754489421844482:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -5.1571948528289795:  root add ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -5.1571948528289795:  root add ^ BreakStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> BreakStatement_ter']
copynode -9.113126516342163:  root add ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> add', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -7.087498903274536:  root modified ^ BreakStatement_ter ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> ReturnStatement']
copynode -7.087498903274536:  root modified ^ BreakStatement_ter ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'copy-MemberReference']
copynode -3.8754489421844482:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -5.1571948528289795:  root add ^ BreakStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ReturnStatement']
copynode -5.1571948528289795:  root add ^ BreakStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> IfStatement']
copynode -6.2694923877716064:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -11.26767122745514:  root MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Branch_ter ^ ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -6.4672324657440186:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -7.087498903274536:  root modified ^ BreakStatement_ter ^ IfStatement ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> IfStatement']
copynode -2.28608775138855:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -11.285159170627594:  root return_type ReferenceType name Node_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -7.087498903274536:  root modified ^ BreakStatement_ter ^ qualifier-qualifier cfa_ter ^ ^  ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'copy-qualifier']
copynode -11.019361138343811:  root MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -11.63971495628357:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -2.6680341958999634:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member cfa_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ForStatement control EnhancedForControl var VariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ ^ ^ ^ ^ iterable MethodInvocation qualifier cfa.finallyMap_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ body BlockStatement statements StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -2.28608775138855:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier selectors member']
copynode -11.285159170627594:  root return_type ReferenceType name Node_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -6.2694923877716064:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -7.087498903274536:  root modified ^ BreakStatement_ter ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'copy-MemberReference']
copynode -7.087498903274536:  root modified ^ BreakStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> ContinueStatement_ter']
copynode -12.365977883338928:  root qualifier-qualifier cfa_ter ^ ^  unknown ^ ^ ^ ; ['copy-qualifier', 'start -> unknown', 'root -> End']
copynode -2.6680341958999634:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier parent_ter ^ ^ member getLastChild_ter ^ ^ ^ ^ operandr MemberReference member node_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member cfa_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ForStatement control EnhancedForControl var VariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ ^ ^ ^ ^ iterable MethodInvocation qualifier cfa.finallyMap_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ body BlockStatement statements StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -6.4672324657440186:  root add ^ control ForControl_ter ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl_ter']
copynode -11.019361138343811:  root MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
before@3 batch0 x: -12.574275135993958: root MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member loc0 ^ ^ ^ ^  ; ['copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
after@3 batch0 x: -12.574275135993958: root MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member loc0 ^ ^ ^ ^  ; ['copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -2.8216603100299835:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.8480464816093445:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Branch_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -2.6686167625593953:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.6992746591567993:  root modified ^ StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ arguments Literal value false_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member checkState_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.6686167625593953:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -4.313102632761002:  root modified ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -2.6686167625593953:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -4.502044916152954:  root modified ^ qualifier-qualifier cfa_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -4.699691504240036:  root modified ^ member-member createEdge_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -3.156182587146759:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.156182587146759:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.144400775432587:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -3.156182587146759:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member fromNode_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.952200770378113:  root add ^ StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ arguments Literal value false_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member checkState_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -4.144400775432587:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -5.088367581367493:  root add ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -5.139524221420288:  root modified ^ qualifier-qualifier cfa_ter ^ ^  cfa.finallyMap_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -3.156182587146759:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member cfa_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.157934069633484:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -4.019952520728111:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -2.8480464816093445:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -2.8480464816093445:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Token_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -5.476423316751607:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -2.8480464816093445:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Token_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -2.8480464816093445:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Token_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -4.019952520728111:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.959697723388672:  root add ^ ReturnStatement expression MemberReference member parent_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -4.019952520728111:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member fromNode_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -3.156182587146759:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member parent_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -2.8480464816093445:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Token_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -4.019952520728111:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member cfa_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -3.156182587146759:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.288688898086548:  root add ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.424883842468262:  root add ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.46795654296875:  root modified ^ member-member createEdge_ter ^ ^  computeFallThrough_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.522015333175659:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.590402364730835:  root modified ^ qualifier-qualifier cfa_ter ^ ^  NodeUtil_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.598346710205078:  root modified ^ ReturnStatement expression MemberReference member parent_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.634021520614624:  root modified ^ qualifier-qualifier cfa_ter ^ ^  NodeUtil_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -5.953857183456421:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  qualifier Branch_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -2.6686167625593953:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member cfa_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -2.8480464816093445:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier cfa_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -3.156182587146759:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member fromNode_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -3.156182587146759:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member fromNode_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.476423316751607:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -2.6686167625593953:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier parent_ter ^ ^ member getLastChild_ter ^ ^ ^ ^ operandr MemberReference member node_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -4.144400775432587:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.9888646602630615:  root modified ^ qualifier-qualifier cfa_ter ^ ^  NodeUtil_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.964252471923828:  root add ^ ReturnStatement expression MethodInvocation arguments MethodInvocation qualifier node_ter ^ ^ member getNext_ter ^ ^ ^ ^ member computeFallThrough_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -2.8480464816093445:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -7.038652181625366:  root modified ^ qualifier-qualifier cfa_ter ^ ^  node_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -2.8480464816093445:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Token_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -3.156182587146759:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member parent_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.313102632761002:  root modified ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -4.019952520728111:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member parent_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.9100306034088135:  root add ^ control EnhancedForControl var VariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ ^ ^ ^ ^ iterable MethodInvocation qualifier cfa.finallyMap_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-control', 'root -> End']
copynode -2.6686167625593953:  root add ^ IfStatement condition MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member hasFinally_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.110466003417969:  root add ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.181349039077759:  root add ^ ReturnStatement expression MemberReference member parent_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.262353897094727:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.279296636581421:  root modified ^ qualifier-qualifier cfa_ter ^ ^  NodeUtil_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -3.156182587146759:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member cfa_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -2.8216603100299835:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -7.287818908691406:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -4.019952520728111:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -2.6686167625593953:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member getCatchBlock_ter ^ ^ ^ ^ operandr MemberReference member node_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -2.8480464816093445:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Token_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -4.019952520728111:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member fromNode_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.144400775432587:  root add ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -6.397943824529648:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.019952520728111:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member parent_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.5721763372421265:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -7.653392791748047:  root modified ^ member-member createEdge_ter ^ ^  computeFallThrough_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.670207977294922:  root modified ^ ReturnStatement expression MemberReference member parent_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.685455322265625:  root add ^ ReturnStatement expression MethodInvocation arguments MethodInvocation qualifier parent_ter ^ ^ member getLastChild_ter ^ ^ ^ ^ member computeFallThrough_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.729820013046265:  root modified ^ qualifier-qualifier cfa_ter ^ ^  parent_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -2.6686167625593953:  root add ^ IfStatement condition MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member hasFinally_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -2.6686167625593953:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier parent_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr MemberReference member node_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -4.019952520728111:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member cfa_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.916240692138672:  root modified ^ member-member createEdge_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.476423316751607:  root modified ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -7.958705902099609:  root add ^ ReturnStatement expression MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ MethodInvocation member getNext_ter ^ ^ ^ ^ member getNext_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -4.019952520728111:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member cfa_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -8.042293787002563:  root modified ^ ReturnStatement expression MethodInvocation arguments MethodInvocation qualifier node_ter ^ ^ member getNext_ter ^ ^ ^ ^ member computeFallThrough_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -5.157934069633484:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -7.979241609573364:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -8.138418197631836:  root modified ^ member-member createEdge_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -8.114709854125977:  root add ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -8.155887842178345:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -8.236520528793335:  root modified ^ qualifier-qualifier cfa_ter ^ ^  parent_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -8.267108678817749:  root modified ^ qualifier-qualifier cfa_ter ^ ^  Preconditions_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -8.280786752700806:  root modified ^ ReturnStatement expression MethodInvocation qualifier parent_ter ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ MethodInvocation member getNext_ter ^ ^ ^ ^ member getNext_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.723744630813599:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -7.375152314081788:  root add ^ WhileStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MethodInvocation']
copynode -5.953857183456421:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  qualifier Token_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
before@4 batch0 x: -8.377195596694946: root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  qualifier Token_ter ^ ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
after@4 batch0 x: -8.377195596694946: root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  qualifier Token_ter ^ ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -2.836719593964517:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.2888017892837524:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Branch_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -3.870870938699227:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.703087270259857:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -4.408280484378338:  root modified ^ ReturnStatement expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.810175359249115:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -3.4686872867750935:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.4686872867750935:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.410940399568062:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -4.970621645450592:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member fromNode_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -4.878353238105774:  root add ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -5.226688921451569:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member cfa_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -5.298632130026817:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -2.836719593964517:  root modified ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.836719593964517:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.4686872867750935:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -4.410940399568062:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -5.488171994686127:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier unknown ^ ^ member UNCOND_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'copy-member']
copynode -5.98732028901577:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.0080219358205795:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member fromNode_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -3.4686872867750935:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -6.029316484928131:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member parent_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -5.2311404794454575:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.043241560459137:  root add ^ ReturnStatement expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.258582815527916:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member cfa_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.2662912011146545:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -3.4686872867750935:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -3.4686872867750935:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.2888017892837524:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Branch_ter ^ ^ member cfa_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -3.2888017892837524:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Branch_ter ^ ^ member fromNode_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -3.2888017892837524:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Branch_ter ^ ^ member WHILE_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -5.043241560459137:  root add ^ ReturnStatement expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.043241560459137:  root add ^ ReturnStatement expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.836719593964517:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -5.2311404794454575:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.836719593964517:  root modified ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.2311404794454575:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.408280484378338:  root modified ^ ReturnStatement expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.7701632380485535:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Token_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.800591051578522:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member fromNode_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.888838350772858:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member fromNode_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -5.9528509974479675:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Token_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.891104870592244:  root modified ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.953789412975311:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Token_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -4.410940399568062:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.4686872867750935:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.987768352031708:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -3.4686872867750935:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -6.063177764415741:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Token_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -7.050085604190826:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member parent_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -7.083331808447838:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member parent_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.783884704113007:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier cfa_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -4.408280484378338:  root modified ^ ReturnStatement expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.878353238105774:  root add ^ ReturnStatement expression MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.9043627615319565:  root modified ^ IfStatement condition MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.767618417739868:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  qualifier Branch_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -7.069621235132217:  root modified ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -3.4686872867750935:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -5.9043627615319565:  root modified ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.284813195466995:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -7.283879101276398:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  member cfa_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -3.2888017892837524:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Branch_ter ^ ^ member TRY_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -7.325657352805138:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -3.2888017892837524:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Branch_ter ^ ^ member DO_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -3.2888017892837524:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Branch_ter ^ ^ member parent_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -6.768805017869454:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member cfa_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -5.043241560459137:  root add ^ ReturnStatement expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.4939915984869:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member fromNode_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -3.2888017892837524:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -6.978529444138985:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier parent_ter ^ ^ member getLastChild_ter ^ ^ ^ ^ operandr MemberReference member node_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.58222696185112:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -7.5868944972753525:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  member parent_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -7.57405298948288:  root add ^ ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
before@5 batch0 x: -7.617357701063156: root add ^ ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
after@5 batch0 x: -7.617357701063156: root add ^ ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.0602379059419036:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.655906081199646:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Branch_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -3.8820839898544364:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.8820839898544364:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -4.729322426021099:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.907031348149758:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.617250910203438:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -5.655331960122567:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -3.0602379059419036:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.772395521402359:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier unknown ^ ^ member UNCOND_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'copy-member', 'root -> End']
copynode -3.8820839898544364:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -6.020806065003853:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -4.996553376317024:  root add ^ ReturnStatement expression MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.498888096772134:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.858482947747689:  root add ^ IfStatement condition MethodInvocation qualifier cfa_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.996553376317024:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.342333912849426:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Branch_ter ^ ^ member cfa_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'root -> End']
copynode -3.0602379059419036:  root modified ^ StatementExpression expression MethodInvocation qualifier node_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.366778492927551:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Branch_ter ^ ^ member fromNode_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'root -> End']
copynode -4.858482947747689:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.37421715259552:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Branch_ter ^ ^ member WHILE_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'root -> End']
copynode -6.314039936463814:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.826857200067025:  root add ^ IfStatement condition MethodInvocation qualifier cfa_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -5.369402012787759:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -3.8820839898544364:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -6.13410347700119:  root add ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.826857200067025:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -6.740441620349884:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Token_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -4.826857200067025:  root add ^ IfStatement condition MethodInvocation qualifier node_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.700689396820962:  root modified ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.858482947747689:  root add ^ IfStatement condition MethodInvocation qualifier cfa.finallyMap_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.892511546611786:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Token_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.097537502646446:  root add ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.911668181419373:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Token_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -7.020187845628243:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter']
copynode -7.0316122174263:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Token_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -3.0602379059419036:  root modified ^ StatementExpression expression MethodInvocation qualifier Branch_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.826857200067025:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -6.991823240183294:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -3.0602379059419036:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa.finallyMap_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -7.152241617441177:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier cfa_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -4.826857200067025:  root add ^ IfStatement condition MethodInvocation qualifier cfa.finallyMap_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -5.369402012787759:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.206582605838776:  root modified ^ MemberReference-MemberReference member fromNode_ter ^ ^ ^  qualifier Branch_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -4.996553376317024:  root add ^ ReturnStatement expression MemberReference member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -7.199820482288487:  root modified ^ IfStatement condition MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.657466969452798:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -7.240036478440743:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -4.858482947747689:  root add ^ IfStatement condition MethodInvocation qualifier node_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -7.284975333241164:  root modified ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -7.309561848640442:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Branch_ter ^ ^ member TRY_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'root -> End']
copynode -7.343392491340637:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Branch_ter ^ ^ member DO_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'root -> End']
copynode -7.388039708137512:  root modified ^ MemberReference-MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^  qualifier Branch_ter ^ ^ member parent_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'root -> End']
copynode -7.435598194599152:  root add ^ ReturnStatement expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.729322426021099:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -7.184041857719421:  root add ^ ReturnStatement expression MemberReference qualifier Branch_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
before@6 batch0 x: -7.505916029214859: root add ^ ReturnStatement expression MemberReference qualifier Branch_ter ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
after@6 batch0 x: -7.505916029214859: root add ^ ReturnStatement expression MemberReference qualifier Branch_ter ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -3.2940872376784682:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -3.2940872376784682:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -4.7936132328468375:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.027694992721081:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -4.934320189233404:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.192583700816613:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -4.934320189233404:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -6.026516631245613:  root add ^ ReturnStatement expression MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -5.673630027275067:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -4.7936132328468375:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -3.2940872376784682:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -6.280951216816902:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -6.06137456651777:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.9814775960403495:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.46500217000721:  root add ^ IfStatement condition MethodInvocation qualifier cfa_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.549257240258157:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.6905303215608:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.027694992721081:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -3.2940872376784682:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -6.826821154914796:  root modified ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.393060473899823:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.727794876496773:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -6.820076218049508:  root add ^ IfStatement condition MethodInvocation qualifier node_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.112557640473824:  root add ^ IfStatement condition MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.192583700816613:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.367525837384164:  root modified ^ StatementExpression expression MethodInvocation qualifier node_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -3.2940872376784682:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -6.614425517793279:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -7.09163451846689:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.22198911011219:  root add ^ ReturnStatement expression MemberReference member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -7.242841026745737:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation']
copynode -7.194158902566414:  root add ^ IfStatement condition MethodInvocation qualifier cfa.finallyMap_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.06137456651777:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -3.2940872376784682:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -7.301374094662606:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -7.243867086188402:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -3.2940872376784682:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -6.377099504868966:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.6209980539861135:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier cfa_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -5.9814775960403495:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -6.690055549144745:  root add ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
before@7 batch0 x: -7.522918999195099: root add ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
after@7 batch0 x: -7.522918999195099: root add ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -3.8467474645003676:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.8467474645003676:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.256386287685018:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.7995482152327895:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.602169133897405:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.492653958499432:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.7995482152327895:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.087763933639508:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.415936819277704:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.520422555680852:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.285844868980348:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -6.689453504048288:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.981466390367132:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.8340635960921645:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -6.172997035260778:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.492653958499432:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.565375803213101:  root add ^ IfStatement condition MethodInvocation qualifier cfa_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -7.1280864255386405:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.9494182376074605:  root add ^ IfStatement condition MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.026244184933603:  root modified ^ StatementExpression expression MethodInvocation qualifier node_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.348056576214731:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member', 'root -> End']
copynode -6.285844868980348:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'start -> unknown']
copynode -4.7995482152327895:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.303923244588077:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.94439462403534:  root add ^ IfStatement condition MethodInvocation qualifier node_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -7.4040075449156575:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.9272429553675465:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -7.4181782297673635:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier cfa_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown']
copynode -5.981466390367132:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.087484425865114:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -7.382495419995394:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.76008515805006:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.99229349772213:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.394086665473878:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
before@8 batch0 x: -7.7204002207145095: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
after@8 batch0 x: -7.7204002207145095: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -4.192741549573839:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.082952684722841:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -4.192741549573839:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.294987581844907:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.745483957231045:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.7105876272544265:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'root -> End']
copynode -5.5578906601294875:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -5.294987581844907:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.691134587104898:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.192741549573839:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.000385873019695:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -5.691134587104898:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.192741549573839:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.226208514533937:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.745483957231045:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.627377927477937:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.192741549573839:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member UNCOND_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.741000949405134:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.192741549573839:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member cfa_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.387852496467531:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.5578906601294875:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -7.621372467838228:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'root -> End']
copynode -7.519844598136842:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.7204002207145095:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'root -> End']
copynode -5.5578906601294875:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MethodInvocation qualifier parent_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.843317343853414:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.57167898042826:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier cfa_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown', 'root -> End']
before@9 batch0 x: -7.876921101647895: root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier cfa_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown', 'root -> End']
after@9 batch0 x: -7.876921101647895: root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier cfa_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -5.152606292627752:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -4.938719845376909:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -5.8422826891765:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference']
copynode -6.396385811443906:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -6.64273127168417:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -6.774069554172456:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -7.083410933613777:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -6.878912590618711:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -7.023471034131944:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -4.938719845376909:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MethodInvocation']
copynode -7.1349383955821395:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -4.938719845376909:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -7.194452762778383:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -7.184226475656033:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference']
copynode -7.326947367750108:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member UNCOND_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -7.366542018018663:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member cfa_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -6.961083546455484:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -7.123057499702554:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -7.341126619838178:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference']
copynode -7.184059805236757:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.961083546455484:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -5.8422826891765:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
before@10 batch0 x: -7.9153081541880965: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
after@10 batch0 x: -7.9153081541880965: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -5.214685327373445:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.207224409095943:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference']
copynode -6.223613834939897:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.223613834939897:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.699894063349348:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> End']
copynode -6.919929437339306:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.207224409095943:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MethodInvocation']
copynode -5.214685327373445:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.049064404331148:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> MemberReference']
copynode -7.322765267454088:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.139735527336597:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference']
copynode -7.426899439655244:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.561353564437013:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.152774296875577:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -7.4533041482791305:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.665064728818834:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member cfa_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.627045757137239:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member UNCOND_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.207224409095943:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> End']
copynode -7.867725498043001:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.207224409095943:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> Literal']
copynode -7.366319513879716:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.577068082988262:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
before@11 batch0 x: -8.097951762378216: root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
after@11 batch0 x: -8.097951762378216: root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.585786710493267:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.342167637310922:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.9484372502192855:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -7.0293027982115746:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.349321967922151:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -7.48379460722208:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.460046685300767:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.725770122371614:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.892538524232805:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.1720236940309405:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.342167637310922:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.844659606926143:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> End', 'copy-member']
copynode -8.014295379631221:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -7.461834273301065:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.55108720716089:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member parent_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.342167637310922:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.799130863510072:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member cfa_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.837626553140581:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.342167637310922:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.61935015412746:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
before@12 batch0 x: -8.636197645391803: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
after@12 batch0 x: -8.636197645391803: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.629364519380033:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.764758161269128:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference']
copynode -7.03096394892782:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -5.629364519380033:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.764758161269128:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -7.450702561996877:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -5.764758161269128:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation']
copynode -5.764758161269128:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal']
copynode -5.629364519380033:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -8.020756418816745:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.542577639222145:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.441222570836544:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference']
copynode -5.629364519380033:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.629364519380033:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member cfa_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.929882786236703:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -7.74237874802202:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -7.656357727013528:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.909975687973201:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -8.636197645391803:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
before@13 batch0 x: -8.933175731624942: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
after@13 batch0 x: -8.933175731624942: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -6.556392363272607:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.4386953404173255:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference']
copynode -7.390342405997217:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member']
copynode -6.556392363272607:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.313968687318265:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -7.837547115050256:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -7.10879525449127:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference']
copynode -7.54541618283838:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference']
copynode -6.4386953404173255:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -6.4386953404173255:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation']
copynode -7.555148891173303:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.4386953404173255:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal']
copynode -8.386861166916788:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.00288203265518:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -8.20443394035101:  root modified ^ ReturnStatement expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.10879525449127:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> End']
copynode -8.50019536074251:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.277294187806547:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
before@14 batch0 x: -8.767561345361173: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
after@14 batch0 x: -8.767561345361173: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -7.248372226022184:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.515193781815469:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.617820790968835:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -7.82455828692764:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.888887613080442:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.105773872695863:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.117222934029996:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member']
copynode -8.378470568917692:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -6.988576910458505:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.50263252761215:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.721599667333066:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.845998305827379:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -8.767561345361173:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.447940151207149:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -8.202248840592802:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.988576910458505:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.845998305827379:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -8.310771516524255:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
before@15 batch0 x: -9.334689429961145: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
after@15 batch0 x: -9.334689429961145: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -7.767039171420038:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -8.186060181818902:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.861002686433494:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -8.438600323162973:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -8.768996848724782:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.145512233488262:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -8.789844889193773:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -7.320198706351221:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -8.53985123615712:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.320198706351221:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.320198706351221:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.9441822385415435:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.767039171420038:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -9.191242713481188:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -8.899530003778636:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -8.384818722028285:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -8.804267204366624:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
before@16 batch0 x: -9.353321707807481: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
after@16 batch0 x: -9.353321707807481: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -8.315081062726676:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -8.599727562628686:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.070558837614954:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> End']
copynode -8.877444099634886:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -8.814620981924236:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -9.16995697375387:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -9.02322821971029:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -9.281216751784086:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member']
copynode -9.073828029446304:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -9.33520785998553:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member']
copynode -9.340700019616634:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -8.070558837614954:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference']
copynode -9.27563118096441:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End']
copynode -9.2539447164163:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -9.251753500662744:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
before@17 batch0 x: -9.58060064073652: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
after@17 batch0 x: -9.58060064073652: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -8.65206656884402:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.639805945567787:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member']
copynode -8.668598285876215:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> End', 'copy-member']
copynode -8.932272370904684:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.160110662691295:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member']
copynode -9.33964566513896:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.321902222000062:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -9.330000183545053:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -9.408563899807632:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.367156016640365:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member']
copynode -9.428461175877601:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -9.458816236816347:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member unknown ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -9.448196581564844:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -9.502601048909128:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member']
copynode -9.58060064073652:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
before@18 batch0 x: -9.628839268349111: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
after@18 batch0 x: -9.628839268349111: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -8.70396192651242:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.708086668513715:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.220767705701292:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.361977036111057:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.373617774806917:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.436955663375556:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.469219990540296:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.491497016511858:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member unknown ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.559028047136962:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.628839268349111:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member fromNode_ter ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.52949774172157:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
before@19 batch0 x: -10.422357617877424: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
after@19 batch0 x: -10.422357617877424: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -10.422357617877424:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
before@20 batch0 x: -10.559558331035078: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
after@20 batch0 x: -10.559558331035078: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -10.559558331035078:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
before@21 batch0 x: -10.596957582049072: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
after@21 batch0 x: -10.596957582049072: root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -10.596957582049072:  root modified ^ StatementExpression expression MethodInvocation qualifier cfa_ter ^ ^ arguments MemberReference member fromNode_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference qualifier Branch_ter ^ ^ member UNCOND_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member createEdge_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
6 UNCOND_ter
method
7 
method
cfa_ter {'finallyNode_ter': 'Node', 'nextSibling_ter': 'Node'}
cfa_ter compiler
cfa_ter cfg
cfa_ter astPosition
cfa_ter nodePriorities
cfa_ter priorityComparator
cfa_ter astPositionCounter
cfa_ter priorityCounter
cfa_ter shouldTraverseFunctions
cfa_ter edgeAnnotations
cfa_ter root
cfa_ter exceptionHandler
cfa_ter finallyMap
7 
ControlFlowGraph None getCfg createEdge_ter
None None process createEdge_ter
None None prioritizeFromEntryNode createEdge_ter
boolean None shouldTraverse createEdge_ter
None None visit createEdge_ter
None None handleIf createEdge_ter
None None handleWhile createEdge_ter
None None handleDo createEdge_ter
None None handleFor createEdge_ter
None None handleSwitch createEdge_ter
None None handleCase createEdge_ter
None None handleDefault createEdge_ter
None None handleWith createEdge_ter
None None handleStmtList createEdge_ter
None None handleFunction createEdge_ter
None None handleExpr createEdge_ter
None None handleThrow createEdge_ter
None None handleTry createEdge_ter
None None handleCatch createEdge_ter
None None handleBreak createEdge_ter
None None handleContinue createEdge_ter
None None handleReturn createEdge_ter
None None handleStmt createEdge_ter
Node None computeFollowNode createEdge_ter
Node None computeFollowNode createEdge_ter
Node None computeFollowNode createEdge_ter
Node None computeFallThrough createEdge_ter
None None createEdge createEdge_ter
None None connectToPossibleExceptionHandler createEdge_ter
Node None getNextSiblingOfType createEdge_ter
boolean None isBreakTarget createEdge_ter
boolean None isContinueTarget createEdge_ter
boolean None matchLabel createEdge_ter
boolean None mayThrowException createEdge_ter
boolean None isBreakStructure createEdge_ter
boolean None isContinueStructure createEdge_ter
Node None getExceptionHandler createEdge_ter
Node None getCatchHandlerForBlock createEdge_ter
6 UNCOND_ter
6 UNCOND_ter
6 UNCOND_ter
6 UNCOND_ter
6 fromNode_ter
6 UNCOND_ter
6 fromNode_ter
6 fromNode_ter
6 UNCOND_ter
6 fromNode_ter
6 UNCOND_ter
6 UNCOND_ter
6 UNCOND_ter
6 UNCOND_ter
method
cfa_ter {'finallyNode_ter': 'Node', 'nextSibling_ter': 'Node'}
cfa_ter compiler
cfa_ter cfg
cfa_ter astPosition
cfa_ter nodePriorities
cfa_ter priorityComparator
cfa_ter astPositionCounter
cfa_ter priorityCounter
cfa_ter shouldTraverseFunctions
cfa_ter edgeAnnotations
cfa_ter root
cfa_ter exceptionHandler
cfa_ter finallyMap
7 
6 UNCOND_ter
method
7 
method
7 
method
cfa_ter {'finallyNode_ter': 'Node', 'nextSibling_ter': 'Node'}
cfa_ter compiler
cfa_ter cfg
cfa_ter astPosition
cfa_ter nodePriorities
cfa_ter priorityComparator
cfa_ter astPositionCounter
cfa_ter priorityCounter
cfa_ter shouldTraverseFunctions
cfa_ter edgeAnnotations
cfa_ter root
cfa_ter exceptionHandler
cfa_ter finallyMap
7 
6 fromNode_ter
6 UNCOND_ter
6 fromNode_ter
6 UNCOND_ter
6 fromNode_ter
6 UNCOND_ter
6 UNCOND_ter
method
cfa_ter {'finallyNode_ter': 'Node', 'nextSibling_ter': 'Node'}
cfa_ter compiler
cfa_ter cfg
cfa_ter astPosition
cfa_ter nodePriorities
cfa_ter priorityComparator
cfa_ter astPositionCounter
cfa_ter priorityCounter
cfa_ter shouldTraverseFunctions
cfa_ter edgeAnnotations
cfa_ter root
cfa_ter exceptionHandler
cfa_ter finallyMap
7 
ControlFlowGraph  getCfg 
None  process 
None  prioritizeFromEntryNode 
boolean  shouldTraverse 
None  visit 
None  handleIf 
None  handleWhile 
None  handleDo 
None  handleFor 
None  handleSwitch 
None  handleCase 
None  handleDefault 
None  handleWith 
None  handleStmtList 
None  handleFunction 
None  handleExpr 
None  handleThrow 
None  handleTry 
None  handleCatch 
None  handleBreak 
None  handleContinue 
None  handleReturn 
None  handleStmt 
Node  computeFollowNode 
Node  computeFollowNode 
Node  computeFollowNode 
Node  computeFallThrough 
None  createEdge 
None  connectToPossibleExceptionHandler 
Node  getNextSiblingOfType 
boolean  isBreakTarget 
boolean  isContinueTarget 
boolean  matchLabel 
boolean  mayThrowException 
boolean  isBreakStructure 
boolean  isContinueStructure 
Node  getExceptionHandler 
Node  getCatchHandlerForBlock 
method
node_ter {'finallyNode_ter': 'Node', 'nextSibling_ter': 'Node'}
node_ter compiler
node_ter cfg
node_ter astPosition
node_ter nodePriorities
node_ter priorityComparator
node_ter astPositionCounter
node_ter priorityCounter
node_ter shouldTraverseFunctions
node_ter edgeAnnotations
node_ter root
node_ter exceptionHandler
node_ter finallyMap
7 
stderr: Check out program version: Closure-14b..................................... OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:14<00:00, 14.29s/it]100%|██████████| 1/1 [00:14<00:00, 14.29s/it]
