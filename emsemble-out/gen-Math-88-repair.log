stdout: StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getNumVariables_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getNumVariables()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getNumObjectiveFunctions()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getWidth_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getWidth()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getHeight_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getHeight()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getSlackVariableOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getSlackVariableOffset()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getArtificialVariableOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getArtificialVariableOffset()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getRhsOffset()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getNumDecisionVariables_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getNumDecisionVariables()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getOriginalNumDecisionVariables_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getOriginalNumDecisionVariables()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getNumSlackVariables_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getNumSlackVariables()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getNumArtificialVariables_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getNumArtificialVariables()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member hashCode_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, hashCode()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value MemberReference member basicRow_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = basicRow;

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = getEntry(basicRow, getRhsOffset());

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (basicRow == null);

BreakStatement_ter ^ 
break;

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getName_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getName()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getRhsOffset()) - (restrictToNonNegative[i])?0:mostNegative);

StatementExpression expression MethodInvocation member initialize_ter ^ ^ ^ ^ ^ 
initialize();

StatementExpression expression MethodInvocation member discardArtificialVariables_ter ^ ^ ^ ^ ^ 
discardArtificialVariables();


StatementExpression expression MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ 
getEntry(basicRow, getRhsOffset());

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = restrictToNonNegative;

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member mostNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getRhsOffset()) - (mostNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value MemberReference member coefficients_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = coefficients;

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = ((basicRow == null) + (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = ((((basicRow == null))?0:getEntry(basicRow, getRhsOffset()) - (restrictToNonNegative)?0:mostNegative) + (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member basicRow_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getRhsOffset()) - (basicRow)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getRhsOffset()) + (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference member basicRow_ter ^ ^ ^ ^ value MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ operandr MemberReference member i_ter ^ ^ ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
basicRow = getBasicRow((getNumObjectiveFunctions() + i));

ReturnStatement expression ClassCreator type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ arguments MemberReference member coefficients_ter ^ ^ ^ MethodInvocation qualifier f_ter ^ ^ arguments MemberReference member coefficients_ter ^ ^ ^ ^ member getValue_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
if (true) { return new RealPointValuePair(coefficients, f.getValue(coefficients)); }

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = ((basicRow == null) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value Literal value 0_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = 0;

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow >= null))?0:getEntry(basicRow, getRhsOffset()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow <= null))?0:getEntry(basicRow, getRhsOffset()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator -_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow - null))?0:getEntry(basicRow, getRhsOffset()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member i_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getRhsOffset()) - (i)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value Literal value 0_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = 0;

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = ((((basicRow == null))?0:getEntry(basicRow, getRhsOffset()) - (restrictToNonNegative)?0:mostNegative) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member i_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(i, getRhsOffset()) - (restrictToNonNegative)?0:mostNegative);

ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ 
if (true) { return null; }

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member restrictToNonNegative_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
restrictToNonNegative[i] = (((basicRow == null))?0:getEntry(basicRow, getRhsOffset()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference qualifier restrictToNonNegative_ter ^ ^ member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getRhsOffset()) - (restrictToNonNegative.restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member mostNegative_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(mostNegative, getRhsOffset()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member coefficients_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getRhsOffset()) - (coefficients)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator <=_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getRhsOffset()) <= (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getSolution_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getSolution(basicRow, getRhsOffset()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member restrictToNonNegative_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(restrictToNonNegative, getRhsOffset()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
restrictToNonNegative = (((basicRow == null))?0:getEntry(basicRow, getRhsOffset()) - (restrictToNonNegative)?0:mostNegative);

control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name i_ter ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member i_ter ^ ^ ^ ^ operandr MemberReference qualifier coefficients_ter ^ ^ member length_ter ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member i_ter ^ ^ ^ ^ ^ ^ 
for(int i = 0;(i < coefficients.length);i++) {

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member restrictToNonNegative_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(restrictToNonNegative[i], getRhsOffset()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member basicRow_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getRhsOffset()) - (basicRow[i])?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference member basicRow_ter ^ ^ ^ ^ value MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ operandr MemberReference member i_ter ^ ^ ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
basicRow = getBasicRow((getNumObjectiveFunctions() + i));

StatementExpression expression Assignment expressionl MemberReference member basicRow_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member mostNegative_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
basicRow = (((basicRow == null))?0:getEntry(basicRow, getRhsOffset()) - (restrictToNonNegative)?0:mostNegative);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member basicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getRhsOffset()) - (restrictToNonNegative)?0:basicRow);

StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member i_ter ^ ^ ^ ^ ^ ^ member coefficients_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member basicRow_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member basicRow_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member i_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
coefficients[i] = (((basicRow == null))?0:getEntry(basicRow, getRhsOffset()) - (restrictToNonNegative)?0:i);

stderr: 