stdout: IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ ^ 
if(((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined())){

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
if((!maybeModifiedArguments && !staleVars.contains(v))){

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ ^ 
if(((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isAssignedOnceInLifetime())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined()) && referenceInfo.getNode())){
IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ ^ 
if(((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime()) && referenceInfo.isAssignedOnceInLifetime())){

IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ 
if(!staleVars.contains(v)){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member getInitializingReference_ter ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined()) && referenceInfo.getInitializingReference())){
condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.getNode()) && referenceInfo.isAssignedOnceInLifetime())){
IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ ^ 
if((!maybeModifiedArguments && referenceInfo.isAssignedOnceInLifetime())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined()) && referenceInfo.getName())){
condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime())){
condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ 
if((((maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime())){
IfStatement condition MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ 
if(referenceInfo.isAssignedOnceInLifetime()){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member getInitializingReference_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.getInitializingReference()) && referenceInfo.isAssignedOnceInLifetime())){
IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isAssignedOnceInLifetime()) && referenceInfo.isAssignedOnceInLifetime())){

IfStatement condition MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ 
if(referenceInfo.isWellDefined()){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isAssignedOnceInLifetime()) && referenceInfo.isAssignedOnceInLifetime())){
condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member maybeModifiedArguments_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(maybeModifiedArguments)) && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime())){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined()) || referenceInfo.isAssignedOnceInLifetime())){
condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member v_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ 
if((((v && !staleVars.contains(v)) && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime())){
IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
if(((!maybeModifiedArguments && !staleVars.contains(v)) && !staleVars.contains(v))){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member size_ter ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined()) && referenceInfo.size())){
IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && !staleVars.contains(v)) && referenceInfo.isAssignedOnceInLifetime())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined()) && referenceInfo.isWellDefined())){
IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ ^ 
if((!maybeModifiedArguments && referenceInfo.isWellDefined())){

IfStatement condition MemberReference member maybeModifiedArguments_ter ^ ^ ^ ^ ^ 
if(maybeModifiedArguments){

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ ^ 
if(((!maybeModifiedArguments && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime())){

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ ^ 
if((((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime()) && referenceInfo.isAssignedOnceInLifetime()) && referenceInfo.isAssignedOnceInLifetime())){

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined()) && referenceInfo.isWellDefined())){

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ ^ 
if(((!maybeModifiedArguments && referenceInfo.isAssignedOnceInLifetime()) && referenceInfo.isAssignedOnceInLifetime())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.getName()) && referenceInfo.isAssignedOnceInLifetime())){
condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member size_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.size()) && referenceInfo.isAssignedOnceInLifetime())){
condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier candidate.refInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined()) && candidate.refInfo.isAssignedOnceInLifetime())){
IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ ^ 
if(((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime()) && referenceInfo.isWellDefined())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier staleVars_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined()) && staleVars.isAssignedOnceInLifetime())){
IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference qualifier candidate_ter ^ ^ member alias_ter ^ ^ ^ ^ member isVarInlineForbidden_ter ^ ^ ^ ^ ^ ^ ^ 
if(((!maybeModifiedArguments && !staleVars.contains(v)) && !isVarInlineForbidden(candidate.alias))){

IfStatement condition MethodInvocation qualifier aliasCandidates_ter ^ ^ arguments MemberReference member nameNode_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
if(aliasCandidates.containsKey(nameNode)){

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference qualifier candidate_ter ^ ^ member alias_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference qualifier candidate_ter ^ ^ member alias_ter ^ ^ ^ ^ member isVarInlineForbidden_ter ^ ^ ^ ^ ^ ^ ^ 
if((!staleVars.contains(candidate.alias) && !isVarInlineForbidden(candidate.alias))){

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ ^ 
if((maybeModifiedArguments && referenceInfo.isAssignedOnceInLifetime())){

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference qualifier candidate_ter ^ ^ member alias_ter ^ ^ ^ ^ member isVarInlineForbidden_ter ^ ^ ^ ^ ^ ^ ^ 
if(((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime()) && !isVarInlineForbidden(candidate.alias))){

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && !staleVars.contains(v)) && referenceInfo.isWellDefined())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.getNode(v)) && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime())){
IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ ^ 
if((((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime()) && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime())){

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined()) && !staleVars.contains(v))){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member nameNode_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(nameNode)) && referenceInfo.isWellDefined()) && referenceInfo.isAssignedOnceInLifetime())){
IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference qualifier candidate_ter ^ ^ member alias_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ ^ 
if((!staleVars.contains(candidate.alias) && referenceInfo.isAssignedOnceInLifetime())){

IfStatement condition MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ ^ 
if(!maybeModifiedArguments){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member maybeModifiedArguments_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier staleVars_ter ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier referenceInfo_ter ^ ^ member isWellDefined_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier aliasCandidates_ter ^ ^ member isAssignedOnceInLifetime_ter ^ ^ ^ ^ ^ ^ 
if((((!maybeModifiedArguments && !staleVars.contains(v)) && referenceInfo.isWellDefined()) && aliasCandidates.isAssignedOnceInLifetime())){
stderr: 