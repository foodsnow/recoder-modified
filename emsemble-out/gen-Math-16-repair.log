stdout: condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ 
if((x > 0)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ 
if((x > 1)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ 
if((x > 2)){
condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x >= 20)){
condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x <= 20)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x > 20)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 0.5_ter ^ ^ ^ ^ ^ ^ 
if((x > 0.5)){
condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x == 20)){
condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x < 20)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value false_ter ^ ^ ^ ^ ^ ^ 
if((x > false)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ 
if((x > -1)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ 
if((x > null)){
condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x != 20)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value true_ter ^ ^ ^ ^ ^ ^ 
if((x > true)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ 
if((x > "null")){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 20_ter ^ ^ ^ ^ ^ ^ 
if((x > -20)){
IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ ^ 
if((x > 20)){

IfStatement condition MemberReference member x_ter ^ ^ ^ ^ ^ 
if(x){



condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 2_ter ^ ^ ^ ^ ^ ^ 
if((x > -2)){
condition BinaryOperation operator >>>_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x >>> 20)){
IfStatement condition BinaryOperation operator *_ter ^ ^ operandl Literal value 0.5_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference prefix_operators -_ter ^ ^ member x_ter ^ ^ ^ ^ member exp_ter ^ ^ ^ ^ ^ ^ ^ 
if((0.5 * exp(-x))){

condition BinaryOperation operator -_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x - 20)){
condition BinaryOperation operator >>_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x >> 20)){
IfStatement condition MethodInvocation arguments MemberReference member x_ter ^ ^ ^ ^ member exp_ter ^ ^ ^ ^ ^ 
if(exp(x)){

condition BinaryOperation operator &_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x & 20)){
IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member x_ter ^ ^ ^ ^ ^ ^ ^ 
if((x < x)){

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member x_ter ^ ^ ^ ^ ^ ^ ^ 
if((x != x)){

IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 20_ter ^ ^ ^ ^ ^ ^ ^ 
if((x < -20)){

condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ 
if((x > 0)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ 
if((x > 1)){
condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x >= 20)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ 
if((x > 2)){
condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x <= 20)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x > 20)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 0.5_ter ^ ^ ^ ^ ^ ^ 
if((x > 0.5)){
condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x == 20)){
condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x < 20)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value false_ter ^ ^ ^ ^ ^ ^ 
if((x > false)){
condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x != 20)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ 
if((x > -1)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ 
if((x > null)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value true_ter ^ ^ ^ ^ ^ ^ 
if((x > true)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ 
if((x > "null")){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 20_ter ^ ^ ^ ^ ^ ^ 
if((x > -20)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ ^ ^ 
if((x > -0.5)){
IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ ^ 
if((x > 20)){

IfStatement condition MemberReference member x_ter ^ ^ ^ ^ ^ 
if(x){



condition BinaryOperation operator >>>_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x >>> 20)){
condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 2_ter ^ ^ ^ ^ ^ ^ 
if((x > -2)){
condition BinaryOperation operator -_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x - 20)){
IfStatement condition BinaryOperation operator *_ter ^ ^ operandl Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference prefix_operators -_ter ^ ^ member x_ter ^ ^ ^ ^ member exp_ter ^ ^ ^ ^ ^ ^ ^ 
if((-0.5 * exp(-x))){

IfStatement condition BinaryOperation operator *_ter ^ ^ operandl Literal value 0.5_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member x_ter ^ ^ ^ ^ member exp_ter ^ ^ ^ ^ ^ ^ ^ 
if((0.5 * exp(x))){

condition BinaryOperation operator >>_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x >> 20)){
condition BinaryOperation operator &_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal value 20_ter ^ ^ ^ ^ ^ ^ 
if((x & 20)){
IfStatement condition MethodInvocation arguments MemberReference member x_ter ^ ^ ^ ^ member exp_ter ^ ^ ^ ^ ^ 
if(exp(x)){

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member x_ter ^ ^ ^ ^ ^ ^ ^ 
if((x != x)){

IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 20_ter ^ ^ ^ ^ ^ ^ ^ 
if((x < -20)){

stderr: 