stdout: else_statement -> BlockStatement
using GPU
p
path org.apache.commons.lang.time.StopWatch
stop
Position(line=114, column=12)
FOUND IT!
[{'bugid': 'Lang-55', 'treeroot': <Searchnode.Node object at 0x7f2575ede150>, 'troot': <Searchnode.Node object at 0x7f2575ede150>, 'oldcode': '            stopTime = System.currentTimeMillis();', 'filepath': 'buggy/Lang-55/src/java/org/apache/commons/lang/time/StopWatch.java', 'subroot': <Searchnode.Node object at 0x7f2575ee6910>, 'vardic': {'stop_ter': 'meth0'}, 'typedic': {}, 'idss': 'Lang-55', 'classname': 'org.apache.commons.lang.time.StopWatch', 'precode': '/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the "License"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.lang.time;\n\n/**\n * <p><code>StopWatch</code> provides a convenient API for timings.</p>\n * \n * <p>To start the watch, call {@link #start()}. At this point you can:</p>\n * <ul>\n *  <li>{@link #split()} the watch to get the time whilst the watch continues in the\n *   background. {@link #unsplit()} will remove the effect of the split. At this point,\n *   these three options are available again.</li>\n *  <li>{@link #suspend()} the watch to pause it. {@link #resume()} allows the watch\n *   to continue. Any time between the suspend and resume will not be counted in\n *   the total. At this point, these three options are available again.</li>\n *  <li>{@link #stop()} the watch to complete the timing session.</li>\n * </ul>\n *\n * <p>It is intended that the output methods {@link #toString()} and {@link #getTime()}\n * should only be called after stop, split or suspend, however a suitable result will\n * be returned at other points.</p>\n *\n * <p>NOTE: As from v2.1, the methods protect against inappropriate calls.\n * Thus you cannot now call stop before start, resume before suspend or\n * unsplit before split.</p>\n *\n * <p>1. split(), suspend(), or stop() cannot be invoked twice<br />\n * 2. unsplit() may only be called if the watch has been split()<br />\n * 3. resume() may only be called if the watch has been suspend()<br />\n * 4. start() cannot be called twice without calling reset()</p>\n *\n * @author Stephen Colebourne\n * @since 2.0\n * @version $Id$\n */\npublic class StopWatch {\n\n    // running states\n    private static final int STATE_UNSTARTED = 0;\n    private static final int STATE_RUNNING   = 1;\n    private static final int STATE_STOPPED   = 2;\n    private static final int STATE_SUSPENDED = 3;\n\n    // split state\n    private static final int STATE_UNSPLIT = 10;\n    private static final int STATE_SPLIT   = 11;\n\n    /**\n     *  The current running state of the StopWatch. \n     */\n    private int runningState = STATE_UNSTARTED;\n\n    /**\n     * Whether the stopwatch has a split time recorded. \n     */\n    private int splitState   = STATE_UNSPLIT;\n\n    /**\n     * The start time.\n     */\n    private long startTime = -1;\n    /**\n     * The stop time.\n     */\n    private long stopTime = -1;\n\n    /**\n     * <p>Constructor.</p>\n     */\n    public StopWatch() {\n        super();\n    }\n\n    /**\n     * <p>Start the stopwatch.</p>\n     * \n     * <p>This method starts a new timing session, clearing any previous values.</p>\n     *\n     * @throws IllegalStateException if the StopWatch is already running.\n     */\n    public void start() {\n        if(this.runningState == STATE_STOPPED) {\n            throw new IllegalStateException("Stopwatch must be reset before being restarted. ");\n        }\n        if(this.runningState != STATE_UNSTARTED) {\n            throw new IllegalStateException("Stopwatch already started. ");\n        }\n        stopTime = -1;\n        startTime = System.currentTimeMillis();\n        this.runningState = STATE_RUNNING;\n    }\n\n    /**\n     * <p>Stop the stopwatch.</p>\n     * \n     * <p>This method ends a new timing session, allowing the time to be retrieved.</p>\n     *\n     * @throws IllegalStateException if the StopWatch is not running.\n     */\n    public void stop() {\n        if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {\n            throw new IllegalStateException("Stopwatch is not running. ");\n        }', 'aftercode': '        this.runningState = STATE_STOPPED;\n    }\n\n    /**\n     * <p>Resets the stopwatch. Stops it if need be. </p>\n     * \n     * <p>This method clears the internal values to allow the object to be reused.</p>\n     */\n    public void reset() {\n        this.runningState = STATE_UNSTARTED;\n        this.splitState   = STATE_UNSPLIT;\n        startTime = -1;\n        stopTime = -1;\n    }\n\n    /**\n     * <p>Split the time.</p>\n     * \n     * <p>This method sets the stop time of the watch to allow a time to be extracted.\n     * The start time is unaffected, enabling {@link #unsplit()} to continue the \n     * timing from the original start point.</p>\n     *\n     * @throws IllegalStateException if the StopWatch is not running.\n     */\n    public void split() {\n        if(this.runningState != STATE_RUNNING) {\n            throw new IllegalStateException("Stopwatch is not running. ");\n        }\n        stopTime = System.currentTimeMillis();\n        this.splitState = STATE_SPLIT;\n    }\n\n    /**\n     * <p>Remove a split.</p>\n     * \n     * <p>This method clears the stop time. The start time is unaffected, enabling \n     * timing from the original start point to continue.</p>\n     *\n     * @throws IllegalStateException if the StopWatch has not been split.\n     */\n    public void unsplit() {\n        if(this.splitState != STATE_SPLIT) {\n            throw new IllegalStateException("Stopwatch has not been split. ");\n        }\n        stopTime = -1;\n        this.splitState = STATE_UNSPLIT;\n    }\n\n    /**\n     * <p>Suspend the stopwatch for later resumption.</p>\n     * \n     * <p>This method suspends the watch until it is resumed. The watch will not include\n     * time between the suspend and resume calls in the total time.</p>\n     *\n     * @throws IllegalStateException if the StopWatch is not currently running.\n     */\n    public void suspend() {\n        if(this.runningState != STATE_RUNNING) {\n            throw new IllegalStateException("Stopwatch must be running to suspend. ");\n        }\n        stopTime = System.currentTimeMillis();\n        this.runningState = STATE_SUSPENDED;\n    }\n\n    /**\n     * <p>Resume the stopwatch after a suspend.</p>\n     * \n     * <p>This method resumes the watch after it was suspended. The watch will not include\n     * time between the suspend and resume calls in the total time.</p>\n     *\n     * @throws IllegalStateException if the StopWatch has not been suspended. \n     */\n    public void resume() {\n        if(this.runningState != STATE_SUSPENDED) {\n            throw new IllegalStateException("Stopwatch must be suspended to resume. ");\n        }\n        startTime += (System.currentTimeMillis() - stopTime);\n        stopTime = -1;\n        this.runningState = STATE_RUNNING;\n    }\n\n    /**\n     * <p>Get the time on the stopwatch.</p>\n     * \n     * <p>This is either the time between the start and the moment this method \n     * is called, or the amount of time between start and stop.</p>\n     * \n     * @return the time in milliseconds\n     */\n    public long getTime() {\n        if(this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED) {\n            return this.stopTime - this.startTime;\n        } else\n        if(this.runningState == STATE_UNSTARTED) {\n            return 0;\n        } else\n        if(this.runningState == STATE_RUNNING) {\n            return System.currentTimeMillis() - this.startTime;\n        }\n        throw new RuntimeException("Illegal running state has occured. ");\n    }\n\n    /**\n     * <p>Get the split time on the stopwatch.</p>\n     * \n     * <p>This is the time between start and latest split. </p>\n     * \n     * @return the split time in milliseconds\n     *\n     * @throws IllegalStateException if the StopWatch has not yet been split.\n     * @since 2.1\n     */\n    public long getSplitTime() {\n        if(this.splitState != STATE_SPLIT) {\n            throw new IllegalStateException("Stopwatch must be split to get the split time. ");\n        }\n        return this.stopTime - this.startTime;\n    }\n\n    /**\n     * <p>Gets a summary of the time that the stopwatch recorded as a string.</p>\n     * \n     * <p>The format used is ISO8601-like,\n     * <i>hours</i>:<i>minutes</i>:<i>seconds</i>.<i>milliseconds</i>.</p>\n     * \n     * @return the time as a String\n     */\n    public String toString() {\n        return DurationFormatUtils.formatDurationHMS(getTime());\n    }\n\n    /**\n     * <p>Gets a summary of the split time that the stopwatch recorded as a string.</p>\n     * \n     * <p>The format used is ISO8601-like,\n     * <i>hours</i>:<i>minutes</i>:<i>seconds</i>.<i>milliseconds</i>.</p>\n     * \n     * @return the split time as a String\n     * @since 2.1\n     */\n    public String toSplitString() {\n        return DurationFormatUtils.formatDurationHMS(getSplitTime());\n    }\n\n}', 'tree': 'MethodDeclaration modifiers public_ter ^ ^ name meth0 ^ ^ body IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member STATE_RUNNING_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member STATE_SUSPENDED_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalStateException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ member currentTimeMillis_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ value MemberReference member STATE_STOPPED_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], 'mode': 0, 'line': 118, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root qualifier-qualifier System_ter ^ ^  ^ ^ ; ['copy-qualifier']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root member-member currentTimeMillis_ter ^ ^  ^ ^ ; ['copy-member']
before@1 batch0 x: -13.172524452209473: root member-member currentTimeMillis_ter ^ ^  ^ ^  ; ['copy-member']
after@1 batch0 x: -13.172524452209473: root member-member currentTimeMillis_ter ^ ^  ^ ^  ; ['copy-member']
copynode -0.21112723648548126:  root modified ^ qualifier-qualifier System_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -0.21112723648548126:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -1.6616333723068237:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.21112723648548126:  root modified ^ member-member currentTimeMillis_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -1.6616333723068237:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -1.6616333723068237:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -0.21112723648548126:  root modified ^ MemberReference-MemberReference member stopTime_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.21112723648548126:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -0.21112723648548126:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -1.6616333723068237:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -1.6616333723068237:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -1.6616333723068237:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -1.6616333723068237:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -1.6616333723068237:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -0.21112723648548126:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter']
copynode -0.21112723648548126:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -9.199728965759277:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -1.6616333723068237:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter']
copynode -1.6616333723068237:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -9.606715202331543:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -9.938429832458496:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -10.297320365905762:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -10.439013481140137:  root qualifier-qualifier System_ter ^ ^  unknown ^ ^ ^ ; ['copy-qualifier', 'start -> unknown']
copynode -0.21112723648548126:  root modified ^ LocalVariableDeclaration ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration']
copynode -10.766121864318848:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -0.21112723648548126:  root modified ^ BreakStatement_ter ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter']
copynode -9.606715202331543:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -10.766121864318848:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -13.172524452209473:  root member-member currentTimeMillis_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -10.297320365905762:  root StatementExpression expression Assignment expressionl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ value MemberReference member STATE_STOPPED_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -13.172524452209473:  root member-member currentTimeMillis_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -10.766121864318848:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -10.439013481140137:  root qualifier-qualifier System_ter ^ ^  System_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -13.172524452209473:  root member-member currentTimeMillis_ter ^ ^  add_ter ^ ^ ^ ; ['copy-member', 'member -> add_ter']
copynode -10.439013481140137:  root qualifier-qualifier System_ter ^ ^  LOG_ter ^ ^ ^ ; ['copy-qualifier', 'qualifier -> LOG_ter']
copynode -10.439013481140137:  root qualifier-qualifier System_ter ^ ^  par0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par0']
copynode -10.766121864318848:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -13.172524452209473:  root member-member currentTimeMillis_ter ^ ^  get_ter ^ ^ ^ ; ['copy-member', 'member -> get_ter']
copynode -10.439013481140137:  root qualifier-qualifier System_ter ^ ^  loc0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> loc0']
copynode -13.172524452209473:  root member-member currentTimeMillis_ter ^ ^  toString_ter ^ ^ ^ ; ['copy-member', 'member -> toString_ter']
copynode -13.172524452209473:  root member-member currentTimeMillis_ter ^ ^  currentTimeMillis_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -13.172524452209473:  root member-member currentTimeMillis_ter ^ ^  debug_ter ^ ^ ^ ; ['copy-member', 'member -> debug_ter']
copynode -13.172524452209473:  root member-member currentTimeMillis_ter ^ ^  getName_ter ^ ^ ^ ; ['copy-member', 'member -> getName_ter']
copynode -10.439013481140137:  root qualifier-qualifier System_ter ^ ^  Math_ter ^ ^ ^ ; ['copy-qualifier', 'qualifier -> Math_ter']
copynode -13.172524452209473:  root member-member currentTimeMillis_ter ^ ^  size_ter ^ ^ ^ ; ['copy-member', 'member -> size_ter']
copynode -10.297320365905762:  root StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ member currentTimeMillis_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -13.172524452209473:  root member-member currentTimeMillis_ter ^ ^  put_ter ^ ^ ^ ; ['copy-member', 'member -> put_ter']
copynode -10.439013481140137:  root qualifier-qualifier System_ter ^ ^  Double_ter ^ ^ ^ ; ['copy-qualifier', 'qualifier -> Double_ter']
copynode -9.938429832458496:  root IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member STATE_RUNNING_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member STATE_SUSPENDED_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalStateException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.439013481140137:  root qualifier-qualifier System_ter ^ ^  loc1 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> loc1']
copynode -10.439013481140137:  root qualifier-qualifier System_ter ^ ^  par1 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par1']
copynode -10.439013481140137:  root qualifier-qualifier System_ter ^ ^  par2 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par2']
copynode -10.766121864318848:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -9.606715202331543:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -9.938429832458496:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -9.938429832458496:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -9.199728965759277:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -10.297320365905762:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -9.938429832458496:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -10.766121864318848:  root parameters unknown ^ ^ ^ ; ['root -> parameters', 'start -> unknown']
copynode -10.297320365905762:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
before@2 batch0 x: -31.72697162628174: root StatementExpression label ^ expression ^ ^ ^  ; ['root -> StatementExpression', 'StatementExpression -> label expression']
after@2 batch0 x: -31.72697162628174: root StatementExpression label ^ expression ^ ^ ^  ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -0.6467544585466385:  root modified ^ qualifier-qualifier System_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -1.6511978656053543:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -2.3055314421653748:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -2.533907890319824:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.4694566279649734:  root modified ^ member-member currentTimeMillis_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -2.4694566279649734:  root modified ^ member-member currentTimeMillis_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -4.770543217658997:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -5.212452843785286:  root modified ^ MemberReference-MemberReference member stopTime_ter ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -5.913725331425667:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.3055314421653748:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ value MemberReference member STATE_STOPPED_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -0.6467544585466385:  root modified ^ qualifier-qualifier System_ter ^ ^  System_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -7.372616648674011:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -7.664681315422058:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -0.6467544585466385:  root modified ^ qualifier-qualifier System_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0']
copynode -0.6467544585466385:  root modified ^ qualifier-qualifier System_ter ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0']
copynode -0.6467544585466385:  root modified ^ qualifier-qualifier System_ter ^ ^  LOG_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> LOG_ter']
copynode -2.4694566279649734:  root modified ^ member-member currentTimeMillis_ter ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> add_ter']
copynode -2.4694566279649734:  root modified ^ member-member currentTimeMillis_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter']
copynode -1.6511978656053543:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ value MemberReference member STATE_STOPPED_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.212452843785286:  root modified ^ MemberReference-MemberReference member stopTime_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -8.174851298332214:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -8.648774027824402:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -2.4694566279649734:  root modified ^ member-member currentTimeMillis_ter ^ ^  e_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> e_ter']
copynode -8.708372950553894:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -2.4694566279649734:  root modified ^ member-member currentTimeMillis_ter ^ ^  runningState_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -0.6467544585466385:  root modified ^ qualifier-qualifier System_ter ^ ^  Math_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> Math_ter']
copynode -2.4694566279649734:  root modified ^ member-member currentTimeMillis_ter ^ ^  runningState_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -8.875002816319466:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter', 'root -> End']
copynode -2.4694566279649734:  root modified ^ member-member currentTimeMillis_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter']
copynode -8.993145897984505:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -4.770543217658997:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -2.4694566279649734:  root modified ^ member-member currentTimeMillis_ter ^ ^  currentTimeMillis_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -9.265088438987732:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> End']
copynode -9.325615763664246:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -2.4694566279649734:  root modified ^ member-member currentTimeMillis_ter ^ ^  STATE_RUNNING_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -9.203737354371697:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -4.770543217658997:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -9.898889809846878:  root return_type ReferenceType name IllegalStateException_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -9.938860270602163:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -0.6467544585466385:  root modified ^ qualifier-qualifier System_ter ^ ^  Double_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> Double_ter']
copynode -0.6467544585466385:  root modified ^ qualifier-qualifier System_ter ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc1']
copynode -10.445131741464138:  root qualifier-qualifier System_ter ^ ^  unknown ^ ^ ^ ; ['copy-qualifier', 'start -> unknown', 'root -> End']
copynode -10.69932647049427:  root modified ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -10.305438239127398:  root StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -7.372616648674011:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -9.203737354371697:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -0.6467544585466385:  root modified ^ qualifier-qualifier System_ter ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1']
copynode -5.212452843785286:  root modified ^ MemberReference-MemberReference member stopTime_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -4.770543217658997:  root add ^ ReturnStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement_ter']
copynode -11.291336968541145:  root modified ^ BreakStatement_ter ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> End']
copynode -9.938860270602163:  root IfStatement condition This ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -2.3055314421653748:  root add ^ StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ member currentTimeMillis_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -11.597590684890747:  root return_type BasicType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'BasicType -> name']
copynode -10.305438239127398:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -8.174851298332214:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -11.011080652475357:  root parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -0.6467544585466385:  root modified ^ qualifier-qualifier System_ter ^ ^  par3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par3']
copynode -5.212452843785286:  root modified ^ MemberReference-MemberReference member stopTime_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -9.898889809846878:  root return_type ReferenceType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name']
copynode -9.938860270602163:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -9.898889809846878:  root return_type ReferenceType name ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -10.445131741464138:  root qualifier-qualifier System_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['copy-qualifier', 'start -> unknown', 'root -> StatementExpression']
copynode -9.203737354371697:  root ReturnStatement expression This_ter ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This_ter']
copynode -1.6511978656053543:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ member currentTimeMillis_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -11.011080652475357:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -5.212452843785286:  root modified ^ MemberReference-MemberReference member stopTime_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -9.938860270602163:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -10.305438239127398:  root StatementExpression expression This ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -9.203737354371697:  root ReturnStatement expression ArrayCreator ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator']
copynode -4.770543217658997:  root add ^ ReturnStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> BreakStatement_ter']
copynode -9.203737354371697:  root ReturnStatement expression ClassCreator type ReferenceType name IllegalStateException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -11.011080652475357:  root parameters FormalParameter annotations ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> annotations type name']
copynode -9.203737354371697:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -8.708372950553894:  root add ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -12.373503684997559:  root parameters ^ StatementExpression ^ ^ ; ['root -> parameters', 'parameters -> End', 'root -> StatementExpression']
copynode -2.533907890319824:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member STATE_RUNNING_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member STATE_SUSPENDED_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalStateException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -4.770543217658997:  root add ^ ReturnStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement']
copynode -9.203737354371697:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -4.770543217658997:  root add ^ ReturnStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ContinueStatement_ter']
copynode -12.373503684997559:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End', 'root -> End']
copynode -7.372616648674011:  root add ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -9.938860270602163:  root IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member STATE_RUNNING_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member STATE_SUSPENDED_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -13.312438547611237:  root member-member currentTimeMillis_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['copy-member', 'start -> unknown', 'root -> StatementExpression']
copynode -8.708372950553894:  root add ^ BreakStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> IfStatement']
copynode -9.265088438987732:  root add ^ ContinueStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> StatementExpression']
copynode -9.203737354371697:  root ReturnStatement expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ member currentTimeMillis_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -8.174851298332214:  root add ^ control ForControl_ter ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl_ter']
copynode -10.69932647049427:  root modified ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -9.898889809846878:  root return_type ReferenceType name ^ dimensions ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name dimensions']
copynode -9.203737354371697:  root ReturnStatement expression ClassCreator ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator']
copynode -4.770543217658997:  root add ^ ReturnStatement_ter ^ qualifier-qualifier System_ter ^ ^  ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'copy-qualifier']
copynode -9.265088438987732:  root add ^ ContinueStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> IfStatement']
copynode -13.312438547611237:  root member-member currentTimeMillis_ter ^ ^  unknown ^ ^ qualifier-qualifier System_ter ^ ^  ^ ^ ; ['copy-member', 'start -> unknown', 'copy-qualifier']
copynode -10.305438239127398:  root StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -4.770543217658997:  root add ^ ReturnStatement_ter ^ control ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> control']
copynode -12.373503684997559:  root parameters ^ IfStatement ^ ^ ; ['root -> parameters', 'parameters -> End', 'root -> IfStatement']
copynode -9.898889809846878:  root return_type ReferenceType name ^ arguments ^ sub_type ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments sub_type']
copynode -11.011080652475357:  root parameters FormalParameter modifiers ^ annotations ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers annotations type name']
before@3 batch0 x: -14.669854551553726: root parameters FormalParameter modifiers ^ annotations ^ type ^ name ^ ^ ^ ^  ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers annotations type name']
after@3 batch0 x: -14.669854551553726: root parameters FormalParameter modifiers ^ annotations ^ type ^ name ^ ^ ^ ^  ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers annotations type name']
copynode -0.6507758335210383:  root modified ^ qualifier-qualifier System_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -1.6526914808200672:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -2.604792982339859:  root modified ^ member-member currentTimeMillis_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -2.313038502354175:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -2.5341781146707945:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -1.6526914808200672:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.313038502354175:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -1.6526914808200672:  root modified ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -2.5341781146707945:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -2.313038502354175:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -2.5341781146707945:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -4.732772305607796:  root modified ^ member-member currentTimeMillis_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -2.5341781146707945:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -5.25904344022274:  root modified ^ MemberReference-MemberReference member stopTime_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -2.5341781146707945:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member STATE_RUNNING_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member STATE_SUSPENDED_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -2.313038502354175:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -5.913964553474216:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -2.313038502354175:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -1.6526914808200672:  root modified ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -1.6526914808200672:  root modified ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -7.230439603328705:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ value MemberReference member STATE_STOPPED_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.359360888600349:  root modified ^ qualifier-qualifier System_ter ^ ^  System_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -5.913964553474216:  root modified ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -5.913964553474216:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -7.472140818834305:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -5.25904344022274:  root modified ^ MemberReference-MemberReference member stopTime_ter ^ ^ ^  member STATE_SUSPENDED_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.845634177327156:  root modified ^ qualifier-qualifier System_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0', 'root -> End']
copynode -5.25904344022274:  root modified ^ MemberReference-MemberReference member stopTime_ter ^ ^ ^  member runningState_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -2.313038502354175:  root add ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -2.5341781146707945:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -7.940284922719002:  root modified ^ qualifier-qualifier System_ter ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0', 'root -> End']
copynode -7.67769736237824:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -5.25904344022274:  root modified ^ MemberReference-MemberReference member stopTime_ter ^ ^ ^  member runningState_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.25904344022274:  root modified ^ MemberReference-MemberReference member stopTime_ter ^ ^ ^  member STATE_RUNNING_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -8.141900733113289:  root modified ^ qualifier-qualifier System_ter ^ ^  LOG_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> LOG_ter', 'root -> End']
copynode -8.14415879547596:  root modified ^ member-member currentTimeMillis_ter ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> add_ter', 'root -> End']
copynode -8.183595135807991:  root modified ^ member-member currentTimeMillis_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter', 'root -> End']
copynode -8.28694100677967:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ value MemberReference member STATE_STOPPED_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.913964553474216:  root modified ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -5.25904344022274:  root modified ^ MemberReference-MemberReference member stopTime_ter ^ ^ ^  member runningState_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.25904344022274:  root modified ^ MemberReference-MemberReference member stopTime_ter ^ ^ ^  member STATE_STOPPED_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -8.424941018223763:  root modified ^ MemberReference-MemberReference member stopTime_ter ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -8.661576241254807:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -8.69225449860096:  root modified ^ member-member currentTimeMillis_ter ^ ^  e_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> e_ter', 'root -> End']
copynode -2.5341781146707945:  root add ^ IfStatement condition Cast ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast']
copynode -8.793129876255989:  root modified ^ member-member currentTimeMillis_ter ^ ^  runningState_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.25904344022274:  root modified ^ MemberReference-MemberReference member stopTime_ter ^ ^ ^  member stopTime_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -8.86037178337574:  root modified ^ qualifier-qualifier System_ter ^ ^  Math_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> Math_ter', 'root -> End']
copynode -8.86719985306263:  root modified ^ member-member currentTimeMillis_ter ^ ^  runningState_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -8.968919232487679:  root modified ^ member-member currentTimeMillis_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter', 'root -> End']
copynode -9.075531125068665:  root add ^ ReturnStatement_ter ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.6526914808200672:  root modified ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -8.683175053447485:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -9.248600915074348:  root modified ^ member-member currentTimeMillis_ter ^ ^  currentTimeMillis_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -2.313038502354175:  root add ^ StatementExpression expression SuperConstructorInvocation_ter ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation_ter']
copynode -9.402363732457161:  root modified ^ member-member currentTimeMillis_ter ^ ^  STATE_RUNNING_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -2.313038502354175:  root add ^ StatementExpression expression This_ter ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This_ter']
copynode -7.472140818834305:  root add ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -9.637493020389229:  root ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.230439603328705:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ value MemberReference member STATE_STOPPED_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -9.742324948310852:  root add ^ ReturnStatement_ter ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement', 'IfStatement -> condition']
copynode -9.330542521551251:  root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -7.67769736237824:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -8.994807983166538:  root modified ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -2.313038502354175:  root add ^ StatementExpression expression SuperConstructorInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation']
copynode -2.313038502354175:  root add ^ StatementExpression expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> BinaryOperation']
copynode -1.6526914808200672:  root modified ^ StatementExpression expression This_ter ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This_ter']
copynode -2.5341781146707945:  root add ^ IfStatement condition TernaryExpression ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> TernaryExpression']
copynode -1.6526914808200672:  root modified ^ StatementExpression expression SuperConstructorInvocation_ter ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation_ter']
copynode -1.6526914808200672:  root modified ^ StatementExpression expression BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> BinaryOperation']
copynode -2.5341781146707945:  root add ^ IfStatement condition ClassReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> ClassReference']
copynode -10.322101265192032:  root return_type ReferenceType name IllegalStateException_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType', 'root -> End']
copynode -8.424941018223763:  root modified ^ MemberReference-MemberReference member stopTime_ter ^ ^ ^  qualifier System_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -1.6526914808200672:  root modified ^ StatementExpression expression SuperConstructorInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation']
copynode -5.25904344022274:  root modified ^ MemberReference-MemberReference member stopTime_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -8.994807983166538:  root modified ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -7.67769736237824:  root add ^ ReturnStatement expression ArrayCreator ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator']
copynode -8.683175053447485:  root add ^ AssertStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MemberReference']
copynode -10.653680995106697:  root modified ^ qualifier-qualifier System_ter ^ ^  Double_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> Double_ter', 'root -> End']
copynode -10.65455837547779:  root modified ^ qualifier-qualifier System_ter ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc1', 'root -> End']
copynode -5.25904344022274:  root modified ^ MemberReference-MemberReference member stopTime_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -8.683175053447485:  root add ^ AssertStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> Literal']
copynode -10.585294279677328:  root IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -10.793004918843508:  root StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -10.747252520173788:  root modified ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -10.968601822853088:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter']
copynode -8.994807983166538:  root modified ^ ReturnStatement expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ member currentTimeMillis_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -2.5341781146707945:  root add ^ IfStatement condition SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> SuperMethodInvocation']
copynode -11.02464852342382:  root ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -11.141220286488533:  root modified ^ qualifier-qualifier System_ter ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1', 'root -> End']
copynode -7.67769736237824:  root add ^ ReturnStatement expression ClassCreator type ReferenceType name IllegalStateException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -8.683175053447485:  root add ^ AssertStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MethodInvocation']
copynode -11.250637173652649:  root add ^ ReturnStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement_ter', 'root -> End']
before@4 batch0 x: -11.266230835579336: root add ^ ReturnStatement_ter ^ ReturnStatement_ter ^ ^  ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement_ter', 'root -> End']
stderr: Check out program version: Lang-55b........................................ OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
  0%|          | 0/1 [00:05<?, ?it/s]
Traceback (most recent call last):
  File "testDefect4j.py", line 638, in <module>
    ans = solveone(data, model)
  File "/root/projects/Recoder-bwk/run.py", line 1100, in solveone
    ans = BeamSearch((x[0], x[1], None, None, None, None, None, None, x[2], x[3]), dev_set, model, 100, args.batch_size, indexs)
  File "/root/projects/Recoder-bwk/run.py", line 541, in BeamSearch
    result = model(gVar(tmpnl), gVar(tmpnlad), gVar(tmprule), gVar(tmpruleparent), gVar(tmprulechild), gVar(tmpAd), gVar(tmptreepath), gVar(tmpnl8), gVar(tmpnl9), tmpf, tmpc, tmpindex, tmpchar, tmpindex2, rulead, antimasks, None, "test")
  File "/root/envs/recoder/lib/python3.7/site-packages/torch/nn/modules/module.py", line 541, in __call__
    result = self.forward(*input, **kwargs)
  File "/root/projects/Recoder-bwk/Model.py", line 172, in forward
    genP1, _ = self.copy2(rulenoter.unsqueeze(0), decode)
  File "/root/envs/recoder/lib/python3.7/site-packages/torch/nn/modules/module.py", line 541, in __call__
    result = self.forward(*input, **kwargs)
  File "/root/projects/Recoder-bwk/Model.py", line 79, in forward
    genP = self.LinearRes(F.tanh(sourceLinear.unsqueeze(1) + targetLinear.unsqueeze(2))).squeeze(-1)
  File "/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py", line 1341, in tanh
    return input.tanh()
RuntimeError: CUDA out of memory. Tried to allocate 1.53 GiB (GPU 0; 23.65 GiB total capacity; 2.28 GiB already allocated; 771.31 MiB free; 4.19 GiB cached)
