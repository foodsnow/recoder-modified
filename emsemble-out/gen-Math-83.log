stdout: else_statement -> BlockStatement
using GPU
p
path org.apache.commons.math.optimization.linear.SimplexTableau
getBasicRow
Position(line=290, column=13)
FOUND IT!
path org.apache.commons.math.optimization.linear.SimplexTableau
getSolution
Position(line=339, column=15)
FOUND IT!
[{'bugid': 'Math-83', 'treeroot': <Searchnode.Node object at 0x7fa5045cc8d0>, 'troot': <Searchnode.Node object at 0x7fa5045cc8d0>, 'oldcode': '        int start = getNumObjectiveFunctions();', 'filepath': 'buggy/Math-83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java', 'subroot': <Searchnode.Node object at 0x7fa5045d4350>, 'vardic': {'getBasicRow_ter': 'meth0', 'col_ter': 'par0', 'ignoreObjectiveRows_ter': 'par1', 'row_ter': 'loc0', 'start_ter': 'loc1', 'i_ter': 'loc2'}, 'typedic': {'col_ter': 'int', 'ignoreObjectiveRows_ter': 'boolean', 'row_ter': 'Integer', 'start_ter': 'int', 'i_ter': 'int'}, 'idss': 'Math-83', 'classname': 'org.apache.commons.math.optimization.linear.SimplexTableau', 'precode': '/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the "License"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.commons.math.optimization.linear;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Set;\n\nimport org.apache.commons.math.linear.MatrixUtils;\nimport org.apache.commons.math.linear.RealMatrix;\nimport org.apache.commons.math.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math.linear.RealVector;\nimport org.apache.commons.math.optimization.GoalType;\nimport org.apache.commons.math.optimization.RealPointValuePair;\nimport org.apache.commons.math.util.MathUtils;\n\n/**\n * A tableau for use in the Simplex method.\n * \n * <p>\n * Example:\n * <pre>\n *   W |  Z |  x1 |  x2 |  x- | s1 |  s2 |  a1 |  RHS\n * ---------------------------------------------------\n *  -1    0    0     0     0     0     0     1     0   &lt;= phase 1 objective\n *   0    1   -15   -10    0     0     0     0     0   &lt;= phase 2 objective\n *   0    0    1     0     0     1     0     0     2   &lt;= constraint 1\n *   0    0    0     1     0     0     1     0     3   &lt;= constraint 2\n *   0    0    1     1     0     0     0     1     4   &lt;= constraint 3\n * </pre>\n * W: Phase 1 objective function</br>\n * Z: Phase 2 objective function</br>\n * x1 &amp; x2: Decision variables</br>\n * x-: Extra decision variable to allow for negative values</br>\n * s1 &amp; s2: Slack/Surplus variables</br>\n * a1: Artificial variable</br>\n * RHS: Right hand side</br>\n * </p>\n * @version $Revision$ $Date$\n * @since 2.0\n */\nclass SimplexTableau implements Serializable {\n\n    /** Serializable version identifier. */\n    private static final long serialVersionUID = -1369660067587938365L;\n\n    /** Linear objective function. */\n    private final LinearObjectiveFunction f;\n\n    /** Linear constraints. */\n    private final Collection<LinearConstraint> constraints;\n\n    /** Whether to restrict the variables to non-negative values. */\n    private final boolean restrictToNonNegative;\n\n    /** Simple tableau. */\n    protected transient RealMatrix tableau;\n\n    /** Number of decision variables. */\n    protected final int numDecisionVariables;\n\n    /** Number of slack variables. */\n    protected final int numSlackVariables;\n\n    /** Number of artificial variables. */\n    protected int numArtificialVariables;\n\n    /** Amount of error to accept in floating point comparisons. */ \n    protected final double epsilon;\n    \n    /**\n     * Build a tableau for a linear problem.\n     * @param f linear objective function\n     * @param constraints linear constraints\n     * @param goalType type of optimization goal: either {@link GoalType#MAXIMIZE}\n     * or {@link GoalType#MINIMIZE}\n     * @param restrictToNonNegative whether to restrict the variables to non-negative values\n     * @param epsilon amount of error to accept in floating point comparisons\n     */\n    SimplexTableau(final LinearObjectiveFunction f,\n                   final Collection<LinearConstraint> constraints,\n                   final GoalType goalType, final boolean restrictToNonNegative,\n                   final double epsilon) {\n        this.f                      = f;\n        this.constraints            = constraints;\n        this.restrictToNonNegative  = restrictToNonNegative;\n        this.epsilon                = epsilon;\n        this.numDecisionVariables   = getNumVariables() + (restrictToNonNegative ? 0 : 1);\n        this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +\n                                      getConstraintTypeCounts(Relationship.GEQ);\n        this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ) +\n                                      getConstraintTypeCounts(Relationship.GEQ);\n        this.tableau = new Array2DRowRealMatrix(createTableau(goalType == GoalType.MAXIMIZE));\n        initialize();\n    }\n\n    /**\n     * Create the tableau by itself.\n     * @param maximize if true, goal is to maximize the objective function\n     * @return created tableau\n     */\n    protected double[][] createTableau(final boolean maximize) {\n\n        // create a matrix of the correct size\n        List<LinearConstraint> constraints = getNormalizedConstraints();\n        int width = numDecisionVariables + numSlackVariables +\n        numArtificialVariables + getNumObjectiveFunctions() + 1; // + 1 is for RHS\n        int height = constraints.size() + getNumObjectiveFunctions();\n        double[][] matrix = new double[height][width];\n\n        // initialize the objective function rows\n        if (getNumObjectiveFunctions() == 2) {\n            matrix[0][0] = -1;\n        }\n        int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;\n        matrix[zIndex][zIndex] = maximize ? 1 : -1;\n        RealVector objectiveCoefficients =\n            maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n            copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());\n            matrix[zIndex][width - 1] =\n                maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();\n\n                if (!restrictToNonNegative) {\n                    matrix[zIndex][getSlackVariableOffset() - 1] =\n                        getInvertedCoeffiecientSum(objectiveCoefficients);\n                }\n\n                // initialize the constraint rows\n                int slackVar = 0;\n                int artificialVar = 0;\n                for (int i = 0; i < constraints.size(); i++) {\n                    LinearConstraint constraint = constraints.get(i);\n                    int row = getNumObjectiveFunctions() + i;\n\n                    // decision variable coefficients\n                    copyArray(constraint.getCoefficients().getData(), matrix[row], 1);\n\n                    // x-\n                    if (!restrictToNonNegative) {\n                        matrix[row][getSlackVariableOffset() - 1] =\n                            getInvertedCoeffiecientSum(constraint.getCoefficients());\n                    }\n\n                    // RHS\n                    matrix[row][width - 1] = constraint.getValue();\n\n                    // slack variables\n                    if (constraint.getRelationship() == Relationship.LEQ) {\n                        matrix[row][getSlackVariableOffset() + slackVar++] = 1;  // slack\n                    } else if (constraint.getRelationship() == Relationship.GEQ) {\n                        matrix[row][getSlackVariableOffset() + slackVar++] = -1; // excess\n                    }\n\n                    // artificial variables\n                    if ((constraint.getRelationship() == Relationship.EQ) ||\n                        (constraint.getRelationship() == Relationship.GEQ)) {\n                        matrix[0][getArtificialVariableOffset() + artificialVar] = 1; \n                        matrix[row][getArtificialVariableOffset() + artificialVar++] = 1; \n                    }\n                }\n\n                return matrix;\n    }\n\n    /** Get the number of variables.\n     * @return number of variables\n     */\n    public int getNumVariables() {\n        return f.getCoefficients().getDimension();\n    }\n\n    /**\n     * Get new versions of the constraints which have positive right hand sides.\n     * @return new versions of the constraints\n     */\n    public List<LinearConstraint> getNormalizedConstraints() {\n        List<LinearConstraint> normalized = new ArrayList<LinearConstraint>();\n        for (LinearConstraint constraint : constraints) {\n            normalized.add(normalize(constraint));\n        }\n        return normalized;\n    }\n\n    /**\n     * Get a new equation equivalent to this one with a positive right hand side.\n     * @param constraint reference constraint\n     * @return new equation\n     */\n    private LinearConstraint normalize(final LinearConstraint constraint) {\n        if (constraint.getValue() < 0) {\n            return new LinearConstraint(constraint.getCoefficients().mapMultiply(-1),\n                                        constraint.getRelationship().oppositeRelationship(),\n                                        -1 * constraint.getValue());\n        }\n        return new LinearConstraint(constraint.getCoefficients(), \n                                    constraint.getRelationship(), constraint.getValue());\n    }\n\n    /**\n     * Get the number of objective functions in this tableau.\n     * @return 2 for Phase 1.  1 for Phase 2.\n     */\n    protected final int getNumObjectiveFunctions() {\n        return this.numArtificialVariables > 0 ? 2 : 1;\n    }\n\n    /**\n     * Get a count of constraints corresponding to a specified relationship.\n     * @param relationship relationship to count\n     * @return number of constraint with the specified relationship\n     */\n    private int getConstraintTypeCounts(final Relationship relationship) {\n        int count = 0;\n        for (final LinearConstraint constraint : constraints) {\n            if (constraint.getRelationship() == relationship) {\n                ++count;\n            }\n        }\n        return count;\n    }\n\n    /**\n     * Puts the tableau in proper form by zeroing out the artificial variables\n     * in the objective function via elementary row operations.\n     */\n    private void initialize() {\n        for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n            subtractRow(0, row, 1.0);\n        }\n    }\n\n    /**\n     * Get the -1 times the sum of all coefficients in the given array.\n     * @param coefficients coefficients to sum\n     * @return the -1 times the sum of all coefficients in the given array.\n     */\n    protected static double getInvertedCoeffiecientSum(final RealVector coefficients) {\n        double sum = 0;\n        for (double coefficient : coefficients.getData()) {\n            sum -= coefficient;\n        }\n        return sum;\n    }\n\n    /**\n     * Checks whether the given column is basic.\n     * @param col index of the column to check\n     * @return the row that the variable is basic in.  null if the column is not basic\n     */\n    private Integer getBasicRow(final int col) {\n        return getBasicRow(col, true);\n    }\n\n    /**\n     * Checks whether the given column is basic.\n     * @param col index of the column to check\n     * @return the row that the variable is basic in.  null if the column is not basic\n     */\n    private Integer getBasicRowForSolution(final int col) {\n        return getBasicRow(col, false);\n    }\n    \n    /**\n     * Checks whether the given column is basic.\n     * @param col index of the column to check\n     * @return the row that the variable is basic in.  null if the column is not basic\n     */\n    private Integer getBasicRow(final int col, boolean ignoreObjectiveRows) {\n        Integer row = null;', 'aftercode': '        for (int i = start; i < getHeight(); i++) {\n            if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {\n                row = i;\n            } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n                return null;\n            }\n        }\n        return row;\n    }\n\n    /**\n     * Removes the phase 1 objective function and artificial variables from this tableau.\n     */\n    protected void discardArtificialVariables() {\n        if (numArtificialVariables == 0) {\n            return;\n        }\n        int width = getWidth() - numArtificialVariables - 1;\n        int height = getHeight() - 1;\n        double[][] matrix = new double[height][width];\n        for (int i = 0; i < height; i++) {\n            for (int j = 0; j < width - 1; j++) {\n                matrix[i][j] = getEntry(i + 1, j + 1);\n            }\n            matrix[i][width - 1] = getEntry(i + 1, getRhsOffset());\n        }\n        this.tableau = new Array2DRowRealMatrix(matrix);\n        this.numArtificialVariables = 0;\n    }\n\n\n    /**\n     * @param src the source array\n     * @param dest the destination array\n     * @param destPos the destination position\n     */\n    private void copyArray(final double[] src, final double[] dest,\n                           final int destPos) {\n        System.arraycopy(src, 0, dest, getNumObjectiveFunctions(), src.length); \n    }\n\n    /**\n     * Get the current solution.\n     * \n     * @return current solution\n     */\n    protected RealPointValuePair getSolution() {\n      double[] coefficients = new double[getOriginalNumDecisionVariables()];\n      Integer negativeVarBasicRow = getBasicRow(getNegativeDecisionVariableOffset());\n      double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n      Set<Integer> basicRows = new HashSet<Integer>();\n      for (int i = 0; i < coefficients.length; i++) {\n          Integer basicRow = getBasicRow(getNumObjectiveFunctions() + i);\n          if (basicRows.contains(basicRow)) {\n              // if multiple variables can take a given value \n              // then we choose the first and set the rest equal to 0\n              coefficients[i] = 0;\n          } else {\n              basicRows.add(basicRow);\n              coefficients[i] =\n                  (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -\n                  (restrictToNonNegative ? 0 : mostNegative);\n          }\n      }\n        return new RealPointValuePair(coefficients, f.getValue(coefficients));\n    }\n\n    /**\n     * Subtracts a multiple of one row from another.\n     * <p>\n     * After application of this operation, the following will hold:\n     *   minuendRow = minuendRow - multiple * subtrahendRow\n     * </p>\n     * @param dividendRow index of the row\n     * @param divisor value of the divisor\n     */\n    protected void divideRow(final int dividendRow, final double divisor) {\n        for (int j = 0; j < getWidth(); j++) {\n            tableau.setEntry(dividendRow, j, tableau.getEntry(dividendRow, j) / divisor);\n        }\n    }\n\n    /**\n     * Subtracts a multiple of one row from another.\n     * <p>\n     * After application of this operation, the following will hold:\n     *   minuendRow = minuendRow - multiple * subtrahendRow\n     * </p>\n     * @param minuendRow row index\n     * @param subtrahendRow row index\n     * @param multiple multiplication factor\n     */\n    protected void subtractRow(final int minuendRow, final int subtrahendRow,\n                               final double multiple) {\n        for (int j = 0; j < getWidth(); j++) {\n            tableau.setEntry(minuendRow, j, tableau.getEntry(minuendRow, j) -\n                             multiple * tableau.getEntry(subtrahendRow, j));\n        }\n    }\n\n    /**\n     * Get the width of the tableau.\n     * @return width of the tableau\n     */\n    protected final int getWidth() {\n        return tableau.getColumnDimension();\n    }\n\n    /**\n     * Get the height of the tableau.\n     * @return height of the tableau\n     */\n    protected final int getHeight() {\n        return tableau.getRowDimension();\n    }\n\n    /** Get an entry of the tableau.\n     * @param row row index\n     * @param column column index\n     * @return entry at (row, column)\n     */\n    protected final double getEntry(final int row, final int column) {\n        return tableau.getEntry(row, column);\n    }\n\n    /** Set an entry of the tableau.\n     * @param row row index\n     * @param column column index\n     * @param value for the entry\n     */\n    protected final void setEntry(final int row, final int column,\n                                  final double value) {\n        tableau.setEntry(row, column, value);\n    }\n\n    /**\n     * Get the offset of the first slack variable.\n     * @return offset of the first slack variable\n     */\n    protected final int getSlackVariableOffset() {\n        return getNumObjectiveFunctions() + numDecisionVariables;\n    }\n\n    /**\n     * Get the offset of the first artificial variable.\n     * @return offset of the first artificial variable\n     */\n    protected final int getArtificialVariableOffset() {\n        return getNumObjectiveFunctions() + numDecisionVariables + numSlackVariables;\n    }\n\n    /**\n     * Get the offset of the right hand side.\n     * @return offset of the right hand side\n     */\n    protected final int getRhsOffset() {\n        return getWidth() - 1;\n    }\n    \n    /**\n     * Returns the offset of the extra decision variable added when there is a\n     * negative decision variable in the original problem.\n     * @return the offset of x-\n     */\n    protected final int getNegativeDecisionVariableOffset() {\n      return getNumObjectiveFunctions() + getOriginalNumDecisionVariables();\n    }\n\n    /**\n     * Get the number of decision variables.\n     * <p>\n     * If variables are not restricted to positive values, this will include 1\n     * extra decision variable to represent the absolute value of the most\n     * negative variable.\n     * </p>\n     * @return number of decision variables\n     * @see #getOriginalNumDecisionVariables()\n     */\n    protected final int getNumDecisionVariables() {\n        return numDecisionVariables;\n    }\n\n    /**\n     * Get the original number of decision variables.\n     * @return original number of decision variables\n     * @see #getNumDecisionVariables()\n     */\n    protected final int getOriginalNumDecisionVariables() {\n        return restrictToNonNegative ? numDecisionVariables : numDecisionVariables - 1;\n    }\n\n    /**\n     * Get the number of slack variables.\n     * @return number of slack variables\n     */\n    protected final int getNumSlackVariables() {\n        return numSlackVariables;\n    }\n\n    /**\n     * Get the number of artificial variables.\n     * @return number of artificial variables\n     */\n    protected final int getNumArtificialVariables() {\n        return numArtificialVariables;\n    }\n\n    /**\n     * Get the tableau data.\n     * @return tableau data\n     */\n    protected final double[][] getData() {\n        return tableau.getData();\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public boolean equals(Object other) {\n\n      if (this == other) { \n        return true;\n      }\n\n      if (other == null) {\n        return false;\n      }\n\n      try {\n\n          SimplexTableau rhs = (SimplexTableau) other;\n          return (restrictToNonNegative  == rhs.restrictToNonNegative) &&\n                 (numDecisionVariables   == rhs.numDecisionVariables) &&\n                 (numSlackVariables      == rhs.numSlackVariables) &&\n                 (numArtificialVariables == rhs.numArtificialVariables) &&\n                 (epsilon                == rhs.epsilon) &&\n                 f.equals(rhs.f) &&\n                 constraints.equals(rhs.constraints) &&\n                 tableau.equals(rhs.tableau);\n\n      } catch (ClassCastException ex) {\n          // ignore exception\n          return false;\n      }\n\n    }\n    \n    /** {@inheritDoc} */\n    @Override\n    public int hashCode() {\n        return Boolean.valueOf(restrictToNonNegative).hashCode() ^\n               numDecisionVariables ^\n               numSlackVariables ^\n               numArtificialVariables ^\n               Double.valueOf(epsilon).hashCode() ^\n               f.hashCode() ^\n               constraints.hashCode() ^\n               tableau.hashCode();\n    }\n\n    /** Serialize the instance.\n     * @param oos stream where object should be written\n     * @throws IOException if object cannot be written to stream\n     */\n    private void writeObject(ObjectOutputStream oos)\n        throws IOException {\n        oos.defaultWriteObject();\n        MatrixUtils.serializeRealMatrix(tableau, oos);\n    }\n\n    /** Deserialize the instance.\n     * @param ois stream from which the object should be read\n     * @throws ClassNotFoundException if a class in the stream cannot be found\n     * @throws IOException if object cannot be read from the stream\n     */\n    private void readObject(ObjectInputStream ois)\n      throws ClassNotFoundException, IOException {\n        ois.defaultReadObject();\n        MatrixUtils.deserializeRealMatrix(this, "tableau", ois);\n    }\n}', 'tree': 'MethodDeclaration modifiers private_ter ^ ^ return_type ReferenceType name Integer_ter ^ ^ ^ ^ name meth0 ^ ^ parameters FormalParameter modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ name par0 ^ ^ ^ FormalParameter type BasicType name boolean_ter ^ ^ ^ ^ name par1 ^ ^ ^ ^ body LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value null_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ForStatement control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc2 ^ ^ ^ ^ ^ ^ body BlockStatement statements IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 0.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 292, 'isa': False, 'fl_score': 1}, {'bugid': 'Math-83', 'treeroot': <Searchnode.Node object at 0x7fa5046ab0d0>, 'troot': <Searchnode.Node object at 0x7fa5046ab0d0>, 'oldcode': '      Integer negativeVarBasicRow = getBasicRow(getNegativeDecisionVariableOffset());', 'filepath': 'buggy/Math-83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java', 'subroot': <Searchnode.Node object at 0x7fa5046abad0>, 'vardic': {'getSolution_ter': 'meth0', 'coefficients_ter': 'loc0', 'negativeVarBasicRow_ter': 'loc1', 'mostNegative_ter': 'loc2', 'basicRows_ter': 'loc3', 'i_ter': 'loc4', 'basicRow_ter': 'loc5'}, 'typedic': {'coefficients_ter': 'double', 'negativeVarBasicRow_ter': 'Integer', 'mostNegative_ter': 'double', 'basicRows_ter': 'Set', 'i_ter': 'int', 'basicRow_ter': 'Integer'}, 'idss': 'Math-83', 'classname': 'org.apache.commons.math.optimization.linear.SimplexTableau', 'precode': '/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the "License"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.commons.math.optimization.linear;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Set;\n\nimport org.apache.commons.math.linear.MatrixUtils;\nimport org.apache.commons.math.linear.RealMatrix;\nimport org.apache.commons.math.linear.Array2DRowRealMatrix;\nimport org.apache.commons.math.linear.RealVector;\nimport org.apache.commons.math.optimization.GoalType;\nimport org.apache.commons.math.optimization.RealPointValuePair;\nimport org.apache.commons.math.util.MathUtils;\n\n/**\n * A tableau for use in the Simplex method.\n * \n * <p>\n * Example:\n * <pre>\n *   W |  Z |  x1 |  x2 |  x- | s1 |  s2 |  a1 |  RHS\n * ---------------------------------------------------\n *  -1    0    0     0     0     0     0     1     0   &lt;= phase 1 objective\n *   0    1   -15   -10    0     0     0     0     0   &lt;= phase 2 objective\n *   0    0    1     0     0     1     0     0     2   &lt;= constraint 1\n *   0    0    0     1     0     0     1     0     3   &lt;= constraint 2\n *   0    0    1     1     0     0     0     1     4   &lt;= constraint 3\n * </pre>\n * W: Phase 1 objective function</br>\n * Z: Phase 2 objective function</br>\n * x1 &amp; x2: Decision variables</br>\n * x-: Extra decision variable to allow for negative values</br>\n * s1 &amp; s2: Slack/Surplus variables</br>\n * a1: Artificial variable</br>\n * RHS: Right hand side</br>\n * </p>\n * @version $Revision$ $Date$\n * @since 2.0\n */\nclass SimplexTableau implements Serializable {\n\n    /** Serializable version identifier. */\n    private static final long serialVersionUID = -1369660067587938365L;\n\n    /** Linear objective function. */\n    private final LinearObjectiveFunction f;\n\n    /** Linear constraints. */\n    private final Collection<LinearConstraint> constraints;\n\n    /** Whether to restrict the variables to non-negative values. */\n    private final boolean restrictToNonNegative;\n\n    /** Simple tableau. */\n    protected transient RealMatrix tableau;\n\n    /** Number of decision variables. */\n    protected final int numDecisionVariables;\n\n    /** Number of slack variables. */\n    protected final int numSlackVariables;\n\n    /** Number of artificial variables. */\n    protected int numArtificialVariables;\n\n    /** Amount of error to accept in floating point comparisons. */ \n    protected final double epsilon;\n    \n    /**\n     * Build a tableau for a linear problem.\n     * @param f linear objective function\n     * @param constraints linear constraints\n     * @param goalType type of optimization goal: either {@link GoalType#MAXIMIZE}\n     * or {@link GoalType#MINIMIZE}\n     * @param restrictToNonNegative whether to restrict the variables to non-negative values\n     * @param epsilon amount of error to accept in floating point comparisons\n     */\n    SimplexTableau(final LinearObjectiveFunction f,\n                   final Collection<LinearConstraint> constraints,\n                   final GoalType goalType, final boolean restrictToNonNegative,\n                   final double epsilon) {\n        this.f                      = f;\n        this.constraints            = constraints;\n        this.restrictToNonNegative  = restrictToNonNegative;\n        this.epsilon                = epsilon;\n        this.numDecisionVariables   = getNumVariables() + (restrictToNonNegative ? 0 : 1);\n        this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +\n                                      getConstraintTypeCounts(Relationship.GEQ);\n        this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ) +\n                                      getConstraintTypeCounts(Relationship.GEQ);\n        this.tableau = new Array2DRowRealMatrix(createTableau(goalType == GoalType.MAXIMIZE));\n        initialize();\n    }\n\n    /**\n     * Create the tableau by itself.\n     * @param maximize if true, goal is to maximize the objective function\n     * @return created tableau\n     */\n    protected double[][] createTableau(final boolean maximize) {\n\n        // create a matrix of the correct size\n        List<LinearConstraint> constraints = getNormalizedConstraints();\n        int width = numDecisionVariables + numSlackVariables +\n        numArtificialVariables + getNumObjectiveFunctions() + 1; // + 1 is for RHS\n        int height = constraints.size() + getNumObjectiveFunctions();\n        double[][] matrix = new double[height][width];\n\n        // initialize the objective function rows\n        if (getNumObjectiveFunctions() == 2) {\n            matrix[0][0] = -1;\n        }\n        int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;\n        matrix[zIndex][zIndex] = maximize ? 1 : -1;\n        RealVector objectiveCoefficients =\n            maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n            copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());\n            matrix[zIndex][width - 1] =\n                maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();\n\n                if (!restrictToNonNegative) {\n                    matrix[zIndex][getSlackVariableOffset() - 1] =\n                        getInvertedCoeffiecientSum(objectiveCoefficients);\n                }\n\n                // initialize the constraint rows\n                int slackVar = 0;\n                int artificialVar = 0;\n                for (int i = 0; i < constraints.size(); i++) {\n                    LinearConstraint constraint = constraints.get(i);\n                    int row = getNumObjectiveFunctions() + i;\n\n                    // decision variable coefficients\n                    copyArray(constraint.getCoefficients().getData(), matrix[row], 1);\n\n                    // x-\n                    if (!restrictToNonNegative) {\n                        matrix[row][getSlackVariableOffset() - 1] =\n                            getInvertedCoeffiecientSum(constraint.getCoefficients());\n                    }\n\n                    // RHS\n                    matrix[row][width - 1] = constraint.getValue();\n\n                    // slack variables\n                    if (constraint.getRelationship() == Relationship.LEQ) {\n                        matrix[row][getSlackVariableOffset() + slackVar++] = 1;  // slack\n                    } else if (constraint.getRelationship() == Relationship.GEQ) {\n                        matrix[row][getSlackVariableOffset() + slackVar++] = -1; // excess\n                    }\n\n                    // artificial variables\n                    if ((constraint.getRelationship() == Relationship.EQ) ||\n                        (constraint.getRelationship() == Relationship.GEQ)) {\n                        matrix[0][getArtificialVariableOffset() + artificialVar] = 1; \n                        matrix[row][getArtificialVariableOffset() + artificialVar++] = 1; \n                    }\n                }\n\n                return matrix;\n    }\n\n    /** Get the number of variables.\n     * @return number of variables\n     */\n    public int getNumVariables() {\n        return f.getCoefficients().getDimension();\n    }\n\n    /**\n     * Get new versions of the constraints which have positive right hand sides.\n     * @return new versions of the constraints\n     */\n    public List<LinearConstraint> getNormalizedConstraints() {\n        List<LinearConstraint> normalized = new ArrayList<LinearConstraint>();\n        for (LinearConstraint constraint : constraints) {\n            normalized.add(normalize(constraint));\n        }\n        return normalized;\n    }\n\n    /**\n     * Get a new equation equivalent to this one with a positive right hand side.\n     * @param constraint reference constraint\n     * @return new equation\n     */\n    private LinearConstraint normalize(final LinearConstraint constraint) {\n        if (constraint.getValue() < 0) {\n            return new LinearConstraint(constraint.getCoefficients().mapMultiply(-1),\n                                        constraint.getRelationship().oppositeRelationship(),\n                                        -1 * constraint.getValue());\n        }\n        return new LinearConstraint(constraint.getCoefficients(), \n                                    constraint.getRelationship(), constraint.getValue());\n    }\n\n    /**\n     * Get the number of objective functions in this tableau.\n     * @return 2 for Phase 1.  1 for Phase 2.\n     */\n    protected final int getNumObjectiveFunctions() {\n        return this.numArtificialVariables > 0 ? 2 : 1;\n    }\n\n    /**\n     * Get a count of constraints corresponding to a specified relationship.\n     * @param relationship relationship to count\n     * @return number of constraint with the specified relationship\n     */\n    private int getConstraintTypeCounts(final Relationship relationship) {\n        int count = 0;\n        for (final LinearConstraint constraint : constraints) {\n            if (constraint.getRelationship() == relationship) {\n                ++count;\n            }\n        }\n        return count;\n    }\n\n    /**\n     * Puts the tableau in proper form by zeroing out the artificial variables\n     * in the objective function via elementary row operations.\n     */\n    private void initialize() {\n        for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n            subtractRow(0, row, 1.0);\n        }\n    }\n\n    /**\n     * Get the -1 times the sum of all coefficients in the given array.\n     * @param coefficients coefficients to sum\n     * @return the -1 times the sum of all coefficients in the given array.\n     */\n    protected static double getInvertedCoeffiecientSum(final RealVector coefficients) {\n        double sum = 0;\n        for (double coefficient : coefficients.getData()) {\n            sum -= coefficient;\n        }\n        return sum;\n    }\n\n    /**\n     * Checks whether the given column is basic.\n     * @param col index of the column to check\n     * @return the row that the variable is basic in.  null if the column is not basic\n     */\n    private Integer getBasicRow(final int col) {\n        return getBasicRow(col, true);\n    }\n\n    /**\n     * Checks whether the given column is basic.\n     * @param col index of the column to check\n     * @return the row that the variable is basic in.  null if the column is not basic\n     */\n    private Integer getBasicRowForSolution(final int col) {\n        return getBasicRow(col, false);\n    }\n    \n    /**\n     * Checks whether the given column is basic.\n     * @param col index of the column to check\n     * @return the row that the variable is basic in.  null if the column is not basic\n     */\n    private Integer getBasicRow(final int col, boolean ignoreObjectiveRows) {\n        Integer row = null;\n        int start = getNumObjectiveFunctions();\n        for (int i = start; i < getHeight(); i++) {\n            if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {\n                row = i;\n            } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n                return null;\n            }\n        }\n        return row;\n    }\n\n    /**\n     * Removes the phase 1 objective function and artificial variables from this tableau.\n     */\n    protected void discardArtificialVariables() {\n        if (numArtificialVariables == 0) {\n            return;\n        }\n        int width = getWidth() - numArtificialVariables - 1;\n        int height = getHeight() - 1;\n        double[][] matrix = new double[height][width];\n        for (int i = 0; i < height; i++) {\n            for (int j = 0; j < width - 1; j++) {\n                matrix[i][j] = getEntry(i + 1, j + 1);\n            }\n            matrix[i][width - 1] = getEntry(i + 1, getRhsOffset());\n        }\n        this.tableau = new Array2DRowRealMatrix(matrix);\n        this.numArtificialVariables = 0;\n    }\n\n\n    /**\n     * @param src the source array\n     * @param dest the destination array\n     * @param destPos the destination position\n     */\n    private void copyArray(final double[] src, final double[] dest,\n                           final int destPos) {\n        System.arraycopy(src, 0, dest, getNumObjectiveFunctions(), src.length); \n    }\n\n    /**\n     * Get the current solution.\n     * \n     * @return current solution\n     */\n    protected RealPointValuePair getSolution() {\n      double[] coefficients = new double[getOriginalNumDecisionVariables()];', 'aftercode': '      double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n      Set<Integer> basicRows = new HashSet<Integer>();\n      for (int i = 0; i < coefficients.length; i++) {\n          Integer basicRow = getBasicRow(getNumObjectiveFunctions() + i);\n          if (basicRows.contains(basicRow)) {\n              // if multiple variables can take a given value \n              // then we choose the first and set the rest equal to 0\n              coefficients[i] = 0;\n          } else {\n              basicRows.add(basicRow);\n              coefficients[i] =\n                  (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -\n                  (restrictToNonNegative ? 0 : mostNegative);\n          }\n      }\n        return new RealPointValuePair(coefficients, f.getValue(coefficients));\n    }\n\n    /**\n     * Subtracts a multiple of one row from another.\n     * <p>\n     * After application of this operation, the following will hold:\n     *   minuendRow = minuendRow - multiple * subtrahendRow\n     * </p>\n     * @param dividendRow index of the row\n     * @param divisor value of the divisor\n     */\n    protected void divideRow(final int dividendRow, final double divisor) {\n        for (int j = 0; j < getWidth(); j++) {\n            tableau.setEntry(dividendRow, j, tableau.getEntry(dividendRow, j) / divisor);\n        }\n    }\n\n    /**\n     * Subtracts a multiple of one row from another.\n     * <p>\n     * After application of this operation, the following will hold:\n     *   minuendRow = minuendRow - multiple * subtrahendRow\n     * </p>\n     * @param minuendRow row index\n     * @param subtrahendRow row index\n     * @param multiple multiplication factor\n     */\n    protected void subtractRow(final int minuendRow, final int subtrahendRow,\n                               final double multiple) {\n        for (int j = 0; j < getWidth(); j++) {\n            tableau.setEntry(minuendRow, j, tableau.getEntry(minuendRow, j) -\n                             multiple * tableau.getEntry(subtrahendRow, j));\n        }\n    }\n\n    /**\n     * Get the width of the tableau.\n     * @return width of the tableau\n     */\n    protected final int getWidth() {\n        return tableau.getColumnDimension();\n    }\n\n    /**\n     * Get the height of the tableau.\n     * @return height of the tableau\n     */\n    protected final int getHeight() {\n        return tableau.getRowDimension();\n    }\n\n    /** Get an entry of the tableau.\n     * @param row row index\n     * @param column column index\n     * @return entry at (row, column)\n     */\n    protected final double getEntry(final int row, final int column) {\n        return tableau.getEntry(row, column);\n    }\n\n    /** Set an entry of the tableau.\n     * @param row row index\n     * @param column column index\n     * @param value for the entry\n     */\n    protected final void setEntry(final int row, final int column,\n                                  final double value) {\n        tableau.setEntry(row, column, value);\n    }\n\n    /**\n     * Get the offset of the first slack variable.\n     * @return offset of the first slack variable\n     */\n    protected final int getSlackVariableOffset() {\n        return getNumObjectiveFunctions() + numDecisionVariables;\n    }\n\n    /**\n     * Get the offset of the first artificial variable.\n     * @return offset of the first artificial variable\n     */\n    protected final int getArtificialVariableOffset() {\n        return getNumObjectiveFunctions() + numDecisionVariables + numSlackVariables;\n    }\n\n    /**\n     * Get the offset of the right hand side.\n     * @return offset of the right hand side\n     */\n    protected final int getRhsOffset() {\n        return getWidth() - 1;\n    }\n    \n    /**\n     * Returns the offset of the extra decision variable added when there is a\n     * negative decision variable in the original problem.\n     * @return the offset of x-\n     */\n    protected final int getNegativeDecisionVariableOffset() {\n      return getNumObjectiveFunctions() + getOriginalNumDecisionVariables();\n    }\n\n    /**\n     * Get the number of decision variables.\n     * <p>\n     * If variables are not restricted to positive values, this will include 1\n     * extra decision variable to represent the absolute value of the most\n     * negative variable.\n     * </p>\n     * @return number of decision variables\n     * @see #getOriginalNumDecisionVariables()\n     */\n    protected final int getNumDecisionVariables() {\n        return numDecisionVariables;\n    }\n\n    /**\n     * Get the original number of decision variables.\n     * @return original number of decision variables\n     * @see #getNumDecisionVariables()\n     */\n    protected final int getOriginalNumDecisionVariables() {\n        return restrictToNonNegative ? numDecisionVariables : numDecisionVariables - 1;\n    }\n\n    /**\n     * Get the number of slack variables.\n     * @return number of slack variables\n     */\n    protected final int getNumSlackVariables() {\n        return numSlackVariables;\n    }\n\n    /**\n     * Get the number of artificial variables.\n     * @return number of artificial variables\n     */\n    protected final int getNumArtificialVariables() {\n        return numArtificialVariables;\n    }\n\n    /**\n     * Get the tableau data.\n     * @return tableau data\n     */\n    protected final double[][] getData() {\n        return tableau.getData();\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public boolean equals(Object other) {\n\n      if (this == other) { \n        return true;\n      }\n\n      if (other == null) {\n        return false;\n      }\n\n      try {\n\n          SimplexTableau rhs = (SimplexTableau) other;\n          return (restrictToNonNegative  == rhs.restrictToNonNegative) &&\n                 (numDecisionVariables   == rhs.numDecisionVariables) &&\n                 (numSlackVariables      == rhs.numSlackVariables) &&\n                 (numArtificialVariables == rhs.numArtificialVariables) &&\n                 (epsilon                == rhs.epsilon) &&\n                 f.equals(rhs.f) &&\n                 constraints.equals(rhs.constraints) &&\n                 tableau.equals(rhs.tableau);\n\n      } catch (ClassCastException ex) {\n          // ignore exception\n          return false;\n      }\n\n    }\n    \n    /** {@inheritDoc} */\n    @Override\n    public int hashCode() {\n        return Boolean.valueOf(restrictToNonNegative).hashCode() ^\n               numDecisionVariables ^\n               numSlackVariables ^\n               numArtificialVariables ^\n               Double.valueOf(epsilon).hashCode() ^\n               f.hashCode() ^\n               constraints.hashCode() ^\n               tableau.hashCode();\n    }\n\n    /** Serialize the instance.\n     * @param oos stream where object should be written\n     * @throws IOException if object cannot be written to stream\n     */\n    private void writeObject(ObjectOutputStream oos)\n        throws IOException {\n        oos.defaultWriteObject();\n        MatrixUtils.serializeRealMatrix(tableau, oos);\n    }\n\n    /** Deserialize the instance.\n     * @param ois stream from which the object should be read\n     * @throws ClassNotFoundException if a class in the stream cannot be found\n     * @throws IOException if object cannot be read from the stream\n     */\n    private void readObject(ObjectInputStream ois)\n      throws ClassNotFoundException, IOException {\n        ois.defaultReadObject();\n        MatrixUtils.deserializeRealMatrix(this, "tableau", ois);\n    }\n}', 'tree': 'MethodDeclaration modifiers protected_ter ^ ^ return_type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ name meth0 ^ ^ body LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ArrayCreator type BasicType name double_ter ^ ^ ^ ^ dimensions MethodInvocation member getOriginalNumDecisionVariables_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type ReferenceType name HashSet_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ForStatement control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc4 ^ ^ ^ ^ ^ ^ body BlockStatement statements LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ operandr MemberReference member loc4 ^ ^ ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value Literal value 0_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier f_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member getValue_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 341, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
before@0 batch1 x: 0: root ^  ; []
after@0 batch1 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root member-member getNumObjectiveFunctions_ter ^ ^  ^ ^ ; ['copy-member']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root LocalVariableDeclaration ^ ^ ; ['root -> LocalVariableDeclaration']
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root member-member getNegativeDecisionVariableOffset_ter ^ ^  ^ ^ ; ['copy-member']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root member-member getBasicRow_ter ^ ^  ^ ^ ; ['copy-member']
before@1 batch0 x: -13.026483535766602: root LocalVariableDeclaration ^ ^  ; ['root -> LocalVariableDeclaration']
after@1 batch0 x: -13.026483535766602: root LocalVariableDeclaration ^ ^  ; ['root -> LocalVariableDeclaration']
before@1 batch1 x: -12.960622787475586: root member-member getBasicRow_ter ^ ^  ^ ^  ; ['copy-member']
after@1 batch1 x: -12.960622787475586: root member-member getBasicRow_ter ^ ^  ^ ^  ; ['copy-member']
copynode -0.14709264039993286:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.14709264039993286:  root modified ^ LocalVariableDeclaration ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration']
copynode -1.9918973445892334:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -1.9918973445892334:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.14709264039993286:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-BasicType']
copynode -0.14709264039993286:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -1.9918973445892334:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -1.9918973445892334:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -0.14709264039993286:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -1.9918973445892334:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -1.9918973445892334:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -1.9918973445892334:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -1.9918973445892334:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -0.14709264039993286:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -0.14709264039993286:  root modified ^ control ^ ^ ; ['root -> modified', 'root -> control']
copynode -1.9918973445892334:  root add ^ member-member getNumObjectiveFunctions_ter ^ ^  ^ ^ ; ['root -> add', 'copy-member']
copynode -0.14709264039993286:  root modified ^ parameters ^ ^ ; ['root -> modified', 'root -> parameters']
copynode -1.9918973445892334:  root add ^ parameters ^ ^ ; ['root -> add', 'root -> parameters']
copynode -0.14709264039993286:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -10.107929229736328:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -10.57267951965332:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -10.445884704589844:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -11.02810001373291:  root member-member getNumObjectiveFunctions_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -11.250417709350586:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -11.445804595947266:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -0.14709264039993286:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter']
copynode -10.445884704589844:  root ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -10.445884704589844:  root ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -10.107929229736328:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -13.026483535766602:  root LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -11.02810001373291:  root member-member getNumObjectiveFunctions_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -11.445804595947266:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -11.250417709350586:  root StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -13.026483535766602:  root LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -11.02810001373291:  root member-member getNumObjectiveFunctions_ter ^ ^  equals_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.02810001373291:  root member-member getNumObjectiveFunctions_ter ^ ^  getEntry_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.02810001373291:  root member-member getNumObjectiveFunctions_ter ^ ^  equals_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.02810001373291:  root member-member getNumObjectiveFunctions_ter ^ ^  getEntry_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.445804595947266:  root parameters FormalParameter modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ name par0 ^ ^ ^ FormalParameter type BasicType name boolean_ter ^ ^ ^ ^ name par1 ^ ^ ^ ^ ^ ; ['root -> parameters', 'copy-parameters']
copynode -11.02810001373291:  root member-member getNumObjectiveFunctions_ter ^ ^  getHeight_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.445804595947266:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -11.02810001373291:  root member-member getNumObjectiveFunctions_ter ^ ^  getNumObjectiveFunctions_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -13.026483535766602:  root LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -13.026483535766602:  root LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -11.445804595947266:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -11.02810001373291:  root member-member getNumObjectiveFunctions_ter ^ ^  add_ter ^ ^ ^ ; ['copy-member', 'member -> add_ter']
copynode -11.02810001373291:  root member-member getNumObjectiveFunctions_ter ^ ^  get_ter ^ ^ ^ ; ['copy-member', 'member -> get_ter']
copynode -10.107929229736328:  root return_type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'copy-return_type']
copynode -10.107929229736328:  root return_type par0 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -10.445884704589844:  root ReturnStatement par0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -13.026483535766602:  root LocalVariableDeclaration par0 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -13.026483535766602:  root LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -10.57267951965332:  root IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 0.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.107929229736328:  root return_type par1 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -13.026483535766602:  root LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -10.445884704589844:  root ReturnStatement par1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -10.57267951965332:  root IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 0.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -13.026483535766602:  root LocalVariableDeclaration par1 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -11.445804595947266:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -10.107929229736328:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -13.026483535766602:  root LocalVariableDeclaration unknown ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'start -> unknown']
copynode -11.445804595947266:  root parameters loc0 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.445804595947266:  root parameters loc2 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.445804595947266:  root parameters loc1 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.445804595947266:  root parameters par0 ^ ^ ^ ; ['root -> parameters', 'copy-FormalParameter']
copynode -10.57267951965332:  root IfStatement par1 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -10.57267951965332:  root IfStatement par0 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -10.57267951965332:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -11.250417709350586:  root StatementExpression par0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -11.250417709350586:  root StatementExpression par1 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -11.250417709350586:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -10.57267951965332:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -10.107929229736328:  root return_type loc2 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.445884704589844:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -10.107929229736328:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.107929229736328:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.57267951965332:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -10.445884704589844:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.445884704589844:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -13.026483535766602:  root LocalVariableDeclaration loc2 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-VariableDeclarator']
copynode -11.250417709350586:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -10.445884704589844:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.250417709350586:  root StatementExpression loc1 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -11.250417709350586:  root StatementExpression loc2 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -10.57267951965332:  root IfStatement loc2 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -11.250417709350586:  root StatementExpression loc0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -10.57267951965332:  root IfStatement loc1 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -0.1378018707036972:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.1378018707036972:  root modified ^ LocalVariableDeclaration ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration']
copynode -0.1378018707036972:  root modified ^ member-member getBasicRow_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -2.0517232418060303:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -2.0517232418060303:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.1378018707036972:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -2.0517232418060303:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -2.0517232418060303:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -0.1378018707036972:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -2.0517232418060303:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -2.0517232418060303:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -2.0517232418060303:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -2.0517232418060303:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -0.1378018707036972:  root modified ^ control ^ ^ ; ['root -> modified', 'root -> control']
copynode -2.0517232418060303:  root add ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  ^ ^ ; ['root -> add', 'copy-member']
copynode -0.1378018707036972:  root modified ^ parameters ^ ^ ; ['root -> modified', 'root -> parameters']
copynode -0.1378018707036972:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -2.0517232418060303:  root add ^ parameters ^ ^ ; ['root -> add', 'root -> parameters']
copynode -0.1378018707036972:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -11.232877731323242:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -0.1378018707036972:  root modified ^ TernaryExpression ^ ^ ; ['root -> modified', 'root -> TernaryExpression']
copynode -11.346319198608398:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -11.325477600097656:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -11.796072959899902:  root member-member getNegativeDecisionVariableOffset_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -11.95136833190918:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -12.200468063354492:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -12.960622787475586:  root member-member getBasicRow_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -11.325477600097656:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -11.232877731323242:  root ReturnStatement expression ClassCreator type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier f_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member getValue_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -12.200468063354492:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -11.95136833190918:  root StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value Literal value 0_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.796072959899902:  root member-member getNegativeDecisionVariableOffset_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -11.95136833190918:  root StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.796072959899902:  root member-member getNegativeDecisionVariableOffset_ter ^ ^  getOriginalNumDecisionVariables_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.95136833190918:  root StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.796072959899902:  root member-member getNegativeDecisionVariableOffset_ter ^ ^  getNumObjectiveFunctions_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.960622787475586:  root member-member getBasicRow_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -11.796072959899902:  root member-member getNegativeDecisionVariableOffset_ter ^ ^  getEntry_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.796072959899902:  root member-member getNegativeDecisionVariableOffset_ter ^ ^  getRhsOffset_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.960622787475586:  root member-member getBasicRow_ter ^ ^  getBasicRow_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.200468063354492:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -11.796072959899902:  root member-member getNegativeDecisionVariableOffset_ter ^ ^  getRhsOffset_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.960622787475586:  root member-member getBasicRow_ter ^ ^  getEntry_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.796072959899902:  root member-member getNegativeDecisionVariableOffset_ter ^ ^  getNegativeDecisionVariableOffset_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.796072959899902:  root member-member getNegativeDecisionVariableOffset_ter ^ ^  getValue_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.796072959899902:  root member-member getNegativeDecisionVariableOffset_ter ^ ^  getName_ter ^ ^ ^ ; ['copy-member', 'member -> getName_ter']
copynode -12.960622787475586:  root member-member getBasicRow_ter ^ ^  getEntry_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.960622787475586:  root member-member getBasicRow_ter ^ ^  getBasicRow_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.200468063354492:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -12.960622787475586:  root member-member getBasicRow_ter ^ ^  contains_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.325477600097656:  root return_type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'copy-return_type']
copynode -12.960622787475586:  root member-member getBasicRow_ter ^ ^  debug_ter ^ ^ ^ ; ['copy-member', 'member -> debug_ter']
copynode -12.960622787475586:  root member-member getBasicRow_ter ^ ^  par0 ^ ^ ^ ; ['copy-member', 'member -> par0']
copynode -12.960622787475586:  root member-member getBasicRow_ter ^ ^  add_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.200468063354492:  root parameters loc0 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.346319198608398:  root IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value Literal value 0_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.200468063354492:  root parameters loc2 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -12.200468063354492:  root parameters loc3 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -12.200468063354492:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -12.200468063354492:  root parameters loc5 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.325477600097656:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -12.200468063354492:  root parameters loc1 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.346319198608398:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -11.346319198608398:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -11.95136833190918:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -11.232877731323242:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -11.325477600097656:  root return_type loc2 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.325477600097656:  root return_type loc3 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.325477600097656:  root return_type loc5 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.325477600097656:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.346319198608398:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -11.325477600097656:  root return_type loc4 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.325477600097656:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.232877731323242:  root ReturnStatement loc4 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.232877731323242:  root ReturnStatement loc5 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.232877731323242:  root ReturnStatement loc3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.232877731323242:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.232877731323242:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.232877731323242:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.95136833190918:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -11.95136833190918:  root StatementExpression loc1 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -11.346319198608398:  root IfStatement loc4 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -11.95136833190918:  root StatementExpression loc4 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -11.346319198608398:  root IfStatement loc5 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -11.346319198608398:  root IfStatement loc1 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -11.346319198608398:  root IfStatement loc3 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -11.346319198608398:  root IfStatement loc2 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -11.95136833190918:  root StatementExpression loc5 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -11.95136833190918:  root StatementExpression loc2 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
before@2 batch0 x: -33.91310501098633: root IfStatement loc1 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch0 x: -33.91310501098633: root IfStatement loc1 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch1 x: -34.92786979675293: root StatementExpression loc2 ^ ^ ^  ; ['root -> StatementExpression', 'copy-VariableDeclarator']
after@2 batch1 x: -34.92786979675293: root StatementExpression loc2 ^ ^ ^  ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -0.30614297091960907:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -2.228701412677765:  root modified ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -2.4061364829540253:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -3.1468286514282227:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -4.414096653461456:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name']
copynode -0.30614297091960907:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  getEntry_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.228701412677765:  root modified ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -0.30614297091960907:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  getEntry_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -0.30614297091960907:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  equals_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -5.167130291461945:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -0.30614297091960907:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  getHeight_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -0.30614297091960907:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  equals_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -0.30614297091960907:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -6.5840370655059814:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -4.414096653461456:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -4.414096653461456:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -0.30614297091960907:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> par0']
copynode -4.414096653461456:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name boolean_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -3.1468286514282227:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -0.30614297091960907:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  getNumObjectiveFunctions_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -7.794554531574249:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.228701412677765:  root modified ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -0.30614297091960907:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter']
copynode -4.414096653461456:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -7.427199125289917:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -8.27979588508606:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -7.427199125289917:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -8.367003202438354:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -8.563019514083862:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-control']
copynode -8.726823091506958:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -6.5840370655059814:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -8.911995708942413:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.427199125289917:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -9.114218533039093:  root modified ^ control EnhancedForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl']
copynode -9.146424114704132:  root modified ^ parameters FormalParameter ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter']
copynode -9.128976583480835:  root add ^ member-member getNumObjectiveFunctions_ter ^ ^  unknown ^ ^ ^ ; ['root -> add', 'copy-member', 'start -> unknown']
copynode -5.167130291461945:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.228701412677765:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -2.228701412677765:  root modified ^ LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -4.414096653461456:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions']
copynode -9.76046109199524:  root add ^ parameters FormalParameter ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter']
copynode -6.5840370655059814:  root add ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -8.563019514083862:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -10.573050388891716:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -10.342518419027328:  root return_type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -10.342518419027328:  root return_type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -11.095760963857174:  root member-member getNumObjectiveFunctions_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown', 'root -> End']
copynode -11.270563835278153:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -10.573050388891716:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -11.04300844669342:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -11.873242199420929:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter', 'root -> End']
copynode -11.932716488838196:  root ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.5840370655059814:  root add ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -11.962177395820618:  root ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -11.497048020362854:  root parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -2.228701412677765:  root modified ^ LocalVariableDeclaration par0 ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -11.095760963857174:  root member-member getNumObjectiveFunctions_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['copy-member', 'start -> unknown', 'root -> StatementExpression']
copynode -10.342518419027328:  root return_type ReferenceType name ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -11.497048020362854:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -2.4061364829540253:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 0.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -11.04300844669342:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -8.563019514083862:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -9.128976583480835:  root add ^ member-member getNumObjectiveFunctions_ter ^ ^  meth0 ^ ^ ^ ; ['root -> add', 'copy-member', 'member -> meth0']
copynode -11.270563835278153:  root StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -8.911995708942413:  root modified ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -2.228701412677765:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -8.911995708942413:  root modified ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -10.573050388891716:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -11.04300844669342:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -2.228701412677765:  root modified ^ LocalVariableDeclaration par1 ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -8.563019514083862:  root add ^ control par1 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -12.440747022628784:  root return_type BasicType name int_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'copy-BasicType']
copynode -9.114218533039093:  root modified ^ control ForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> ForControl']
copynode -8.726823091506958:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -10.342518419027328:  root return_type ReferenceType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name']
copynode -2.4061364829540253:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 0.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -13.147416144609451:  root LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -8.726823091506958:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -9.76046109199524:  root add ^ parameters ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> End']
copynode -2.228701412677765:  root modified ^ LocalVariableDeclaration unknown ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'start -> unknown']
copynode -11.04300844669342:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -9.114218533039093:  root modified ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> control', 'copy-control']
copynode -9.146424114704132:  root modified ^ parameters ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> End']
copynode -9.128976583480835:  root add ^ member-member getNumObjectiveFunctions_ter ^ ^  equals_ter ^ ^ ^ ; ['root -> add', 'copy-member', 'copy-member']
copynode -6.5840370655059814:  root add ^ LocalVariableDeclaration par0 ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -11.095760963857174:  root member-member getNumObjectiveFunctions_ter ^ ^  unknown ^ ^ IfStatement ^ ^ ; ['copy-member', 'start -> unknown', 'root -> IfStatement']
copynode -12.440747022628784:  root return_type BasicType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'BasicType -> name']
copynode -8.563019514083862:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -6.5840370655059814:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.128976583480835:  root add ^ member-member getNumObjectiveFunctions_ter ^ ^  equals_ter ^ ^ ^ ; ['root -> add', 'copy-member', 'copy-member']
copynode -9.76046109199524:  root add ^ parameters FormalParameter modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ name par0 ^ ^ ^ FormalParameter type BasicType name boolean_ter ^ ^ ^ ^ name par1 ^ ^ ^ ^ ^ ; ['root -> add', 'root -> parameters', 'copy-parameters']
copynode -6.5840370655059814:  root add ^ LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -9.128976583480835:  root add ^ member-member getNumObjectiveFunctions_ter ^ ^  getEntry_ter ^ ^ ^ ; ['root -> add', 'copy-member', 'copy-member']
copynode -12.440747022628784:  root return_type BasicType name int_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'copy-BasicType']
copynode -11.095760963857174:  root member-member getNumObjectiveFunctions_ter ^ ^  unknown ^ ^ ReturnStatement ^ ^ ; ['copy-member', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.5840370655059814:  root add ^ LocalVariableDeclaration par1 ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -8.726823091506958:  root add ^ ReturnStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement']
copynode -9.128976583480835:  root add ^ member-member getNumObjectiveFunctions_ter ^ ^  getEntry_ter ^ ^ ^ ; ['root -> add', 'copy-member', 'copy-member']
copynode -0.6214173883199692:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -1.5477889627218246:  root modified ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -2.1833386272192:  root modified ^ member-member getBasicRow_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -2.458830177783966:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -3.214792490005493:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -0.6214173883199692:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  getOriginalNumDecisionVariables_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -4.928741678595543:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -0.6214173883199692:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  getNumObjectiveFunctions_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.5477889627218246:  root modified ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -0.6214173883199692:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  getRhsOffset_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -0.6214173883199692:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  getRhsOffset_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -0.6214173883199692:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  getEntry_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -6.654255151748657:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -0.6214173883199692:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter']
copynode -0.6214173883199692:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -0.6214173883199692:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  getNegativeDecisionVariableOffset_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -0.6214173883199692:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  getEntry_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -7.57135796546936:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -2.1833386272192:  root modified ^ member-member getBasicRow_ter ^ ^  getBasicRow_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -8.007932886481285:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -3.214792490005493:  root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value Literal value 0_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.5477889627218246:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ operandr MemberReference member loc4 ^ ^ ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -2.1833386272192:  root modified ^ member-member getBasicRow_ter ^ ^  getEntry_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.214792490005493:  root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.214792490005493:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -8.49370789527893:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -2.1833386272192:  root modified ^ member-member getBasicRow_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -2.1833386272192:  root modified ^ member-member getBasicRow_ter ^ ^  getEntry_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.1833386272192:  root modified ^ member-member getBasicRow_ter ^ ^  contains_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -8.852150201797485:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -1.5477889627218246:  root modified ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type ReferenceType name HashSet_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.08241868019104:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -9.204575285315514:  root modified ^ control EnhancedForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl']
copynode -7.57135796546936:  root add ^ ReturnStatement expression ClassCreator type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier f_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member getValue_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -8.681333780288696:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc4 ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-control']
copynode -9.417806386947632:  root add ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  unknown ^ ^ ^ ; ['root -> add', 'copy-member', 'start -> unknown']
copynode -1.5477889627218246:  root modified ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -9.63609193265438:  root modified ^ parameters FormalParameter ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter']
copynode -2.1833386272192:  root modified ^ member-member getBasicRow_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> par0']
copynode -2.1833386272192:  root modified ^ member-member getBasicRow_ter ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -4.928741678595543:  root modified ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value Literal value 0_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.654255151748657:  root add ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type ReferenceType name HashSet_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -2.1833386272192:  root modified ^ member-member getBasicRow_ter ^ ^  getBasicRow_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.1833386272192:  root modified ^ member-member getBasicRow_ter ^ ^  getValue_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -10.114893674850464:  root add ^ parameters FormalParameter ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter']
copynode -4.928741678595543:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.654255151748657:  root add ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ operandr MemberReference member loc4 ^ ^ ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -8.681333780288696:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -4.928741678595543:  root modified ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -10.475543722510338:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -1.5477889627218246:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -1.5477889627218246:  root modified ^ LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -6.654255151748657:  root add ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -1.5477889627218246:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ArrayCreator type BasicType name double_ter ^ ^ ^ ^ dimensions MethodInvocation member getOriginalNumDecisionVariables_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.654255151748657:  root add ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ArrayCreator type BasicType name double_ter ^ ^ ^ ^ dimensions MethodInvocation member getOriginalNumDecisionVariables_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.305130705237389:  root modified ^ TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ; ['root -> modified', 'root -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -11.2855782546103:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -6.654255151748657:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -11.825066139921546:  root member-member getNegativeDecisionVariableOffset_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown', 'root -> End']
copynode -11.346637716924306:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -11.977028639987111:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -11.491993859410286:  root return_type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -11.346637716924306:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -9.204575285315514:  root modified ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc4 ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> control', 'copy-control']
copynode -10.114893674850464:  root add ^ parameters ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> End']
copynode -1.5477889627218246:  root modified ^ LocalVariableDeclaration unknown ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'start -> unknown']
copynode -12.289575479924679:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -12.289575479924679:  root parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -12.991551723331213:  root member-member getBasicRow_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown', 'root -> End']
copynode -11.491993859410286:  root return_type ReferenceType name Set_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -8.49370789527893:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -11.491993859410286:  root return_type ReferenceType name ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -8.49370789527893:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -8.681333780288696:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -1.5477889627218246:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.346637716924306:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -11.2855782546103:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -9.417806386947632:  root add ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  meth0 ^ ^ ^ ; ['root -> add', 'copy-member', 'member -> meth0']
copynode -9.204575285315514:  root modified ^ control ForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> ForControl']
copynode -2.458830177783966:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value Literal value 0_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -11.977028639987111:  root StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -11.825066139921546:  root member-member getNegativeDecisionVariableOffset_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['copy-member', 'start -> unknown', 'root -> StatementExpression']
copynode -14.269673824310303:  root ReturnStatement expression ClassCreator type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier f_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member getValue_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.654255151748657:  root add ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -11.491993859410286:  root return_type ReferenceType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name']
copynode -11.491993859410286:  root return_type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -6.654255151748657:  root add ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.305130705237389:  root modified ^ TernaryExpression condition ^ ^ ^ ; ['root -> modified', 'root -> TernaryExpression', 'TernaryExpression -> condition']
copynode -9.417806386947632:  root add ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  getOriginalNumDecisionVariables_ter ^ ^ ^ ; ['root -> add', 'copy-member', 'copy-member']
copynode -10.475543722510338:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier f_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member getValue_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -11.491993859410286:  root return_type ReferenceType name HashSet_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -12.991551723331213:  root member-member getBasicRow_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['copy-member', 'start -> unknown', 'root -> StatementExpression']
copynode -13.969378471374512:  root return_type BasicType name double_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'copy-BasicType']
copynode -11.491993859410286:  root return_type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -9.417806386947632:  root add ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  getEntry_ter ^ ^ ^ ; ['root -> add', 'copy-member', 'copy-member']
copynode -9.63609193265438:  root modified ^ parameters ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> End']
copynode -13.969378471374512:  root return_type BasicType name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'copy-BasicType']
copynode -13.969378471374512:  root return_type BasicType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'BasicType -> name']
before@3 batch0 x: -14.81930661201477: root add ^ member-member getNumObjectiveFunctions_ter ^ ^  getEntry_ter ^ ^ ^  ; ['root -> add', 'copy-member', 'copy-member']
after@3 batch0 x: -14.81930661201477: root add ^ member-member getNumObjectiveFunctions_ter ^ ^  getEntry_ter ^ ^ ^  ; ['root -> add', 'copy-member', 'copy-member']
before@3 batch1 x: -15.239402890205383: root return_type BasicType name ^ ^ ^ ^  ; ['root -> return_type', 'return_type -> BasicType', 'BasicType -> name']
after@3 batch1 x: -15.239402890205383: root return_type BasicType name ^ ^ ^ ^  ; ['root -> return_type', 'return_type -> BasicType', 'BasicType -> name']
copynode -0.34905824437737465:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -2.305720791220665:  root modified ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -2.406448561960133:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -3.162792833521962:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.406448561960133:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.162792833521962:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -2.406448561960133:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -4.896672889590263:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  getEntry_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.927943766117096:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers']
copynode -4.702561289072037:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> long_ter']
copynode -5.144897148013115:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  getEntry_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.165248557925224:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  equals_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.669105216860771:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  getHeight_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.722327873110771:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  equals_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.182456759735942:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -4.702561289072037:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> int_ter']
copynode -5.182456759735942:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -6.1920949667692184:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -6.716996759176254:  root add ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -3.162792833521962:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -6.889510691165924:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -7.145102798938751:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -7.149452373385429:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> par0', 'root -> End']
copynode -4.927943766117096:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter']
copynode -7.255837976932526:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name boolean_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -7.314124584197998:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.524390861392021:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  getNumObjectiveFunctions_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -2.305720791220665:  root modified ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -2.406448561960133:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -2.406448561960133:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 0.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -8.099683925509453:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter', 'root -> End']
copynode -8.172511637210846:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -8.214475750923157:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -2.406448561960133:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -3.162792833521962:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -8.454378128051758:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.794759592579794:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -7.794759592579794:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -2.406448561960133:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -8.349427834153175:  root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -8.944099187850952:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers']
copynode -8.543538898229599:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -9.151251912117004:  root modified ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -9.19373358041048:  root add ^ member-member getNumObjectiveFunctions_ter ^ ^  unknown ^ ^ ^ ; ['root -> add', 'copy-member', 'start -> unknown', 'root -> End']
copynode -9.374732315540314:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -8.713329568505287:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-control', 'root -> End']
copynode -8.961471159011126:  root modified ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -9.115617632865906:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -9.54810506105423:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -8.349427834153175:  root add ^ WhileStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MethodInvocation']
copynode -2.406448561960133:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -2.305720791220665:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'copy-type']
copynode -9.662604629993439:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators', 'copy-modifiers']
copynode -6.716996759176254:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -4.702561289072037:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name boolean_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> boolean_ter']
copynode -9.1652469355613:  root modified ^ parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -3.162792833521962:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -5.182456759735942:  root modified ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -8.349427834153175:  root add ^ WhileStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MemberReference']
copynode -7.314124584197998:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -7.794759592579794:  root modified ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -8.543538898229599:  root add ^ AssertStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MemberReference']
copynode -9.1652469355613:  root modified ^ parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -9.773387730121613:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name long_ter ^ ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions', 'name -> long_ter']
copynode -8.543538898229599:  root add ^ AssertStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MethodInvocation']
copynode -8.713329568505287:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc2 ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> control', 'copy-control', 'root -> StatementExpression']
copynode -2.406448561960133:  root add ^ IfStatement condition Cast ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast']
copynode -4.702561289072037:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name']
copynode -9.832768589258194:  root add ^ parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -8.713329568505287:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> control', 'copy-control', 'root -> ReturnStatement']
copynode -8.961471159011126:  root modified ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -9.832768589258194:  root add ^ parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -5.182456759735942:  root modified ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -7.314124584197998:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -3.162792833521962:  root add ^ StatementExpression expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> BinaryOperation']
copynode -4.702561289072037:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name Integer_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name']
copynode -8.944099187850952:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter']
copynode -9.773387730121613:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions', 'name -> int_ter']
copynode -2.305720791220665:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'copy-type']
copynode -11.06371021270752:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -10.460514783859253:  root add ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -3.162792833521962:  root add ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -11.152788707811851:  root IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -11.181238859891891:  root return_type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType', 'root -> End']
copynode -2.305720791220665:  root modified ^ LocalVariableDeclaration type loc1 ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'copy-VariableDeclarator']
copynode -8.713329568505287:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc2 ^ ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> control', 'copy-control', 'root -> IfStatement']
copynode -8.961471159011126:  root modified ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -9.115617632865906:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -0.34905824437737465:  root modified ^ member-member getNumObjectiveFunctions_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> StatementExpression']
copynode -3.162792833521962:  root add ^ StatementExpression expression ClassCreator ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> ClassCreator']
copynode -4.702561289072037:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name boolean_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name']
copynode -4.702561289072037:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name Object_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> Object_ter']
copynode -4.702561289072037:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> par0']
copynode -11.441473692655563:  root return_type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType', 'root -> End']
copynode -9.115617632865906:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -2.406448561960133:  root add ^ IfStatement condition TernaryExpression ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> TernaryExpression']
copynode -0.6708382293581963:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -1.566699005663395:  root modified ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -2.195346200838685:  root modified ^ member-member getBasicRow_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -2.459064749578829:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -3.233242029324174:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.459064749578829:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -4.5549605935812:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  getOriginalNumDecisionVariables_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -2.459064749578829:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -3.233242029324174:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -4.94431312289089:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -5.261669501662254:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  getNumObjectiveFunctions_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.739193305373192:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  getRhsOffset_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.725806102156639:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter']
copynode -4.94431312289089:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -6.5564368814229965:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  getRhsOffset_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.707159385085106:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  getEntry_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.75830002874136:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -7.06598936021328:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter', 'root -> End']
copynode -7.305333003401756:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -7.570539817214012:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  getNegativeDecisionVariableOffset_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -3.233242029324174:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -7.608471259474754:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  getEntry_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -2.459064749578829:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.971367821097374:  root modified ^ member-member getBasicRow_ter ^ ^  getBasicRow_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -2.459064749578829:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -8.158907175064087:  root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value Literal value 0_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.459064749578829:  root add ^ IfStatement condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -8.279015883803368:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ operandr MemberReference member loc4 ^ ^ ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -8.367377266287804:  root modified ^ member-member getBasicRow_ter ^ ^  getEntry_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.784308776259422:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -2.459064749578829:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -2.459064749578829:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -8.43895936012268:  root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -8.445142984390259:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.459064749578829:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -3.233242029324174:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -8.008153269140166:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -2.459064749578829:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -8.759501919150352:  root modified ^ member-member getBasicRow_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -8.77436350286007:  root modified ^ member-member getBasicRow_ter ^ ^  getEntry_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -8.008153269140166:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -8.92206285893917:  root modified ^ member-member getBasicRow_ter ^ ^  contains_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -9.073747023940086:  root modified ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type ReferenceType name HashSet_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -3.233242029324174:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -9.247503750026226:  root modified ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -9.26055383682251:  root add ^ ReturnStatement expression ClassCreator type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier f_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member getValue_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.784308776259422:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -8.927217274904251:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -9.447122670710087:  root add ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  unknown ^ ^ ^ ; ['root -> add', 'copy-member', 'start -> unknown', 'root -> End']
copynode -7.784308776259422:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -9.269025266170502:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc4 ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-control', 'root -> End']
copynode -9.668109402060509:  root modified ^ member-member getBasicRow_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> par0', 'root -> End']
copynode -9.106431333348155:  root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -9.87027071416378:  root modified ^ member-member getBasicRow_ter ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -9.965967401862144:  root modified ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value Literal value 0_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -1.566699005663395:  root modified ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -10.123908028006554:  root modified ^ member-member getBasicRow_ter ^ ^  getBasicRow_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -10.188423618674278:  root modified ^ member-member getBasicRow_ter ^ ^  getValue_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -10.304952844977379:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -10.3313148021698:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -9.64469100534916:  root modified ^ parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -10.427435144782066:  root modified ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -9.64469100534916:  root modified ^ parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -10.487710083834827:  root modified ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -10.546689376235008:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -7.784308776259422:  root add ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -6.75830002874136:  root add ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -9.106431333348155:  root add ^ WhileStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MethodInvocation']
copynode -8.927217274904251:  root add ^ AssertStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MemberReference']
copynode -10.000181198120117:  root add ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type ReferenceType name HashSet_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -8.927217274904251:  root add ^ AssertStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MethodInvocation']
copynode -3.233242029324174:  root add ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -10.77443252503872:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators', 'modifiers -> final_ter']
copynode -9.106431333348155:  root add ^ WhileStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MemberReference']
copynode -10.314190149307251:  root add ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ operandr MemberReference member loc4 ^ ^ ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -4.94431312289089:  root modified ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -10.297852963209152:  root add ^ parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -11.012688979506493:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ArrayCreator type BasicType name double_ter ^ ^ ^ ^ dimensions MethodInvocation member getOriginalNumDecisionVariables_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -10.297852963209152:  root add ^ parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -2.195346200838685:  root modified ^ member-member getBasicRow_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> StatementExpression']
copynode -9.269025266170502:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc4 ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> control', 'copy-control', 'root -> StatementExpression']
copynode -8.008153269140166:  root modified ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -8.158907175064087:  root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value Literal value 0_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -4.94431312289089:  root modified ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -10.000181198120117:  root add ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type ReferenceType name HashSet_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> StatementExpression']
copynode -0.6708382293581963:  root modified ^ member-member getNegativeDecisionVariableOffset_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> StatementExpression']
copynode -11.165096521377563:  root add ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ArrayCreator type BasicType name double_ter ^ ^ ^ ^ dimensions MethodInvocation member getOriginalNumDecisionVariables_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -8.158907175064087:  root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value Literal value 0_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -10.895340204238892:  root add ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -8.445142984390259:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -8.445142984390259:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -8.43895936012268:  root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -11.339752856642008:  root modified ^ TernaryExpression condition BinaryOperation ^ ^ if_true ^ if_false ^ ^ ^ ; ['root -> modified', 'root -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation']
copynode -8.43895936012268:  root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -3.233242029324174:  root add ^ StatementExpression expression ClassCreator ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> ClassCreator']
copynode -10.000181198120117:  root add ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type ReferenceType name HashSet_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> IfStatement']
before@4 batch0 x: -11.558438383042812: root member-member getNumObjectiveFunctions_ter ^ ^  unknown ^ ^ ^  ; ['copy-member', 'start -> unknown', 'root -> End']
after@4 batch0 x: -11.558438383042812: root member-member getNumObjectiveFunctions_ter ^ ^  unknown ^ ^ ^  ; ['copy-member', 'start -> unknown', 'root -> End']
before@4 batch1 x: -11.936078667640686: root add ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type ReferenceType name HashSet_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement ^ ^  ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> IfStatement']
after@4 batch1 x: -11.936078667640686: root add ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type ReferenceType name HashSet_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement ^ ^  ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> IfStatement']
copynode -2.3223490342497826:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -2.8928270826872904:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.507903965190053:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -3.511676700785756:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.511676700785756:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.6720839331683237:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.6720839331683237:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -5.097600907087326:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> long_ter', 'root -> End']
copynode -5.057734563946724:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType']
copynode -3.511676700785756:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.834052045160206:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -3.511676700785756:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.6720839331683237:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.817087916657329:  root modified ^ StatementExpression expression MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.958936721086502:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> int_ter', 'root -> End']
copynode -5.975262491032481:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -3.6720839331683237:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.834052045160206:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -3.6720839331683237:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.6720839331683237:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -2.3223490342497826:  root modified ^ LocalVariableDeclaration type BasicType name ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name']
copynode -3.6720839331683237:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -6.766368504613638:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -6.8540286142379045:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -3.6720839331683237:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -7.202162325382233:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType']
copynode -2.8928270826872904:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.834052045160206:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.6720839331683237:  root add ^ IfStatement condition MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.6720839331683237:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -8.327209146693349:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -3.511676700785756:  root add ^ StatementExpression expression MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -3.511676700785756:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -7.836442191415699:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -8.544885954426718:  root modified ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.7076926082372665:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -8.013819892221363:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 0.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.7076926082372665:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -8.6652760119905:  root modified ^ IfStatement condition MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -2.3223490342497826:  root modified ^ LocalVariableDeclaration type BasicType name ^ dimensions ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name dimensions']
copynode -8.322705466562184:  root add ^ IfStatement condition This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors']
copynode -3.511676700785756:  root add ^ StatementExpression expression MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -9.062244787812233:  root add ^ WhileStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -9.108466416597366:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType']
copynode -9.143447071313858:  root add ^ AssertStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.836442191415699:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> ReturnStatement']
copynode -6.766368504613638:  root add ^ LocalVariableDeclaration type BasicType name ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name']
copynode -5.057734563946724:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> ReferenceType']
copynode -2.3223490342497826:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -8.013819892221363:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 0.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> ReturnStatement']
copynode -9.480969935655594:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -2.3223490342497826:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -8.96284027796355:  root add ^ IfStatement condition Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal', 'Literal -> value']
copynode -4.834052045160206:  root add ^ IfStatement condition MemberReference prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -9.445910204201937:  root modified ^ ReturnStatement expression MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -9.864837557077408:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name boolean_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> boolean_ter', 'root -> End']
copynode -2.3223490342497826:  root modified ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -8.322705466562184:  root add ^ IfStatement condition This qualifier ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> qualifier selectors']
copynode -8.322705466562184:  root add ^ IfStatement condition This prefix_operators ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors']
copynode -6.8540286142379045:  root add ^ StatementExpression expression MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -3.511676700785756:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -7.836442191415699:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> StatementExpression']
copynode -9.735461696982384:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'copy-type', 'declarators -> VariableDeclarator']
copynode -9.866600902751088:  root modified ^ parameters FormalParameter modifiers final_ter ^ ^ type ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name', 'copy-modifiers']
copynode -10.091207265853882:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement', 'IfStatement -> condition']
copynode -9.837651818990707:  root add ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -10.14002880640328:  root modified ^ parameters FormalParameter type BasicType ^ ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name', 'type -> BasicType']
copynode -9.684140403085621:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -9.975241450592875:  root modified ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -8.013819892221363:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 0.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> StatementExpression']
copynode -10.105979174375534:  root add ^ AssertStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -9.98428000509739:  root add ^ WhileStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -10.09613641219039:  root modified ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -8.96284027796355:  root add ^ IfStatement condition Literal selectors ^ value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal', 'Literal -> selectors value']
copynode -3.511676700785756:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -10.51488533616066:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name', 'root -> End']
copynode -1.566970183950616:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -3.0050314940017415:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.418755302205682:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.418755302205682:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.6402358091872884:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -3.6402358091872884:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.418755302205682:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.144348854199052:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -4.8529470242065145:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -1.566970183950616:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ arguments ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -3.418755302205682:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.227564348839223:  root modified ^ StatementExpression expression MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.853417202830315:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType']
copynode -3.6402358091872884:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.8529470242065145:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -1.566970183950616:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name']
copynode -6.367845966480672:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -5.227564348839223:  root modified ^ StatementExpression expression MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.6402358091872884:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.6402358091872884:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.6402358091872884:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -3.6402358091872884:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -6.7775699738413095:  root add ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -1.566970183950616:  root modified ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -3.6402358091872884:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -3.6402358091872884:  root add ^ IfStatement condition MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -7.596102708950639:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -3.6402358091872884:  root add ^ IfStatement condition MethodInvocation member getOriginalNumDecisionVariables_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.766505507330294:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -1.566970183950616:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -4.8529470242065145:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -1.566970183950616:  root modified ^ LocalVariableDeclaration type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.227564348839223:  root modified ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -8.057591704229708:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -3.418755302205682:  root add ^ StatementExpression expression MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -8.404679283499718:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -1.566970183950616:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ sub_type ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name sub_type']
copynode -8.269679335455294:  root add ^ IfStatement condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -3.418755302205682:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -8.608194822445512:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -8.405125883917208:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -8.79334951385681:  root modified ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -1.566970183950616:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ dimensions ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name dimensions']
copynode -8.59371879468381:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference qualifier loc0 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -8.443498400549288:  root add ^ IfStatement condition This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors']
copynode -1.566970183950616:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -4.8529470242065145:  root add ^ IfStatement condition MemberReference prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -1.566970183950616:  root modified ^ LocalVariableDeclaration type ReferenceType name HashSet_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -3.0050314940017415:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ operandr MemberReference member loc4 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.596102708950639:  root add ^ StatementExpression expression MemberReference selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> selectors member']
copynode -8.700364360658568:  root modified ^ IfStatement condition MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -9.421165496110916:  root add ^ AssertStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -9.367037758231163:  root add ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -5.227564348839223:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.418755302205682:  root add ^ StatementExpression expression MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -8.735418108801241:  root add ^ IfStatement condition Literal selectors ^ value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal', 'Literal -> selectors value']
copynode -3.418755302205682:  root add ^ StatementExpression expression MethodInvocation member getOriginalNumDecisionVariables_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.227564348839223:  root modified ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -9.673131672665477:  root add ^ WhileStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.0050314940017415:  root add ^ IfStatement condition BinaryOperation operator -_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.418755302205682:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -8.735418108801241:  root add ^ IfStatement condition Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal', 'Literal -> value']
copynode -9.249476427212358:  root add ^ StatementExpression expression SuperMethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member']
copynode -7.766505507330294:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> StatementExpression']
copynode -8.443498400549288:  root add ^ IfStatement condition This prefix_operators ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors']
copynode -8.700364360658568:  root modified ^ IfStatement condition MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.766505507330294:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member contains_ter ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> ReturnStatement']
copynode -8.443498400549288:  root add ^ IfStatement condition This qualifier ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> qualifier selectors']
copynode -3.418755302205682:  root add ^ StatementExpression expression MethodInvocation selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors arguments member']
before@5 batch0 x: -10.51496699785639: root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name', 'root -> End']
after@5 batch0 x: -10.51496699785639: root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name', 'root -> End']
before@5 batch1 x: -10.138149032369256: root add ^ StatementExpression expression MethodInvocation selectors ^ arguments ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors arguments member']
after@5 batch1 x: -10.138149032369256: root add ^ StatementExpression expression MethodInvocation selectors ^ arguments ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors arguments member']
copynode -2.338922794908285:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -2.9014679997053463:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -2.9014679997053463:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.831421764567494:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.508510924584698:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -4.907528598123463:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.083128650003346:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.123188264667988:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType']
copynode -2.338922794908285:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -2.9014679997053463:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.508510924584698:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -2.9014679997053463:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -4.565283687785268:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -2.9014679997053463:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -5.832916809245944:  root modified ^ StatementExpression expression MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -5.138564022257924:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.223047156148823:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -2.9014679997053463:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -4.565283687785268:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.135944444948109:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.325365932658315:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -5.9804545771330595:  root modified ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -4.565283687785268:  root add ^ StatementExpression expression MethodInvocation qualifier MathUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.565283687785268:  root add ^ StatementExpression expression MethodInvocation qualifier MathUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -2.9014679997053463:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -6.700722296052845:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter']
copynode -5.138564022257924:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.834757644945057:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -4.565283687785268:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -5.325365932658315:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -5.9804545771330595:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -6.911457668989897:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -5.223047156148823:  root add ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.083220083528431:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.976453298702836:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'copy-postfix_operators']
copynode -7.144657928758534:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -5.695067007356556:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -5.695067007356556:  root add ^ IfStatement condition MethodInvocation qualifier MathUtils_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -7.2597798109054565:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType']
copynode -5.325365932658315:  root add ^ StatementExpression expression MethodInvocation qualifier MathUtils_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -5.695067007356556:  root add ^ IfStatement condition MethodInvocation qualifier MathUtils_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -5.325365932658315:  root add ^ StatementExpression expression MethodInvocation qualifier MathUtils_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -5.138564022257924:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.501333792024525:  root add ^ IfStatement condition MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.695067007356556:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -4.565283687785268:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1']
copynode -2.9014679997053463:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter']
copynode -5.223047156148823:  root add ^ IfStatement condition MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.325365932658315:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.728055439889431:  root modified ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'name -> boolean_ter']
copynode -5.695067007356556:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.501333792024525:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.223047156148823:  root add ^ IfStatement condition MemberReference member epsilon_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.138564022257924:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -6.728055439889431:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'name -> int_ter']
copynode -6.083220083528431:  root add ^ IfStatement condition MethodInvocation qualifier MathUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.083220083528431:  root add ^ IfStatement condition MethodInvocation qualifier MathUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.223047156148823:  root add ^ IfStatement condition MemberReference member epsilon_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.138564022257924:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.907528598123463:  root add ^ IfStatement condition MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -5.223047156148823:  root add ^ IfStatement condition MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.138564022257924:  root add ^ StatementExpression expression MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -5.325365932658315:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -6.083220083528431:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -6.501333792024525:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.138564022257924:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 0.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.565283687785268:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -8.44933501072228:  root add ^ StatementExpression expression MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -7.724035311752232:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.083220083528431:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -2.9014679997053463:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter']
copynode -5.695067007356556:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -5.223047156148823:  root add ^ IfStatement condition MemberReference member par2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -7.724035311752232:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> ReturnStatement']
copynode -8.684643134474754:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -8.765680870579672:  root modified ^ IfStatement condition MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -8.762594565749168:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -8.2480974982318:  root add ^ IfStatement condition MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> ReturnStatement']
copynode -1.6054484503983986:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -3.010210158812697:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -3.010210158812697:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.643816480413079:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.771497038702364:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -4.910890010694857:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.027201304212213:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -5.145055776636582:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -4.419384488835931:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -1.6054484503983986:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -5.72555364575237:  root modified ^ StatementExpression expression MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -5.325290081600542:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.853816275950521:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Integer_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -3.010210158812697:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -4.419384488835931:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.996980098585482:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.578951368108392:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -3.010210158812697:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -3.010210158812697:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -6.387415065430105:  root modified ^ StatementExpression expression MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -3.010210158812697:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -5.912385372022982:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -6.36915323510766:  root modified ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -4.419384488835931:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -6.696774867872591:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter']
copynode -5.491568162542535:  root modified ^ LocalVariableDeclaration type ReferenceType name HashSet_ter ^ ^ arguments ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name']
copynode -5.027201304212213:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.491568162542535:  root modified ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ arguments ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name']
copynode -6.889953044752474:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -3.010210158812697:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -6.901178451254964:  root add ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -5.325290081600542:  root add ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.419384488835931:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.49094334016263:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.912385372022982:  root add ^ IfStatement condition MethodInvocation qualifier f_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.419384488835931:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.491568162542535:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ arguments ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name']
copynode -5.145055776636582:  root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -5.578951368108392:  root add ^ StatementExpression expression MethodInvocation qualifier f_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.419384488835931:  root add ^ StatementExpression expression MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -5.578951368108392:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -7.433457759718294:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -5.027201304212213:  root add ^ StatementExpression expression MethodInvocation qualifier f_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.419384488835931:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.340592219930841:  root modified ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -6.53501072297513:  root add ^ IfStatement condition MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.145055776636582:  root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -6.34655268440838:  root modified ^ LocalVariableDeclaration type ReferenceType name HashSet_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name']
copynode -6.34655268440838:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name']
copynode -6.34655268440838:  root modified ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name']
copynode -7.857663539747591:  root add ^ IfStatement condition MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -6.49094334016263:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -5.912385372022982:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -6.53501072297513:  root add ^ IfStatement condition MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -6.53501072297513:  root add ^ IfStatement condition MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -3.010210158812697:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter']
copynode -4.419384488835931:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.49094334016263:  root add ^ IfStatement condition MethodInvocation qualifier f_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -7.9010596219450235:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'copy-postfix_operators']
copynode -4.419384488835931:  root add ^ StatementExpression expression MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ operandr MemberReference member loc4 ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -8.317784144979669:  root modified ^ LocalVariableDeclaration type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -8.4045264814049:  root add ^ StatementExpression expression MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -8.41297155432403:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.236853435140802:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -4.419384488835931:  root add ^ StatementExpression expression MethodInvocation arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> BinaryOperation']
copynode -8.134496597151156:  root add ^ IfStatement condition MethodInvocation member getOriginalNumDecisionVariables_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -8.324986948631704:  root modified ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -7.340592219930841:  root modified ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -5.325290081600542:  root add ^ IfStatement condition MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -3.010210158812697:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter']
copynode -5.325290081600542:  root add ^ IfStatement condition MemberReference member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -8.58526493050158:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0']
copynode -5.491568162542535:  root modified ^ LocalVariableDeclaration type ReferenceType name List_ter ^ ^ arguments ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'name -> List_ter']
copynode -8.288337019781466:  root add ^ IfStatement condition MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
before@6 batch0 x: -8.856667835527332: root add ^ IfStatement condition MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ReturnStatement ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> ReturnStatement']
after@6 batch0 x: -8.856667835527332: root add ^ IfStatement condition MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ReturnStatement ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> ReturnStatement']
before@6 batch1 x: -9.04889240632474: root add ^ IfStatement condition MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
after@6 batch1 x: -9.04889240632474: root add ^ IfStatement condition MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -2.387095808982849:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -3.6734151451673824:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -4.225989302882226:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -4.855714263394475:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -4.949001468427014:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -5.125182895455509:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -5.085695537301945:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -4.967415187769802:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -5.435565050691366:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -3.6734151451673824:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -5.552742919215234:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.872821303084493:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.732666930445703:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -5.7516412346449215:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -5.994263610133203:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -5.745860250666738:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -6.4616476614028215:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -5.984824557119282:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.51022626273334:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -5.5739850771497:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal']
copynode -6.061085971072316:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -4.967415187769802:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.143339630943956:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.790900619700551:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -2.387095808982849:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name']
copynode -5.5739850771497:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference']
copynode -4.225989302882226:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -6.6201104729261715:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
copynode -5.5739850771497:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -6.904471231624484:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -6.953643340879353:  root add ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> ReturnStatement']
copynode -7.263387085637078:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -6.51233390159905:  root add ^ StatementExpression expression MethodInvocation qualifier MathUtils_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.745860250666738:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
copynode -3.6734151451673824:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -7.186206300073536:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -7.29595616646111:  root add ^ StatementExpression expression MethodInvocation qualifier MathUtils_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.600194128230214:  root add ^ StatementExpression expression MethodInvocation qualifier MathUtils_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.7516412346449215:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation']
copynode -7.231275040918263:  root add ^ IfStatement condition MethodInvocation qualifier MathUtils_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.916964117903262:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name']
copynode -5.732666930445703:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation']
copynode -7.416639002040029:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.552742919215234:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -7.414326103404164:  root add ^ StatementExpression expression MethodInvocation qualifier MathUtils_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.984824557119282:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -3.6734151451673824:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -7.405866105371388:  root add ^ IfStatement condition MethodInvocation qualifier MathUtils_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -7.555818040185841:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.895203979685903:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -7.091651001945138:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'copy-postfix_operators', 'member -> loc0']
copynode -7.701965959742665:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -6.703368844027864:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference']
copynode -7.70287474244833:  root modified ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'name -> boolean_ter', 'copy-declarators']
copynode -6.916964117903262:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -5.994263610133203:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation']
copynode -7.75194271307555:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -4.967415187769802:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -7.726029951387318:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -7.615170678385766:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference']
copynode -7.031963546090992:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.745860250666738:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -5.552742919215234:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -6.703368844027864:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments']
copynode -7.8870521411299706:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'name -> int_ter', 'copy-declarators']
copynode -4.225989302882226:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'copy-operandl']
copynode -6.061085971072316:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -6.143339630943956:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc0']
copynode -7.690825838857563:  root add ^ IfStatement condition MemberReference member par1 ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement']
copynode -7.147289296874078:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.085695537301945:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'copy-member']
copynode -8.12852063961327:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -4.225989302882226:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'copy-operandl']
copynode -5.984824557119282:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -5.5739850771497:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation']
copynode -8.228415878489614:  root add ^ StatementExpression expression MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -6.8374601919495035:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier MathUtils_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -8.252079637721181:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -7.778614897542866:  root add ^ IfStatement condition MemberReference member epsilon_ter ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> ReturnStatement']
copynode -7.610528143122792:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1', 'arguments -> MemberReference']
copynode -8.319520385935903:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 0.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -1.627252134931041:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -3.638133230197127:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -4.328908088195021:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -3.638133230197127:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -4.654739220626652:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -4.773472797169234:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.371098509232979:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -5.393539676442742:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.48614283974166:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -4.932052429343457:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -5.872952851932496:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -4.328908088195021:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -5.995493063703179:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.024193534627557:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -4.932052429343457:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.004819251174922:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.475861292332411:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -5.7421298600238515:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.210603120314772:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.475354937414522:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -5.977536561476882:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -5.347506562247872:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -6.181758286940749:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -6.393735291945632:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -5.977536561476882:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation']
copynode -5.347506562247872:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -5.347506562247872:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
copynode -1.627252134931041:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name']
copynode -6.905280859675258:  root add ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -7.083398828282952:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc5 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -4.932052429343457:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -4.932052429343457:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -5.7421298600238515:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.181758286940749:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation']
copynode -3.638133230197127:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -7.272058496251702:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc5 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -7.265077260832186:  root add ^ IfStatement condition MethodInvocation qualifier f_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.77702040920849:  root modified ^ LocalVariableDeclaration type ReferenceType name HashSet_ter ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'copy-arguments']
copynode -7.397299299016595:  root add ^ StatementExpression expression MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -7.357983598485589:  root add ^ StatementExpression expression MethodInvocation qualifier f_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.8897637868940365:  root modified ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'copy-arguments']
copynode -6.899081590163405:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
copynode -6.699165664424072:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments']
copynode -6.891979986612569:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0']
copynode -7.584161767736077:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -7.643856003385736:  root modified ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ arguments TypeArgument type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -6.636524448171258:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.668007162908907:  root add ^ IfStatement condition MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -7.679012968641473:  root modified ^ LocalVariableDeclaration type ReferenceType name HashSet_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'copy-declarators']
copynode -5.7421298600238515:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -3.638133230197127:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value 0_ter ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -6.210603120314772:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -5.347506562247872:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments']
copynode -5.7421298600238515:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -6.930104849438067:  root add ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> ReturnStatement']
copynode -6.884404310956597:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.930104849438067:  root add ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -6.899081590163405:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MethodInvocation']
copynode -7.879088118177606:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'copy-declarators']
copynode -7.946041658025933:  root modified ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'copy-declarators']
copynode -6.393735291945632:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation']
copynode -6.636524448171258:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.436011082303594:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.891979986612569:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier f_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -6.004819251174922:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc0']
copynode -8.113155988554354:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.347506562247872:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments']
copynode -7.347243791620713:  root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -8.255359897390008:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.393539676442742:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.347506562247872:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation']
copynode -7.149802473883028:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -6.699165664424072:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation']
copynode -6.905280859675258:  root add ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name']
copynode -8.433105796080781:  root modified ^ LocalVariableDeclaration type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -7.9475956387323095:  root add ^ IfStatement condition MethodInvocation selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.638133230197127:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This']
copynode -8.314821252599359:  root add ^ StatementExpression expression MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ operandr MemberReference member loc4 ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.699165664424072:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference']
copynode -3.638133230197127:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -7.346882774931146:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ arguments TypeArgument ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument']
before@7 batch0 x: -8.374258870258927: root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 0.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
after@7 batch0 x: -8.374258870258927: root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 0.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
before@7 batch1 x: -8.471721246343805: root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ arguments TypeArgument ^ ^ ^ ^ declarators ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument']
after@7 batch1 x: -8.471721246343805: root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ arguments TypeArgument ^ ^ ^ ^ declarators ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument']
copynode -2.4029251262545586:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1']
copynode -3.9140135853376705:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.369793882855447:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.128380845300853:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -5.169202762219356:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement']
copynode -5.330723170452984:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -5.909932574519189:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.026054194458993:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.9750381910125725:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.070280900486978:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.373091301211389:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.169202762219356:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -5.330723170452984:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.516312489286065:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -6.496001215651631:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.9750381910125725:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.611924029595684:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value']
copynode -6.678061695769429:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.523566450923681:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.9750381910125725:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par1 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.926520323380828:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.828610777854919:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name', 'name -> loc1']
copynode -6.825053682550788:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.830450869805645:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member']
copynode -5.61385615754989:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.901434561499627:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.523185629659565:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.04587279073894:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.61385615754989:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.267930562840775:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -4.9750381910125725:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.293408306315541:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -7.280869098380208:  root add ^ StatementExpression expression MethodInvocation qualifier MathUtils_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.370061719790101:  root add ^ StatementExpression expression MethodInvocation qualifier MathUtils_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -4.9750381910125725:  root add ^ StatementExpression expression Assignment expressionl MemberReference member epsilon_ter ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.372374327853322:  root add ^ StatementExpression expression MethodInvocation qualifier MathUtils_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.45333811827004:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -7.493165457621217:  root add ^ StatementExpression expression MethodInvocation qualifier MathUtils_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -5.926520323380828:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.447394852060825:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name', 'name -> loc2']
copynode -5.61385615754989:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getHeight_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.35626352232066:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement']
copynode -5.330723170452984:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.615088315680623:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.618306318297982:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'copy-postfix_operators', 'member -> loc0', 'root -> End']
copynode -6.794230219704332:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement']
copynode -7.424435783439549:  root add ^ IfStatement condition MethodInvocation qualifier MathUtils_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> ReturnStatement']
copynode -7.236495364719303:  root add ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.7625194206193555:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.7586525697261095:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -6.794230219704332:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.523185629659565:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.8516316041350365:  root modified ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'name -> boolean_ter', 'copy-declarators', 'root -> End']
copynode -7.598866258078488:  root add ^ IfStatement condition MethodInvocation qualifier MathUtils_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> ReturnStatement']
copynode -4.9750381910125725:  root add ^ StatementExpression expression Assignment expressionl MemberReference member epsilon_ter ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.884379003458889:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.927730372437509:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.963602997071575:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.61385615754989:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.85732800187543:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2']
copynode -8.004453487694263:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'name -> int_ter', 'copy-declarators', 'root -> End']
copynode -7.9496753404673655:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.926520323380828:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.301038226374658:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier MathUtils_ter ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl', 'operandr -> MemberReference']
copynode -8.10032013244927:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -7.9835253372148145:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown']
copynode -5.169202762219356:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression']
copynode -7.895933095627697:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement']
copynode -5.169202762219356:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ContinueStatement_ter']
copynode -6.858271559962304:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.858271559962304:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.867243629210861:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> ReturnStatement']
copynode -8.182657489553094:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -8.201347250753315:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -8.203843094117474:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -8.31486569531262:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'root -> End']
copynode -7.5898699371900875:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl', 'operandr -> MemberReference']
copynode -1.6328424946113955:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1']
copynode -4.219668450343306:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.606954189526732:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.79965721075132:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -4.645096721636946:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.455189114436507:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.403146522294264:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.881897972431034:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -4.645096721636946:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.021273914724588:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.064273187890649:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -4.79965721075132:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.563436391341384:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.495035903528333:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.215165193701978:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.609735610472853:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.950263621794875:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.737341406333144:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.403146522294264:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.667344847694039:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.762714805590804:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.79965721075132:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -6.329524375076289:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -4.645096721636946:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.972224989905953:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -4.645096721636946:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.1800465914129745:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name', 'name -> loc1']
copynode -7.193335588599439:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.187321687117219:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc5 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -7.236290987159009:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -5.455189114436507:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.79965721075132:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression']
copynode -6.215165193701978:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier f_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member getValue_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.354083256796002:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc5 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.570763630370493:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement']
copynode -7.3833216572820675:  root modified ^ LocalVariableDeclaration type ReferenceType name HashSet_ter ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'copy-arguments', 'copy-declarators']
copynode -7.43813200481236:  root add ^ StatementExpression expression MethodInvocation qualifier f_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -7.472660484301741:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.950263621794875:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.445937588316156:  root modified ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'copy-arguments', 'copy-declarators']
copynode -7.554728112925659:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown']
copynode -7.6184146869927645:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -7.264962372879381:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.586173767034779:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0', 'start -> unknown']
copynode -7.7081534801691305:  root modified ^ LocalVariableDeclaration type ReferenceType name HashSet_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'copy-declarators', 'root -> End']
copynode -7.6528092715889215:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.570763630370493:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -7.733719883064623:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -4.79965721075132:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ContinueStatement_ter']
copynode -6.954759398475289:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.180841179098934:  root add ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1']
copynode -7.860762653450365:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -7.970175757509423:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'copy-declarators', 'root -> End']
copynode -7.97655669550295:  root modified ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'copy-declarators', 'root -> End']
copynode -7.344342651354964:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl', 'copy-operandr']
copynode -7.925449857488275:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.180841179098934:  root add ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2']
copynode -6.944818499076064:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.645096721636946:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -8.07386451381899:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier f_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown']
copynode -6.329524375076289:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -6.954759398475289:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.408896506763995:  root add ^ StatementExpression expression MethodInvocation arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -7.359402847985621:  root add ^ IfStatement condition MethodInvocation qualifier f_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> ReturnStatement']
copynode -7.925354120830889:  root add ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.403146522294264:  root add ^ StatementExpression expression Assignment expressionl MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.270138385283644:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.950263621794875:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.455189114436507:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -8.308139340952039:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -7.705251173625584:  root add ^ IfStatement condition MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -4.645096721636946:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -8.372792998328805:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.264962372879381:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier f_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member getValue_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -4.219668450343306:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
before@8 batch0 x: -8.37172957349685: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl', 'operandr -> MemberReference']
after@8 batch0 x: -8.37172957349685: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl', 'operandr -> MemberReference']
before@8 batch1 x: -8.426620545375044: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
after@8 batch1 x: -8.426620545375044: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -2.4105400484986603:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation']
copynode -3.925170881935628:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.376687682030024:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -2.4105400484986603:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast']
copynode -5.836934093647869:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -3.925170881935628:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -2.4105400484986603:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This']
copynode -3.925170881935628:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.705269294354366:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -4.376687682030024:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.050126215151977:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation']
copynode -3.925170881935628:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -2.4105400484986603:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference']
copynode -4.376687682030024:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.925170881935628:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -3.925170881935628:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.539179805928143:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -2.4105400484986603:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression']
copynode -6.0349524070334155:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -2.4105400484986603:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation']
copynode -4.376687682030024:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.019414445647271:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.836269905325025:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name', 'name -> loc1', 'root -> End']
copynode -6.0808397422370035:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.7494273744523525:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation']
copynode -4.376687682030024:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.705269294354366:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.776049872569274:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par1 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'value -> MethodInvocation']
copynode -7.073166385293007:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
copynode -6.780324077233672:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -7.0480910728510935:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.462581029423745:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.652089804119896:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.376687682030024:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.019414445647271:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.925170881935628:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -7.148880562075647:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.582425256900024:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal']
copynode -6.910564931371482:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.271138330630492:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation']
copynode -7.585420717019588:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name', 'name -> loc2', 'root -> End']
copynode -6.582425256900024:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation']
copynode -6.0349524070334155:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.741362737491727:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.8999434557626955:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc0 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.7533285508689005:  root add ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.0808397422370035:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -2.4105400484986603:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Literal ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Literal']
copynode -7.546650981530547:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -7.833884496503742:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.409367223910522:  root add ^ StatementExpression expression Assignment expressionl MemberReference member epsilon_ter ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'copy-member', 'value -> MethodInvocation']
copynode -6.579876156523824:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.705269294354366:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.663040045910748:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -7.585837444552453:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getHeight_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -6.582425256900024:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference']
copynode -7.621606026106747:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -4.376687682030024:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -7.707357097679051:  root add ^ IfStatement condition MethodInvocation qualifier MathUtils_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -2.4105400484986603:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ClassCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> ClassCreator']
copynode -6.0349524070334155:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.305041214451194:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -6.0808397422370035:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -8.127453284832882:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.700331088883104:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -1.6387641913897824:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation']
copynode -4.236549506473239:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.6191591048118426:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -1.6387641913897824:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast']
copynode -5.566794338214095:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -5.839692847977858:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation']
copynode -5.783851271495223:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -1.6387641913897824:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This']
copynode -5.993010225283797:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.6159538347274065:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation']
copynode -4.236549506473239:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.236549506473239:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.3500281423766864:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.696025433528121:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -6.8200903982360614:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -1.6387641913897824:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression']
copynode -1.6387641913897824:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference']
copynode -6.63079849681526:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.6191591048118426:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.620696361685987:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.761708597230609:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.6191591048118426:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.804914275184274:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.186238797818078:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name', 'name -> loc1', 'root -> End']
copynode -1.6387641913897824:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ClassCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> ClassCreator']
copynode -4.236549506473239:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -1.6387641913897824:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation']
copynode -6.80675680427521:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -7.339486226483132:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.615095237779315:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -7.384974535132642:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier f_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member getValue_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.029526653277571:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -7.4596058050810825:  root modified ^ LocalVariableDeclaration type ReferenceType name HashSet_ter ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'copy-arguments', 'copy-declarators', 'root -> End']
copynode -7.227905850435491:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.526968143385602:  root modified ^ LocalVariableDeclaration type ReferenceType name Set_ter ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'copy-arguments', 'copy-declarators', 'root -> End']
copynode -5.993010225283797:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -7.284509306773543:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -6.3500281423766864:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier f_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member getValue_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.765296833764296:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal']
copynode -6.615095237779315:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -1.6387641913897824:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Literal ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Literal']
copynode -7.493914409118588:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.566794338214095:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal']
copynode -7.809237584515358:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ContinueStatement_ter', 'root -> End']
copynode -7.444046062926645:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.956909837710555:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.765296833764296:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation']
copynode -7.713890155777335:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
copynode -7.846922913566232:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.67584416041791:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -4.6191591048118426:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -7.763951358894701:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.523770573126967:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.984496881254017:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -5.783851271495223:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference']
copynode -8.224035121078487:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -8.061835231768782:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -6.620696361685987:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -5.783851271495223:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal']
copynode -7.600841346938978:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown', 'root -> End']
before@9 batch0 x: -8.174635407311143: root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
after@9 batch0 x: -8.174635407311143: root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
before@9 batch1 x: -8.358468595703016: root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown', 'root -> End']
after@9 batch1 x: -8.358468595703016: root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -2.5389937800355256:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.5389937800355256:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.5389937800355256:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.662285549828084:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -5.137487566826167:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -2.5389937800355256:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.84511846723035:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression']
copynode -6.0337962550111115:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors']
copynode -6.17156221208279:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -5.967627270409139:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -6.288735425827326:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -6.101258022972615:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -6.519476835150272:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member']
copynode -4.662285549828084:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -6.535186922905268:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -6.674393598455936:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -6.696696226019412:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.419344647118123:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -6.854469750076532:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.753020441887202:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -6.5462443663564045:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'copy-operandr']
copynode -6.5652379824605305:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -6.82161434579757:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.023136096569942:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.100440196692944:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter', 'root -> End']
copynode -6.961469805595698:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -7.103088712319732:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown']
copynode -4.662285549828084:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -7.127883344597649:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter']
copynode -2.5389937800355256:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -7.127347639092477:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.250686800834956:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'copy-operandr']
copynode -6.360389312438201:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.691727464349242:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -7.4997667276184075:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value']
copynode -7.416888257750543:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.846242297702702:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -7.434334738441976:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr']
copynode -6.360389312438201:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.800375565595459:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'type -> =_ter']
copynode -7.85452837171033:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Literal', 'Literal -> value']
copynode -4.662285549828084:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -7.88855586014688:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -6.691727464349242:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -8.000544432812603:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.4855298011389095:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'copy-operandr']
copynode -8.025210758380126:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> member']
copynode -5.967627270409139:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference']
copynode -8.03964171212283:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -5.137487566826167:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -8.082612145954045:  root add ^ IfStatement condition MethodInvocation qualifier MathUtils_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -2.5389937800355256:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.846242297702702:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -2.5389937800355256:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation']
copynode -8.054828799125971:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr']
copynode -7.958503695204854:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -7.560813935735496:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -8.006249329337152:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getHeight_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> ReturnStatement']
copynode -1.7137330285913777:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -1.7137330285913777:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member']
copynode -1.7137330285913777:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.541761616754229:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -4.899432899939711:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -5.056228209257824:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression']
copynode -1.7137330285913777:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation']
copynode -1.7137330285913777:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.041278308257461:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown']
copynode -6.237013149977429:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors']
copynode -5.79103020070761:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> End']
copynode -1.7137330285913777:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -6.328505756842787:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'copy-operandr']
copynode -6.862441349745495:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -6.66205442934006:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -6.656263755634427:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.766285362231429:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> End']
copynode -5.79103020070761:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> ReturnStatement']
copynode -6.689279446887667:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -6.866575527907116:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member']
copynode -6.718303099318291:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -4.541761616754229:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -7.0357733923447086:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.010703685271437:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -7.127143027770217:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -1.7137330285913777:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.942615153442603:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.145923295989633:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -7.358701992750866:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.942615153442603:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.230176258803112:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ClassCreator type ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> ClassCreator', 'ClassCreator -> type arguments']
copynode -7.250976691531832:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr']
copynode -4.541761616754229:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -7.3743646070797695:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.588228091641213:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier f_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member getValue_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.6750405318744015:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Literal', 'Literal -> value']
copynode -6.891444810244138:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -7.035897443580325:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -7.661227600823622:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value']
copynode -7.539201917636092:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'copy-operandr']
copynode -5.942615153442603:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.764621438967879:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value']
copynode -7.364417741584475:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.4144031801697565:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.449539663779433:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -7.951615063051577:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -4.541761616754229:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -7.666556457566912:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -7.916284205392003:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
copynode -8.03218448399275:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr']
copynode -4.899432899939711:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -5.79103020070761:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> ReturnStatement_ter']
copynode -8.104700806128676:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'copy-operandr']
copynode -7.847246152858133:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.891444810244138:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -8.151829888112843:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
before@10 batch0 x: -8.229169747122796: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getHeight_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> ReturnStatement']
after@10 batch0 x: -8.229169747122796: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getHeight_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> ReturnStatement']
before@10 batch1 x: -8.272066597826779: root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
after@10 batch1 x: -8.272066597826779: root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -2.964620862621814:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -4.236095849890262:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -2.964620862621814:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -2.964620862621814:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -5.023708535620244:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement']
copynode -4.850420181173831:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.236095849890262:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.262942499277415:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> End']
copynode -2.964620862621814:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.064248104114085:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type BasicType ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType']
copynode -2.964620862621814:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -2.964620862621814:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.262942499277415:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement']
copynode -6.354186756798299:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement']
copynode -6.094606321770698:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.823168222326785:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -2.964620862621814:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 0.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.438222272583516:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement']
copynode -6.62942860860494:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -6.425975850579562:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> End']
copynode -6.876851474866271:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
copynode -4.850420181173831:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier MathUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.786960138269933:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement']
copynode -6.989532402047189:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -2.964620862621814:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This_ter']
copynode -4.850420181173831:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier MathUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.896740837284597:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'copy-operandr', 'root -> ReturnStatement']
copynode -7.129084262996912:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.947961552330526:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement']
copynode -6.094606321770698:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -7.1425376633997075:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> End']
copynode -6.654942511377158:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> End']
copynode -7.133771641441854:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.291783428081544:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.881111032125773:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> End']
copynode -7.2838901919312775:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -5.823168222326785:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier MathUtils_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.690582618582994:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition BinaryOperation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation']
copynode -7.541272012778791:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -2.964620862621814:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> BinaryOperation']
copynode -5.023708535620244:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> End']
copynode -7.102210811135592:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement']
copynode -5.823168222326785:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier MathUtils_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.654942511377158:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement']
copynode -7.455041651875945:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement']
copynode -6.425975850579562:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement']
copynode -6.690582618582994:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition MethodInvocation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation']
copynode -5.262942499277415:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> StatementExpression']
copynode -7.377555257437052:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'copy-operandr', 'root -> End']
copynode -7.606453348213108:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement']
copynode -7.851308613724541:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'type -> =_ter', 'root -> End']
copynode -7.918381771072745:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.796801878401311:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'root -> ReturnStatement']
copynode -6.582082983572036:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.980636780412169:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -2.964620862621814:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments This ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This']
copynode -7.879337294289144:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement']
copynode -1.9457783810503315:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -1.9457783810503315:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -4.142725538433297:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -4.435854267299874:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.1144861429638695:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType']
copynode -4.9671556526300265:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> End']
copynode -4.142725538433297:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.741026351737673:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement']
copynode -1.9457783810503315:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.666317295253975:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.075367538258433:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -4.741026351737673:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> End']
copynode -5.782125782192452:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -4.435854267299874:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier f_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -1.9457783810503315:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments This ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This']
copynode -1.9457783810503315:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -6.658018421352608:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -1.9457783810503315:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.901398943737149:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
copynode -6.38250263404916:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -7.01219023768499:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -4.741026351737673:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> StatementExpression']
copynode -1.9457783810503315:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.042299414562876:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.032647351312335:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -6.917604240166838:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.274952243984444:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.38250263404916:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -7.288901569496375:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.214419128882582:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> End']
copynode -6.663974913346465:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement']
copynode -6.9538136534101795:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.741026351737673:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement_ter']
copynode -7.411448109865887:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ClassCreator type ReferenceType ^ ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType']
copynode -5.782125782192452:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier f_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -7.086795064198668:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -1.9457783810503315:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.741026351737673:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ContinueStatement_ter']
copynode -1.9457783810503315:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Cast ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Cast']
copynode -6.87119842969696:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition MethodInvocation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation']
copynode -6.89804605631798:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement']
copynode -4.9671556526300265:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement']
copynode -1.9457783810503315:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.802386144685443:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.952238986777957:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement']
copynode -4.9671556526300265:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> StatementExpression']
copynode -6.87119842969696:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition BinaryOperation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation']
copynode -7.680311408796115:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.908162693071063:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.952238986777957:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> End']
copynode -7.975957552480395:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.959755290808971:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.782125782192452:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -7.79367107017606:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.663974913346465:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -7.449323604392703:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'root -> ReturnStatement']
before@11 batch0 x: -8.07032674390939: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement']
after@11 batch0 x: -8.07032674390939: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MethodInvocation member getHeight_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement']
before@11 batch1 x: -8.10316611318558: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'root -> ReturnStatement']
after@11 batch1 x: -8.10316611318558: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'root -> ReturnStatement']
copynode -3.6404723268933594:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.54637247743085:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'root -> End']
copynode -5.137340579647571:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -5.214642239996465:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -5.573660079855472:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -5.878082547802478:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -4.667194162029773:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getHeight_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.10190435545519:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type BasicType name int_ter ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType']
copynode -4.667194162029773:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.667194162029773:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.295179877895862:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -5.217760775703937:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.336088691372424:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -6.5718774613924325:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.595165763515979:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 0.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -6.353366321680369:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -5.217760775703937:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -4.667194162029773:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.56452601987985:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.663823036738904:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.214642239996465:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.917194971814752:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter', 'root -> End']
copynode -6.646898253151448:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.586582962889224:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'copy-member']
copynode -6.9953013791528065:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -4.667194162029773:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.12570297557977:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -5.217760775703937:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -7.205499572941335:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.49902878748253:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.217760775703937:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -7.046272073406726:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This_ter', 'arguments -> End']
copynode -3.6404723268933594:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -4.667194162029773:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.214642239996465:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -4.667194162029773:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.597949777264148:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.667194162029773:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.353366321680369:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.871846622583689:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.4913815897889435:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier MathUtils_ter ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -7.684078923222842:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -8.011751886922866:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -5.217760775703937:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 0.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -7.7721485544752795:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -8.01224951565382:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -5.217760775703937:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -2.3277980200655293:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.3997031561739277:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -2.3277980200655293:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.3277980200655293:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.602228652656777:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'root -> End']
copynode -4.6523301861889195:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -5.117659098672448:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.18547840040992:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -2.3277980200655293:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.595221530616982:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -5.426995883273776:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -2.3277980200655293:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -2.3277980200655293:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.3277980200655293:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.426995883273776:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier f_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member getValue_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -4.6523301861889195:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -6.357101511181099:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier f_ter ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -6.679680835426552:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -3.3997031561739277:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.7087717167742085:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -6.902781833196059:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter', 'root -> End']
copynode -6.2359398714907:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'copy-member']
copynode -7.021114610179211:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.04488153247803:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.079772109675105:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.065297137916787:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -7.082532840358908:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.706042461068137:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.660852443397744:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments This selectors ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This', 'This -> selectors']
copynode -7.27781011533807:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -4.6523301861889195:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -7.321575636218768:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'type -> =_ter']
copynode -2.3277980200655293:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.3838103227026295:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -7.227583589541609:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -7.40443963794678:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement_ter', 'root -> End']
copynode -7.411764004762517:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ClassCreator type ReferenceType name Integer_ter ^ ^ ^ ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -6.947205562115414:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.648420045661624:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ContinueStatement_ter', 'root -> End']
copynode -7.611617099464638:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc5 ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -2.3277980200655293:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getOriginalNumDecisionVariables_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.3504947149631334:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.80628682297538:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -7.850988584148581:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.903099789255066:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.919291061320109:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.706042461068137:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'copy-MethodInvocation']
copynode -8.00452863103419:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
before@12 batch0 x: -8.076830599922687: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
after@12 batch0 x: -8.076830599922687: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
before@12 batch1 x: -8.07131755775481: root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
after@12 batch1 x: -8.07131755775481: root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -3.6582761299796402:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -3.6582761299796402:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -3.6582761299796402:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.524041874596151:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -3.6582761299796402:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.6582761299796402:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.9551790547557175:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'root -> End']
copynode -6.06321219028905:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getHeight_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.359478105325252:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'root -> End']
copynode -5.181858882773668:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.3809057218022645:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.414779279846698:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'root -> End']
copynode -6.184747115243226:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type BasicType name int_ter ^ ^ ^ ^ expression MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MethodInvocation']
copynode -6.289659891743213:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.181858882773668:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -6.662158746737987:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 0.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'root -> End']
copynode -6.681254393217387:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -5.181858882773668:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -6.857964812108548:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.87657518524793:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.957759959885152:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.816483054775745:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.876536382624181:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -6.687391851563007:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.181858882773668:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -3.6582761299796402:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.256576721090823:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'copy-member', 'root -> End']
copynode -3.6582761299796402:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -7.298663599678548:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member epsilon_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.451038239785703:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.339901719707996:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.228067789692432:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -7.496526940056356:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.5755635818932205:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.289659891743213:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -7.703884337563068:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments This_ter ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This_ter', 'arguments -> End', 'copy-member']
copynode -6.228067789692432:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier MathUtils_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -7.48711869539693:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'copy-member']
copynode -6.5755635818932205:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member epsilon_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.761494074482471:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -7.954532925505191:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier MathUtils_ter ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member', 'root -> End']
copynode -7.797795010992559:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -7.935444778559031:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.228067789692432:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -7.835257325787097:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -3.0083526484377217:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -3.4367128498561215:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.9252021424181294:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -3.0083526484377217:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal']
copynode -3.0083526484377217:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference']
copynode -4.930557455838425:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'copy-member']
copynode -4.135651361168129:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -5.167747113126097:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation']
copynode -4.135651361168129:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -3.0083526484377217:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation']
copynode -3.4367128498561215:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.9252021424181294:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -5.670762751222355:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'root -> End']
copynode -5.868042240428622:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -5.409817587555153:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -3.4367128498561215:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.135651361168129:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.254423987091286:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -3.4367128498561215:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.5057708123204065:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator type ReferenceType name RealPointValuePair_ter ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier f_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member getValue_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.282076727569802:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.411471020401223:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -3.4367128498561215:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -5.409817587555153:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -6.74623359364341:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -6.854528572381241:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'root -> End']
copynode -6.565130975068314:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.961891364277108:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'copy-member', 'root -> End']
copynode -5.409817587555153:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier f_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -7.0702973194856895:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.1342559046752285:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'root -> End']
copynode -3.0083526484377217:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ This_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> This_ter']
copynode -6.660351913393242:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier f_ter ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -4.135651361168129:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.313446786225541:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.3257625556434505:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'type -> =_ter', 'root -> End']
copynode -7.416769953953917:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.384087216079934:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -4.135651361168129:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments Literal ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -3.0083526484377217:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ This ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> This']
copynode -7.215926419914467:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments This selectors MemberReference ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -7.284061938495142:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.135651361168129:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.678569611132843:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc5 ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'root -> End']
copynode -3.0083526484377217:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> BinaryOperation']
copynode -7.105128711598809:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -7.483413101668702:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ClassCreator type ReferenceType name Integer_ter ^ ^ ^ ^ arguments MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation']
copynode -7.746309410751564:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getOriginalNumDecisionVariables_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
before@13 batch0 x: -7.993407983798534: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
after@13 batch0 x: -7.993407983798534: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
before@13 batch1 x: -7.803505342424614: root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getOriginalNumDecisionVariables_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
after@13 batch1 x: -7.803505342424614: root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getOriginalNumDecisionVariables_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -4.982885528821498:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -5.251908112782985:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -5.344450165051967:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -5.645701099652797:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -5.7000835430808365:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -6.170333479065448:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getHeight_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -6.38019059645012:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -6.603304747957736:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
copynode -6.66046403395012:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -4.982885528821498:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -6.7895095204003155:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -6.427776724565774:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type BasicType name int_ter ^ ^ ^ ^ expression MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.344450165051967:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -7.155828390736133:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -7.1882368181832135:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End']
copynode -7.06631637038663:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -7.071927396842511:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -4.982885528821498:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> Literal']
copynode -7.317826081532985:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -7.219122458714992:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -7.491799582261592:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -5.344450165051967:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> Literal']
copynode -7.758040190208703:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments This_ter ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.748237286228687:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'arguments -> End']
copynode -7.853910360950977:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ Literal value 1.0_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'copy-member', 'root -> End']
copynode -7.519338284153491:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -6.408491295296699:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.408491295296699:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.955883411952527:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -4.982885528821498:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MethodInvocation']
copynode -3.752084027946694:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -3.8020391054160427:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -4.167889948905213:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
copynode -4.6366093270189594:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value']
copynode -4.686696302116616:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.142178919137223:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'copy-member', 'root -> End']
copynode -5.2489822022325825:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.484963286638958:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -5.585499655426247:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'arguments -> End']
copynode -5.3698283545381855:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.023299256848986:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -5.232224541920004:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.752084027946694:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
copynode -6.302159178972943:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -5.232224541920004:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.217013131798012:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.217013131798012:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.172617446602089:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -4.686696302116616:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.507713425875409:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -6.674849968374474:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -6.33036137741874:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -6.717207778216107:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End']
copynode -3.8020391054160427:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -6.3527312092192005:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.232224541920004:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.956649806321366:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -4.167889948905213:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -7.258824568212731:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier f_ter ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'root -> End']
copynode -5.217013131798012:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.208522211731179:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ This_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> This_ter', 'arguments -> End']
copynode -7.028349053085549:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier f_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -7.424164059615578:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.3698283545381855:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.490233529329998:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -6.33036137741874:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -7.497835885704262:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -7.534002821863396:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments This selectors MemberReference member ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.3527312092192005:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.217013131798012:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.3698283545381855:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
before@14 batch0 x: -8.04484121920541: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MethodInvocation']
after@14 batch0 x: -8.04484121920541: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MethodInvocation']
before@14 batch1 x: -7.708555534714833: root modified ^ LocalVariableDeclaration type ReferenceType name HashSet_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'copy-declarators', 'root -> End']
after@14 batch1 x: -7.708555534714833: root modified ^ LocalVariableDeclaration type ReferenceType name HashSet_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'copy-declarators', 'root -> End']
copynode -5.348117132205516:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -5.367477406281978:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member']
copynode -5.734639484900981:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -5.8165653315372765:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -5.810256142634898:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member']
copynode -6.242515076417476:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getHeight_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.479658537078649:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member']
copynode -6.685267460066825:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.771691278088838:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value false_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -6.814021397847682:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.901539370883256:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value true_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member']
copynode -6.986155063379556:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type BasicType name int_ter ^ ^ ^ ^ expression MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -7.123765159863979:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.298453867901117:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value 1_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'copy-member']
copynode -7.400504116434604:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.410273818561109:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.410296608228236:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -7.418364603538066:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par2 ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member']
copynode -7.475059081334621:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member']
copynode -7.559049901086837:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.704989839810878:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -7.819574658293277:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.868877951521426:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End']
copynode -7.942329567391425:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -5.367477406281978:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'start -> unknown']
copynode -7.9675990569230635:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.941023868042976:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -5.348117132205516:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown']
copynode -3.8366582281596493:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -3.8735556043393444:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -4.235186990321381:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -4.863615583599312:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.560129690886242:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member']
copynode -5.651736777246697:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -4.677174393058522:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -5.338756564975483:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.677174393058522:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -5.98074389618705:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.03185576623946:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.283358412998496:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.330203067482216:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.359807543427451:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member']
copynode -6.503500711143715:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End']
copynode -6.591005932510598:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -4.677174393058522:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.4407862536318135:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.636738989473088:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -6.790104132116539:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.800359267712338:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End', 'copy-member']
copynode -6.407828170078574:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -6.792631577671273:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'arguments -> End']
copynode -4.677174393058522:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.806056458473904:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.995396453159628:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.444440852821572:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.950747113645775:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.338756564975483:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.1605297289497685:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.078553196013672:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -7.382227148831589:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ This_ter ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> This_ter', 'arguments -> End', 'copy-member']
copynode -7.460097796327318:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.521284626767738:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.440990667761071:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier f_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End']
copynode -7.524652849853737:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'arguments -> End']
copynode -4.677174393058522:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -7.5784300677187275:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -5.338756564975483:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
before@15 batch0 x: -8.616779108066112: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown']
after@15 batch0 x: -8.616779108066112: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown']
before@15 batch1 x: -7.74787354838918: root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
after@15 batch1 x: -7.74787354838918: root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.3905657534487545:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.429711707402021:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.77523496793583:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.856416389811784:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.861955788452178:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.52978314878419:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.725371871609241:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.8202578467316926:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value false_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.9530612719245255:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value true_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.351729833055288:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value 1_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.4854064104147255:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par2 ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.547449369449168:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.878590092528611:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNumObjectiveFunctions_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.942156065721065:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.837332001421601:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -8.27043365361169:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -8.278474174701842:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.837332001421601:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.837332001421601:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.146380303893238:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.146380303893238:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -8.616779108066112:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.146380303893238:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -3.8908900133974385:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -4.251545097649796:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.073872160137398:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -5.590162327483995:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.6718437373347115:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.721618477226002:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -5.803606305242283:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -5.899536076904042:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -6.021781135321362:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
copynode -6.061064642432029:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.380586249724729:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.54966344308923:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.658481208578451:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member restrictToNonNegative_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.647348228812916:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -6.649663951218827:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
copynode -6.835732951731188:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.8722848631150555:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'arguments -> End', 'copy-member']
copynode -6.932790581107838:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -6.95346579325269:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -7.43958398324321:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.442013505817158:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ This_ter ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> This_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.400094088137848:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -7.324818018794758:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -7.536552291334374:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier f_ter ^ ^ member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.074862372101052:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
copynode -7.5691682882315945:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.582004372001393:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End']
copynode -7.320838194311364:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -7.619103331089718:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -7.74787354838918:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.8535434484656435:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation arguments MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.8535434484656435:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
before@16 batch0 x: -8.66801810124889: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
after@16 batch0 x: -8.66801810124889: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
before@16 batch1 x: -7.993008303659735: root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
after@16 batch1 x: -7.993008303659735: root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.984118421096355:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.174318781588227:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -8.40640794346109:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -8.402838102076203:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -8.597389100585133:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -8.569137333426625:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -8.66801810124889:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -5.126454889745219:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -5.761072944820626:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -5.9407867155678105:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member']
copynode -6.056743457884295:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -5.9027146957523655:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.566406901896698:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.68346548450063:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member']
copynode -6.887825492740376:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.966314874560339:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member']
copynode -7.011436484724982:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -6.757436614454491:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.4463242403871845:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -7.552190270245774:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier f_ter ^ ^ member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.581396434427006:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.576992403686745:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'arguments -> End']
copynode -7.620117120415671:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'copy-member']
copynode -7.650046713621123:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MethodInvocation member getRhsOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.497690860152943:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member']
copynode -5.9027146957523655:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.63812110942672:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -7.941084551828681:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.8396902046806645:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member']
before@17 batch0 x: -8.8223468051292: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
after@17 batch0 x: -8.8223468051292: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
before@17 batch1 x: -8.181397464097245: root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member']
after@17 batch1 x: -8.181397464097245: root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member']
copynode -8.324814981315285:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -8.512636302504689:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member']
copynode -8.555639302823693:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -8.70435674348846:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member']
copynode -8.720994530711323:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -8.8223468051292:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -5.140131410182221:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.7907848842151:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.971564307779772:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.072741314739687:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.177944298804505:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -6.713731426716549:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.995305536285741:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.036141352698905:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.325931768835289:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -7.471727859199746:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.609885983139975:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.64940032173763:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.8956408835656475:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -8.002289023221238:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -8.0979904345877:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End']
copynode -8.181397464097245:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -8.154463428276358:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
before@18 batch0 x: -8.857792063150555: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
after@18 batch0 x: -8.857792063150555: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
before@18 batch1 x: -8.24521448762971: root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
after@18 batch1 x: -8.24521448762971: root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
copynode -8.361402499023825:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.559311332646757:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.591469495091587:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.749880804214627:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.75677795568481:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.857792063150555:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member epsilon_ter ^ ^ ^ MemberReference member epsilon_ter ^ ^ ^ ^ member getNumObjectiveFunctions_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.239019863278372:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.374311957479222:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.623841950640781:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.942659463704331:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -8.048486091167433:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -8.167828362405999:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -8.230302348703844:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -8.24521448762971:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
before@19 batch1 x: -8.262775377574144: root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
after@19 batch1 x: -8.262775377574144: root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.248220551729901:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.384335491777165:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.954379148752196:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.059712404356105:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.182134230592055:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.239973564603133:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getNegativeDecisionVariableOffset_ter ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.262775377574144:  root modified ^ LocalVariableDeclaration type ReferenceType name Integer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Integer_ter ^ ^ ^ ^ expression MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member getBasicRow_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
method
7 
double int createTableau getNumObjectiveFunctions_ter
int int getNumVariables getNumObjectiveFunctions_ter
List int getNormalizedConstraints getNumObjectiveFunctions_ter
LinearConstraint int normalize getNumObjectiveFunctions_ter
int int getNumObjectiveFunctions getNumObjectiveFunctions_ter
int int getConstraintTypeCounts getNumObjectiveFunctions_ter
None int initialize getNumObjectiveFunctions_ter
double int getInvertedCoeffiecientSum getNumObjectiveFunctions_ter
Integer int getBasicRow getNumObjectiveFunctions_ter
Integer int getBasicRowForSolution getNumObjectiveFunctions_ter
Integer int getBasicRow getNumObjectiveFunctions_ter
None int discardArtificialVariables getNumObjectiveFunctions_ter
None int copyArray getNumObjectiveFunctions_ter
RealPointValuePair int getSolution getNumObjectiveFunctions_ter
None int divideRow getNumObjectiveFunctions_ter
None int subtractRow getNumObjectiveFunctions_ter
int int getWidth getNumObjectiveFunctions_ter
int int getHeight getNumObjectiveFunctions_ter
double int getEntry getNumObjectiveFunctions_ter
None int setEntry getNumObjectiveFunctions_ter
int int getSlackVariableOffset getNumObjectiveFunctions_ter
int int getArtificialVariableOffset getNumObjectiveFunctions_ter
int int getRhsOffset getNumObjectiveFunctions_ter
int int getNegativeDecisionVariableOffset getNumObjectiveFunctions_ter
int int getNumDecisionVariables getNumObjectiveFunctions_ter
int int getOriginalNumDecisionVariables getNumObjectiveFunctions_ter
int int getNumSlackVariables getNumObjectiveFunctions_ter
int int getNumArtificialVariables getNumObjectiveFunctions_ter
double int getData getNumObjectiveFunctions_ter
boolean int equals getNumObjectiveFunctions_ter
int int hashCode getNumObjectiveFunctions_ter
None int writeObject getNumObjectiveFunctions_ter
None int readObject getNumObjectiveFunctions_ter
method
7 
double  createTableau 
int  getNumVariables 
List  getNormalizedConstraints 
LinearConstraint  normalize 
int  getNumObjectiveFunctions 
int  getConstraintTypeCounts 
None  initialize 
double  getInvertedCoeffiecientSum 
Integer  getBasicRow 
Integer  getBasicRowForSolution 
Integer  getBasicRow 
None  discardArtificialVariables 
None  copyArray 
RealPointValuePair  getSolution 
None  divideRow 
None  subtractRow 
int  getWidth 
int  getHeight 
double  getEntry 
None  setEntry 
int  getSlackVariableOffset 
int  getArtificialVariableOffset 
int  getRhsOffset 
int  getNegativeDecisionVariableOffset 
int  getNumDecisionVariables 
int  getOriginalNumDecisionVariables 
int  getNumSlackVariables 
int  getNumArtificialVariables 
double  getData 
boolean  equals 
int  hashCode 
None  writeObject 
None  readObject 
method
7 
method
7 
method
7 
method
7 
method
row_ter {'col_ter': 'int', 'ignoreObjectiveRows_ter': 'boolean', 'row_ter': 'Integer', 'start_ter': 'int', 'i_ter': 'int'}
7 Integer
method
7 
method
7 
method
7 
method
7 
double  createTableau 
int  getNumVariables 
List  getNormalizedConstraints 
LinearConstraint  normalize 
int  getNumObjectiveFunctions 
int  getConstraintTypeCounts 
None  initialize 
double  getInvertedCoeffiecientSum 
Integer  getBasicRow 
Integer  getBasicRowForSolution 
Integer  getBasicRow 
None  discardArtificialVariables 
None  copyArray 
RealPointValuePair  getSolution 
None  divideRow 
None  subtractRow 
int  getWidth 
int  getHeight 
double  getEntry 
None  setEntry 
int  getSlackVariableOffset 
int  getArtificialVariableOffset 
int  getRhsOffset 
int  getNegativeDecisionVariableOffset 
int  getNumDecisionVariables 
int  getOriginalNumDecisionVariables 
int  getNumSlackVariables 
int  getNumArtificialVariables 
double  getData 
boolean  equals 
int  hashCode 
None  writeObject 
None  readObject 
method
7 
method
7 
double  createTableau 
int  getNumVariables 
List  getNormalizedConstraints 
LinearConstraint  normalize 
int  getNumObjectiveFunctions 
int  getConstraintTypeCounts 
None  initialize 
double  getInvertedCoeffiecientSum 
Integer  getBasicRow 
Integer  getBasicRowForSolution 
Integer  getBasicRow 
None  discardArtificialVariables 
None  copyArray 
RealPointValuePair  getSolution 
None  divideRow 
None  subtractRow 
int  getWidth 
int  getHeight 
double  getEntry 
None  setEntry 
int  getSlackVariableOffset 
int  getArtificialVariableOffset 
int  getRhsOffset 
int  getNegativeDecisionVariableOffset 
int  getNumDecisionVariables 
int  getOriginalNumDecisionVariables 
int  getNumSlackVariables 
int  getNumArtificialVariables 
double  getData 
boolean  equals 
int  hashCode 
None  writeObject 
None  readObject 
method
7 
method
MathUtils_ter {'col_ter': 'int', 'ignoreObjectiveRows_ter': 'boolean', 'row_ter': 'Integer', 'start_ter': 'int', 'i_ter': 'int'}
MathUtils_ter serialVersionUID
MathUtils_ter f
MathUtils_ter constraints
MathUtils_ter restrictToNonNegative
MathUtils_ter tableau
MathUtils_ter numDecisionVariables
MathUtils_ter numSlackVariables
MathUtils_ter numArtificialVariables
MathUtils_ter epsilon
7 
double  createTableau 
int  getNumVariables 
List  getNormalizedConstraints 
LinearConstraint  normalize 
int  getNumObjectiveFunctions 
int  getConstraintTypeCounts 
None  initialize 
double  getInvertedCoeffiecientSum 
Integer  getBasicRow 
Integer  getBasicRowForSolution 
Integer  getBasicRow 
None  discardArtificialVariables 
None  copyArray 
RealPointValuePair  getSolution 
None  divideRow 
None  subtractRow 
int  getWidth 
int  getHeight 
double  getEntry 
None  setEntry 
int  getSlackVariableOffset 
int  getArtificialVariableOffset 
int  getRhsOffset 
int  getNegativeDecisionVariableOffset 
int  getNumDecisionVariables 
int  getOriginalNumDecisionVariables 
int  getNumSlackVariables 
int  getNumArtificialVariables 
double  getData 
boolean  equals 
int  hashCode 
None  writeObject 
None  readObject 
method
7 
double int createTableau getNegativeDecisionVariableOffset_ter
int int getNumVariables getNegativeDecisionVariableOffset_ter
List int getNormalizedConstraints getNegativeDecisionVariableOffset_ter
LinearConstraint int normalize getNegativeDecisionVariableOffset_ter
int int getNumObjectiveFunctions getNegativeDecisionVariableOffset_ter
int int getConstraintTypeCounts getNegativeDecisionVariableOffset_ter
None int initialize getNegativeDecisionVariableOffset_ter
double int getInvertedCoeffiecientSum getNegativeDecisionVariableOffset_ter
Integer int getBasicRow getNegativeDecisionVariableOffset_ter
Integer int getBasicRowForSolution getNegativeDecisionVariableOffset_ter
Integer int getBasicRow getNegativeDecisionVariableOffset_ter
None int discardArtificialVariables getNegativeDecisionVariableOffset_ter
None int copyArray getNegativeDecisionVariableOffset_ter
RealPointValuePair int getSolution getNegativeDecisionVariableOffset_ter
None int divideRow getNegativeDecisionVariableOffset_ter
None int subtractRow getNegativeDecisionVariableOffset_ter
int int getWidth getNegativeDecisionVariableOffset_ter
int int getHeight getNegativeDecisionVariableOffset_ter
double int getEntry getNegativeDecisionVariableOffset_ter
None int setEntry getNegativeDecisionVariableOffset_ter
int int getSlackVariableOffset getNegativeDecisionVariableOffset_ter
int int getArtificialVariableOffset getNegativeDecisionVariableOffset_ter
int int getRhsOffset getNegativeDecisionVariableOffset_ter
int int getNegativeDecisionVariableOffset getNegativeDecisionVariableOffset_ter
int int getNumDecisionVariables getNegativeDecisionVariableOffset_ter
int int getOriginalNumDecisionVariables getNegativeDecisionVariableOffset_ter
int int getNumSlackVariables getNegativeDecisionVariableOffset_ter
int int getNumArtificialVariables getNegativeDecisionVariableOffset_ter
double int getData getNegativeDecisionVariableOffset_ter
boolean int equals getNegativeDecisionVariableOffset_ter
int int hashCode getNegativeDecisionVariableOffset_ter
None int writeObject getNegativeDecisionVariableOffset_ter
None int readObject getNegativeDecisionVariableOffset_ter
method
except
int getBasicRow
method
7 
method
7 
double  createTableau 
int  getNumVariables 
List  getNormalizedConstraints 
LinearConstraint  normalize 
int  getNumObjectiveFunctions 
int  getConstraintTypeCounts 
None  initialize 
double  getInvertedCoeffiecientSum 
Integer  getBasicRow 
Integer  getBasicRowForSolution 
Integer  getBasicRow 
None  discardArtificialVariables 
None  copyArray 
RealPointValuePair  getSolution 
None  divideRow 
None  subtractRow 
int  getWidth 
int  getHeight 
double  getEntry 
None  setEntry 
int  getSlackVariableOffset 
int  getArtificialVariableOffset 
int  getRhsOffset 
int  getNegativeDecisionVariableOffset 
int  getNumDecisionVariables 
int  getOriginalNumDecisionVariables 
int  getNumSlackVariables 
int  getNumArtificialVariables 
double  getData 
boolean  equals 
int  hashCode 
None  writeObject 
None  readObject 
boolean getBasicRow
method
7 
method
7 
method
7 
method
7 
method
except
method
7 
method
coefficients_ter {'coefficients_ter': 'double', 'negativeVarBasicRow_ter': 'Integer', 'mostNegative_ter': 'double', 'basicRows_ter': 'Set', 'i_ter': 'int', 'basicRow_ter': 'Integer'}
7 double
method
except
method
coefficients_ter {'coefficients_ter': 'double', 'negativeVarBasicRow_ter': 'Integer', 'mostNegative_ter': 'double', 'basicRows_ter': 'Set', 'i_ter': 'int', 'basicRow_ter': 'Integer'}
7 double
method
7 
method
7 
int getBasicRow
method
7 
method
7 
method
7 
double  createTableau 
int  getNumVariables 
List  getNormalizedConstraints 
LinearConstraint  normalize 
int  getNumObjectiveFunctions 
int  getConstraintTypeCounts 
None  initialize 
double  getInvertedCoeffiecientSum 
Integer  getBasicRow 
Integer  getBasicRowForSolution 
Integer  getBasicRow 
None  discardArtificialVariables 
None  copyArray 
RealPointValuePair  getSolution 
None  divideRow 
None  subtractRow 
int  getWidth 
int  getHeight 
double  getEntry 
None  setEntry 
int  getSlackVariableOffset 
int  getArtificialVariableOffset 
int  getRhsOffset 
int  getNegativeDecisionVariableOffset 
int  getNumDecisionVariables 
int  getOriginalNumDecisionVariables 
int  getNumSlackVariables 
int  getNumArtificialVariables 
double  getData 
boolean  equals 
int  hashCode 
None  writeObject 
None  readObject 
method
7 
stderr: Check out f36be8e8 to /root/projects/Recoder-bwk/buggy/Math-83............. OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff f36be8e8:0878ad4b..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Math-83b........................................ OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:28<00:00, 28.72s/it]100%|██████████| 1/1 [00:28<00:00, 28.72s/it]
