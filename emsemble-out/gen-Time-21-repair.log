stdout: LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member createCache_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.getDateFormatSymbols(locale).createCache();

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member byNameKeyCache_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.getDateFormatSymbols(byNameKeyCache).getZoneStrings();

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member createCache_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.createCache(locale).getZoneStrings();

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.getDateFormatSymbols(locale).getZoneStrings();

ReturnStatement expression Cast type ReferenceType name String_ter ^ ^ dimensions None_ter ^ ^ ^ ^ expression MethodInvocation qualifier byNameKeyCache_ter ^ ^ arguments MemberReference member nameKey_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
if (true) { return (String [])byNameKeyCache.get(nameKey); }

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member equals_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.getDateFormatSymbols(locale).equals();

BreakStatement_ter ^ 
break;

StatementExpression expression MethodInvocation qualifier byNameKeyCache_ter ^ ^ arguments MemberReference selectors ArraySelector index Literal value 2_ter ^ ^ ^ ^ ^ ^ member setLoc_ter ^ ^ ^ ArrayCreator type ReferenceType name String_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers MemberReference selectors ArraySelector index Literal value 2_ter ^ ^ ^ ^ ^ ^ member setLoc_ter ^ ^ ^ MemberReference selectors ArraySelector index Literal value 1_ter ^ ^ ^ ^ ^ ^ member setLoc_ter ^ ^ ^ ^ ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
arg 
arg 
byNameKeyCache.put(setLoc[2], new String[[]]{setLoc[2],setLoc[1]});


LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getNameSet_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.getDateFormatSymbols(locale).getNameSet();

StatementExpression expression Assignment expressionl MemberReference member setLoc_ter ^ ^ ^ ^ value MemberReference member strings_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
setLoc = strings;

StatementExpression expression MethodInvocation qualifier byIdCache_ter ^ ^ arguments MemberReference member id_ter ^ ^ ^ Assignment expressionl MemberReference member byNameKeyCache_ter ^ ^ ^ ^ value MethodInvocation member createCache_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
byIdCache.put(id, byNameKeyCache = createCache());

ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ 
if (true) { return null; }

StatementExpression expression MethodInvocation qualifier byNameKeyCache_ter ^ ^ arguments MemberReference selectors ArraySelector index Literal value 4_ter ^ ^ ^ ^ ^ ^ member setLoc_ter ^ ^ ^ ArrayCreator type ReferenceType name String_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers MemberReference selectors ArraySelector index Literal value 4_ter ^ ^ ^ ^ ^ ^ member setLoc_ter ^ ^ ^ MemberReference selectors ArraySelector index Literal value 3_ter ^ ^ ^ ^ ^ ^ member setLoc_ter ^ ^ ^ ^ ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
arg 
arg 
byNameKeyCache.put(setLoc[4], new String[[]]{setLoc[4],setLoc[3]});


StatementExpression expression MethodInvocation qualifier byNameKeyCache_ter ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference selectors ArraySelector index Literal value 4_ter ^ ^ ^ ^ ^ ^ member setLoc_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ArrayCreator type ReferenceType name String_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers MemberReference selectors ArraySelector index Literal value 4_ter ^ ^ ^ ^ ^ ^ member setLoc_ter ^ ^ ^ MemberReference selectors ArraySelector index Literal value 3_ter ^ ^ ^ ^ ^ ^ member setLoc_ter ^ ^ ^ ^ ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
arg 
arg 
byNameKeyCache.put((setLoc[4] + "null"), new String[[]]{setLoc[4],setLoc[3]});


LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.getDateFormatSymbols().getZoneStrings();

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.equals(locale).getZoneStrings();

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getDateFormatSymbols_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.getDateFormatSymbols(locale).getDateFormatSymbols();

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member id_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.getDateFormatSymbols(id).getZoneStrings();

IfStatement condition MemberReference selectors ArraySelector index Literal value 2_ter ^ ^ ^ ^ ^ MethodInvocation arguments MemberReference selectors ArraySelector index Literal value 4_ter ^ ^ ^ ^ ^ ^ member setLoc_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ member setLoc_ter ^ ^ ^ ^ ^ 
if(setLoc[2].equals(setLoc[4])){

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member nameKey_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.getDateFormatSymbols(nameKey).getZoneStrings();

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.getDateFormatSymbols().getZoneStrings();

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member strings_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier strings_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 5_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((strings != null) && (strings.length == 5))){

control EnhancedForControl var VariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name strings_ter ^ ^ ^ ^ ^ ^ iterable MemberReference member zoneStringsLoc_ter ^ ^ ^ ^ ^ ^ 
arg 
arg 
(String [] strings = ;
:zoneStringsLoc)

ReturnStatement_ter ^ 
if (true) { return;
 }

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member getZoneStrings_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.getZoneStrings(locale).getZoneStrings();

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member strings_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((strings != null)){

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member strings_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier strings_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 5_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier id_ter ^ ^ arguments MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member strings_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ ^ ^ ^ 
if((((strings != null) && (strings.length == 5)) && id.equals(strings[0]))){

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member byNameKeyCache_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((byNameKeyCache == null)){

ContinueStatement_ter ^ 
continue;

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.getDateFormatSymbols().getZoneStrings();

StatementExpression expression MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ 
DateTimeUtils.getDateFormatSymbols(locale).getZoneStrings();

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.get(locale).getZoneStrings();

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.put(locale).getZoneStrings();

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member locale_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((locale != null)){

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getName_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.getDateFormatSymbols(locale).getName();

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member get_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.getDateFormatSymbols(locale).get();

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String zoneStringsLoc = DateTimeUtils.getDateFormatSymbols(locale).getZoneStrings();

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.getDateFormatSymbols(locale).getZoneStrings();

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier byIdCache_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = byIdCache.getDateFormatSymbols(locale).getZoneStrings();

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier strings_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 5_ter ^ ^ ^ ^ ^ ^ ^ 
if((strings.length == 5)){

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member id_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.getDateFormatSymbols(locale).id();

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name setLoc_ter ^ ^ initializer Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] setLoc = null;

StatementExpression expression Assignment expressionl MemberReference member zoneStringsLoc_ter ^ ^ ^ ^ value MethodInvocation qualifier DateTimeUtils_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
zoneStringsLoc = DateTimeUtils.getDateFormatSymbols(locale).getZoneStrings();

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member id_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((id != null)){

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier id_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = id.getDateFormatSymbols(locale).getZoneStrings();

LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier zoneStringsLoc_ter ^ ^ selectors MethodInvocation member getZoneStrings_ter ^ ^ ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = zoneStringsLoc.getDateFormatSymbols(locale).getZoneStrings();


LocalVariableDeclaration type ReferenceType name String_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name zoneStringsLoc_ter ^ ^ initializer MethodInvocation qualifier DateTimeUtils_ter ^ ^ arguments MemberReference member locale_ter ^ ^ ^ ^ member getDateFormatSymbols_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
String [] zoneStringsLoc = DateTimeUtils.getDateFormatSymbols(locale);

stderr: 