stdout: condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset > 1))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 23_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset > -23))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset >= 59))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset > 2))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 23_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset > 23))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <=_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset <= 59))){
IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ 
if((minutesOffset < 0)){

IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ 
if((minutesOffset > 59)){

condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset > 59))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 60_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset > 60))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >=_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset >= 0) || (minutesOffset > 59))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <=_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset <= 0) || (minutesOffset > 59))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset < 59))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset > -1))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset > 0) || (minutesOffset > 59))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset == 59))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value false_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset > false))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset > "null"))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset > 0))){
IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr MemberReference member minutesOffset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset < minutesOffset))){

StatementExpression expression Assignment expressionl MemberReference member minutesOffset_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl MemberReference member hoursInMinutes_ter ^ ^ ^ ^ operandr MemberReference member minutesOffset_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
minutesOffset = (hoursInMinutes + minutesOffset);

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) && (minutesOffset > 59))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset == 0) || (minutesOffset > 59))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset != 59))){
StatementExpression expression Assignment expressionl MemberReference member minutesOffset_ter ^ ^ ^ ^ value BinaryOperation operator -_ter ^ ^ operandl MemberReference member hoursInMinutes_ter ^ ^ ^ ^ operandr MemberReference member minutesOffset_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
minutesOffset = (hoursInMinutes - minutesOffset);

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MemberReference member minutesOffset_ter ^ ^ ^ ^ ^ ^ ^ 
if((((minutesOffset < 0) || (minutesOffset > 59)) || minutesOffset)){

StatementExpression expression Assignment expressionl MemberReference member offset_ter ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member minutesOffset_ter ^ ^ ^ MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_MINUTE_ter ^ ^ ^ ^ member safeMultiply_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if((((minutesOffset < 0) || (minutesOffset > 59)) || (minutesOffset > 59))){

condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value true_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset > true))){
ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ 
if (true) { return null; }

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset > 59))){

ReturnStatement expression MethodInvocation arguments MemberReference member offset_ter ^ ^ ^ ^ member forOffsetMillis_ter ^ ^ ^ ^ ^ 
if (true) { return forOffsetMillis(offset); }

IfStatement condition MemberReference member minutesOffset_ter ^ ^ ^ ^ ^ 
if(minutesOffset){

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if((minutesOffset || (minutesOffset > 59))){

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member minutesOffset_ter ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || minutesOffset)){

condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member offset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (offset > 59))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset != 0) || (minutesOffset > 59))){
IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset < 59))){

ReturnStatement expression MemberReference qualifier DateTimeZone_ter ^ ^ member UTC_ter ^ ^ ^ ^ ^ 
if (true) { return DateTimeZone.UTC; }

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr MemberReference member minutesOffset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if((((minutesOffset < 0) || (minutesOffset > 59)) || (minutesOffset < minutesOffset))){

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr MemberReference member minutesOffset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset > minutesOffset))){

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member hoursOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ 
if((hoursOffset == 0)){

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if((minutesOffset || ((minutesOffset < 0) || (minutesOffset > 59)))){

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member hoursOffset_ter ^ ^ ^ ^ operandr Literal value 23_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if((((minutesOffset < 0) || (minutesOffset > 59)) || (hoursOffset > 23))){

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ 
if((minutesOffset == 0)){

condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset > null))){
IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member hoursOffset_ter ^ ^ ^ ^ operandr Literal value 23_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (hoursOffset > 23))){

condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member hoursInMinutes_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (hoursInMinutes > 59))){
IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 59_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if((((minutesOffset < 0) || (minutesOffset > 59)) || (minutesOffset == 0))){

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member minutesOffset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((minutesOffset < 0) || (minutesOffset < 0))){

stderr: 