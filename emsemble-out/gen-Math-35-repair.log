stdout: StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value MemberReference member elitismRate_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = elitismRate;

StatementExpression expression Assignment expressionl This selectors MemberReference member populationLimit_ter ^ ^ ^ ^ ^ ^ value MemberReference member elitismRate_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.populationLimit = elitismRate;

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = this.elitismRate;

StatementExpression expression Assignment expressionl This selectors MemberReference member chromosomes_ter ^ ^ ^ ^ ^ ^ value MemberReference member elitismRate_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.chromosomes = elitismRate;

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value MemberReference member par3 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = ;


StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = false;

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = null;

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value MemberReference member populationLimit_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = populationLimit;

StatementExpression expression MethodInvocation arguments MemberReference member elitismRate_ter ^ ^ ^ ^ member setElitismRate_ter ^ ^ ^ ^ ^ 
setElitismRate(elitismRate);

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value This selectors MemberReference member par3 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = this.;


StatementExpression expression Assignment expressionl This selectors MemberReference member populationLimit_ter ^ ^ ^ ^ ^ ^ value MemberReference member populationLimit_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.populationLimit = populationLimit;

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = true;

StatementExpression expression Assignment expressionl This selectors MemberReference member populationLimit_ter ^ ^ ^ ^ ^ ^ value MemberReference member elitismRate_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.populationLimit = elitismRate;

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value MemberReference member elitismRate_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = elitismRate;

ReturnStatement_ter ^ 
if (true) { return;
 }

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value This selectors MemberReference member populationLimit_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = this.populationLimit;

StatementExpression expression Assignment expressionl This selectors MemberReference member par3 ^ ^ ^ ^ ^ ^ value MemberReference member elitismRate_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this. = elitismRate;


StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value Literal value 0_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = 0;

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member elitismRate_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((elitismRate != null)){

StatementExpression expression Assignment expressionl This selectors MemberReference member populationLimit_ter ^ ^ ^ ^ ^ ^ value MemberReference member chromosomes_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.populationLimit = chromosomes;

StatementExpression expression Assignment expressionl This selectors MemberReference member par3 ^ ^ ^ ^ ^ ^ value MemberReference member elitismRate_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this. = elitismRate;


StatementExpression expression This selectors MethodInvocation arguments MemberReference member elitismRate_ter ^ ^ ^ ^ member setElitismRate_ter ^ ^ ^ ^ ^ ^ ^ 
this.setElitismRate(elitismRate);

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value MemberReference member populationLimit_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = populationLimit;

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((this.elitismRate != null)){

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member elitismRate_ter ^ ^ ^ ^ member setElitismRate_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = setElitismRate(elitismRate);

StatementExpression expression SuperConstructorInvocation_ter ^ ^ ^ 
1 SuperConstructorInvocation_ter
StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value MemberReference member elitismRate_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = elitismRate;

StatementExpression expression MethodInvocation arguments MemberReference member elitismRate_ter ^ ^ ^ ^ member setElitismRate_ter ^ ^ ^ ^ ^ 
setElitismRate(elitismRate);

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = this.elitismRate;

StatementExpression expression Assignment expressionl This selectors MemberReference member populationLimit_ter ^ ^ ^ ^ ^ ^ value MemberReference member elitismRate_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.populationLimit = elitismRate;

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value MemberReference member elitismRate_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = elitismRate;

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = false;

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = null;

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = true;

StatementExpression expression This selectors MethodInvocation arguments MemberReference member elitismRate_ter ^ ^ ^ ^ member setElitismRate_ter ^ ^ ^ ^ ^ ^ ^ 
this.setElitismRate(elitismRate);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member elitismRate_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((elitismRate != null)){

StatementExpression expression Assignment expressionl This selectors MemberReference member populationLimit_ter ^ ^ ^ ^ ^ ^ value MemberReference member elitismRate_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.populationLimit = elitismRate;

StatementExpression expression Assignment expressionl This selectors MemberReference member par2 ^ ^ ^ ^ ^ ^ value MemberReference member elitismRate_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this. = elitismRate;


StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value MemberReference member par2 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = ;


StatementExpression expression This selectors MemberReference member elitismRate_ter ^ ^ ^ MethodInvocation arguments MemberReference member elitismRate_ter ^ ^ ^ ^ member setElitismRate_ter ^ ^ ^ ^ ^ ^ ^ 
this.elitismRate.setElitismRate(elitismRate);

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value Literal value 0_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = 0;

StatementExpression expression SuperConstructorInvocation_ter ^ ^ ^ 
1 SuperConstructorInvocation_ter
StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member elitismRate_ter ^ ^ ^ ^ member setElitismRate_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = setElitismRate(elitismRate);

ReturnStatement_ter ^ 
if (true) { return;
 }

StatementExpression expression Assignment expressionl This selectors MemberReference member par2 ^ ^ ^ ^ ^ ^ value MemberReference member elitismRate_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this. = elitismRate;


StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value This selectors MemberReference member populationLimit_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = this.populationLimit;

StatementExpression expression SuperMethodInvocation member ElitisticListPopulation_ter ^ ^ ^ ^ ^ 
super.ElitisticListPopulation();

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value Cast type BasicType name int_ter ^ ^ ^ ^ expression MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = (int)elitismRate;

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value This selectors MemberReference member par2 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = this.;


StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value This selectors MethodInvocation arguments MemberReference member elitismRate_ter ^ ^ ^ ^ member setElitismRate_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = this.setElitismRate(elitismRate);

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member elitismRate_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((elitismRate == null)){

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value Literal value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = 1;

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value Cast type BasicType name double_ter ^ ^ ^ ^ expression MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = (double)elitismRate;

StatementExpression expression Assignment expressionl This selectors MemberReference member elitismRate_ter ^ ^ ^ ^ ^ ^ value MemberReference member populationLimit_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.elitismRate = populationLimit;

stderr: 