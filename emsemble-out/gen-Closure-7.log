stdout: else_statement -> BlockStatement
using GPU
p
path com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter
caseObjectType
Position(line=610, column=12)
FOUND IT!
[{'bugid': 'Closure-7', 'treeroot': <Searchnode.Node object at 0x7f9fbe82d250>, 'troot': <Searchnode.Node object at 0x7f9fbe82d250>, 'oldcode': '        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;', 'filepath': 'buggy/Closure-7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java', 'subroot': <Searchnode.Node object at 0x7f9fbe82dfd0>, 'vardic': {'caseObjectType_ter': 'meth0', 'type_ter': 'par0', 'ctorType_ter': 'loc0'}, 'typedic': {'type_ter': 'ObjectType', 'ctorType_ter': 'JSType'}, 'idss': 'Closure-7', 'classname': 'com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter', 'precode': '/*\n * Copyright 2007 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.javascript.jscomp.type;\n\nimport static com.google.javascript.rhino.jstype.JSTypeNative.ALL_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.BOOLEAN_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.CHECKED_UNKNOWN_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.NO_OBJECT_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.NO_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.NULL_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.NUMBER_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.OBJECT_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.STRING_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.U2U_CONSTRUCTOR_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.UNKNOWN_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.VOID_TYPE;\n\nimport com.google.common.base.Preconditions;\nimport com.google.javascript.jscomp.CodingConvention;\nimport com.google.javascript.rhino.Node;\nimport com.google.javascript.rhino.Token;\nimport com.google.javascript.rhino.jstype.EnumElementType;\nimport com.google.javascript.rhino.jstype.FunctionType;\nimport com.google.javascript.rhino.jstype.JSType;\nimport com.google.javascript.rhino.jstype.JSTypeNative;\nimport com.google.javascript.rhino.jstype.JSTypeRegistry;\nimport com.google.javascript.rhino.jstype.ObjectType;\nimport com.google.javascript.rhino.jstype.ParameterizedType;\nimport com.google.javascript.rhino.jstype.StaticSlot;\nimport com.google.javascript.rhino.jstype.TemplateType;\nimport com.google.javascript.rhino.jstype.UnionType;\nimport com.google.javascript.rhino.jstype.Visitor;\n\n/**\n * Chainable reverse abstract interpreter providing basic functionality.\n *\n */\npublic abstract class ChainableReverseAbstractInterpreter\n    implements ReverseAbstractInterpreter {\n  protected final CodingConvention convention;\n  final JSTypeRegistry typeRegistry;\n  private ChainableReverseAbstractInterpreter firstLink;\n  private ChainableReverseAbstractInterpreter nextLink;\n\n  /**\n   * Constructs an interpreter, which is the only link in a chain. Interpreters\n   * can be appended using {@link #append}.\n   */\n  public ChainableReverseAbstractInterpreter(CodingConvention convention,\n      JSTypeRegistry typeRegistry) {\n    Preconditions.checkNotNull(convention);\n    this.convention = convention;\n    this.typeRegistry = typeRegistry;\n    firstLink = this;\n    nextLink = null;\n  }\n\n  /**\n   * Appends a link to {@code this}, returning the updated last link.\n   * <p>\n   * The pattern {@code new X().append(new Y())...append(new Z())} forms a\n   * chain starting with X, then Y, then ... Z.\n   * @param lastLink a chainable interpreter, with no next link\n   * @return the updated last link\n   */\n  public ChainableReverseAbstractInterpreter append(\n      ChainableReverseAbstractInterpreter lastLink) {\n    Preconditions.checkArgument(lastLink.nextLink == null);\n    this.nextLink = lastLink;\n    lastLink.firstLink = this.firstLink;\n    return lastLink;\n  }\n\n  /**\n   * Gets the first link of this chain.\n   */\n  public ChainableReverseAbstractInterpreter getFirst() {\n    return firstLink;\n  }\n\n  /**\n   * Calculates the preciser scope starting with the first link.\n   */\n  protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition,\n      FlowScope blindScope, boolean outcome) {\n    return firstLink.getPreciserScopeKnowingConditionOutcome(\n        condition, blindScope, outcome);\n  }\n\n  /**\n   * Delegates the calculation of the preciser scope to the next link.\n   * If there is no next link, returns the blind scope.\n   */\n  protected FlowScope nextPreciserScopeKnowingConditionOutcome(Node condition,\n      FlowScope blindScope, boolean outcome) {\n    return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome(\n        condition, blindScope, outcome) : blindScope;\n  }\n\n  /**\n   * Returns the type of a node in the given scope if the node corresponds to a\n   * name whose type is capable of being refined.\n   * @return The current type of the node if it can be refined, null otherwise.\n   */\n  protected JSType getTypeIfRefinable(Node node, FlowScope scope) {\n    switch (node.getType()) {\n      case Token.NAME:\n        StaticSlot<JSType> nameVar = scope.getSlot(node.getString());\n        if (nameVar != null) {\n          JSType nameVarType = nameVar.getType();\n          if (nameVarType == null) {\n            nameVarType = node.getJSType();\n          }\n          return nameVarType;\n        }\n        return null;\n\n      case Token.GETPROP:\n        String qualifiedName = node.getQualifiedName();\n        if (qualifiedName == null) {\n          return null;\n        }\n        StaticSlot<JSType> propVar = scope.getSlot(qualifiedName);\n        JSType propVarType = null;\n        if (propVar != null) {\n          propVarType = propVar.getType();\n        }\n        if (propVarType == null) {\n          propVarType = node.getJSType();\n        }\n        if (propVarType == null) {\n          propVarType = getNativeType(UNKNOWN_TYPE);\n        }\n        return propVarType;\n    }\n    return null;\n  }\n\n  /**\n   * Declares a refined type in {@code scope} for the name represented by\n   * {@code node}. It must be possible to refine the type of the given node in\n   * the given scope, as determined by {@link #getTypeIfRefinable}.\n   */\n  protected void declareNameInScope(FlowScope scope, Node node, JSType type) {\n    switch (node.getType()) {\n      case Token.NAME:\n        scope.inferSlotType(node.getString(), type);\n        break;\n\n      case Token.GETPROP:\n        String qualifiedName = node.getQualifiedName();\n        Preconditions.checkNotNull(qualifiedName);\n\n        JSType origType = node.getJSType();\n        origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;\n        scope.inferQualifiedSlot(node, qualifiedName, origType, type);\n        break;\n\n      case Token.THIS:\n        // "this" references aren\'t currently modeled in the CFG.\n        break;\n\n      default:\n        throw new IllegalArgumentException("Node cannot be refined. \\n" +\n            node.toStringTree());\n    }\n  }\n\n  /**\n   * @see #getRestrictedWithoutUndefined(JSType)\n   */\n  private final Visitor<JSType> restrictUndefinedVisitor =\n    new Visitor<JSType>() {\n      @Override\n      public JSType caseEnumElementType(EnumElementType enumElementType) {\n        JSType type = enumElementType.getPrimitiveType().visit(this);\n        if (type != null && enumElementType.getPrimitiveType().isEquivalentTo(type)) {\n          return enumElementType;\n        } else {\n          return type;\n        }\n      }\n\n      @Override\n      public JSType caseAllType() {\n        return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE);\n      }\n\n      @Override\n      public JSType caseNoObjectType() {\n        return getNativeType(NO_OBJECT_TYPE);\n      }\n\n      @Override\n      public JSType caseNoType() {\n        return getNativeType(NO_TYPE);\n      }\n\n      @Override\n      public JSType caseBooleanType() {\n        return getNativeType(BOOLEAN_TYPE);\n      }\n\n      @Override\n      public JSType caseFunctionType(FunctionType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseNullType() {\n        return getNativeType(NULL_TYPE);\n      }\n\n      @Override\n      public JSType caseNumberType() {\n        return getNativeType(NUMBER_TYPE);\n      }\n\n      @Override\n      public JSType caseObjectType(ObjectType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseStringType() {\n        return getNativeType(STRING_TYPE);\n      }\n\n      @Override\n      public JSType caseUnionType(UnionType type) {\n        return type.getRestrictedUnion(getNativeType(VOID_TYPE));\n      }\n\n      @Override\n      public JSType caseUnknownType() {\n        return getNativeType(UNKNOWN_TYPE);\n      }\n\n      @Override\n      public JSType caseVoidType() {\n        return null;\n      }\n\n      @Override\n      public JSType caseParameterizedType(ParameterizedType type) {\n        return caseObjectType(type);\n      }\n\n      @Override\n      public JSType caseTemplateType(TemplateType templateType) {\n        return caseObjectType(templateType);\n      }\n    };\n\n\n  /**\n   * @see #getRestrictedWithoutNull(JSType)\n   */\n  private final Visitor<JSType> restrictNullVisitor =\n    new Visitor<JSType>() {\n      @Override\n      public JSType caseEnumElementType(EnumElementType enumElementType) {\n        JSType type = enumElementType.getPrimitiveType().visit(this);\n        if (type != null &&\n            enumElementType.getPrimitiveType().isEquivalentTo(type)) {\n          return enumElementType;\n        } else {\n          return type;\n        }\n      }\n\n      @Override\n      public JSType caseAllType() {\n        return typeRegistry.createUnionType(OBJECT_TYPE, NUMBER_TYPE,\n            STRING_TYPE, BOOLEAN_TYPE, VOID_TYPE);\n      }\n\n      @Override\n      public JSType caseNoObjectType() {\n        return getNativeType(NO_OBJECT_TYPE);\n      }\n\n      @Override\n      public JSType caseNoType() {\n        return getNativeType(NO_TYPE);\n      }\n\n      @Override\n      public JSType caseBooleanType() {\n        return getNativeType(BOOLEAN_TYPE);\n      }\n\n      @Override\n      public JSType caseFunctionType(FunctionType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseNullType() {\n        return null;\n      }\n\n      @Override\n      public JSType caseNumberType() {\n        return getNativeType(NUMBER_TYPE);\n      }\n\n      @Override\n      public JSType caseObjectType(ObjectType type) {\n        return type;\n      }\n\n      @Override\n      public JSType caseStringType() {\n        return getNativeType(STRING_TYPE);\n      }\n\n      @Override\n      public JSType caseUnionType(UnionType type) {\n        return type.getRestrictedUnion(getNativeType(NULL_TYPE));\n      }\n\n      @Override\n      public JSType caseUnknownType() {\n        return getNativeType(UNKNOWN_TYPE);\n      }\n\n      @Override\n      public JSType caseVoidType() {\n        return getNativeType(VOID_TYPE);\n      }\n\n      @Override\n      public JSType caseParameterizedType(ParameterizedType type) {\n        return caseObjectType(type);\n      }\n\n      @Override\n      public JSType caseTemplateType(TemplateType templateType) {\n        return caseObjectType(templateType);\n      }\n    };\n\n  /**\n   * A class common to all visitors that need to restrict the type based on\n   * {@code typeof}-like conditions.\n   */\n  abstract class RestrictByTypeOfResultVisitor\n      implements Visitor<JSType> {\n\n    /**\n     * Abstracts away the similarities between visiting the unknown type and the\n     * all type.\n     * @param topType {@code UNKNOWN_TYPE} or {@code ALL_TYPE}\n     * @return the restricted type\n     * @see #caseAllType\n     * @see #caseUnknownType\n     */\n    protected abstract JSType caseTopType(JSType topType);\n\n    @Override\n    public JSType caseAllType() {\n      return caseTopType(getNativeType(ALL_TYPE));\n    }\n\n    @Override\n    public JSType caseUnknownType() {\n      return caseTopType(getNativeType(CHECKED_UNKNOWN_TYPE));\n    }\n\n    @Override\n    public JSType caseUnionType(UnionType type) {\n      JSType restricted = null;\n      for (JSType alternate : type.getAlternates()) {\n        JSType restrictedAlternate = alternate.visit(this);\n        if (restrictedAlternate != null) {\n          if (restricted == null) {\n            restricted = restrictedAlternate;\n          } else {\n            restricted = restrictedAlternate.getLeastSupertype(restricted);\n          }\n        }\n      }\n      return restricted;\n    }\n\n    @Override\n    public JSType caseNoType() {\n      return getNativeType(NO_TYPE);\n    }\n\n    @Override\n    public JSType caseEnumElementType(EnumElementType enumElementType) {\n      // NOTE(nicksantos): This is a white lie. Suppose we have:\n      // /** @enum {string|number} */ var MyEnum = ...;\n      // if (goog.isNumber(myEnumInstance)) {\n      //   /* what is myEnumInstance here? */\n      // }\n      // There is no type that represents {MyEnum - string}. What we really\n      // need is a notion of "enum subtyping", so that we could dynamically\n      // create a subtype of MyEnum restricted by string. In any case,\n      // this should catch the common case.\n      JSType type = enumElementType.getPrimitiveType().visit(this);\n      if (type != null &&\n          enumElementType.getPrimitiveType().isEquivalentTo(type)) {\n        return enumElementType;\n      } else {\n        return type;\n      }\n    }\n\n    @Override\n    public JSType caseParameterizedType(ParameterizedType type) {\n      return caseObjectType(type);\n    }\n\n    @Override\n    public JSType caseTemplateType(TemplateType templateType) {\n      return caseObjectType(templateType);\n    }\n  }\n\n  /**\n   * A class common to all visitors that need to restrict the type based on\n   * some {@code typeof}-like condition being true. All base cases return\n   * {@code null}. It is up to the subclasses to override the appropriate ones.\n   */\n  abstract class RestrictByTrueTypeOfResultVisitor\n      extends RestrictByTypeOfResultVisitor {\n    @Override\n    public JSType caseNoObjectType() {\n      return null;\n    }\n\n    @Override\n    public JSType caseBooleanType() {\n      return null;\n    }\n\n    @Override\n    public JSType caseFunctionType(FunctionType type) {\n      return null;\n    }\n\n    @Override\n    public JSType caseNullType() {\n      return null;\n    }\n\n    @Override\n    public JSType caseNumberType() {\n      return null;\n    }\n\n    @Override\n    public JSType caseObjectType(ObjectType type) {\n      return null;\n    }\n\n    @Override\n    public JSType caseStringType() {\n      return null;\n    }\n\n    @Override\n    public JSType caseVoidType() {\n      return null;\n    }\n  }\n\n  /**\n   * A class common to all visitors that need to restrict the type based on\n   * some {@code typeof}-like condition being false. All base cases return\n   * their type. It is up to the subclasses to override the appropriate ones.\n   */\n  abstract class RestrictByFalseTypeOfResultVisitor\n      extends RestrictByTypeOfResultVisitor {\n    @Override\n    protected JSType caseTopType(JSType topType) {\n      return topType;\n    }\n\n    @Override\n    public JSType caseNoObjectType() {\n      return getNativeType(NO_OBJECT_TYPE);\n    }\n\n    @Override\n    public JSType caseBooleanType() {\n      return getNativeType(BOOLEAN_TYPE);\n    }\n\n    @Override\n    public JSType caseFunctionType(FunctionType type) {\n      return type;\n    }\n\n    @Override\n    public JSType caseNullType() {\n      return getNativeType(NULL_TYPE);\n    }\n\n    @Override\n    public JSType caseNumberType() {\n      return getNativeType(NUMBER_TYPE);\n    }\n\n    @Override\n    public JSType caseObjectType(ObjectType type) {\n      return type;\n    }\n\n    @Override\n    public JSType caseStringType() {\n      return getNativeType(STRING_TYPE);\n    }\n\n    @Override\n    public JSType caseVoidType() {\n      return getNativeType(VOID_TYPE);\n    }\n  }\n\n  /**\n   * @see ChainableReverseAbstractInterpreter#getRestrictedByTypeOfResult\n   */\n  private class RestrictByOneTypeOfResultVisitor\n      extends RestrictByTypeOfResultVisitor {\n    /**\n     * A value known to be equal or not equal to the result of the\n     * {@code typeOf} operation.\n     */\n    private final String value;\n\n    /**\n     * {@code true} if the {@code typeOf} result is known to equal\n     * {@code value}; {@code false} if it is known <em>not</em> to equal\n     * {@code value}.\n     */\n    private final boolean resultEqualsValue;\n\n    RestrictByOneTypeOfResultVisitor(String value, boolean resultEqualsValue) {\n      this.value = value;\n      this.resultEqualsValue = resultEqualsValue;\n    }\n\n    /**\n     * Computes whether the given result of a {@code typeof} operator matches\n     * expectations, i.e. whether a type that gives such a result should be\n     * kept.\n     */\n    private boolean matchesExpectation(String result) {\n      return result.equals(value) == resultEqualsValue;\n    }\n\n    @Override\n    protected JSType caseTopType(JSType topType) {\n      JSType result = topType;\n      if (resultEqualsValue) {\n        JSType typeByName = getNativeTypeForTypeOf(value);\n        if (typeByName != null) {\n          result = typeByName;\n        }\n      }\n      return result;\n    }\n\n    @Override\n    public JSType caseNoObjectType() {\n      return (value.equals("object") || value.equals("function")) ==\n          resultEqualsValue ? getNativeType(NO_OBJECT_TYPE) : null;\n    }\n\n    @Override\n    public JSType caseBooleanType() {\n      return matchesExpectation("boolean") ? getNativeType(BOOLEAN_TYPE) : null;\n    }\n\n    @Override\n    public JSType caseFunctionType(FunctionType type) {\n      return matchesExpectation("function") ? type : null;\n    }\n\n    @Override\n    public JSType caseNullType() {\n      return matchesExpectation("object") ? getNativeType(NULL_TYPE) : null;\n    }\n\n    @Override\n    public JSType caseNumberType() {\n      return matchesExpectation("number") ? getNativeType(NUMBER_TYPE) : null;\n    }\n\n    @Override\n    public JSType caseObjectType(ObjectType type) {\n      if (value.equals("function")) {\n        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);', 'aftercode': '          // Objects are restricted to "Function", subtypes are left\n          // Only filter out subtypes of "function"\n      }\n      return matchesExpectation("object") ? type : null;\n    }\n\n    @Override\n    public JSType caseStringType() {\n      return matchesExpectation("string") ? getNativeType(STRING_TYPE) : null;\n    }\n\n    @Override\n    public JSType caseVoidType() {\n      return matchesExpectation("undefined") ? getNativeType(VOID_TYPE) : null;\n    }\n  }\n\n  /**\n   * Returns a version of type where undefined is not present.\n   */\n  protected final JSType getRestrictedWithoutUndefined(JSType type) {\n    return type == null ? null : type.visit(restrictUndefinedVisitor);\n  }\n\n  /**\n   * Returns a version of type where null is not present.\n   */\n  protected final JSType getRestrictedWithoutNull(JSType type) {\n    return type == null ? null : type.visit(restrictNullVisitor);\n  }\n\n  /**\n   * Returns a version of {@code type} that is restricted by some knowledge\n   * about the result of the {@code typeof} operation.\n   * <p>\n   * The behavior of the {@code typeof} operator can be summarized by the\n   * following table:\n   * <table>\n   * <tr><th>type</th><th>result</th></tr>\n   * <tr><td>{@code undefined}</td><td>"undefined"</td></tr>\n   * <tr><td>{@code null}</td><td>"object"</td></tr>\n   * <tr><td>{@code boolean}</td><td>"boolean"</td></tr>\n   * <tr><td>{@code number}</td><td>"number"</td></tr>\n   * <tr><td>{@code string}</td><td>"string"</td></tr>\n   * <tr><td>{@code Object} (which doesn\'t implement [[Call]])</td>\n   *     <td>"object"</td></tr>\n   * <tr><td>{@code Object} (which implements [[Call]])</td>\n   *     <td>"function"</td></tr>\n   * </table>\n   * @param type the type to restrict\n   * @param value A value known to be equal or not equal to the result of the\n   *        {@code typeof} operation\n   * @param resultEqualsValue {@code true} if the {@code typeOf} result is known\n   *        to equal {@code value}; {@code false} if it is known <em>not</em> to\n   *        equal {@code value}\n   * @return the restricted type or null if no version of the type matches the\n   *         restriction\n   */\n  JSType getRestrictedByTypeOfResult(JSType type, String value,\n                                     boolean resultEqualsValue) {\n    if (type == null) {\n      if (resultEqualsValue) {\n        JSType result = getNativeTypeForTypeOf(value);\n        return result == null ? getNativeType(CHECKED_UNKNOWN_TYPE) : result;\n      } else {\n        return null;\n      }\n    }\n    return type.visit(\n        new RestrictByOneTypeOfResultVisitor(value, resultEqualsValue));\n  }\n\n  JSType getNativeType(JSTypeNative typeId) {\n    return typeRegistry.getNativeType(typeId);\n  }\n\n  /**\n   * If we definitely know what a type is based on the typeof result,\n   * return it.  Otherwise, return null.\n   *\n   * The typeof operation in JS is poorly defined, and this function works\n   * for both the native typeof and goog.typeOf. It should not be made public,\n   * because its semantics are informally defined, and would be wrong in\n   * the general case.\n   */\n  private JSType getNativeTypeForTypeOf(String value) {\n    if (value.equals("number")) {\n      return getNativeType(NUMBER_TYPE);\n    } else if (value.equals("boolean")) {\n      return getNativeType(BOOLEAN_TYPE);\n    } else if (value.equals("string")) {\n      return getNativeType(STRING_TYPE);\n    } else if (value.equals("undefined")) {\n      return getNativeType(VOID_TYPE);\n    } else if (value.equals("function")) {\n      return getNativeType(U2U_CONSTRUCTOR_TYPE);\n    } else {\n      return null;\n    }\n  }\n}', 'tree': 'MethodDeclaration modifiers public_ter ^ ^ annotations Annotation name Override_ter ^ ^ ^ ^ return_type ReferenceType name JSType_ter ^ ^ ^ ^ name meth0 ^ ^ parameters FormalParameter type ReferenceType name ObjectType_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ body IfStatement condition MethodInvocation qualifier value_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name JSType_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MemberReference member U2U_CONSTRUCTOR_TYPE_ter ^ ^ ^ ^ member getNativeType_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression TernaryExpression condition MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member matchesExpectation_ter ^ ^ ^ ^ if_true MemberReference member par0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], 'mode': 0, 'line': 613, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  ^ ^ ; ['copy-MemberReference']
copynode 0:  root member-member isSubtype_ter ^ ^  ^ ^ ; ['copy-member']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root qualifier-qualifier loc0 ^ ^  ^ ^ ; ['copy-qualifier']
before@1 batch0 x: -12.277873039245605: root qualifier-qualifier loc0 ^ ^  ^ ^  ; ['copy-qualifier']
after@1 batch0 x: -12.277873039245605: root qualifier-qualifier loc0 ^ ^  ^ ^  ; ['copy-qualifier']
copynode -0.042097751051187515:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -0.042097751051187515:  root modified ^ member-member isSubtype_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.042097751051187515:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.042097751051187515:  root modified ^ operator-operator &&_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-operator']
copynode -3.193547010421753:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -0.042097751051187515:  root modified ^ qualifier-qualifier loc0 ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -3.193547010421753:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.042097751051187515:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.042097751051187515:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.042097751051187515:  root modified ^ Literal-Literal value null_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-Literal']
copynode -3.193547010421753:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -3.193547010421753:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -0.042097751051187515:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -0.042097751051187515:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -3.193547010421753:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -3.193547010421753:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -3.193547010421753:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -3.193547010421753:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -10.694107055664062:  root MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member']
copynode -10.75539779663086:  root member-member isSubtype_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -11.154780387878418:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -3.193547010421753:  root add ^ Statement_ter ^ ^ ; ['root -> add', 'root -> Statement_ter']
copynode -3.193547010421753:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -11.629120826721191:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -11.636364936828613:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -12.10300350189209:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -10.75539779663086:  root member-member isSubtype_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -12.277873039245605:  root qualifier-qualifier loc0 ^ ^  par0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par0']
copynode -12.277873039245605:  root qualifier-qualifier loc0 ^ ^  loc0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> loc0']
copynode -12.277873039245605:  root qualifier-qualifier loc0 ^ ^  unknown ^ ^ ^ ; ['copy-qualifier', 'start -> unknown']
copynode -10.694107055664062:  root MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member']
copynode -11.636364936828613:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -10.75539779663086:  root member-member isSubtype_ter ^ ^  get_ter ^ ^ ^ ; ['copy-member', 'member -> get_ter']
copynode -10.75539779663086:  root member-member isSubtype_ter ^ ^  getName_ter ^ ^ ^ ; ['copy-member', 'member -> getName_ter']
copynode -12.277873039245605:  root qualifier-qualifier loc0 ^ ^  par1 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par1']
copynode -12.277873039245605:  root qualifier-qualifier loc0 ^ ^  value_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -10.75539779663086:  root member-member isSubtype_ter ^ ^  add_ter ^ ^ ^ ; ['copy-member', 'member -> add_ter']
copynode -10.75539779663086:  root member-member isSubtype_ter ^ ^  getNativeType_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -10.75539779663086:  root member-member isSubtype_ter ^ ^  isSubtype_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -10.75539779663086:  root member-member isSubtype_ter ^ ^  toString_ter ^ ^ ^ ; ['copy-member', 'member -> toString_ter']
copynode -10.75539779663086:  root member-member isSubtype_ter ^ ^  matchesExpectation_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -10.75539779663086:  root member-member isSubtype_ter ^ ^  debug_ter ^ ^ ^ ; ['copy-member', 'member -> debug_ter']
copynode -12.277873039245605:  root qualifier-qualifier loc0 ^ ^  loc1 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> loc1']
copynode -11.629120826721191:  root ReturnStatement expression TernaryExpression condition MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member matchesExpectation_ter ^ ^ ^ ^ if_true MemberReference member par0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -12.277873039245605:  root qualifier-qualifier loc0 ^ ^  LOG_ter ^ ^ ^ ; ['copy-qualifier', 'qualifier -> LOG_ter']
copynode -10.694107055664062:  root MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -10.694107055664062:  root MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> selectors member']
copynode -12.277873039245605:  root qualifier-qualifier loc0 ^ ^  Math_ter ^ ^ ^ ; ['copy-qualifier', 'qualifier -> Math_ter']
copynode -11.636364936828613:  root return_type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'copy-return_type']
copynode -12.277873039245605:  root qualifier-qualifier loc0 ^ ^  par2 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par2']
copynode -10.694107055664062:  root MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -12.277873039245605:  root qualifier-qualifier loc0 ^ ^  par3 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par3']
copynode -11.629120826721191:  root ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -10.694107055664062:  root MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -10.694107055664062:  root MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -10.694107055664062:  root MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -11.636364936828613:  root return_type par0 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -12.10300350189209:  root StatementExpression par0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -11.154780387878418:  root IfStatement condition MethodInvocation qualifier value_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name JSType_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MemberReference member U2U_CONSTRUCTOR_TYPE_ter ^ ^ ^ ^ member getNativeType_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.629120826721191:  root ReturnStatement par0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -10.694107055664062:  root MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier selectors member']
copynode -11.154780387878418:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -10.694107055664062:  root MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  prefix_operators ^ postfix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators postfix_operators member']
copynode -11.154780387878418:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -11.154780387878418:  root IfStatement par0 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -12.10300350189209:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -11.636364936828613:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -11.629120826721191:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -11.636364936828613:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.154780387878418:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -12.10300350189209:  root StatementExpression loc0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -11.629120826721191:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -12.10300350189209:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -11.154780387878418:  root IfStatement loc0 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch0 x: -35.474493980407715: root IfStatement loc0 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch0 x: -35.474493980407715: root IfStatement loc0 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -0.7109435237944126:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -1.635287944227457:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -1.5784441865980625:  root modified ^ member-member isSubtype_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -1.5784441865980625:  root modified ^ member-member isSubtype_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -3.8330573439598083:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -3.994752883911133:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -4.238491717725992:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -3.81599635258317:  root modified ^ operator-operator &&_ter ^ ^  &&_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &&_ter']
copynode -3.81599635258317:  root modified ^ operator-operator &&_ter ^ ^  ||_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ||_ter']
copynode -3.9078981317579746:  root modified ^ qualifier-qualifier loc0 ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0']
copynode -3.9078981317579746:  root modified ^ qualifier-qualifier loc0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -1.635287944227457:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -3.9078981317579746:  root modified ^ qualifier-qualifier loc0 ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0']
copynode -5.266685668379068:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -5.555448237806559:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value']
copynode -1.5784441865980625:  root modified ^ member-member isSubtype_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter']
copynode -1.5784441865980625:  root modified ^ member-member isSubtype_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter']
copynode -1.5784441865980625:  root modified ^ member-member isSubtype_ter ^ ^  getNativeType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.9078981317579746:  root modified ^ qualifier-qualifier loc0 ^ ^  value_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -1.5784441865980625:  root modified ^ member-member isSubtype_ter ^ ^  lastIndexOf_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> lastIndexOf_ter']
copynode -1.5784441865980625:  root modified ^ member-member isSubtype_ter ^ ^  toString_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> toString_ter']
copynode -1.5784441865980625:  root modified ^ member-member isSubtype_ter ^ ^  isSubtype_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.9078981317579746:  root modified ^ qualifier-qualifier loc0 ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1']
copynode -1.5784441865980625:  root modified ^ member-member isSubtype_ter ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> add_ter']
copynode -7.5643041133880615:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -4.238491717725992:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -1.5784441865980625:  root modified ^ member-member isSubtype_ter ^ ^  matchesExpectation_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.81599635258317:  root modified ^ operator-operator &&_ter ^ ^  |_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> |_ter']
copynode -0.7109435237944126:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member matchesExpectation_ter ^ ^ ^ ^ if_true MemberReference member par0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -3.9078981317579746:  root modified ^ qualifier-qualifier loc0 ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc1']
copynode -3.81599635258317:  root modified ^ operator-operator &&_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter']
copynode -8.649219274520874:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -8.989359561353922:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.635287944227457:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -5.266685668379068:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -3.81599635258317:  root modified ^ operator-operator &&_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter']
copynode -1.635287944227457:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -3.81599635258317:  root modified ^ operator-operator &&_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter']
copynode -9.66004628315568:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -5.555448237806559:  root modified ^ Literal-Literal value null_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value']
copynode -3.81599635258317:  root modified ^ operator-operator &&_ter ^ ^  &_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &_ter']
copynode -3.9078981317579746:  root modified ^ qualifier-qualifier loc0 ^ ^  LOG_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> LOG_ter']
copynode -9.834778070449829:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -10.171329259872437:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -9.899513483047485:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -4.238491717725992:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -10.545131921768188:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -3.9078981317579746:  root modified ^ qualifier-qualifier loc0 ^ ^  Math_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> Math_ter']
copynode -1.635287944227457:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -3.9078981317579746:  root modified ^ qualifier-qualifier loc0 ^ ^  par2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par2']
copynode -10.977717950940132:  root member-member isSubtype_ter ^ ^  unknown ^ ^ ReturnStatement ^ ^ ; ['copy-member', 'start -> unknown', 'root -> ReturnStatement']
copynode -4.238491717725992:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -3.81599635258317:  root modified ^ operator-operator &&_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter']
copynode -11.174422979354858:  root add ^ Statement_ter ^ ^ ; ['root -> add', 'root -> Statement_ter', 'root -> End']
copynode -11.232301473617554:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -5.555448237806559:  root modified ^ Literal-Literal value null_ter ^ ^ ^  selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> selectors value']
copynode -3.9078981317579746:  root modified ^ qualifier-qualifier loc0 ^ ^  loc3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc3']
copynode -11.155245591129642:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -3.81599635258317:  root modified ^ operator-operator &&_ter ^ ^  >_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >_ter']
copynode -0.7109435237944126:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -10.739306043833494:  root MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.238491717725992:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -10.739306043833494:  root MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.266685668379068:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -7.5643041133880615:  root add ^ ReturnStatement expression TernaryExpression condition MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member matchesExpectation_ter ^ ^ ^ ^ if_true MemberReference member par0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -11.765856757760048:  root return_type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -5.266685668379068:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -12.10672097094357:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -9.899513483047485:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -11.633098934777081:  root ReturnStatement expression TernaryExpression ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression']
copynode -5.266685668379068:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -1.635287944227457:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -11.155245591129642:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.81599635258317:  root modified ^ operator-operator &&_ter ^ ^  instanceof_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> instanceof_ter']
copynode -5.555448237806559:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -10.739306043833494:  root MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.555448237806559:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -1.635287944227457:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -11.633098934777081:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -11.765856757760048:  root return_type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -12.567927956581116:  root member-member isSubtype_ter ^ ^  meth0 ^ ^ ReturnStatement ^ ^ ; ['copy-member', 'member -> meth0', 'root -> ReturnStatement']
copynode -5.555448237806559:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -10.977717950940132:  root member-member isSubtype_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown', 'root -> End']
copynode -5.555448237806559:  root modified ^ Literal-Literal value null_ter ^ ^ ^  prefix_operators ^ selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators selectors value']
copynode -1.635287944227457:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -8.649219274520874:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -12.567927956581116:  root member-member isSubtype_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0', 'root -> End']
copynode -5.555448237806559:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -13.34538984298706:  root qualifier-qualifier loc0 ^ ^  par0 ^ ^ ReturnStatement ^ ^ ; ['copy-qualifier', 'qualifier -> par0', 'root -> ReturnStatement']
copynode -8.649219274520874:  root add ^ LocalVariableDeclaration type ReferenceType name JSType_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MemberReference member U2U_CONSTRUCTOR_TYPE_ter ^ ^ ^ ^ member getNativeType_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -13.515491008758545:  root qualifier-qualifier loc0 ^ ^  unknown ^ ^ ReturnStatement ^ ^ ; ['copy-qualifier', 'start -> unknown', 'root -> ReturnStatement']
copynode -12.10672097094357:  root StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -11.633098934777081:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -13.4414381980896:  root qualifier-qualifier loc0 ^ ^  loc0 ^ ^ ReturnStatement ^ ^ ; ['copy-qualifier', 'qualifier -> loc0', 'root -> ReturnStatement']
copynode -9.899513483047485:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -9.834778070449829:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -10.739306043833494:  root MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member resultEqualsValue_ter ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -10.739306043833494:  root MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member U2U_CONSTRUCTOR_TYPE_ter ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -11.765856757760048:  root return_type ReferenceType name ObjectType_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
before@3 batch0 x: -14.095847383141518: root return_type ReferenceType name ObjectType_ter ^ ^ ^ ^ ^  ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
after@3 batch0 x: -14.095847383141518: root return_type ReferenceType name ObjectType_ter ^ ^ ^ ^ ^  ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -0.7118604250135832:  root modified ^ ReturnStatement expression TernaryExpression ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression']
copynode -1.7592598535120487:  root modified ^ member-member isSubtype_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -1.6651236191391945:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -0.7118604250135832:  root modified ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -1.6651236191391945:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.7750946916639805:  root modified ^ member-member isSubtype_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -3.8333873697265517:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -4.301760349422693:  root modified ^ operator-operator &&_ter ^ ^  &&_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &&_ter', 'root -> End']
copynode -3.998535566031933:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -0.7118604250135832:  root modified ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -1.6651236191391945:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -1.6651236191391945:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member U2U_CONSTRUCTOR_TYPE_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.275802548974752:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -0.7118604250135832:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -0.7118604250135832:  root modified ^ ReturnStatement expression Cast ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast']
copynode -4.876452151685953:  root modified ^ operator-operator &&_ter ^ ^  ||_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ||_ter', 'root -> End']
copynode -4.894428376108408:  root modified ^ qualifier-qualifier loc0 ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0', 'root -> End']
copynode -5.203537169843912:  root modified ^ qualifier-qualifier loc0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -5.2462826408445835:  root modified ^ qualifier-qualifier loc0 ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0', 'root -> End']
copynode -3.8333873697265517:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.998535566031933:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -5.20788449421525:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -1.6651236191391945:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member resultEqualsValue_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.292964985594153:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.041885081678629:  root modified ^ member-member isSubtype_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter', 'root -> End']
copynode -4.275802548974752:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -1.6651236191391945:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -5.577927066013217:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> null_ter']
copynode -0.7118604250135832:  root modified ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -6.25479668751359:  root modified ^ member-member isSubtype_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter', 'root -> End']
copynode -1.6651236191391945:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.20788449421525:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -5.292964985594153:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -0.7118604250135832:  root modified ^ ReturnStatement expression This ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This']
copynode -6.949095908552408:  root modified ^ member-member isSubtype_ter ^ ^  getNativeType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.051581803709269:  root modified ^ qualifier-qualifier loc0 ^ ^  value_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -7.113820735365152:  root modified ^ member-member isSubtype_ter ^ ^  lastIndexOf_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> lastIndexOf_ter', 'root -> End']
copynode -4.275802548974752:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member U2U_CONSTRUCTOR_TYPE_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -3.8333873697265517:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -4.275802548974752:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -7.337598506361246:  root modified ^ member-member isSubtype_ter ^ ^  toString_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> toString_ter', 'root -> End']
copynode -3.998535566031933:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -7.3542854227125645:  root modified ^ member-member isSubtype_ter ^ ^  isSubtype_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.275802548974752:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.483513060957193:  root modified ^ qualifier-qualifier loc0 ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1', 'root -> End']
copynode -7.577588740736246:  root modified ^ member-member isSubtype_ter ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> add_ter', 'root -> End']
copynode -5.577927066013217:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> false_ter']
copynode -0.7118604250135832:  root modified ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -0.7118604250135832:  root modified ^ ReturnStatement expression ClassCreator ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator']
copynode -7.718306723982096:  root modified ^ member-member isSubtype_ter ^ ^  matchesExpectation_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.577927066013217:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -7.65411776676774:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -5.577927066013217:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value true_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> true_ter']
copynode -5.20788449421525:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -7.904844943434:  root modified ^ operator-operator &&_ter ^ ^  |_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> |_ter', 'root -> End']
copynode -8.135835949331522:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member matchesExpectation_ter ^ ^ ^ ^ if_true MemberReference member par0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -1.6651236191391945:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member e_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> e_ter']
copynode -5.292964985594153:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member U2U_CONSTRUCTOR_TYPE_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.5780492182821035:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -5.577927066013217:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter']
copynode -4.275802548974752:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member resultEqualsValue_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.292964985594153:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -8.477995101362467:  root modified ^ qualifier-qualifier loc0 ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc1', 'root -> End']
copynode -8.501190844923258:  root modified ^ operator-operator &&_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter', 'root -> End']
copynode -3.998535566031933:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -5.292964985594153:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -8.666477939113975:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -1.6651236191391945:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -3.8333873697265517:  root add ^ IfStatement condition MethodInvocation qualifier value_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -1.6651236191391945:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member isSubtype_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -0.7118604250135832:  root modified ^ ReturnStatement expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> SuperMethodInvocation']
copynode -5.292964985594153:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member resultEqualsValue_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.275802548974752:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -9.165274325758219:  root modified ^ operator-operator &&_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter', 'root -> End']
copynode -9.006994906812906:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -5.577927066013217:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter']
copynode -8.992200715001673:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.5780492182821035:  root add ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -9.05088633671403:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -5.20788449421525:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier value_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -9.479229632765055:  root modified ^ operator-operator &&_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter', 'root -> End']
copynode -9.290678683668375:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -3.8333873697265517:  root add ^ IfStatement condition MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member matchesExpectation_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.5780492182821035:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -9.68992680683732:  root modified ^ Literal-Literal value null_ter ^ ^ ^  prefix_operators -_ter ^ ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter']
copynode -9.750624362379313:  root modified ^ operator-operator &&_ter ^ ^  &_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &_ter', 'root -> End']
copynode -9.798576537519693:  root modified ^ qualifier-qualifier loc0 ^ ^  LOG_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> LOG_ter', 'root -> End']
copynode -5.292964985594153:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.20788449421525:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier par1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -9.66041303818929:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -7.5780492182821035:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -3.998535566031933:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -7.65411776676774:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -10.270164161920547:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -5.20788449421525:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier loc1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1']
copynode -10.189800655469298:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -5.577927066013217:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 2_ter']
copynode -4.275802548974752:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
before@4 batch0 x: -10.564523633569479: root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc4 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
after@4 batch0 x: -10.564523633569479: root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc4 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -1.069523192185443:  root modified ^ ReturnStatement expression TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -2.1072560027241707:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -2.2464526958647184:  root modified ^ ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.265817679464817:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -4.1404396244033705:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.507211841642857:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -2.2464526958647184:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.590057291090488:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member U2U_CONSTRUCTOR_TYPE_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -4.693374630063772:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -4.727924592036288:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression', 'root -> End']
copynode -4.382143265742343:  root modified ^ ReturnStatement expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.3384063467383385:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -1.069523192185443:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'copy-TernaryExpression']
copynode -5.433119587600231:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -4.752670533198398:  root modified ^ ReturnStatement expression Cast type ^ expression ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression']
copynode -4.3384063467383385:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.836889423429966:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member resultEqualsValue_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -5.941766133531928:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -6.1209717355668545:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.138895191252232:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -6.175608230754733:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -4.382143265742343:  root modified ^ ReturnStatement expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.2260143823805265:  root modified ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -5.364213580702199:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.448738254606724:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -4.3384063467383385:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.504695346578956:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -5.691008750349283:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier unknown ^ ^ member resultEqualsValue_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'copy-member']
copynode -4.382143265742343:  root modified ^ ReturnStatement expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.364213580702199:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.3384063467383385:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.687614686030429:  root modified ^ ReturnStatement expression This selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This', 'This -> selectors']
copynode -6.478846851736307:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -7.140306886285543:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member U2U_CONSTRUCTOR_TYPE_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -7.334072288125753:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -7.424123700708151:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -7.344330482184887:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -6.478846851736307:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier loc0 ^ ^ member resultEqualsValue_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -7.587528897449374:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> false_ter', 'root -> End']
copynode -7.203359360311879:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -7.667416817683261:  root modified ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -5.364213580702199:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -7.763790799304843:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> <string>_ter', 'root -> End']
copynode -5.364213580702199:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -1.069523192185443:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member matchesExpectation_ter ^ ^ ^ ^ if_true MemberReference member par0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'copy-TernaryExpression']
copynode -7.87599797360599:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value true_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> true_ter', 'root -> End']
copynode -8.206051029264927:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member e_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> e_ter', 'root -> End']
copynode -8.230922987684608:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member U2U_CONSTRUCTOR_TYPE_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -7.862658519297838:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -8.23718980513513:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -8.24101491086185:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -5.364213580702199:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -8.312418397516012:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member resultEqualsValue_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -5.364213580702199:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -8.346034338697791:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -7.203359360311879:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -7.712287194270175:  root modified ^ ReturnStatement expression ClassCreator type ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments']
copynode -7.894366446882486:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -8.611889772117138:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -8.644141485914588:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -4.382143265742343:  root modified ^ ReturnStatement expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -8.758182682096958:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2', 'root -> End']
copynode -8.854270614683628:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  member isSubtype_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -7.894366446882486:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier par0 ^ ^ member resultEqualsValue_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -5.364213580702199:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -9.036839058622718:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member resultEqualsValue_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -5.364213580702199:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -9.124206479638815:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -7.862658519297838:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier loc0 ^ ^ member resultEqualsValue_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -8.693763080984354:  root add ^ LocalVariableDeclaration type ReferenceType name JSType_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -9.218618823215365:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter', 'root -> End']
copynode -9.209276963025331:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  selectors ArraySelector index ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index']
copynode -4.3384063467383385:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -9.329688584432006:  root add ^ ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.712287194270175:  root modified ^ ReturnStatement expression ClassCreator type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type']
copynode -6.2260143823805265:  root modified ^ ReturnStatement expression MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member']
copynode -8.805182451818837:  root add ^ IfStatement condition MethodInvocation qualifier value_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -5.364213580702199:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
before@5 batch0 x: -9.457596416090382: root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
after@5 batch0 x: -9.457596416090382: root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -1.0855550292762928:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition']
copynode -2.356926060456317:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -1.0855550292762928:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation']
copynode -1.0855550292762928:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation']
copynode -4.522520429629367:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.7499262459459715:  root modified ^ ReturnStatement expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -4.142984521313338:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.335360384720843:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'copy-TernaryExpression', 'root -> End']
copynode -2.356926060456317:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -5.433398874331033:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -4.978167735040188:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -5.6790695853414945:  root modified ^ ReturnStatement expression Cast type ReferenceType ^ ^ expression ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression', 'type -> ReferenceType']
copynode -2.356926060456317:  root modified ^ ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -4.142984521313338:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.142984521313338:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.978167735040188:  root add ^ StatementExpression expression MethodInvocation qualifier value_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -1.0855550292762928:  root modified ^ ReturnStatement expression TernaryExpression condition MemberReference ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MemberReference']
copynode -2.356926060456317:  root modified ^ ReturnStatement expression BinaryOperation operator |_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> |_ter']
copynode -6.27065845503239:  root modified ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.520389918237925:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier unknown ^ ^ member resultEqualsValue_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'copy-member', 'root -> End']
copynode -4.142984521313338:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -5.722506783902645:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.722506783902645:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member U2U_CONSTRUCTOR_TYPE_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.804602883756161:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.978167735040188:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.499539636075497:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -6.980315867811441:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -6.768898720358266:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -6.228835351008456:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.9177626289310865:  root modified ^ ReturnStatement expression This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -1.0855550292762928:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member matchesExpectation_ter ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition']
copynode -6.41585421047057:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -7.529666248708963:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier loc0 ^ ^ member resultEqualsValue_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'root -> End']
copynode -6.619319207209628:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.228835351008456:  root modified ^ ReturnStatement expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -6.228835351008456:  root modified ^ ReturnStatement expression MethodInvocation qualifier value_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -7.722502345655812:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -6.41585421047057:  root add ^ IfStatement condition MethodInvocation qualifier value_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.41585421047057:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -7.846508617018117:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -7.8507183559122495:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member matchesExpectation_ter ^ ^ ^ ^ if_true MemberReference member par0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'copy-TernaryExpression', 'root -> End']
copynode -7.674648448533844:  root modified ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -1.0855550292762928:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation qualifier value_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition']
copynode -7.491302408277988:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -4.142984521313338:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -6.619319207209628:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member U2U_CONSTRUCTOR_TYPE_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.722506783902645:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.27065845503239:  root modified ^ ReturnStatement expression MemberReference member resultEqualsValue_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -8.233966428786516:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -8.240618832176551:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.499539636075497:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -7.644479031179799:  root add ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -8.389504546736134:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -8.395271248358767:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType ^ ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType']
copynode -8.420944575220346:  root modified ^ MemberReference-MemberReference member resultEqualsValue_ter ^ ^ ^  qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -1.0855550292762928:  root modified ^ ReturnStatement expression TernaryExpression condition Cast ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> Cast']
copynode -2.356926060456317:  root modified ^ ReturnStatement expression BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
before@6 batch0 x: -8.444992161530536: root modified ^ ReturnStatement expression BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
after@6 batch0 x: -8.444992161530536: root modified ^ ReturnStatement expression BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -1.2995328131946735:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true']
copynode -3.03053123987047:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.476024835545104:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -1.2995328131946735:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation']
copynode -2.476024835545104:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -1.2995328131946735:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast']
copynode -1.2995328131946735:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MemberReference']
copynode -2.476024835545104:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -4.777891290112166:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -4.335455131891649:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -1.2995328131946735:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true BinaryOperation ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> BinaryOperation']
copynode -4.335455131891649:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.461059998575365:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -1.2995328131946735:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true This ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> This']
copynode -2.476024835545104:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -5.860437762661604:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.684781987860333:  root modified ^ ReturnStatement expression Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -1.2995328131946735:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Literal ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Literal']
copynode -6.334627581003588:  root modified ^ ReturnStatement expression TernaryExpression condition MemberReference member ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MemberReference', 'MemberReference -> member']
copynode -5.601289235055447:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -5.946028125210432:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -3.03053123987047:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.768011427659076:  root modified ^ ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -6.507926902908366:  root modified ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -5.339309788483661:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation']
copynode -4.777891290112166:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -6.6789719089865685:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.75697698444128:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member U2U_CONSTRUCTOR_TYPE_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.339309788483661:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference']
copynode -5.339309788483661:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'copy-operandl']
copynode -6.819004773162305:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.901740901172161:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -5.339309788483661:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation']
copynode -1.2995328131946735:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true ClassCreator ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> ClassCreator']
copynode -2.476024835545104:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl Cast ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> Cast']
copynode -6.603714120312361:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -5.768011427659076:  root modified ^ ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -5.601289235055447:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
copynode -7.186375937599223:  root modified ^ ReturnStatement expression This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -4.777891290112166:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -5.684781987860333:  root modified ^ ReturnStatement expression Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -4.335455131891649:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation qualifier ^ member ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.070394063804997:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -1.2995328131946735:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true TernaryExpression ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> TernaryExpression']
copynode -4.335455131891649:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation arguments ^ member ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -1.2995328131946735:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true This_ter ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> This_ter']
copynode -6.278511725366116:  root add ^ StatementExpression expression MethodInvocation qualifier value_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -2.476024835545104:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> This']
copynode -7.536302155989688:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.768011427659076:  root modified ^ ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation']
copynode -7.355042410257738:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member matchesExpectation_ter ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true']
copynode -6.882478080689907:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.946028125210432:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -6.394081211823504:  root modified ^ ReturnStatement expression BinaryOperation operator |_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> |_ter', 'operandl -> MethodInvocation']
copynode -6.278511725366116:  root add ^ StatementExpression expression MethodInvocation qualifier value_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -6.394081211823504:  root modified ^ ReturnStatement expression BinaryOperation operator |_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> |_ter', 'copy-operandl']
copynode -6.394081211823504:  root modified ^ ReturnStatement expression BinaryOperation operator |_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> |_ter', 'operandl -> BinaryOperation']
before@7 batch0 x: -7.876721299078781: root modified ^ Literal-Literal value null_ter ^ ^ ^  value true_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> true_ter', 'root -> End']
after@7 batch0 x: -7.876721299078781: root modified ^ Literal-Literal value null_ter ^ ^ ^  value true_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> true_ter', 'root -> End']
copynode -1.7234373513492756:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation']
copynode -3.0636846061679535:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -1.7234373513492756:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation']
copynode -1.7234373513492756:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression']
copynode -3.1094114474835806:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -1.7234373513492756:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'copy-if_false']
copynode -4.111096305015963:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MemberReference', 'MemberReference -> member']
copynode -3.8562366191181354:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ^ expression ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression']
copynode -3.1094114474835806:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.1775389138492756:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.1775389138492756:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'copy-MethodInvocation']
copynode -1.7234373513492756:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MemberReference']
copynode -3.8177445821347646:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression']
copynode -1.7234373513492756:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false This ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> This']
copynode -5.104152601881651:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -1.7234373513492756:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Cast ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> Cast']
copynode -3.1775389138492756:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation arguments ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.1775389138492756:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.381757944065612:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.8177445821347646:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation']
copynode -5.122613621118944:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'copy-if_true']
copynode -3.8177445821347646:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -5.371552390221041:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.381757944065612:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.485817530978238:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.742573660972994:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true This selectors ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> This', 'This -> selectors']
copynode -5.7904743842664175:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -1.7234373513492756:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ClassCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> ClassCreator']
copynode -6.032027777953772:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.3989629272255115:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -3.8177445821347646:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr']
copynode -1.7234373513492756:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> Literal']
copynode -3.0636846061679535:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -6.331829947594088:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Literal value ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Literal', 'Literal -> value']
copynode -6.3707446083426476:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.1775389138492756:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.381757944065612:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.461841655138414:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'copy-if_true']
copynode -6.784276700753253:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.7842022851109505:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member U2U_CONSTRUCTOR_TYPE_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.4967924721422605:  root modified ^ ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.411519122048048:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.8177445821347646:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr Cast ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> Cast']
copynode -4.381757944065612:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.3989629272255115:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -6.167296786501538:  root modified ^ ReturnStatement expression Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-expression']
copynode -6.934424020349979:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -6.704167984426022:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.1775389138492756:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -7.126277767121792:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -5.371552390221041:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.3989629272255115:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -3.1775389138492756:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -3.0636846061679535:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -7.3175896827015094:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -3.0636846061679535:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.803641176957171:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'copy-operandl', 'operandr -> TernaryExpression']
copynode -7.286381912592333:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -4.111096305015963:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference qualifier ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.411519122048048:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.367293087008875:  root modified ^ ReturnStatement expression TernaryExpression condition MemberReference member loc0 ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.488828621804714:  root add ^ StatementExpression expression MethodInvocation qualifier value_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
before@8 batch0 x: -7.522561207413673: root add ^ StatementExpression expression MethodInvocation qualifier value_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
after@8 batch0 x: -7.522561207413673: root add ^ StatementExpression expression MethodInvocation qualifier value_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.452090067032259:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -3.5234368268284015:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -3.421513599518221:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.8958213750156574:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.139913880440872:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.194422138098162:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType ^ ^ expression ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType']
copynode -2.8958213750156574:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.275050728756469:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -3.139913880440872:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -4.365198177460115:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'copy-MethodInvocation', 'copy-if_false']
copynode -4.662518304947298:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MemberReference', 'MemberReference -> member']
copynode -3.483625649649184:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -3.483625649649184:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression']
copynode -4.720176427799743:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -2.8958213750156574:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.87498382962076:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false This selectors ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> This', 'This -> selectors']
copynode -2.8958213750156574:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.139913880440872:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -4.150286798540037:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.2751328173908405:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -3.139913880440872:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -3.483625649649184:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -4.2751328173908405:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -3.421513599518221:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.113084431475727:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.265183967712801:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -5.176041406753939:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Cast type ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> Cast', 'Cast -> type expression']
copynode -3.483625649649184:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -4.150286798540037:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member resultEqualsValue_ter ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.45216903014807:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.150286798540037:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member par0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.553954568866175:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.3770097914966755:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'copy-if_true', 'copy-if_false']
copynode -5.786841915163677:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true This selectors MemberReference ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.335031121212523:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.7228850963001605:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation']
copynode -3.483625649649184:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr Cast ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> Cast']
copynode -5.192817253235262:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.215084164578002:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr', 'root -> End']
copynode -5.192817253235262:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.040791051200358:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.299723667267244:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> Literal', 'Literal -> value']
copynode -5.323941140610259:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -2.8958213750156574:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -4.365198177460115:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ if_false MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'copy-MethodInvocation', 'if_false -> MethodInvocation']
copynode -5.685188620525878:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -6.361667343589943:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -2.8958213750156574:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.8958213750156574:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -5.987599414947908:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ClassCreator type ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> ClassCreator', 'ClassCreator -> type arguments']
copynode -4.275050728756469:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -4.150286798540037:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member unknown ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.365198177460115:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ if_false MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'copy-MethodInvocation', 'if_false -> MemberReference']
copynode -6.735624759632628:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -5.323941140610259:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation']
copynode -4.2751328173908405:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier value_ter ^ ^ arguments ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.685188620525878:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.959648986055981:  root modified ^ ReturnStatement expression Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-expression', 'root -> End']
copynode -6.714202684524935:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation member unknown ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.890919639903586:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.323941140610259:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -5.890919639903586:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.2751328173908405:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -5.192817253235262:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation arguments MemberReference member U2U_CONSTRUCTOR_TYPE_ter ^ ^ ^ ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.2091483596595936:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
before@9 batch0 x: -7.140779841778567: root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member U2U_CONSTRUCTOR_TYPE_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
after@9 batch0 x: -7.140779841778567: root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member U2U_CONSTRUCTOR_TYPE_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -3.5856247220071964:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -3.9497221942874603:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.4609356598812155:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition']
copynode -3.4609356598812155:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation']
copynode -4.422292393806856:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -3.841073435905855:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -4.702051651838701:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'copy-MethodInvocation', 'copy-if_false', 'root -> End']
copynode -4.752553343016189:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -3.841073435905855:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.513877474877518:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -4.975654167297762:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -4.198730989068281:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -4.926494748506229:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false This selectors MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.212417685601395:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.198730989068281:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name ObjectType_ter ^ ^ ^ ^ expression ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.235209702688735:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.313059491280001:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -5.416980472567957:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Cast type ReferenceType ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> Cast', 'Cast -> type expression', 'type -> ReferenceType']
copynode -4.4619156859698705:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.198730989068281:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.447253464895766:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -5.011403207841795:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-if_false']
copynode -4.71362546941964:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.9497221942874603:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.4619156859698705:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -4.733136414724868:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.990030252549332:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.804267329338472:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -3.4609356598812155:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition MethodInvocation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation']
copynode -4.779906532901805:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation']
copynode -5.7540312532219104:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -4.779906532901805:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition']
copynode -4.513877474877518:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation']
copynode -5.0916476074489765:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -4.71362546941964:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.996504754933994:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true This selectors MemberReference member ^ ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.5730886507662944:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member resultEqualsValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-if_false']
copynode -4.804267329338472:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.376054150226992:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -5.677725915971678:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member par0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-if_false']
copynode -5.292880577209871:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -4.926494748506229:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -5.362211014813511:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -3.4609356598812155:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member matchesExpectation_ter ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition']
copynode -6.216420930984896:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.4619156859698705:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -5.376054150226992:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ member isSubtype_ter ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -6.345751195389312:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> End']
copynode -3.5856247220071964:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.5856247220071964:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -6.320578265178483:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.292880577209871:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -4.71362546941964:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MemberReference member resultEqualsValue_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.161148709419649:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -3.841073435905855:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -4.779906532901805:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition MethodInvocation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation']
copynode -6.646009606483858:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ClassCreator type ReferenceType ^ ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType']
copynode -3.841073435905855:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier value_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.596861615020316:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.990030252549332:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.4619156859698705:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -6.571603101852816:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0']
copynode -5.0916476074489765:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments']
copynode -4.733136414724868:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.725869086745661:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.513877474877518:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr']
copynode -5.362211014813511:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -4.804267329338472:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member U2U_CONSTRUCTOR_TYPE_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.725869086745661:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
before@10 batch0 x: -6.841001587919891: root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
after@10 batch0 x: -6.841001587919891: root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -4.423108048911672:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.380589075561147:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true']
copynode -4.1647411819431:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -3.8602339599165134:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -3.8602339599165134:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -5.096309983346146:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.1647411819431:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -3.8602339599165134:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -5.291156501683872:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -4.50983045733301:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -5.461512689653318:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-if_false', 'root -> End']
copynode -5.513444044801872:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -4.8094972960534506:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation']
copynode -5.612809521320742:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.749457619327586:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.434835030871909:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.114609074953478:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -4.380589075561147:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation']
copynode -5.067976159218233:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -5.244688315957319:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MethodInvocation ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation']
copynode -5.114609074953478:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -5.597528719517868:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.291895293805283:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.99746803304879:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -6.0055048216017894:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member resultEqualsValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-if_false', 'root -> End']
copynode -5.293834968178999:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name ObjectType_ter ^ ^ ^ ^ expression MethodInvocation ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation']
copynode -5.995231372478884:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.103942935529631:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member par0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-if_false', 'root -> End']
copynode -5.435449762910139:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MethodInvocation ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation']
copynode -5.067976159218233:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.307734697300475:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.202597524708835:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -3.8602339599165134:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -5.244688315957319:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MemberReference ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference']
copynode -5.293834968178999:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name ObjectType_ter ^ ^ ^ ^ expression MemberReference ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference']
copynode -6.05815832054941:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'copy-if_false']
copynode -4.8094972960534506:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition']
copynode -6.365742455411237:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -4.50983045733301:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -5.813557646411937:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true']
copynode -6.161605508241337:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false This selectors MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.397960704925936:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.50983045733301:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
copynode -5.42197743448196:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -4.1647411819431:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -6.056478661659639:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.5989290021243505:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -6.443232217046898:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MemberReference member resultEqualsValue_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -5.435449762910139:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MemberReference ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference']
copynode -5.42197743448196:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Cast type ReferenceType name ObjectType_ter ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -4.50983045733301:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments']
copynode -6.293229323986452:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ member isSubtype_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'copy-member', 'copy-if_false']
copynode -4.380589075561147:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MemberReference']
copynode -4.1647411819431:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MemberReference']
copynode -5.6016049377503805:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -5.434835030871909:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.466365588072222:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'copy-if_false']
copynode -5.998833117482718:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true This selectors MemberReference member resultEqualsValue_ter ^ ^ ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.225483484740835:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member matchesExpectation_ter ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true']
copynode -4.8094972960534506:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition MethodInvocation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation']
copynode -5.605972015473526:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -5.664721556182485:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.886787855240982:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.605972015473526:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation']
copynode -5.307734697300475:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
before@11 batch0 x: -6.746737330395263: root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
after@11 batch0 x: -6.746737330395263: root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.426233469450381:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.973239385697525:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.361418587330263:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.992211756471079:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.622718929487746:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.808106196287554:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -4.910602398391347:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation']
copynode -4.910602398391347:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'copy-if_false']
copynode -4.992211756471079:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.1633729498717:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.750809710647445:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.963222754362505:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'copy-member', 'root -> End']
copynode -5.2934065434965305:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false This selectors MemberReference member resultEqualsValue_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.624767569999676:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.274352488282602:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.009576854470652:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -6.156878513458651:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.23263885936467:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.009576854470652:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation']
copynode -6.217280513345031:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.272313638299238:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MemberReference member ^ ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member']
copynode -6.21757453418104:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.3035519096883945:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'copy-if_false', 'root -> End']
copynode -6.29535786685301:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name ObjectType_ter ^ ^ ^ ^ expression MemberReference member ^ ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member']
copynode -6.4238842550548725:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -6.441610795620363:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.448309822648298:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MemberReference member ^ ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member']
copynode -6.442164494830649:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.905772966507357:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'copy-member']
copynode -6.527140838268679:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ member isSubtype_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'copy-member', 'copy-if_false', 'root -> End']
copynode -6.545898266311269:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MemberReference', 'MemberReference -> member']
copynode -6.6298884425195865:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'copy-if_false', 'root -> End']
copynode -6.435118102643173:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-if_true']
copynode -5.962869151204359:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.062483831017744:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name ObjectType_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.2934065434965305:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.902768917556386:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.744677149865311:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.806876941758674:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -5.274352488282602:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.065070581797045:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member resultEqualsValue_ter ^ ^ ^ ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.303811728197616:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true']
copynode -5.009576854470652:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr']
copynode -6.69237288198201:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'copy-if_true']
copynode -6.4153778396430425:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.118264182179701:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.1633729498717:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -6.580270433041733:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.009576854470652:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression']
copynode -5.1633729498717:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.992664837453049:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -5.964715206238907:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.910602398391347:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MemberReference']
copynode -6.159100323158782:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -5.992664837453049:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> BinaryOperation']
copynode -6.430876527156215:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation']
copynode -6.159100323158782:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -6.4938236299785785:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'copy-member']
before@12 batch0 x: -7.0694748584064655: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'copy-member']
after@12 batch0 x: -7.0694748584064655: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'copy-member']
copynode -4.5379142229794525:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.992876901465934:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.8918818311649375:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -5.624512132781092:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.5379142229794525:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -6.095594701531809:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.439569321635645:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member resultEqualsValue_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.90668529010145:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.5379142229794525:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -4.992876901465934:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.969369110825937:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false This selectors MemberReference member resultEqualsValue_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -6.269072237162618:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -6.517834109428804:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'copy-member', 'root -> End']
copynode -5.508789894345682:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -6.174727400008123:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.948229517962318:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.293987269222271:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.439569321635645:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.052872656087857:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.316120509698521:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name ObjectType_ter ^ ^ ^ ^ expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.939591006550472:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -4.5379142229794525:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -6.67447505769087:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name ObjectType_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'copy-if_false']
copynode -5.820327468391042:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.673604353039991:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'copy-if_false']
copynode -5.508789894345682:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -6.4705123591120355:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.939591006550472:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -6.822397037583869:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.863044438126963:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr', 'root -> End']
copynode -6.060564634564798:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -6.64232393464772:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-if_true', 'copy-if_false']
copynode -5.508789894345682:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -5.969369110825937:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false This selectors MemberReference member resultEqualsValue_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -6.68257958459435:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'copy-MethodInvocation', 'copy-if_false']
copynode -6.6751204106840305:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -6.90057174739195:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'copy-if_false']
copynode -6.97889477777062:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MemberReference', 'MemberReference -> member']
copynode -6.9589713189634494:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -6.244198584172409:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -6.885713108989876:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'copy-if_true', 'copy-if_false']
copynode -7.0694748584064655:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'copy-member', 'root -> End']
copynode -7.060237973171752:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.470526742923539:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.431153650570195:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.963766002270859:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'copy-if_true']
copynode -5.820327468391042:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.2595426414045505:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.972692691895645:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.774543467152398:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.431153650570195:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -5.439569321635645:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
before@13 batch0 x: -7.39042147732107: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
after@13 batch0 x: -7.39042147732107: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.227334386610892:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.552857472735923:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -6.482849714520853:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false This selectors MemberReference member resultEqualsValue_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'root -> End']
copynode -5.985335913079325:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.552857472735923:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -6.489029544143705:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.227334386610892:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.076527661585715:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -6.690310732636135:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.752557224303018:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name ObjectType_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'copy-if_false', 'root -> End']
copynode -6.756730564113241:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.757686934142839:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'copy-if_false', 'root -> End']
copynode -6.608921077277046:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.88357031083433:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> End']
copynode -6.642033721029293:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-if_false']
copynode -6.4554664038005285:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.677022342279088:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name ObjectType_ter ^ ^ ^ ^ expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-if_false']
copynode -6.907048606488388:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -6.910227772954386:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -6.942520775075536:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> MethodInvocation', 'copy-MethodInvocation', 'copy-if_false', 'root -> End']
copynode -6.76709663606016:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.723725742602255:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.96603542304365:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -7.001197269826662:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'copy-if_false', 'root -> End']
copynode -6.319333401683252:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member resultEqualsValue_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -7.048433446499985:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -6.597284992400091:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.816845147579443:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-if_false']
copynode -6.259828311565798:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.937525448563974:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false This selectors MemberReference member resultEqualsValue_ter ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.422602957987692:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.076527661585715:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation']
copynode -7.158407204959076:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'copy-if_true', 'copy-if_false']
copynode -6.673952666285913:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.85749751253752:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.842475132260006:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.343900618318003:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.676318762998562:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -6.676318762998562:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member']
copynode -6.343900618318003:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -7.121151025581639:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -6.539124605420511:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.181606121535879:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -7.39042147732107:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -7.036085796717089:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition']
copynode -6.4554664038005285:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -6.319333401683252:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member resultEqualsValue_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -5.985335913079325:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
before@14 batch0 x: -7.797379460709635: root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
after@14 batch0 x: -7.797379460709635: root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -6.2296498559298925:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.5159443383454345:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -5.5159443383454345:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -6.891747693240177:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-if_false', 'root -> End']
copynode -6.9059531285311095:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name ObjectType_ter ^ ^ ^ ^ expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-if_false', 'root -> End']
copynode -6.901147320109885:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.509312417882029:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.62287958219531:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.690329558157828:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.103037922352087:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name JSType_ter ^ ^ ^ ^ expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'if_true -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-if_false', 'root -> End']
copynode -6.517241909343284:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.013068524363916:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member resultEqualsValue_ter ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -5.5159443383454345:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -7.340291136119049:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -6.625025040411856:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -7.444059906702023:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.467362282972317:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.509312417882029:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.862299766566139:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -6.946423930290621:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -7.359819975856226:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member']
copynode -6.71135444304673:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.71135444304673:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.690329558157828:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.751620617869776:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member resultEqualsValue_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.517241909343284:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.420322355988901:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.631025607872289:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member']
copynode -7.697972026828211:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.969426072144415:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.862299766566139:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -7.175636035564821:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -7.408797322947066:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.175636035564821:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.58810835814802:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -7.197886196139734:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false This selectors MemberReference member resultEqualsValue_ter ^ ^ ^ MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.625025040411856:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
before@15 batch0 x: -8.197632438444998: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
after@15 batch0 x: -8.197632438444998: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.289111471676733:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.992857771663694:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.25800339615671:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.307911393407267:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member resultEqualsValue_ter ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.25800339615671:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.3252646689652465:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-if_true']
copynode -7.605929937388282:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.637866554025095:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.9396244553499855:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -7.43099457671633:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.10249862720957:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.709931827092078:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.137271597224753:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal']
copynode -6.932184829551261:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.907267983246129:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.919186097744387:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.791944033408072:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'copy-if_true']
copynode -6.932184829551261:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.9396244553499855:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -8.07095311320154:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.058439552027266:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.178936806682032:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false This selectors MemberReference member resultEqualsValue_ter ^ ^ ^ MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.137271597224753:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MemberReference']
copynode -7.840367390948813:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -7.578061368840281:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -8.145656761887949:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -8.197632438444998:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -7.619617265823763:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.655464121315163:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -7.702234217140358:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -6.25800339615671:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
before@16 batch0 x: -8.525680226448458: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
after@16 batch0 x: -8.525680226448458: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.323753858858254:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.995033142593456:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.323753858858254:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -7.690517213719431:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.691447383665945:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.527849278354552:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-if_true', 'copy-if_false']
copynode -7.820421233016532:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value']
copynode -7.126202863815706:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -7.350779813888948:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -7.980729690694716:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'copy-if_true', 'copy-if_false']
copynode -7.617064029152971:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -7.728950059914496:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -8.390277183556464:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.22962386830477:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.818242764973547:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -8.414418560627382:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.306913044827525:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.126202863815706:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -7.126202863815706:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -8.445660957309883:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.494784840557259:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.728950059914496:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -7.902931704360526:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -7.350779813888948:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -8.229594809177797:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false This selectors MemberReference member resultEqualsValue_ter ^ ^ ^ MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.99614192469744:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -7.617064029152971:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
before@17 batch0 x: -8.943026811059099: root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
after@17 batch0 x: -8.943026811059099: root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -7.048772038397146:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.948994840437081:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.725131711864378:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -7.571208263689186:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.948994840437081:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -7.879981798294466:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.827954056381714:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.171836531662848:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -8.08862559235422:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.318432307743933:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.7048978782841:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -8.504074451106135:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.705006322765257:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -8.642087740066927:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -8.265677720482927:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.705006322765257:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -8.661207837227266:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'copy-if_true']
copynode -7.7048978782841:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -7.571208263689186:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -8.843248767021578:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'copy-if_true']
copynode -8.8217483900371:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.88834996445803:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.847642404201906:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false This selectors MemberReference member resultEqualsValue_ter ^ ^ ^ MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -8.943026811059099:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -8.418258889752906:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -8.668897473427933:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.712734648201149:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
before@18 batch0 x: -9.450439938518684: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
after@18 batch0 x: -9.450439938518684: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.480897570902016:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.940327252203133:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.133812847256195:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-if_true']
copynode -8.10347424185602:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.721243709500413:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.36825865280116:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -8.829720628622454:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'copy-if_true', 'copy-if_false']
copynode -8.02655764942756:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -8.02655764942756:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -8.315945533278864:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.518242410907988:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -9.01383530831663:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'copy-if_true', 'copy-if_false']
copynode -8.914706466312055:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -8.643173894786742:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -9.281508356507402:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.335406538972165:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -8.335406538972165:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -8.648976557131391:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.80626555433264:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -8.648976557131391:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.36825865280116:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -9.041651650506537:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -9.44323112926213:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true']
copynode -9.450439938518684:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true']
before@19 batch0 x: -9.59316491446225: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true']
after@19 batch0 x: -9.59316491446225: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true']
copynode -8.328253718733322:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-if_true', 'copy-if_false']
copynode -7.507285018393304:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.507285018393304:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -8.82020652067149:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.91556296235649:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -8.710903448227327:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true']
copynode -9.102841031912249:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -7.966959708312061:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.966959708312061:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -9.001458552840631:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true']
copynode -8.984775210672524:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -9.243071851844434:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -9.258832714462187:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -8.972073401266243:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal']
copynode -9.443233094119933:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -8.737425824801903:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.507285018393304:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -9.587550633761566:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false']
copynode -9.59316491446225:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false']
copynode -9.436669223185163:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-if_true']
copynode -9.033681504020933:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -9.55764077528147:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true']
copynode -9.545136325235944:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-if_true']
copynode -7.507285018393304:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
before@20 batch0 x: -9.807617803046014: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
after@20 batch0 x: -9.807617803046014: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -8.38662240904523:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -8.945220676425379:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false']
copynode -8.528636713454034:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -9.235890102747362:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false']
copynode -9.414476181322243:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value']
copynode -9.268149810784962:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.837361249665264:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -8.743562598654535:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -8.528636713454034:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -9.635914684447926:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -9.639471852395218:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -9.453005604387727:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -9.696426622744184:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-if_true', 'copy-if_false']
copynode -9.744167737255339:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -8.743562598654535:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -9.106485241034534:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -9.798665641981643:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false']
copynode -9.804858617659193:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-if_true', 'copy-if_false']
copynode -9.165508144476917:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -9.261446713993791:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -9.253341163450386:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -9.467844149272423:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
before@21 batch0 x: -10.27808119932888: root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
after@21 batch0 x: -10.27808119932888: root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -9.009389435115736:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -9.288313646742608:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -9.302842681470793:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -9.539031167456415:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -9.760713853116613:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -9.766899583453778:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -9.825448864081409:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -9.627150316664483:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -9.86694759054808:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -9.874408394272905:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -9.421159942576196:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -9.915714078524616:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -9.822117944189813:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -9.52102098200703:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -9.466983678692486:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr']
copynode -10.27808119932888:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -9.647847048880067:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr']
copynode -9.466983678692486:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation']
copynode -9.421159942576196:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
before@22 batch0 x: -10.571680982538965: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
after@22 batch0 x: -10.571680982538965: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -9.292806171288248:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -9.90308471483877:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-if_true']
copynode -9.292806171288248:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -9.832226656319108:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -9.54347130417591:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -9.92249811248621:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -10.241542312840465:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -9.54347130417591:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -10.297298314922955:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'copy-if_true']
copynode -9.854018037149217:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -10.492196790815797:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'copy-if_true']
copynode -10.571680982538965:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-if_true']
copynode -9.826871798897628:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation']
copynode -10.05326728982618:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
before@23 batch0 x: -10.821519304940011: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
after@23 batch0 x: -10.821519304940011: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -9.954567276348826:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-if_true']
copynode -10.097819109389093:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-if_true', 'copy-if_false']
copynode -10.178358517994639:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-if_true']
copynode -10.17876970017096:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-if_true']
copynode -10.189738897082862:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-if_true']
copynode -10.26338458614191:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-if_true']
copynode -10.46943661844125:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'copy-if_true', 'copy-if_false']
copynode -10.441030172107276:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-if_true']
copynode -10.607370440789964:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true']
copynode -10.66975135350367:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'copy-if_true', 'copy-if_false']
copynode -10.760668967792299:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-if_true', 'copy-if_false']
copynode -10.798856662178878:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -10.821519304940011:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true']
copynode -10.41810496483231:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
before@24 batch0 x: -11.364243167976383: root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
after@24 batch0 x: -11.364243167976383: root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -10.209297669061925:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -10.145492367853876:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-if_true', 'copy-if_false']
copynode -10.37436676811194:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-if_true', 'copy-if_false']
copynode -10.376707367540803:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-if_true', 'copy-if_false']
copynode -10.383429122564849:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-if_true', 'copy-if_false']
copynode -10.588813479000237:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -10.46481146471342:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-if_true', 'copy-if_false']
copynode -10.639626664516982:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-if_true', 'copy-if_false']
copynode -10.792400538863149:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -10.861629714199807:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -10.783968095609453:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false']
copynode -11.000503350922372:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false']
copynode -10.958193959260825:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -11.364243167976383:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true']
before@25 batch0 x: -11.901621896366123: root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true']
after@25 batch0 x: -11.901621896366123: root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true']
copynode -10.272874959220644:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -10.512683891167399:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -10.51439760386711:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -10.514337651373353:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -10.606362437771168:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -10.781693798897322:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -10.886835043260362:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -11.106640775629785:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'copy-condition', 'copy-if_true', 'if_false -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -11.475401164556388:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -11.901621896366123:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false']
before@26 batch0 x: -12.197325694898609: root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false']
after@26 batch0 x: -12.197325694898609: root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false']
copynode -11.89102351811016:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -12.197325694898609:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false', 'root -> End']
before@27 batch0 x: -12.204574016446713: root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false', 'root -> End']
after@27 batch0 x: -12.204574016446713: root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ if_true MemberReference member loc0 ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-if_true', 'copy-if_false', 'root -> End']
copynode -11.919110482151154:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
before@28 batch0 x: -13.193608944828156: root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
after@28 batch0 x: -13.193608944828156: root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -13.193608944828156:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member resultEqualsValue_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isSubtype_ter ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
method
ctorType_ter {'type_ter': 'ObjectType', 'ctorType_ter': 'JSType'}
7 JSType
JSType boolean getNativeType isSubtype_ter
JSDocInfo boolean getJSDocInfo isSubtype_ter
String boolean getDisplayName isSubtype_ter
boolean boolean hasDisplayName isSubtype_ter
boolean boolean hasProperty isSubtype_ter
boolean boolean isNoType isSubtype_ter
boolean boolean isNoResolvedType isSubtype_ter
boolean boolean isNoObjectType isSubtype_ter
boolean boolean isEmptyType isSubtype_ter
boolean boolean isNumberObjectType isSubtype_ter
boolean boolean isNumberValueType isSubtype_ter
boolean boolean isFunctionPrototypeType isSubtype_ter
boolean boolean isStringObjectType isSubtype_ter
boolean boolean isTheObjectType isSubtype_ter
boolean boolean isStringValueType isSubtype_ter
boolean boolean isString isSubtype_ter
boolean boolean isNumber isSubtype_ter
boolean boolean isArrayType isSubtype_ter
boolean boolean isBooleanObjectType isSubtype_ter
boolean boolean isBooleanValueType isSubtype_ter
boolean boolean isRegexpType isSubtype_ter
boolean boolean isDateType isSubtype_ter
boolean boolean isNullType isSubtype_ter
boolean boolean isVoidType isSubtype_ter
boolean boolean isAllType isSubtype_ter
boolean boolean isUnknownType isSubtype_ter
boolean boolean isCheckedUnknownType isSubtype_ter
boolean boolean isUnionType isSubtype_ter
boolean boolean isStruct isSubtype_ter
boolean boolean isDict isSubtype_ter
UnionType boolean toMaybeUnionType isSubtype_ter
boolean boolean isGlobalThisType isSubtype_ter
boolean boolean isFunctionType isSubtype_ter
FunctionType boolean toMaybeFunctionType isSubtype_ter
FunctionType boolean toMaybeFunctionType isSubtype_ter
boolean boolean isEnumElementType isSubtype_ter
EnumElementType boolean toMaybeEnumElementType isSubtype_ter
boolean boolean isEnumType isSubtype_ter
EnumType boolean toMaybeEnumType isSubtype_ter
boolean boolean isNamedType isSubtype_ter
boolean boolean isRecordType isSubtype_ter
RecordType boolean toMaybeRecordType isSubtype_ter
boolean boolean isParameterizedType isSubtype_ter
ParameterizedType boolean toMaybeParameterizedType isSubtype_ter
ParameterizedType boolean toMaybeParameterizedType isSubtype_ter
boolean boolean isTemplateType isSubtype_ter
TemplateType boolean toMaybeTemplateType isSubtype_ter
TemplateType boolean toMaybeTemplateType isSubtype_ter
boolean boolean hasAnyTemplate isSubtype_ter
boolean boolean hasAnyTemplateInternal isSubtype_ter
boolean boolean isObject isSubtype_ter
boolean boolean isConstructor isSubtype_ter
boolean boolean isNominalType isSubtype_ter
boolean boolean isNominalConstructor isSubtype_ter
boolean boolean isInstanceType isSubtype_ter
boolean boolean isInterface isSubtype_ter
boolean boolean isOrdinaryFunction isSubtype_ter
boolean boolean isEquivalentTo isSubtype_ter
boolean boolean differsFrom isSubtype_ter
boolean boolean checkEquivalenceHelper isSubtype_ter
boolean boolean isEquivalent isSubtype_ter
boolean boolean equals isSubtype_ter
int boolean hashCode isSubtype_ter
boolean boolean matchesInt32Context isSubtype_ter
boolean boolean matchesUint32Context isSubtype_ter
boolean boolean matchesNumberContext isSubtype_ter
boolean boolean matchesStringContext isSubtype_ter
boolean boolean matchesObjectContext isSubtype_ter
JSType boolean findPropertyType isSubtype_ter
boolean boolean canBeCalled isSubtype_ter
boolean boolean canAssignTo isSubtype_ter
JSType boolean autoboxesTo isSubtype_ter
JSType boolean unboxesTo isSubtype_ter
ObjectType boolean toObjectType isSubtype_ter
JSType boolean autobox isSubtype_ter
ObjectType boolean dereference isSubtype_ter
boolean boolean canTestForEqualityWith isSubtype_ter
TernaryValue boolean testForEquality isSubtype_ter
TernaryValue boolean testForEqualityHelper isSubtype_ter
boolean boolean canTestForShallowEqualityWith isSubtype_ter
boolean boolean isNullable isSubtype_ter
JSType boolean collapseUnion isSubtype_ter
JSType boolean getLeastSupertype isSubtype_ter
JSType boolean getLeastSupertype isSubtype_ter
JSType boolean getGreatestSubtype isSubtype_ter
JSType boolean getGreatestSubtype isSubtype_ter
JSType boolean filterNoResolvedType isSubtype_ter
JSType boolean getRestrictedTypeGivenToBooleanOutcome isSubtype_ter
BooleanLiteralSet boolean getPossibleToBooleanOutcomes isSubtype_ter
TypePair boolean getTypesUnderEquality isSubtype_ter
TypePair boolean getTypesUnderInequality isSubtype_ter
TypePair boolean getTypesUnderShallowEquality isSubtype_ter
TypePair boolean getTypesUnderShallowInequality isSubtype_ter
JSType boolean restrictByNotNullOrUndefined isSubtype_ter
boolean boolean isSubtype isSubtype_ter
boolean boolean isSubtypeHelper isSubtype_ter
T boolean visit isSubtype_ter
JSType boolean forceResolve isSubtype_ter
JSType boolean resolve isSubtype_ter
JSType boolean resolveInternal isSubtype_ter
None boolean setResolvedTypeInternal isSubtype_ter
boolean boolean isResolved isSubtype_ter
None boolean clearResolved isSubtype_ter
JSType boolean safeResolve isSubtype_ter
boolean boolean setValidator isSubtype_ter
String boolean toString isSubtype_ter
String boolean toDebugHashCodeString isSubtype_ter
String boolean toAnnotationString isSubtype_ter
String boolean toStringHelper isSubtype_ter
None boolean matchConstraint isSubtype_ter
6 resultEqualsValue_ter
6 resultEqualsValue_ter
6 resultEqualsValue_ter
6 resultEqualsValue_ter
6 type_ter
method
7 
method
ctorType_ter {'type_ter': 'ObjectType', 'ctorType_ter': 'JSType'}
7 JSType
6 resultEqualsValue_ter
6 ctorType_ter
6 type_ter
6 resultEqualsValue_ter
method
ctorType_ter {'type_ter': 'ObjectType', 'ctorType_ter': 'JSType'}
7 JSType
method
7 
ChainableReverseAbstractInterpreter  append 
ChainableReverseAbstractInterpreter  getFirst 
FlowScope  firstPreciserScopeKnowingConditionOutcome 
FlowScope  nextPreciserScopeKnowingConditionOutcome 
JSType  getTypeIfRefinable 
None  declareNameInScope 
JSType  getRestrictedWithoutUndefined 
JSType  getRestrictedWithoutNull 
JSType  getRestrictedByTypeOfResult 
JSType  getNativeType 
JSType  getNativeTypeForTypeOf 
6 resultEqualsValue_ter
6 ctorType_ter
method
7 
6 resultEqualsValue_ter
method
7 
ChainableReverseAbstractInterpreter  append 
ChainableReverseAbstractInterpreter  getFirst 
FlowScope  firstPreciserScopeKnowingConditionOutcome 
FlowScope  nextPreciserScopeKnowingConditionOutcome 
JSType  getTypeIfRefinable 
None  declareNameInScope 
JSType  getRestrictedWithoutUndefined 
JSType  getRestrictedWithoutNull 
JSType  getRestrictedByTypeOfResult 
JSType  getNativeType 
JSType  getNativeTypeForTypeOf 
method
7 
ChainableReverseAbstractInterpreter  append 
ChainableReverseAbstractInterpreter  getFirst 
FlowScope  firstPreciserScopeKnowingConditionOutcome 
FlowScope  nextPreciserScopeKnowingConditionOutcome 
JSType  getTypeIfRefinable 
None  declareNameInScope 
JSType  getRestrictedWithoutUndefined 
JSType  getRestrictedWithoutNull 
JSType  getRestrictedByTypeOfResult 
JSType  getNativeType 
JSType  getNativeTypeForTypeOf 
method
7 
ChainableReverseAbstractInterpreter  append 
ChainableReverseAbstractInterpreter  getFirst 
FlowScope  firstPreciserScopeKnowingConditionOutcome 
FlowScope  nextPreciserScopeKnowingConditionOutcome 
JSType  getTypeIfRefinable 
None  declareNameInScope 
JSType  getRestrictedWithoutUndefined 
JSType  getRestrictedWithoutNull 
JSType  getRestrictedByTypeOfResult 
JSType  getNativeType 
JSType  getNativeTypeForTypeOf 
method
ctorType_ter {'type_ter': 'ObjectType', 'ctorType_ter': 'JSType'}
7 JSType
JSType  getNativeType 
JSDocInfo  getJSDocInfo 
String  getDisplayName 
boolean  hasDisplayName 
boolean  hasProperty 
boolean  isNoType 
boolean  isNoResolvedType 
boolean  isNoObjectType 
boolean  isEmptyType 
boolean  isNumberObjectType 
boolean  isNumberValueType 
boolean  isFunctionPrototypeType 
boolean  isStringObjectType 
boolean  isTheObjectType 
boolean  isStringValueType 
boolean  isString 
boolean  isNumber 
boolean  isArrayType 
boolean  isBooleanObjectType 
boolean  isBooleanValueType 
boolean  isRegexpType 
boolean  isDateType 
boolean  isNullType 
boolean  isVoidType 
boolean  isAllType 
boolean  isUnknownType 
boolean  isCheckedUnknownType 
boolean  isUnionType 
boolean  isStruct 
boolean  isDict 
UnionType  toMaybeUnionType 
boolean  isGlobalThisType 
boolean  isFunctionType 
FunctionType  toMaybeFunctionType 
FunctionType  toMaybeFunctionType 
boolean  isEnumElementType 
EnumElementType  toMaybeEnumElementType 
boolean  isEnumType 
EnumType  toMaybeEnumType 
boolean  isNamedType 
boolean  isRecordType 
RecordType  toMaybeRecordType 
boolean  isParameterizedType 
ParameterizedType  toMaybeParameterizedType 
ParameterizedType  toMaybeParameterizedType 
boolean  isTemplateType 
TemplateType  toMaybeTemplateType 
TemplateType  toMaybeTemplateType 
boolean  hasAnyTemplate 
boolean  hasAnyTemplateInternal 
boolean  isObject 
boolean  isConstructor 
boolean  isNominalType 
boolean  isNominalConstructor 
boolean  isInstanceType 
boolean  isInterface 
boolean  isOrdinaryFunction 
boolean  isEquivalentTo 
boolean  differsFrom 
boolean  checkEquivalenceHelper 
boolean  isEquivalent 
boolean  equals 
int  hashCode 
boolean  matchesInt32Context 
boolean  matchesUint32Context 
boolean  matchesNumberContext 
boolean  matchesStringContext 
boolean  matchesObjectContext 
JSType  findPropertyType 
boolean  canBeCalled 
boolean  canAssignTo 
JSType  autoboxesTo 
JSType  unboxesTo 
ObjectType  toObjectType 
JSType  autobox 
ObjectType  dereference 
boolean  canTestForEqualityWith 
TernaryValue  testForEquality 
TernaryValue  testForEqualityHelper 
boolean  canTestForShallowEqualityWith 
boolean  isNullable 
JSType  collapseUnion 
JSType  getLeastSupertype 
JSType  getLeastSupertype 
JSType  getGreatestSubtype 
JSType  getGreatestSubtype 
JSType  filterNoResolvedType 
JSType  getRestrictedTypeGivenToBooleanOutcome 
BooleanLiteralSet  getPossibleToBooleanOutcomes 
TypePair  getTypesUnderEquality 
TypePair  getTypesUnderInequality 
TypePair  getTypesUnderShallowEquality 
TypePair  getTypesUnderShallowInequality 
JSType  restrictByNotNullOrUndefined 
boolean  isSubtype 
boolean  isSubtypeHelper 
T  visit 
JSType  forceResolve 
JSType  resolve 
JSType  resolveInternal 
None  setResolvedTypeInternal 
boolean  isResolved 
None  clearResolved 
JSType  safeResolve 
boolean  setValidator 
String  toString 
String  toDebugHashCodeString 
String  toAnnotationString 
String  toStringHelper 
None  matchConstraint 
stderr: Check out program version: Closure-7b...................................... OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:16<00:00, 16.14s/it]100%|██████████| 1/1 [00:16<00:00, 16.14s/it]
