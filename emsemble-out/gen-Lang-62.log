stdout: else_statement -> BlockStatement
using GPU
p
path org.apache.commons.lang.Entities
unescape
Position(line=813, column=12)
FOUND IT!
path org.apache.commons.lang.Entities
unescape
Position(line=884, column=12)
FOUND IT!
[{'bugid': 'Lang-62', 'treeroot': <Searchnode.Node object at 0x7faee05135d0>, 'troot': <Searchnode.Node object at 0x7faef3623c90>, 'oldcode': "                            if (charAt1 == 'x' || charAt1=='X') {", 'filepath': 'buggy/Lang-62/src/java/org/apache/commons/lang/Entities.java', 'subroot': <Searchnode.Node object at 0x7faee05a94d0>, 'vardic': {'unescape_ter': 'meth0', 'charAt1_ter': 'loc0', 'entityValue_ter': 'loc19'}, 'typedic': {'charAt1_ter': 'char', 'entityValue_ter': 'int'}, 'idss': 'Lang-62', 'classname': 'org.apache.commons.lang.Entities', 'precode': '/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the "License"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.lang;\n\nimport java.io.IOException;\nimport java.io.Writer;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.TreeMap;\n\n/**\n * <p>Provides HTML and XML entity utilities.</p>\n *\n * @see <a href="http://hotwired.lycos.com/webmonkey/reference/special_characters/">ISO Entities</a>\n * @see <a href="http://www.w3.org/TR/REC-html32#latin1">HTML 3.2 Character Entities for ISO Latin-1</a>\n * @see <a href="http://www.w3.org/TR/REC-html40/sgml/entities.html">HTML 4.0 Character entity references</a>\n * @see <a href="http://www.w3.org/TR/html401/charset.html#h-5.3">HTML 4.01 Character References</a>\n * @see <a href="http://www.w3.org/TR/html401/charset.html#code-position">HTML 4.01 Code positions</a>\n *\n * @author <a href="mailto:alex@purpletech.com">Alexander Day Chaffee</a>\n * @author <a href="mailto:ggregory@seagullsw.com">Gary Gregory</a>\n * @since 2.0\n * @version $Id$\n */\nclass Entities {\n\n    private static final String[][] BASIC_ARRAY = {\n        {"quot", "34"}, // " - double-quote\n        {"amp", "38"}, // & - ampersand\n        {"lt", "60"}, // < - less-than\n        {"gt", "62"}, // > - greater-than\n    };\n\n    private static final String[][] APOS_ARRAY = {\n        {"apos", "39"}, // XML apostrophe\n    };\n\n    // package scoped for testing\n    static final String[][] ISO8859_1_ARRAY = {\n        {"nbsp", "160"}, // non-breaking space\n        {"iexcl", "161"}, //inverted exclamation mark\n        {"cent", "162"}, //cent sign\n        {"pound", "163"}, //pound sign\n        {"curren", "164"}, //currency sign\n        {"yen", "165"}, //yen sign = yuan sign\n        {"brvbar", "166"}, //broken bar = broken vertical bar\n        {"sect", "167"}, //section sign\n        {"uml", "168"}, //diaeresis = spacing diaeresis\n        {"copy", "169"}, // © - copyright sign\n        {"ordf", "170"}, //feminine ordinal indicator\n        {"laquo", "171"}, //left-pointing double angle quotation mark = left pointing guillemet\n        {"not", "172"}, //not sign\n        {"shy", "173"}, //soft hyphen = discretionary hyphen\n        {"reg", "174"}, // ® - registered trademark sign\n        {"macr", "175"}, //macron = spacing macron = overline = APL overbar\n        {"deg", "176"}, //degree sign\n        {"plusmn", "177"}, //plus-minus sign = plus-or-minus sign\n        {"sup2", "178"}, //superscript two = superscript digit two = squared\n        {"sup3", "179"}, //superscript three = superscript digit three = cubed\n        {"acute", "180"}, //acute accent = spacing acute\n        {"micro", "181"}, //micro sign\n        {"para", "182"}, //pilcrow sign = paragraph sign\n        {"middot", "183"}, //middle dot = Georgian comma = Greek middle dot\n        {"cedil", "184"}, //cedilla = spacing cedilla\n        {"sup1", "185"}, //superscript one = superscript digit one\n        {"ordm", "186"}, //masculine ordinal indicator\n        {"raquo", "187"}, //right-pointing double angle quotation mark = right pointing guillemet\n        {"frac14", "188"}, //vulgar fraction one quarter = fraction one quarter\n        {"frac12", "189"}, //vulgar fraction one half = fraction one half\n        {"frac34", "190"}, //vulgar fraction three quarters = fraction three quarters\n        {"iquest", "191"}, //inverted question mark = turned question mark\n        {"Agrave", "192"}, // À - uppercase A, grave accent\n        {"Aacute", "193"}, // Á - uppercase A, acute accent\n        {"Acirc", "194"}, // Â - uppercase A, circumflex accent\n        {"Atilde", "195"}, // Ã - uppercase A, tilde\n        {"Auml", "196"}, // Ä - uppercase A, umlaut\n        {"Aring", "197"}, // Å - uppercase A, ring\n        {"AElig", "198"}, // Æ - uppercase AE\n        {"Ccedil", "199"}, // Ç - uppercase C, cedilla\n        {"Egrave", "200"}, // È - uppercase E, grave accent\n        {"Eacute", "201"}, // É - uppercase E, acute accent\n        {"Ecirc", "202"}, // Ê - uppercase E, circumflex accent\n        {"Euml", "203"}, // Ë - uppercase E, umlaut\n        {"Igrave", "204"}, // Ì - uppercase I, grave accent\n        {"Iacute", "205"}, // Í - uppercase I, acute accent\n        {"Icirc", "206"}, // Î - uppercase I, circumflex accent\n        {"Iuml", "207"}, // Ï - uppercase I, umlaut\n        {"ETH", "208"}, // Ð - uppercase Eth, Icelandic\n        {"Ntilde", "209"}, // Ñ - uppercase N, tilde\n        {"Ograve", "210"}, // Ò - uppercase O, grave accent\n        {"Oacute", "211"}, // Ó - uppercase O, acute accent\n        {"Ocirc", "212"}, // Ô - uppercase O, circumflex accent\n        {"Otilde", "213"}, // Õ - uppercase O, tilde\n        {"Ouml", "214"}, // Ö - uppercase O, umlaut\n        {"times", "215"}, //multiplication sign\n        {"Oslash", "216"}, // Ø - uppercase O, slash\n        {"Ugrave", "217"}, // Ù - uppercase U, grave accent\n        {"Uacute", "218"}, // Ú - uppercase U, acute accent\n        {"Ucirc", "219"}, // Û - uppercase U, circumflex accent\n        {"Uuml", "220"}, // Ü - uppercase U, umlaut\n        {"Yacute", "221"}, // Ý - uppercase Y, acute accent\n        {"THORN", "222"}, // Þ - uppercase THORN, Icelandic\n        {"szlig", "223"}, // ß - lowercase sharps, German\n        {"agrave", "224"}, // à - lowercase a, grave accent\n        {"aacute", "225"}, // á - lowercase a, acute accent\n        {"acirc", "226"}, // â - lowercase a, circumflex accent\n        {"atilde", "227"}, // ã - lowercase a, tilde\n        {"auml", "228"}, // ä - lowercase a, umlaut\n        {"aring", "229"}, // å - lowercase a, ring\n        {"aelig", "230"}, // æ - lowercase ae\n        {"ccedil", "231"}, // ç - lowercase c, cedilla\n        {"egrave", "232"}, // è - lowercase e, grave accent\n        {"eacute", "233"}, // é - lowercase e, acute accent\n        {"ecirc", "234"}, // ê - lowercase e, circumflex accent\n        {"euml", "235"}, // ë - lowercase e, umlaut\n        {"igrave", "236"}, // ì - lowercase i, grave accent\n        {"iacute", "237"}, // í - lowercase i, acute accent\n        {"icirc", "238"}, // î - lowercase i, circumflex accent\n        {"iuml", "239"}, // ï - lowercase i, umlaut\n        {"eth", "240"}, // ð - lowercase eth, Icelandic\n        {"ntilde", "241"}, // ñ - lowercase n, tilde\n        {"ograve", "242"}, // ò - lowercase o, grave accent\n        {"oacute", "243"}, // ó - lowercase o, acute accent\n        {"ocirc", "244"}, // ô - lowercase o, circumflex accent\n        {"otilde", "245"}, // õ - lowercase o, tilde\n        {"ouml", "246"}, // ö - lowercase o, umlaut\n        {"divide", "247"}, // division sign\n        {"oslash", "248"}, // ø - lowercase o, slash\n        {"ugrave", "249"}, // ù - lowercase u, grave accent\n        {"uacute", "250"}, // ú - lowercase u, acute accent\n        {"ucirc", "251"}, // û - lowercase u, circumflex accent\n        {"uuml", "252"}, // ü - lowercase u, umlaut\n        {"yacute", "253"}, // ý - lowercase y, acute accent\n        {"thorn", "254"}, // þ - lowercase thorn, Icelandic\n        {"yuml", "255"}, // ÿ - lowercase y, umlaut\n    };\n\n    // http://www.w3.org/TR/REC-html40/sgml/entities.html\n    // package scoped for testing\n    static final String[][] HTML40_ARRAY = {\n// <!-- Latin Extended-B -->\n        {"fnof", "402"}, //latin small f with hook = function= florin, U+0192 ISOtech -->\n// <!-- Greek -->\n        {"Alpha", "913"}, //greek capital letter alpha, U+0391 -->\n        {"Beta", "914"}, //greek capital letter beta, U+0392 -->\n        {"Gamma", "915"}, //greek capital letter gamma,U+0393 ISOgrk3 -->\n        {"Delta", "916"}, //greek capital letter delta,U+0394 ISOgrk3 -->\n        {"Epsilon", "917"}, //greek capital letter epsilon, U+0395 -->\n        {"Zeta", "918"}, //greek capital letter zeta, U+0396 -->\n        {"Eta", "919"}, //greek capital letter eta, U+0397 -->\n        {"Theta", "920"}, //greek capital letter theta,U+0398 ISOgrk3 -->\n        {"Iota", "921"}, //greek capital letter iota, U+0399 -->\n        {"Kappa", "922"}, //greek capital letter kappa, U+039A -->\n        {"Lambda", "923"}, //greek capital letter lambda,U+039B ISOgrk3 -->\n        {"Mu", "924"}, //greek capital letter mu, U+039C -->\n        {"Nu", "925"}, //greek capital letter nu, U+039D -->\n        {"Xi", "926"}, //greek capital letter xi, U+039E ISOgrk3 -->\n        {"Omicron", "927"}, //greek capital letter omicron, U+039F -->\n        {"Pi", "928"}, //greek capital letter pi, U+03A0 ISOgrk3 -->\n        {"Rho", "929"}, //greek capital letter rho, U+03A1 -->\n// <!-- there is no Sigmaf, and no U+03A2 character either -->\n        {"Sigma", "931"}, //greek capital letter sigma,U+03A3 ISOgrk3 -->\n        {"Tau", "932"}, //greek capital letter tau, U+03A4 -->\n        {"Upsilon", "933"}, //greek capital letter upsilon,U+03A5 ISOgrk3 -->\n        {"Phi", "934"}, //greek capital letter phi,U+03A6 ISOgrk3 -->\n        {"Chi", "935"}, //greek capital letter chi, U+03A7 -->\n        {"Psi", "936"}, //greek capital letter psi,U+03A8 ISOgrk3 -->\n        {"Omega", "937"}, //greek capital letter omega,U+03A9 ISOgrk3 -->\n        {"alpha", "945"}, //greek small letter alpha,U+03B1 ISOgrk3 -->\n        {"beta", "946"}, //greek small letter beta, U+03B2 ISOgrk3 -->\n        {"gamma", "947"}, //greek small letter gamma,U+03B3 ISOgrk3 -->\n        {"delta", "948"}, //greek small letter delta,U+03B4 ISOgrk3 -->\n        {"epsilon", "949"}, //greek small letter epsilon,U+03B5 ISOgrk3 -->\n        {"zeta", "950"}, //greek small letter zeta, U+03B6 ISOgrk3 -->\n        {"eta", "951"}, //greek small letter eta, U+03B7 ISOgrk3 -->\n        {"theta", "952"}, //greek small letter theta,U+03B8 ISOgrk3 -->\n        {"iota", "953"}, //greek small letter iota, U+03B9 ISOgrk3 -->\n        {"kappa", "954"}, //greek small letter kappa,U+03BA ISOgrk3 -->\n        {"lambda", "955"}, //greek small letter lambda,U+03BB ISOgrk3 -->\n        {"mu", "956"}, //greek small letter mu, U+03BC ISOgrk3 -->\n        {"nu", "957"}, //greek small letter nu, U+03BD ISOgrk3 -->\n        {"xi", "958"}, //greek small letter xi, U+03BE ISOgrk3 -->\n        {"omicron", "959"}, //greek small letter omicron, U+03BF NEW -->\n        {"pi", "960"}, //greek small letter pi, U+03C0 ISOgrk3 -->\n        {"rho", "961"}, //greek small letter rho, U+03C1 ISOgrk3 -->\n        {"sigmaf", "962"}, //greek small letter final sigma,U+03C2 ISOgrk3 -->\n        {"sigma", "963"}, //greek small letter sigma,U+03C3 ISOgrk3 -->\n        {"tau", "964"}, //greek small letter tau, U+03C4 ISOgrk3 -->\n        {"upsilon", "965"}, //greek small letter upsilon,U+03C5 ISOgrk3 -->\n        {"phi", "966"}, //greek small letter phi, U+03C6 ISOgrk3 -->\n        {"chi", "967"}, //greek small letter chi, U+03C7 ISOgrk3 -->\n        {"psi", "968"}, //greek small letter psi, U+03C8 ISOgrk3 -->\n        {"omega", "969"}, //greek small letter omega,U+03C9 ISOgrk3 -->\n        {"thetasym", "977"}, //greek small letter theta symbol,U+03D1 NEW -->\n        {"upsih", "978"}, //greek upsilon with hook symbol,U+03D2 NEW -->\n        {"piv", "982"}, //greek pi symbol, U+03D6 ISOgrk3 -->\n// <!-- General Punctuation -->\n        {"bull", "8226"}, //bullet = black small circle,U+2022 ISOpub  -->\n// <!-- bullet is NOT the same as bullet operator, U+2219 -->\n        {"hellip", "8230"}, //horizontal ellipsis = three dot leader,U+2026 ISOpub  -->\n        {"prime", "8242"}, //prime = minutes = feet, U+2032 ISOtech -->\n        {"Prime", "8243"}, //double prime = seconds = inches,U+2033 ISOtech -->\n        {"oline", "8254"}, //overline = spacing overscore,U+203E NEW -->\n        {"frasl", "8260"}, //fraction slash, U+2044 NEW -->\n// <!-- Letterlike Symbols -->\n        {"weierp", "8472"}, //script capital P = power set= Weierstrass p, U+2118 ISOamso -->\n        {"image", "8465"}, //blackletter capital I = imaginary part,U+2111 ISOamso -->\n        {"real", "8476"}, //blackletter capital R = real part symbol,U+211C ISOamso -->\n        {"trade", "8482"}, //trade mark sign, U+2122 ISOnum -->\n        {"alefsym", "8501"}, //alef symbol = first transfinite cardinal,U+2135 NEW -->\n// <!-- alef symbol is NOT the same as hebrew letter alef,U+05D0 although the \n//      same glyph could be used to depict both characters -->\n// <!-- Arrows -->\n        {"larr", "8592"}, //leftwards arrow, U+2190 ISOnum -->\n        {"uarr", "8593"}, //upwards arrow, U+2191 ISOnum-->\n        {"rarr", "8594"}, //rightwards arrow, U+2192 ISOnum -->\n        {"darr", "8595"}, //downwards arrow, U+2193 ISOnum -->\n        {"harr", "8596"}, //left right arrow, U+2194 ISOamsa -->\n        {"crarr", "8629"}, //downwards arrow with corner leftwards= carriage return, U+21B5 NEW -->\n        {"lArr", "8656"}, //leftwards double arrow, U+21D0 ISOtech -->\n// <!-- ISO 10646 does not say that lArr is the same as the \'is implied by\' \n//      arrow but also does not have any other character for that function. \n//      So ? lArr canbe used for \'is implied by\' as ISOtech suggests -->\n        {"uArr", "8657"}, //upwards double arrow, U+21D1 ISOamsa -->\n        {"rArr", "8658"}, //rightwards double arrow,U+21D2 ISOtech -->\n// <!-- ISO 10646 does not say this is the \'implies\' character but does not\n//      have another character with this function so ?rArr can be used for\n//      \'implies\' as ISOtech suggests -->\n        {"dArr", "8659"}, //downwards double arrow, U+21D3 ISOamsa -->\n        {"hArr", "8660"}, //left right double arrow,U+21D4 ISOamsa -->\n// <!-- Mathematical Operators -->\n        {"forall", "8704"}, //for all, U+2200 ISOtech -->\n        {"part", "8706"}, //partial differential, U+2202 ISOtech  -->\n        {"exist", "8707"}, //there exists, U+2203 ISOtech -->\n        {"empty", "8709"}, //empty set = null set = diameter,U+2205 ISOamso -->\n        {"nabla", "8711"}, //nabla = backward difference,U+2207 ISOtech -->\n        {"isin", "8712"}, //element of, U+2208 ISOtech -->\n        {"notin", "8713"}, //not an element of, U+2209 ISOtech -->\n        {"ni", "8715"}, //contains as member, U+220B ISOtech -->\n// <!-- should there be a more memorable name than \'ni\'? -->\n        {"prod", "8719"}, //n-ary product = product sign,U+220F ISOamsb -->\n// <!-- prod is NOT the same character as U+03A0 \'greek capital letter pi\' \n//      though the same glyph might be used for both -->\n        {"sum", "8721"}, //n-ary summation, U+2211 ISOamsb -->\n// <!-- sum is NOT the same character as U+03A3 \'greek capital letter sigma\'\n//      though the same glyph might be used for both -->\n        {"minus", "8722"}, //minus sign, U+2212 ISOtech -->\n        {"lowast", "8727"}, //asterisk operator, U+2217 ISOtech -->\n        {"radic", "8730"}, //square root = radical sign,U+221A ISOtech -->\n        {"prop", "8733"}, //proportional to, U+221D ISOtech -->\n        {"infin", "8734"}, //infinity, U+221E ISOtech -->\n        {"ang", "8736"}, //angle, U+2220 ISOamso -->\n        {"and", "8743"}, //logical and = wedge, U+2227 ISOtech -->\n        {"or", "8744"}, //logical or = vee, U+2228 ISOtech -->\n        {"cap", "8745"}, //intersection = cap, U+2229 ISOtech -->\n        {"cup", "8746"}, //union = cup, U+222A ISOtech -->\n        {"int", "8747"}, //integral, U+222B ISOtech -->\n        {"there4", "8756"}, //therefore, U+2234 ISOtech -->\n        {"sim", "8764"}, //tilde operator = varies with = similar to,U+223C ISOtech -->\n// <!-- tilde operator is NOT the same character as the tilde, U+007E,although\n//      the same glyph might be used to represent both  -->\n        {"cong", "8773"}, //approximately equal to, U+2245 ISOtech -->\n        {"asymp", "8776"}, //almost equal to = asymptotic to,U+2248 ISOamsr -->\n        {"ne", "8800"}, //not equal to, U+2260 ISOtech -->\n        {"equiv", "8801"}, //identical to, U+2261 ISOtech -->\n        {"le", "8804"}, //less-than or equal to, U+2264 ISOtech -->\n        {"ge", "8805"}, //greater-than or equal to,U+2265 ISOtech -->\n        {"sub", "8834"}, //subset of, U+2282 ISOtech -->\n        {"sup", "8835"}, //superset of, U+2283 ISOtech -->\n// <!-- note that nsup, \'not a superset of, U+2283\' is not covered by the\n//      Symbol font encoding and is not included. Should it be, for symmetry?\n//      It is in ISOamsn  --> <!ENTITY nsub", "8836"},  \n//      not a subset of, U+2284 ISOamsn -->\n        {"sube", "8838"}, //subset of or equal to, U+2286 ISOtech -->\n        {"supe", "8839"}, //superset of or equal to,U+2287 ISOtech -->\n        {"oplus", "8853"}, //circled plus = direct sum,U+2295 ISOamsb -->\n        {"otimes", "8855"}, //circled times = vector product,U+2297 ISOamsb -->\n        {"perp", "8869"}, //up tack = orthogonal to = perpendicular,U+22A5 ISOtech -->\n        {"sdot", "8901"}, //dot operator, U+22C5 ISOamsb -->\n// <!-- dot operator is NOT the same character as U+00B7 middle dot -->\n// <!-- Miscellaneous Technical -->\n        {"lceil", "8968"}, //left ceiling = apl upstile,U+2308 ISOamsc  -->\n        {"rceil", "8969"}, //right ceiling, U+2309 ISOamsc  -->\n        {"lfloor", "8970"}, //left floor = apl downstile,U+230A ISOamsc  -->\n        {"rfloor", "8971"}, //right floor, U+230B ISOamsc  -->\n        {"lang", "9001"}, //left-pointing angle bracket = bra,U+2329 ISOtech -->\n// <!-- lang is NOT the same character as U+003C \'less than\' or U+2039 \'single left-pointing angle quotation mark\' -->\n        {"rang", "9002"}, //right-pointing angle bracket = ket,U+232A ISOtech -->\n// <!-- rang is NOT the same character as U+003E \'greater than\' or U+203A \n//      \'single right-pointing angle quotation mark\' -->\n// <!-- Geometric Shapes -->\n        {"loz", "9674"}, //lozenge, U+25CA ISOpub -->\n// <!-- Miscellaneous Symbols -->\n        {"spades", "9824"}, //black spade suit, U+2660 ISOpub -->\n// <!-- black here seems to mean filled as opposed to hollow -->\n        {"clubs", "9827"}, //black club suit = shamrock,U+2663 ISOpub -->\n        {"hearts", "9829"}, //black heart suit = valentine,U+2665 ISOpub -->\n        {"diams", "9830"}, //black diamond suit, U+2666 ISOpub -->\n\n// <!-- Latin Extended-A -->\n        {"OElig", "338"}, //  -- latin capital ligature OE,U+0152 ISOlat2 -->\n        {"oelig", "339"}, //  -- latin small ligature oe, U+0153 ISOlat2 -->\n// <!-- ligature is a misnomer, this is a separate character in some languages -->\n        {"Scaron", "352"}, //  -- latin capital letter S with caron,U+0160 ISOlat2 -->\n        {"scaron", "353"}, //  -- latin small letter s with caron,U+0161 ISOlat2 -->\n        {"Yuml", "376"}, //  -- latin capital letter Y with diaeresis,U+0178 ISOlat2 -->\n// <!-- Spacing Modifier Letters -->\n        {"circ", "710"}, //  -- modifier letter circumflex accent,U+02C6 ISOpub -->\n        {"tilde", "732"}, //small tilde, U+02DC ISOdia -->\n// <!-- General Punctuation -->\n        {"ensp", "8194"}, //en space, U+2002 ISOpub -->\n        {"emsp", "8195"}, //em space, U+2003 ISOpub -->\n        {"thinsp", "8201"}, //thin space, U+2009 ISOpub -->\n        {"zwnj", "8204"}, //zero width non-joiner,U+200C NEW RFC 2070 -->\n        {"zwj", "8205"}, //zero width joiner, U+200D NEW RFC 2070 -->\n        {"lrm", "8206"}, //left-to-right mark, U+200E NEW RFC 2070 -->\n        {"rlm", "8207"}, //right-to-left mark, U+200F NEW RFC 2070 -->\n        {"ndash", "8211"}, //en dash, U+2013 ISOpub -->\n        {"mdash", "8212"}, //em dash, U+2014 ISOpub -->\n        {"lsquo", "8216"}, //left single quotation mark,U+2018 ISOnum -->\n        {"rsquo", "8217"}, //right single quotation mark,U+2019 ISOnum -->\n        {"sbquo", "8218"}, //single low-9 quotation mark, U+201A NEW -->\n        {"ldquo", "8220"}, //left double quotation mark,U+201C ISOnum -->\n        {"rdquo", "8221"}, //right double quotation mark,U+201D ISOnum -->\n        {"bdquo", "8222"}, //double low-9 quotation mark, U+201E NEW -->\n        {"dagger", "8224"}, //dagger, U+2020 ISOpub -->\n        {"Dagger", "8225"}, //double dagger, U+2021 ISOpub -->\n        {"permil", "8240"}, //per mille sign, U+2030 ISOtech -->\n        {"lsaquo", "8249"}, //single left-pointing angle quotation mark,U+2039 ISO proposed -->\n// <!-- lsaquo is proposed but not yet ISO standardized -->\n        {"rsaquo", "8250"}, //single right-pointing angle quotation mark,U+203A ISO proposed -->\n// <!-- rsaquo is proposed but not yet ISO standardized -->\n        {"euro", "8364"}, //  -- euro sign, U+20AC NEW -->\n    };\n\n    /**\n     * <p>The set of entities supported by standard XML.</p>\n     */\n    public static final Entities XML;\n\n    /**\n     * <p>The set of entities supported by HTML 3.2.</p>\n     */\n    public static final Entities HTML32;\n\n    /**\n     * <p>The set of entities supported by HTML 4.0.</p>\n     */\n    public static final Entities HTML40;\n\n    static {\n        XML = new Entities();\n        XML.addEntities(BASIC_ARRAY);\n        XML.addEntities(APOS_ARRAY);\n    }\n\n    static {\n        HTML32 = new Entities();\n        HTML32.addEntities(BASIC_ARRAY);\n        HTML32.addEntities(ISO8859_1_ARRAY);\n    }\n\n    static {\n        HTML40 = new Entities();\n        fillWithHtml40Entities(HTML40);\n    }\n\n    /**\n     * <p>Fills the specified entities instance with HTML 40 entities.</p>\n     * \n     * @param entities the instance to be filled.\n     */\n    static void fillWithHtml40Entities(Entities entities) {\n        entities.addEntities(BASIC_ARRAY);\n        entities.addEntities(ISO8859_1_ARRAY);\n        entities.addEntities(HTML40_ARRAY);\n    }\n\n    static interface EntityMap {\n        /**\n         * <p>Add an entry to this entity map.</p>\n         * \n         * @param name the entity name\n         * @param value the entity value\n         */\n        void add(String name, int value);\n\n        /**\n         * <p>Returns the name of the entity identified by the specified value.</p>\n         * \n         * @param value the value to locate\n         * @return entity name associated with the specified value\n         */\n        String name(int value);\n\n        /**\n         * <p>Returns the value of the entity identified by the specified name.</p>\n         * \n         * @param name the name to locate\n         * @return entity value associated with the specified name\n         */\n        int value(String name);\n    }\n\n    static class PrimitiveEntityMap implements EntityMap {\n        private Map mapNameToValue = new HashMap();\n        private IntHashMap mapValueToName = new IntHashMap();\n\n        /**\n         * {@inheritDoc}\n         */\n        public void add(String name, int value) {\n            mapNameToValue.put(name, new Integer(value));\n            mapValueToName.put(value, name);\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public String name(int value) {\n            return (String) mapValueToName.get(value);\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public int value(String name) {\n            Object value = mapNameToValue.get(name);\n            if (value == null) {\n                return -1;\n            }\n            return ((Integer) value).intValue();\n        }\n    }\n\n\n    static abstract class MapIntMap implements Entities.EntityMap {\n        protected Map mapNameToValue;\n        protected Map mapValueToName;\n\n        /**\n         * {@inheritDoc}\n         */\n        public void add(String name, int value) {\n            mapNameToValue.put(name, new Integer(value));\n            mapValueToName.put(new Integer(value), name);\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public String name(int value) {\n            return (String) mapValueToName.get(new Integer(value));\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public int value(String name) {\n            Object value = mapNameToValue.get(name);\n            if (value == null) {\n                return -1;\n            }\n            return ((Integer) value).intValue();\n        }\n    }\n\n    static class HashEntityMap extends MapIntMap {\n        /**\n         * Constructs a new instance of <code>HashEntityMap</code>.\n         */\n        public HashEntityMap() {\n            mapNameToValue = new HashMap();\n            mapValueToName = new HashMap();\n        }\n    }\n\n    static class TreeEntityMap extends MapIntMap {\n      /**\n       * Constructs a new instance of <code>TreeEntityMap</code>.\n       */\n        public TreeEntityMap() {\n            mapNameToValue = new TreeMap();\n            mapValueToName = new TreeMap();\n        }\n    }\n\n    static class LookupEntityMap extends PrimitiveEntityMap {\n        private String[] lookupTable;\n        private int LOOKUP_TABLE_SIZE = 256;\n\n        /**\n         * {@inheritDoc}\n         */\n        public String name(int value) {\n            if (value < LOOKUP_TABLE_SIZE) {\n                return lookupTable()[value];\n            }\n            return super.name(value);\n        }\n\n        /**\n         * <p>Returns the lookup table for this entity map. The lookup table is created if it has not been \n         * previously.</p>\n         * \n         * @return the lookup table\n         */\n        private String[] lookupTable() {\n            if (lookupTable == null) {\n                createLookupTable();\n            }\n            return lookupTable;\n        }\n\n        /**\n         * <p>Creates an entity lookup table of LOOKUP_TABLE_SIZE elements, initialized with entity names.</p>\n         */\n        private void createLookupTable() {\n            lookupTable = new String[LOOKUP_TABLE_SIZE];\n            for (int i = 0; i < LOOKUP_TABLE_SIZE; ++i) {\n                lookupTable[i] = super.name(i);\n            }\n        }\n    }\n\n    static class ArrayEntityMap implements EntityMap {\n        protected int growBy = 100;\n        protected int size = 0;\n        protected String[] names;\n        protected int[] values;\n\n        /**\n         * Constructs a new instance of <code>ArrayEntityMap</code>.\n         */\n        public ArrayEntityMap() {\n            names = new String[growBy];\n            values = new int[growBy];\n        }\n\n        /**\n         * Constructs a new instance of <code>ArrayEntityMap</code>\n         * specifying the size by which the array should grow.\n         * \n         * @param growBy array will be initialized to and will grow by this amount\n         */\n        public ArrayEntityMap(int growBy) {\n            this.growBy = growBy;\n            names = new String[growBy];\n            values = new int[growBy];\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public void add(String name, int value) {\n            ensureCapacity(size + 1);\n            names[size] = name;\n            values[size] = value;\n            size++;\n        }\n\n        /**\n         * Verifies the capacity of the entity array, adjusting the size if necessary.\n         * \n         * @param capacity size the array should be\n         */\n        protected void ensureCapacity(int capacity) {\n            if (capacity > names.length) {\n                int newSize = Math.max(capacity, size + growBy);\n                String[] newNames = new String[newSize];\n                System.arraycopy(names, 0, newNames, 0, size);\n                names = newNames;\n                int[] newValues = new int[newSize];\n                System.arraycopy(values, 0, newValues, 0, size);\n                values = newValues;\n            }\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public String name(int value) {\n            for (int i = 0; i < size; ++i) {\n                if (values[i] == value) {\n                    return names[i];\n                }\n            }\n            return null;\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public int value(String name) {\n            for (int i = 0; i < size; ++i) {\n                if (names[i].equals(name)) {\n                    return values[i];\n                }\n            }\n            return -1;\n        }\n    }\n\n    static class BinaryEntityMap extends ArrayEntityMap {\n\n        /**\n         * Constructs a new instance of <code>BinaryEntityMap</code>.\n         */\n        public BinaryEntityMap() {\n          super();\n        }\n\n        /**\n         * Constructs a new instance of <code>ArrayEntityMap</code>\n         * specifying the size by which the underlying array should grow.\n         * \n         * @param growBy array will be initialized to and will grow by this amount\n         */\n        public BinaryEntityMap(int growBy) {\n            super(growBy);\n        }\n\n        /**\n         * Performs a binary search of the entity array for the specified key.\n         * This method is based on code in {@link java.util.Arrays}.\n         * \n         * @param key the key to be found\n         * @return the index of the entity array matching the specified key\n         */\n        private int binarySearch(int key) {\n            int low = 0;\n            int high = size - 1;\n\n            while (low <= high) {\n                int mid = (low + high) >> 1;\n                int midVal = values[mid];\n\n                if (midVal < key) {\n                    low = mid + 1;\n                } else if (midVal > key) {\n                    high = mid - 1;\n                } else {\n                    return mid; // key found\n                }\n            }\n            return -(low + 1);  // key not found.\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public void add(String name, int value) {\n            ensureCapacity(size + 1);\n            int insertAt = binarySearch(value);\n            if (insertAt > 0) {\n                return;    // note: this means you can\'t insert the same value twice\n            }\n            insertAt = -(insertAt + 1);  // binarySearch returns it negative and off-by-one\n            System.arraycopy(values, insertAt, values, insertAt + 1, size - insertAt);\n            values[insertAt] = value;\n            System.arraycopy(names, insertAt, names, insertAt + 1, size - insertAt);\n            names[insertAt] = name;\n            size++;\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public String name(int value) {\n            int index = binarySearch(value);\n            if (index < 0) {\n                return null;\n            }\n            return names[index];\n        }\n    }\n\n    // package scoped for testing\n    EntityMap map = new Entities.LookupEntityMap();\n\n    /**\n     * <p>Adds entities to this entity.</p>\n     * \n     * @param entityArray array of entities to be added\n     */\n    public void addEntities(String[][] entityArray) {\n        for (int i = 0; i < entityArray.length; ++i) {\n            addEntity(entityArray[i][0], Integer.parseInt(entityArray[i][1]));\n        }\n    }\n\n    /**\n     * <p>Add an entity to this entity.</p>\n     * \n     * @param name name of the entity\n     * @param value vale of the entity\n     */\n    public void addEntity(String name, int value) {\n        map.add(name, value);\n    }\n\n    /**\n     * <p>Returns the name of the entity identified by the specified value.</p>\n     * \n     * @param value the value to locate\n     * @return entity name associated with the specified value\n     */\n    public String entityName(int value) {\n        return map.name(value);\n    }\n\n    /**\n     * <p>Returns the value of the entity identified by the specified name.</p>\n     * \n     * @param name the name to locate\n     * @return entity value associated with the specified name\n     */\n    public int entityValue(String name) {\n        return map.value(name);\n    }\n\n    /**\n     * <p>Escapes the characters in a <code>String</code>.</p>\n     *\n     * <p>For example, if you have called addEntity(&quot;foo&quot;, 0xA1),\n     * escape(&quot;\\u00A1&quot;) will return &quot;&amp;foo;&quot;</p>\n     *\n     * @param str The <code>String</code> to escape.\n     * @return A new escaped <code>String</code>.\n     */\n    public String escape(String str) {\n        //todo: rewrite to use a Writer\n        StringBuffer buf = new StringBuffer(str.length() * 2);\n        int i;\n        for (i = 0; i < str.length(); ++i) {\n            char ch = str.charAt(i);\n            String entityName = this.entityName(ch);\n            if (entityName == null) {\n                if (ch > 0x7F) {\n                    int intValue = ch;\n                    buf.append("&#");\n                    buf.append(intValue);\n                    buf.append(\';\');\n                } else {\n                    buf.append(ch);\n                }\n            } else {\n                buf.append(\'&\');\n                buf.append(entityName);\n                buf.append(\';\');\n            }\n        }\n        return buf.toString();\n    }\n\n    /**\n     * <p>Escapes the characters in the <code>String</code> passed and writes the result\n     * to the <code>Writer</code> passed. </p>\n     * \n     * @param writer The <code>Writer</code> to write the results of the escaping to.\n     *                            Assumed to be a non-null value.\n     * @param str The <code>String</code> to escape. Assumed to be a non-null value.\n     * @throws IOException when <code>Writer</code> passed throws the exception from\n     *                                       calls to the {@link Writer#write(int)} methods.\n     *                                       \n     * @see #escape(String)\n     * @see Writer\n     */\n    public void escape(Writer writer, String str) throws IOException {\n        int len = str.length();\n        for (int i = 0; i < len; i++) {\n            char c = str.charAt(i);\n            String entityName = this.entityName(c);\n            if (entityName == null) {\n                if (c > 0x7F) {\n                    writer.write("&#");\n                    writer.write(Integer.toString(c, 10));\n                    writer.write(\';\');\n                } else {\n                    writer.write(c);\n                }\n            } else {\n                writer.write(\'&\');\n                writer.write(entityName);\n                writer.write(\';\');\n            }\n        }\n    }\n    \n    /**\n     * <p>Unescapes the entities in a <code>String</code>.</p>\n     *\n     * <p>For example, if you have called addEntity(&quot;foo&quot;, 0xA1),\n     * unescape(&quot;&amp;foo;&quot;) will return &quot;\\u00A1&quot;</p>\n     *\n     * @param str The <code>String</code> to escape.\n     * @return A new escaped <code>String</code>.\n     */\n    public String unescape(String str) {\n        int firstAmp = str.indexOf(\'&\');\n        if (firstAmp < 0) {\n            return str;\n        }\n\n        StringBuffer buf = new StringBuffer(str.length());\n        buf.append(str.substring(0, firstAmp));\n        for (int i = firstAmp; i < str.length(); ++i) {\n            char ch = str.charAt(i);\n            if (ch == \'&\') {\n                int semi = str.indexOf(\';\', i + 1);\n                if (semi == -1) {\n                    buf.append(ch);\n                    continue;\n                }\n                int amph = str.indexOf(\'&\', i + 1);\n                if( amph != -1 && amph < semi ) {\n                    // Then the text looks like &...&...;\n                    buf.append(ch);\n                    continue;\n                }\n                String entityName = str.substring(i + 1, semi);\n                int entityValue;\n                if (entityName.length() == 0) {\n                    entityValue = -1;\n                } else if (entityName.charAt(0) == \'#\') {\n                    if (entityName.length() == 1) {\n                        entityValue = -1;\n                    } else {\n                        char charAt1 = entityName.charAt(1);\n                        try {', 'aftercode': "                                entityValue = Integer.valueOf(entityName.substring(2), 16).intValue();\n                            } else {\n                                entityValue = Integer.parseInt(entityName.substring(1));\n                            }\n                        } catch (NumberFormatException ex) {\n                            entityValue = -1;\n                        }\n                    }\n                } else {\n                    entityValue = this.entityValue(entityName);\n                }\n                if (entityValue == -1) {\n                    buf.append('&');\n                    buf.append(entityName);\n                    buf.append(';');\n                } else {\n                    buf.append((char) (entityValue));\n                }\n                i = semi;\n            } else {\n                buf.append(ch);\n            }\n        }\n        return buf.toString();\n    }\n\n    /**\n     * <p>Unescapes the escaped entities in the <code>String</code> passed and\n     * writes the result to the <code>Writer</code> passed.</p>\n     * \n     * @param writer The <code>Writer</code> to write the results to; assumed to be non-null.\n     * @param string The <code>String</code> to write the results to; assumed to be non-null.\n     * @throws IOException when <code>Writer</code> passed throws the exception from\n     *                                       calls to the {@link Writer#write(int)} methods.\n     *                                       \n     * @see #escape(String)\n     * @see Writer\n     */\n    public void unescape(Writer writer, String string) throws IOException {\n        int firstAmp = string.indexOf('&');\n        if (firstAmp < 0) {\n            writer.write(string);\n            return;\n        }\n\n        writer.write(string, 0, firstAmp);\n        int len = string.length();\n        for (int i = firstAmp; i < len; i++) {\n            char c = string.charAt(i);\n            if (c == '&') {\n                int nextIdx = i+1;\n                int semiColonIdx = string.indexOf(';', nextIdx);\n                if (semiColonIdx == -1) {\n                    writer.write(c);\n                    continue;\n                }\n                int amphersandIdx = string.indexOf('&', i + 1);\n                if( amphersandIdx != -1 && amphersandIdx < semiColonIdx ) {\n                    // Then the text looks like &...&...;\n                    writer.write(c);\n                    continue;\n                }\n                String entityContent = string.substring(nextIdx, semiColonIdx);\n                int entityValue = -1;\n                int entityContentLen = entityContent.length();\n                if (entityContentLen > 0) {\n                    if (entityContent.charAt(0) == '#') { //escaped value content is an integer (decimal or hexidecimal)\n                        if (entityContentLen > 1) {  \n                            char isHexChar = entityContent.charAt(1);\n                            try {\n                                switch (isHexChar) {\n                                    case 'X' :\n                                    case 'x' : {\n                                        entityValue = Integer.parseInt(entityContent.substring(2), 16);\n                                    }\n                                    default : {\n                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);\n                                    }\n                                }\n                            } catch (NumberFormatException e) {\n                            }\n                        }\n                    } else { //escaped value content is an entity name\n                        entityValue = this.entityValue(entityContent);\n                    }\n                }\n                \n                if (entityValue == -1) {\n                    writer.write('&');\n                    writer.write(entityContent);\n                    writer.write(';');\n                } else {\n                    writer.write(entityValue);\n                }\n                i = semiColonIdx; //move index up to the semi-colon                \n            } else {\n                writer.write(c);\n            }\n        }\n    }\n    \n}", 'tree': 'statements IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ TryStatement block IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation member intValue_ter ^ ^ ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ catches CatchClause parameter CatchClauseParameter types NumberFormatException_ter ^ ^ name ex_ter ^ ^ ^ ^ block StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value This selectors MethodInvocation arguments MemberReference member entityName_ter ^ ^ ^ ^ member loc19 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc19 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments MemberReference member entityName_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Cast type BasicType name char_ter ^ ^ ^ ^ expression MemberReference member loc19 ^ ^ ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ ^ ', 'prob': [0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 845, 'isa': False, 'fl_score': 1}, {'bugid': 'Lang-62', 'treeroot': <Searchnode.Node object at 0x7faee0e22850>, 'troot': <Searchnode.Node object at 0x7faee0de9e90>, 'oldcode': '                                        entityValue = Integer.parseInt(entityContent.substring(2), 16);', 'filepath': 'buggy/Lang-62/src/java/org/apache/commons/lang/Entities.java', 'subroot': <Searchnode.Node object at 0x7faee0dd4f90>, 'vardic': {'unescape_ter': 'meth0', 'nextIdx_ter': 'loc0', 'semiColonIdx_ter': 'loc1', 'amphersandIdx_ter': 'loc2', 'entityContent_ter': 'loc3', 'entityValue_ter': 'loc4', 'entityContentLen_ter': 'loc5', 'isHexChar_ter': 'loc6'}, 'typedic': {'nextIdx_ter': 'int', 'semiColonIdx_ter': 'int', 'amphersandIdx_ter': 'int', 'entityContent_ter': 'String', 'entityValue_ter': 'int', 'entityContentLen_ter': 'int', 'isHexChar_ter': 'char'}, 'idss': 'Lang-62', 'classname': 'org.apache.commons.lang.Entities', 'precode': '/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the "License"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.lang;\n\nimport java.io.IOException;\nimport java.io.Writer;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.TreeMap;\n\n/**\n * <p>Provides HTML and XML entity utilities.</p>\n *\n * @see <a href="http://hotwired.lycos.com/webmonkey/reference/special_characters/">ISO Entities</a>\n * @see <a href="http://www.w3.org/TR/REC-html32#latin1">HTML 3.2 Character Entities for ISO Latin-1</a>\n * @see <a href="http://www.w3.org/TR/REC-html40/sgml/entities.html">HTML 4.0 Character entity references</a>\n * @see <a href="http://www.w3.org/TR/html401/charset.html#h-5.3">HTML 4.01 Character References</a>\n * @see <a href="http://www.w3.org/TR/html401/charset.html#code-position">HTML 4.01 Code positions</a>\n *\n * @author <a href="mailto:alex@purpletech.com">Alexander Day Chaffee</a>\n * @author <a href="mailto:ggregory@seagullsw.com">Gary Gregory</a>\n * @since 2.0\n * @version $Id$\n */\nclass Entities {\n\n    private static final String[][] BASIC_ARRAY = {\n        {"quot", "34"}, // " - double-quote\n        {"amp", "38"}, // & - ampersand\n        {"lt", "60"}, // < - less-than\n        {"gt", "62"}, // > - greater-than\n    };\n\n    private static final String[][] APOS_ARRAY = {\n        {"apos", "39"}, // XML apostrophe\n    };\n\n    // package scoped for testing\n    static final String[][] ISO8859_1_ARRAY = {\n        {"nbsp", "160"}, // non-breaking space\n        {"iexcl", "161"}, //inverted exclamation mark\n        {"cent", "162"}, //cent sign\n        {"pound", "163"}, //pound sign\n        {"curren", "164"}, //currency sign\n        {"yen", "165"}, //yen sign = yuan sign\n        {"brvbar", "166"}, //broken bar = broken vertical bar\n        {"sect", "167"}, //section sign\n        {"uml", "168"}, //diaeresis = spacing diaeresis\n        {"copy", "169"}, // © - copyright sign\n        {"ordf", "170"}, //feminine ordinal indicator\n        {"laquo", "171"}, //left-pointing double angle quotation mark = left pointing guillemet\n        {"not", "172"}, //not sign\n        {"shy", "173"}, //soft hyphen = discretionary hyphen\n        {"reg", "174"}, // ® - registered trademark sign\n        {"macr", "175"}, //macron = spacing macron = overline = APL overbar\n        {"deg", "176"}, //degree sign\n        {"plusmn", "177"}, //plus-minus sign = plus-or-minus sign\n        {"sup2", "178"}, //superscript two = superscript digit two = squared\n        {"sup3", "179"}, //superscript three = superscript digit three = cubed\n        {"acute", "180"}, //acute accent = spacing acute\n        {"micro", "181"}, //micro sign\n        {"para", "182"}, //pilcrow sign = paragraph sign\n        {"middot", "183"}, //middle dot = Georgian comma = Greek middle dot\n        {"cedil", "184"}, //cedilla = spacing cedilla\n        {"sup1", "185"}, //superscript one = superscript digit one\n        {"ordm", "186"}, //masculine ordinal indicator\n        {"raquo", "187"}, //right-pointing double angle quotation mark = right pointing guillemet\n        {"frac14", "188"}, //vulgar fraction one quarter = fraction one quarter\n        {"frac12", "189"}, //vulgar fraction one half = fraction one half\n        {"frac34", "190"}, //vulgar fraction three quarters = fraction three quarters\n        {"iquest", "191"}, //inverted question mark = turned question mark\n        {"Agrave", "192"}, // À - uppercase A, grave accent\n        {"Aacute", "193"}, // Á - uppercase A, acute accent\n        {"Acirc", "194"}, // Â - uppercase A, circumflex accent\n        {"Atilde", "195"}, // Ã - uppercase A, tilde\n        {"Auml", "196"}, // Ä - uppercase A, umlaut\n        {"Aring", "197"}, // Å - uppercase A, ring\n        {"AElig", "198"}, // Æ - uppercase AE\n        {"Ccedil", "199"}, // Ç - uppercase C, cedilla\n        {"Egrave", "200"}, // È - uppercase E, grave accent\n        {"Eacute", "201"}, // É - uppercase E, acute accent\n        {"Ecirc", "202"}, // Ê - uppercase E, circumflex accent\n        {"Euml", "203"}, // Ë - uppercase E, umlaut\n        {"Igrave", "204"}, // Ì - uppercase I, grave accent\n        {"Iacute", "205"}, // Í - uppercase I, acute accent\n        {"Icirc", "206"}, // Î - uppercase I, circumflex accent\n        {"Iuml", "207"}, // Ï - uppercase I, umlaut\n        {"ETH", "208"}, // Ð - uppercase Eth, Icelandic\n        {"Ntilde", "209"}, // Ñ - uppercase N, tilde\n        {"Ograve", "210"}, // Ò - uppercase O, grave accent\n        {"Oacute", "211"}, // Ó - uppercase O, acute accent\n        {"Ocirc", "212"}, // Ô - uppercase O, circumflex accent\n        {"Otilde", "213"}, // Õ - uppercase O, tilde\n        {"Ouml", "214"}, // Ö - uppercase O, umlaut\n        {"times", "215"}, //multiplication sign\n        {"Oslash", "216"}, // Ø - uppercase O, slash\n        {"Ugrave", "217"}, // Ù - uppercase U, grave accent\n        {"Uacute", "218"}, // Ú - uppercase U, acute accent\n        {"Ucirc", "219"}, // Û - uppercase U, circumflex accent\n        {"Uuml", "220"}, // Ü - uppercase U, umlaut\n        {"Yacute", "221"}, // Ý - uppercase Y, acute accent\n        {"THORN", "222"}, // Þ - uppercase THORN, Icelandic\n        {"szlig", "223"}, // ß - lowercase sharps, German\n        {"agrave", "224"}, // à - lowercase a, grave accent\n        {"aacute", "225"}, // á - lowercase a, acute accent\n        {"acirc", "226"}, // â - lowercase a, circumflex accent\n        {"atilde", "227"}, // ã - lowercase a, tilde\n        {"auml", "228"}, // ä - lowercase a, umlaut\n        {"aring", "229"}, // å - lowercase a, ring\n        {"aelig", "230"}, // æ - lowercase ae\n        {"ccedil", "231"}, // ç - lowercase c, cedilla\n        {"egrave", "232"}, // è - lowercase e, grave accent\n        {"eacute", "233"}, // é - lowercase e, acute accent\n        {"ecirc", "234"}, // ê - lowercase e, circumflex accent\n        {"euml", "235"}, // ë - lowercase e, umlaut\n        {"igrave", "236"}, // ì - lowercase i, grave accent\n        {"iacute", "237"}, // í - lowercase i, acute accent\n        {"icirc", "238"}, // î - lowercase i, circumflex accent\n        {"iuml", "239"}, // ï - lowercase i, umlaut\n        {"eth", "240"}, // ð - lowercase eth, Icelandic\n        {"ntilde", "241"}, // ñ - lowercase n, tilde\n        {"ograve", "242"}, // ò - lowercase o, grave accent\n        {"oacute", "243"}, // ó - lowercase o, acute accent\n        {"ocirc", "244"}, // ô - lowercase o, circumflex accent\n        {"otilde", "245"}, // õ - lowercase o, tilde\n        {"ouml", "246"}, // ö - lowercase o, umlaut\n        {"divide", "247"}, // division sign\n        {"oslash", "248"}, // ø - lowercase o, slash\n        {"ugrave", "249"}, // ù - lowercase u, grave accent\n        {"uacute", "250"}, // ú - lowercase u, acute accent\n        {"ucirc", "251"}, // û - lowercase u, circumflex accent\n        {"uuml", "252"}, // ü - lowercase u, umlaut\n        {"yacute", "253"}, // ý - lowercase y, acute accent\n        {"thorn", "254"}, // þ - lowercase thorn, Icelandic\n        {"yuml", "255"}, // ÿ - lowercase y, umlaut\n    };\n\n    // http://www.w3.org/TR/REC-html40/sgml/entities.html\n    // package scoped for testing\n    static final String[][] HTML40_ARRAY = {\n// <!-- Latin Extended-B -->\n        {"fnof", "402"}, //latin small f with hook = function= florin, U+0192 ISOtech -->\n// <!-- Greek -->\n        {"Alpha", "913"}, //greek capital letter alpha, U+0391 -->\n        {"Beta", "914"}, //greek capital letter beta, U+0392 -->\n        {"Gamma", "915"}, //greek capital letter gamma,U+0393 ISOgrk3 -->\n        {"Delta", "916"}, //greek capital letter delta,U+0394 ISOgrk3 -->\n        {"Epsilon", "917"}, //greek capital letter epsilon, U+0395 -->\n        {"Zeta", "918"}, //greek capital letter zeta, U+0396 -->\n        {"Eta", "919"}, //greek capital letter eta, U+0397 -->\n        {"Theta", "920"}, //greek capital letter theta,U+0398 ISOgrk3 -->\n        {"Iota", "921"}, //greek capital letter iota, U+0399 -->\n        {"Kappa", "922"}, //greek capital letter kappa, U+039A -->\n        {"Lambda", "923"}, //greek capital letter lambda,U+039B ISOgrk3 -->\n        {"Mu", "924"}, //greek capital letter mu, U+039C -->\n        {"Nu", "925"}, //greek capital letter nu, U+039D -->\n        {"Xi", "926"}, //greek capital letter xi, U+039E ISOgrk3 -->\n        {"Omicron", "927"}, //greek capital letter omicron, U+039F -->\n        {"Pi", "928"}, //greek capital letter pi, U+03A0 ISOgrk3 -->\n        {"Rho", "929"}, //greek capital letter rho, U+03A1 -->\n// <!-- there is no Sigmaf, and no U+03A2 character either -->\n        {"Sigma", "931"}, //greek capital letter sigma,U+03A3 ISOgrk3 -->\n        {"Tau", "932"}, //greek capital letter tau, U+03A4 -->\n        {"Upsilon", "933"}, //greek capital letter upsilon,U+03A5 ISOgrk3 -->\n        {"Phi", "934"}, //greek capital letter phi,U+03A6 ISOgrk3 -->\n        {"Chi", "935"}, //greek capital letter chi, U+03A7 -->\n        {"Psi", "936"}, //greek capital letter psi,U+03A8 ISOgrk3 -->\n        {"Omega", "937"}, //greek capital letter omega,U+03A9 ISOgrk3 -->\n        {"alpha", "945"}, //greek small letter alpha,U+03B1 ISOgrk3 -->\n        {"beta", "946"}, //greek small letter beta, U+03B2 ISOgrk3 -->\n        {"gamma", "947"}, //greek small letter gamma,U+03B3 ISOgrk3 -->\n        {"delta", "948"}, //greek small letter delta,U+03B4 ISOgrk3 -->\n        {"epsilon", "949"}, //greek small letter epsilon,U+03B5 ISOgrk3 -->\n        {"zeta", "950"}, //greek small letter zeta, U+03B6 ISOgrk3 -->\n        {"eta", "951"}, //greek small letter eta, U+03B7 ISOgrk3 -->\n        {"theta", "952"}, //greek small letter theta,U+03B8 ISOgrk3 -->\n        {"iota", "953"}, //greek small letter iota, U+03B9 ISOgrk3 -->\n        {"kappa", "954"}, //greek small letter kappa,U+03BA ISOgrk3 -->\n        {"lambda", "955"}, //greek small letter lambda,U+03BB ISOgrk3 -->\n        {"mu", "956"}, //greek small letter mu, U+03BC ISOgrk3 -->\n        {"nu", "957"}, //greek small letter nu, U+03BD ISOgrk3 -->\n        {"xi", "958"}, //greek small letter xi, U+03BE ISOgrk3 -->\n        {"omicron", "959"}, //greek small letter omicron, U+03BF NEW -->\n        {"pi", "960"}, //greek small letter pi, U+03C0 ISOgrk3 -->\n        {"rho", "961"}, //greek small letter rho, U+03C1 ISOgrk3 -->\n        {"sigmaf", "962"}, //greek small letter final sigma,U+03C2 ISOgrk3 -->\n        {"sigma", "963"}, //greek small letter sigma,U+03C3 ISOgrk3 -->\n        {"tau", "964"}, //greek small letter tau, U+03C4 ISOgrk3 -->\n        {"upsilon", "965"}, //greek small letter upsilon,U+03C5 ISOgrk3 -->\n        {"phi", "966"}, //greek small letter phi, U+03C6 ISOgrk3 -->\n        {"chi", "967"}, //greek small letter chi, U+03C7 ISOgrk3 -->\n        {"psi", "968"}, //greek small letter psi, U+03C8 ISOgrk3 -->\n        {"omega", "969"}, //greek small letter omega,U+03C9 ISOgrk3 -->\n        {"thetasym", "977"}, //greek small letter theta symbol,U+03D1 NEW -->\n        {"upsih", "978"}, //greek upsilon with hook symbol,U+03D2 NEW -->\n        {"piv", "982"}, //greek pi symbol, U+03D6 ISOgrk3 -->\n// <!-- General Punctuation -->\n        {"bull", "8226"}, //bullet = black small circle,U+2022 ISOpub  -->\n// <!-- bullet is NOT the same as bullet operator, U+2219 -->\n        {"hellip", "8230"}, //horizontal ellipsis = three dot leader,U+2026 ISOpub  -->\n        {"prime", "8242"}, //prime = minutes = feet, U+2032 ISOtech -->\n        {"Prime", "8243"}, //double prime = seconds = inches,U+2033 ISOtech -->\n        {"oline", "8254"}, //overline = spacing overscore,U+203E NEW -->\n        {"frasl", "8260"}, //fraction slash, U+2044 NEW -->\n// <!-- Letterlike Symbols -->\n        {"weierp", "8472"}, //script capital P = power set= Weierstrass p, U+2118 ISOamso -->\n        {"image", "8465"}, //blackletter capital I = imaginary part,U+2111 ISOamso -->\n        {"real", "8476"}, //blackletter capital R = real part symbol,U+211C ISOamso -->\n        {"trade", "8482"}, //trade mark sign, U+2122 ISOnum -->\n        {"alefsym", "8501"}, //alef symbol = first transfinite cardinal,U+2135 NEW -->\n// <!-- alef symbol is NOT the same as hebrew letter alef,U+05D0 although the \n//      same glyph could be used to depict both characters -->\n// <!-- Arrows -->\n        {"larr", "8592"}, //leftwards arrow, U+2190 ISOnum -->\n        {"uarr", "8593"}, //upwards arrow, U+2191 ISOnum-->\n        {"rarr", "8594"}, //rightwards arrow, U+2192 ISOnum -->\n        {"darr", "8595"}, //downwards arrow, U+2193 ISOnum -->\n        {"harr", "8596"}, //left right arrow, U+2194 ISOamsa -->\n        {"crarr", "8629"}, //downwards arrow with corner leftwards= carriage return, U+21B5 NEW -->\n        {"lArr", "8656"}, //leftwards double arrow, U+21D0 ISOtech -->\n// <!-- ISO 10646 does not say that lArr is the same as the \'is implied by\' \n//      arrow but also does not have any other character for that function. \n//      So ? lArr canbe used for \'is implied by\' as ISOtech suggests -->\n        {"uArr", "8657"}, //upwards double arrow, U+21D1 ISOamsa -->\n        {"rArr", "8658"}, //rightwards double arrow,U+21D2 ISOtech -->\n// <!-- ISO 10646 does not say this is the \'implies\' character but does not\n//      have another character with this function so ?rArr can be used for\n//      \'implies\' as ISOtech suggests -->\n        {"dArr", "8659"}, //downwards double arrow, U+21D3 ISOamsa -->\n        {"hArr", "8660"}, //left right double arrow,U+21D4 ISOamsa -->\n// <!-- Mathematical Operators -->\n        {"forall", "8704"}, //for all, U+2200 ISOtech -->\n        {"part", "8706"}, //partial differential, U+2202 ISOtech  -->\n        {"exist", "8707"}, //there exists, U+2203 ISOtech -->\n        {"empty", "8709"}, //empty set = null set = diameter,U+2205 ISOamso -->\n        {"nabla", "8711"}, //nabla = backward difference,U+2207 ISOtech -->\n        {"isin", "8712"}, //element of, U+2208 ISOtech -->\n        {"notin", "8713"}, //not an element of, U+2209 ISOtech -->\n        {"ni", "8715"}, //contains as member, U+220B ISOtech -->\n// <!-- should there be a more memorable name than \'ni\'? -->\n        {"prod", "8719"}, //n-ary product = product sign,U+220F ISOamsb -->\n// <!-- prod is NOT the same character as U+03A0 \'greek capital letter pi\' \n//      though the same glyph might be used for both -->\n        {"sum", "8721"}, //n-ary summation, U+2211 ISOamsb -->\n// <!-- sum is NOT the same character as U+03A3 \'greek capital letter sigma\'\n//      though the same glyph might be used for both -->\n        {"minus", "8722"}, //minus sign, U+2212 ISOtech -->\n        {"lowast", "8727"}, //asterisk operator, U+2217 ISOtech -->\n        {"radic", "8730"}, //square root = radical sign,U+221A ISOtech -->\n        {"prop", "8733"}, //proportional to, U+221D ISOtech -->\n        {"infin", "8734"}, //infinity, U+221E ISOtech -->\n        {"ang", "8736"}, //angle, U+2220 ISOamso -->\n        {"and", "8743"}, //logical and = wedge, U+2227 ISOtech -->\n        {"or", "8744"}, //logical or = vee, U+2228 ISOtech -->\n        {"cap", "8745"}, //intersection = cap, U+2229 ISOtech -->\n        {"cup", "8746"}, //union = cup, U+222A ISOtech -->\n        {"int", "8747"}, //integral, U+222B ISOtech -->\n        {"there4", "8756"}, //therefore, U+2234 ISOtech -->\n        {"sim", "8764"}, //tilde operator = varies with = similar to,U+223C ISOtech -->\n// <!-- tilde operator is NOT the same character as the tilde, U+007E,although\n//      the same glyph might be used to represent both  -->\n        {"cong", "8773"}, //approximately equal to, U+2245 ISOtech -->\n        {"asymp", "8776"}, //almost equal to = asymptotic to,U+2248 ISOamsr -->\n        {"ne", "8800"}, //not equal to, U+2260 ISOtech -->\n        {"equiv", "8801"}, //identical to, U+2261 ISOtech -->\n        {"le", "8804"}, //less-than or equal to, U+2264 ISOtech -->\n        {"ge", "8805"}, //greater-than or equal to,U+2265 ISOtech -->\n        {"sub", "8834"}, //subset of, U+2282 ISOtech -->\n        {"sup", "8835"}, //superset of, U+2283 ISOtech -->\n// <!-- note that nsup, \'not a superset of, U+2283\' is not covered by the\n//      Symbol font encoding and is not included. Should it be, for symmetry?\n//      It is in ISOamsn  --> <!ENTITY nsub", "8836"},  \n//      not a subset of, U+2284 ISOamsn -->\n        {"sube", "8838"}, //subset of or equal to, U+2286 ISOtech -->\n        {"supe", "8839"}, //superset of or equal to,U+2287 ISOtech -->\n        {"oplus", "8853"}, //circled plus = direct sum,U+2295 ISOamsb -->\n        {"otimes", "8855"}, //circled times = vector product,U+2297 ISOamsb -->\n        {"perp", "8869"}, //up tack = orthogonal to = perpendicular,U+22A5 ISOtech -->\n        {"sdot", "8901"}, //dot operator, U+22C5 ISOamsb -->\n// <!-- dot operator is NOT the same character as U+00B7 middle dot -->\n// <!-- Miscellaneous Technical -->\n        {"lceil", "8968"}, //left ceiling = apl upstile,U+2308 ISOamsc  -->\n        {"rceil", "8969"}, //right ceiling, U+2309 ISOamsc  -->\n        {"lfloor", "8970"}, //left floor = apl downstile,U+230A ISOamsc  -->\n        {"rfloor", "8971"}, //right floor, U+230B ISOamsc  -->\n        {"lang", "9001"}, //left-pointing angle bracket = bra,U+2329 ISOtech -->\n// <!-- lang is NOT the same character as U+003C \'less than\' or U+2039 \'single left-pointing angle quotation mark\' -->\n        {"rang", "9002"}, //right-pointing angle bracket = ket,U+232A ISOtech -->\n// <!-- rang is NOT the same character as U+003E \'greater than\' or U+203A \n//      \'single right-pointing angle quotation mark\' -->\n// <!-- Geometric Shapes -->\n        {"loz", "9674"}, //lozenge, U+25CA ISOpub -->\n// <!-- Miscellaneous Symbols -->\n        {"spades", "9824"}, //black spade suit, U+2660 ISOpub -->\n// <!-- black here seems to mean filled as opposed to hollow -->\n        {"clubs", "9827"}, //black club suit = shamrock,U+2663 ISOpub -->\n        {"hearts", "9829"}, //black heart suit = valentine,U+2665 ISOpub -->\n        {"diams", "9830"}, //black diamond suit, U+2666 ISOpub -->\n\n// <!-- Latin Extended-A -->\n        {"OElig", "338"}, //  -- latin capital ligature OE,U+0152 ISOlat2 -->\n        {"oelig", "339"}, //  -- latin small ligature oe, U+0153 ISOlat2 -->\n// <!-- ligature is a misnomer, this is a separate character in some languages -->\n        {"Scaron", "352"}, //  -- latin capital letter S with caron,U+0160 ISOlat2 -->\n        {"scaron", "353"}, //  -- latin small letter s with caron,U+0161 ISOlat2 -->\n        {"Yuml", "376"}, //  -- latin capital letter Y with diaeresis,U+0178 ISOlat2 -->\n// <!-- Spacing Modifier Letters -->\n        {"circ", "710"}, //  -- modifier letter circumflex accent,U+02C6 ISOpub -->\n        {"tilde", "732"}, //small tilde, U+02DC ISOdia -->\n// <!-- General Punctuation -->\n        {"ensp", "8194"}, //en space, U+2002 ISOpub -->\n        {"emsp", "8195"}, //em space, U+2003 ISOpub -->\n        {"thinsp", "8201"}, //thin space, U+2009 ISOpub -->\n        {"zwnj", "8204"}, //zero width non-joiner,U+200C NEW RFC 2070 -->\n        {"zwj", "8205"}, //zero width joiner, U+200D NEW RFC 2070 -->\n        {"lrm", "8206"}, //left-to-right mark, U+200E NEW RFC 2070 -->\n        {"rlm", "8207"}, //right-to-left mark, U+200F NEW RFC 2070 -->\n        {"ndash", "8211"}, //en dash, U+2013 ISOpub -->\n        {"mdash", "8212"}, //em dash, U+2014 ISOpub -->\n        {"lsquo", "8216"}, //left single quotation mark,U+2018 ISOnum -->\n        {"rsquo", "8217"}, //right single quotation mark,U+2019 ISOnum -->\n        {"sbquo", "8218"}, //single low-9 quotation mark, U+201A NEW -->\n        {"ldquo", "8220"}, //left double quotation mark,U+201C ISOnum -->\n        {"rdquo", "8221"}, //right double quotation mark,U+201D ISOnum -->\n        {"bdquo", "8222"}, //double low-9 quotation mark, U+201E NEW -->\n        {"dagger", "8224"}, //dagger, U+2020 ISOpub -->\n        {"Dagger", "8225"}, //double dagger, U+2021 ISOpub -->\n        {"permil", "8240"}, //per mille sign, U+2030 ISOtech -->\n        {"lsaquo", "8249"}, //single left-pointing angle quotation mark,U+2039 ISO proposed -->\n// <!-- lsaquo is proposed but not yet ISO standardized -->\n        {"rsaquo", "8250"}, //single right-pointing angle quotation mark,U+203A ISO proposed -->\n// <!-- rsaquo is proposed but not yet ISO standardized -->\n        {"euro", "8364"}, //  -- euro sign, U+20AC NEW -->\n    };\n\n    /**\n     * <p>The set of entities supported by standard XML.</p>\n     */\n    public static final Entities XML;\n\n    /**\n     * <p>The set of entities supported by HTML 3.2.</p>\n     */\n    public static final Entities HTML32;\n\n    /**\n     * <p>The set of entities supported by HTML 4.0.</p>\n     */\n    public static final Entities HTML40;\n\n    static {\n        XML = new Entities();\n        XML.addEntities(BASIC_ARRAY);\n        XML.addEntities(APOS_ARRAY);\n    }\n\n    static {\n        HTML32 = new Entities();\n        HTML32.addEntities(BASIC_ARRAY);\n        HTML32.addEntities(ISO8859_1_ARRAY);\n    }\n\n    static {\n        HTML40 = new Entities();\n        fillWithHtml40Entities(HTML40);\n    }\n\n    /**\n     * <p>Fills the specified entities instance with HTML 40 entities.</p>\n     * \n     * @param entities the instance to be filled.\n     */\n    static void fillWithHtml40Entities(Entities entities) {\n        entities.addEntities(BASIC_ARRAY);\n        entities.addEntities(ISO8859_1_ARRAY);\n        entities.addEntities(HTML40_ARRAY);\n    }\n\n    static interface EntityMap {\n        /**\n         * <p>Add an entry to this entity map.</p>\n         * \n         * @param name the entity name\n         * @param value the entity value\n         */\n        void add(String name, int value);\n\n        /**\n         * <p>Returns the name of the entity identified by the specified value.</p>\n         * \n         * @param value the value to locate\n         * @return entity name associated with the specified value\n         */\n        String name(int value);\n\n        /**\n         * <p>Returns the value of the entity identified by the specified name.</p>\n         * \n         * @param name the name to locate\n         * @return entity value associated with the specified name\n         */\n        int value(String name);\n    }\n\n    static class PrimitiveEntityMap implements EntityMap {\n        private Map mapNameToValue = new HashMap();\n        private IntHashMap mapValueToName = new IntHashMap();\n\n        /**\n         * {@inheritDoc}\n         */\n        public void add(String name, int value) {\n            mapNameToValue.put(name, new Integer(value));\n            mapValueToName.put(value, name);\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public String name(int value) {\n            return (String) mapValueToName.get(value);\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public int value(String name) {\n            Object value = mapNameToValue.get(name);\n            if (value == null) {\n                return -1;\n            }\n            return ((Integer) value).intValue();\n        }\n    }\n\n\n    static abstract class MapIntMap implements Entities.EntityMap {\n        protected Map mapNameToValue;\n        protected Map mapValueToName;\n\n        /**\n         * {@inheritDoc}\n         */\n        public void add(String name, int value) {\n            mapNameToValue.put(name, new Integer(value));\n            mapValueToName.put(new Integer(value), name);\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public String name(int value) {\n            return (String) mapValueToName.get(new Integer(value));\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public int value(String name) {\n            Object value = mapNameToValue.get(name);\n            if (value == null) {\n                return -1;\n            }\n            return ((Integer) value).intValue();\n        }\n    }\n\n    static class HashEntityMap extends MapIntMap {\n        /**\n         * Constructs a new instance of <code>HashEntityMap</code>.\n         */\n        public HashEntityMap() {\n            mapNameToValue = new HashMap();\n            mapValueToName = new HashMap();\n        }\n    }\n\n    static class TreeEntityMap extends MapIntMap {\n      /**\n       * Constructs a new instance of <code>TreeEntityMap</code>.\n       */\n        public TreeEntityMap() {\n            mapNameToValue = new TreeMap();\n            mapValueToName = new TreeMap();\n        }\n    }\n\n    static class LookupEntityMap extends PrimitiveEntityMap {\n        private String[] lookupTable;\n        private int LOOKUP_TABLE_SIZE = 256;\n\n        /**\n         * {@inheritDoc}\n         */\n        public String name(int value) {\n            if (value < LOOKUP_TABLE_SIZE) {\n                return lookupTable()[value];\n            }\n            return super.name(value);\n        }\n\n        /**\n         * <p>Returns the lookup table for this entity map. The lookup table is created if it has not been \n         * previously.</p>\n         * \n         * @return the lookup table\n         */\n        private String[] lookupTable() {\n            if (lookupTable == null) {\n                createLookupTable();\n            }\n            return lookupTable;\n        }\n\n        /**\n         * <p>Creates an entity lookup table of LOOKUP_TABLE_SIZE elements, initialized with entity names.</p>\n         */\n        private void createLookupTable() {\n            lookupTable = new String[LOOKUP_TABLE_SIZE];\n            for (int i = 0; i < LOOKUP_TABLE_SIZE; ++i) {\n                lookupTable[i] = super.name(i);\n            }\n        }\n    }\n\n    static class ArrayEntityMap implements EntityMap {\n        protected int growBy = 100;\n        protected int size = 0;\n        protected String[] names;\n        protected int[] values;\n\n        /**\n         * Constructs a new instance of <code>ArrayEntityMap</code>.\n         */\n        public ArrayEntityMap() {\n            names = new String[growBy];\n            values = new int[growBy];\n        }\n\n        /**\n         * Constructs a new instance of <code>ArrayEntityMap</code>\n         * specifying the size by which the array should grow.\n         * \n         * @param growBy array will be initialized to and will grow by this amount\n         */\n        public ArrayEntityMap(int growBy) {\n            this.growBy = growBy;\n            names = new String[growBy];\n            values = new int[growBy];\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public void add(String name, int value) {\n            ensureCapacity(size + 1);\n            names[size] = name;\n            values[size] = value;\n            size++;\n        }\n\n        /**\n         * Verifies the capacity of the entity array, adjusting the size if necessary.\n         * \n         * @param capacity size the array should be\n         */\n        protected void ensureCapacity(int capacity) {\n            if (capacity > names.length) {\n                int newSize = Math.max(capacity, size + growBy);\n                String[] newNames = new String[newSize];\n                System.arraycopy(names, 0, newNames, 0, size);\n                names = newNames;\n                int[] newValues = new int[newSize];\n                System.arraycopy(values, 0, newValues, 0, size);\n                values = newValues;\n            }\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public String name(int value) {\n            for (int i = 0; i < size; ++i) {\n                if (values[i] == value) {\n                    return names[i];\n                }\n            }\n            return null;\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public int value(String name) {\n            for (int i = 0; i < size; ++i) {\n                if (names[i].equals(name)) {\n                    return values[i];\n                }\n            }\n            return -1;\n        }\n    }\n\n    static class BinaryEntityMap extends ArrayEntityMap {\n\n        /**\n         * Constructs a new instance of <code>BinaryEntityMap</code>.\n         */\n        public BinaryEntityMap() {\n          super();\n        }\n\n        /**\n         * Constructs a new instance of <code>ArrayEntityMap</code>\n         * specifying the size by which the underlying array should grow.\n         * \n         * @param growBy array will be initialized to and will grow by this amount\n         */\n        public BinaryEntityMap(int growBy) {\n            super(growBy);\n        }\n\n        /**\n         * Performs a binary search of the entity array for the specified key.\n         * This method is based on code in {@link java.util.Arrays}.\n         * \n         * @param key the key to be found\n         * @return the index of the entity array matching the specified key\n         */\n        private int binarySearch(int key) {\n            int low = 0;\n            int high = size - 1;\n\n            while (low <= high) {\n                int mid = (low + high) >> 1;\n                int midVal = values[mid];\n\n                if (midVal < key) {\n                    low = mid + 1;\n                } else if (midVal > key) {\n                    high = mid - 1;\n                } else {\n                    return mid; // key found\n                }\n            }\n            return -(low + 1);  // key not found.\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public void add(String name, int value) {\n            ensureCapacity(size + 1);\n            int insertAt = binarySearch(value);\n            if (insertAt > 0) {\n                return;    // note: this means you can\'t insert the same value twice\n            }\n            insertAt = -(insertAt + 1);  // binarySearch returns it negative and off-by-one\n            System.arraycopy(values, insertAt, values, insertAt + 1, size - insertAt);\n            values[insertAt] = value;\n            System.arraycopy(names, insertAt, names, insertAt + 1, size - insertAt);\n            names[insertAt] = name;\n            size++;\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public String name(int value) {\n            int index = binarySearch(value);\n            if (index < 0) {\n                return null;\n            }\n            return names[index];\n        }\n    }\n\n    // package scoped for testing\n    EntityMap map = new Entities.LookupEntityMap();\n\n    /**\n     * <p>Adds entities to this entity.</p>\n     * \n     * @param entityArray array of entities to be added\n     */\n    public void addEntities(String[][] entityArray) {\n        for (int i = 0; i < entityArray.length; ++i) {\n            addEntity(entityArray[i][0], Integer.parseInt(entityArray[i][1]));\n        }\n    }\n\n    /**\n     * <p>Add an entity to this entity.</p>\n     * \n     * @param name name of the entity\n     * @param value vale of the entity\n     */\n    public void addEntity(String name, int value) {\n        map.add(name, value);\n    }\n\n    /**\n     * <p>Returns the name of the entity identified by the specified value.</p>\n     * \n     * @param value the value to locate\n     * @return entity name associated with the specified value\n     */\n    public String entityName(int value) {\n        return map.name(value);\n    }\n\n    /**\n     * <p>Returns the value of the entity identified by the specified name.</p>\n     * \n     * @param name the name to locate\n     * @return entity value associated with the specified name\n     */\n    public int entityValue(String name) {\n        return map.value(name);\n    }\n\n    /**\n     * <p>Escapes the characters in a <code>String</code>.</p>\n     *\n     * <p>For example, if you have called addEntity(&quot;foo&quot;, 0xA1),\n     * escape(&quot;\\u00A1&quot;) will return &quot;&amp;foo;&quot;</p>\n     *\n     * @param str The <code>String</code> to escape.\n     * @return A new escaped <code>String</code>.\n     */\n    public String escape(String str) {\n        //todo: rewrite to use a Writer\n        StringBuffer buf = new StringBuffer(str.length() * 2);\n        int i;\n        for (i = 0; i < str.length(); ++i) {\n            char ch = str.charAt(i);\n            String entityName = this.entityName(ch);\n            if (entityName == null) {\n                if (ch > 0x7F) {\n                    int intValue = ch;\n                    buf.append("&#");\n                    buf.append(intValue);\n                    buf.append(\';\');\n                } else {\n                    buf.append(ch);\n                }\n            } else {\n                buf.append(\'&\');\n                buf.append(entityName);\n                buf.append(\';\');\n            }\n        }\n        return buf.toString();\n    }\n\n    /**\n     * <p>Escapes the characters in the <code>String</code> passed and writes the result\n     * to the <code>Writer</code> passed. </p>\n     * \n     * @param writer The <code>Writer</code> to write the results of the escaping to.\n     *                            Assumed to be a non-null value.\n     * @param str The <code>String</code> to escape. Assumed to be a non-null value.\n     * @throws IOException when <code>Writer</code> passed throws the exception from\n     *                                       calls to the {@link Writer#write(int)} methods.\n     *                                       \n     * @see #escape(String)\n     * @see Writer\n     */\n    public void escape(Writer writer, String str) throws IOException {\n        int len = str.length();\n        for (int i = 0; i < len; i++) {\n            char c = str.charAt(i);\n            String entityName = this.entityName(c);\n            if (entityName == null) {\n                if (c > 0x7F) {\n                    writer.write("&#");\n                    writer.write(Integer.toString(c, 10));\n                    writer.write(\';\');\n                } else {\n                    writer.write(c);\n                }\n            } else {\n                writer.write(\'&\');\n                writer.write(entityName);\n                writer.write(\';\');\n            }\n        }\n    }\n    \n    /**\n     * <p>Unescapes the entities in a <code>String</code>.</p>\n     *\n     * <p>For example, if you have called addEntity(&quot;foo&quot;, 0xA1),\n     * unescape(&quot;&amp;foo;&quot;) will return &quot;\\u00A1&quot;</p>\n     *\n     * @param str The <code>String</code> to escape.\n     * @return A new escaped <code>String</code>.\n     */\n    public String unescape(String str) {\n        int firstAmp = str.indexOf(\'&\');\n        if (firstAmp < 0) {\n            return str;\n        }\n\n        StringBuffer buf = new StringBuffer(str.length());\n        buf.append(str.substring(0, firstAmp));\n        for (int i = firstAmp; i < str.length(); ++i) {\n            char ch = str.charAt(i);\n            if (ch == \'&\') {\n                int semi = str.indexOf(\';\', i + 1);\n                if (semi == -1) {\n                    buf.append(ch);\n                    continue;\n                }\n                int amph = str.indexOf(\'&\', i + 1);\n                if( amph != -1 && amph < semi ) {\n                    // Then the text looks like &...&...;\n                    buf.append(ch);\n                    continue;\n                }\n                String entityName = str.substring(i + 1, semi);\n                int entityValue;\n                if (entityName.length() == 0) {\n                    entityValue = -1;\n                } else if (entityName.charAt(0) == \'#\') {\n                    if (entityName.length() == 1) {\n                        entityValue = -1;\n                    } else {\n                        char charAt1 = entityName.charAt(1);\n                        try {\n                            if (charAt1 == \'x\' || charAt1==\'X\') {\n                                entityValue = Integer.valueOf(entityName.substring(2), 16).intValue();\n                            } else {\n                                entityValue = Integer.parseInt(entityName.substring(1));\n                            }\n                        } catch (NumberFormatException ex) {\n                            entityValue = -1;\n                        }\n                    }\n                } else {\n                    entityValue = this.entityValue(entityName);\n                }\n                if (entityValue == -1) {\n                    buf.append(\'&\');\n                    buf.append(entityName);\n                    buf.append(\';\');\n                } else {\n                    buf.append((char) (entityValue));\n                }\n                i = semi;\n            } else {\n                buf.append(ch);\n            }\n        }\n        return buf.toString();\n    }\n\n    /**\n     * <p>Unescapes the escaped entities in the <code>String</code> passed and\n     * writes the result to the <code>Writer</code> passed.</p>\n     * \n     * @param writer The <code>Writer</code> to write the results to; assumed to be non-null.\n     * @param string The <code>String</code> to write the results to; assumed to be non-null.\n     * @throws IOException when <code>Writer</code> passed throws the exception from\n     *                                       calls to the {@link Writer#write(int)} methods.\n     *                                       \n     * @see #escape(String)\n     * @see Writer\n     */\n    public void unescape(Writer writer, String string) throws IOException {\n        int firstAmp = string.indexOf(\'&\');\n        if (firstAmp < 0) {\n            writer.write(string);\n            return;\n        }\n\n        writer.write(string, 0, firstAmp);\n        int len = string.length();\n        for (int i = firstAmp; i < len; i++) {\n            char c = string.charAt(i);\n            if (c == \'&\') {\n                int nextIdx = i+1;\n                int semiColonIdx = string.indexOf(\';\', nextIdx);\n                if (semiColonIdx == -1) {\n                    writer.write(c);\n                    continue;\n                }\n                int amphersandIdx = string.indexOf(\'&\', i + 1);\n                if( amphersandIdx != -1 && amphersandIdx < semiColonIdx ) {\n                    // Then the text looks like &...&...;\n                    writer.write(c);\n                    continue;\n                }\n                String entityContent = string.substring(nextIdx, semiColonIdx);\n                int entityValue = -1;\n                int entityContentLen = entityContent.length();\n                if (entityContentLen > 0) {\n                    if (entityContent.charAt(0) == \'#\') { //escaped value content is an integer (decimal or hexidecimal)\n                        if (entityContentLen > 1) {  \n                            char isHexChar = entityContent.charAt(1);\n                            try {\n                                switch (isHexChar) {\n                                    case \'X\' :\n                                    case \'x\' : {', 'aftercode': "                                    }\n                                    default : {\n                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);\n                                    }\n                                }\n                            } catch (NumberFormatException e) {\n                            }\n                        }\n                    } else { //escaped value content is an entity name\n                        entityValue = this.entityValue(entityContent);\n                    }\n                }\n                \n                if (entityValue == -1) {\n                    writer.write('&');\n                    writer.write(entityContent);\n                    writer.write(';');\n                } else {\n                    writer.write(entityValue);\n                }\n                i = semiColonIdx; //move index up to the semi-colon                \n            } else {\n                writer.write(c);\n            }\n        }\n    }\n    \n}", 'tree': 'statements IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member c_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MemberReference member i_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier string_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member indexOf_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier string_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member i_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ member indexOf_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier string_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc3 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ TryStatement block SwitchStatement expression MemberReference member loc6 ^ ^ ^ ^ cases SwitchStatementCase case Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ statements BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ SwitchStatementCase statements BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ catches CatchClause parameter CatchClauseParameter types NumberFormatException_ter ^ ^ name e_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value This selectors MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member loc4 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MemberReference member loc1 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ', 'prob': [0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 919, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
before@0 batch1 x: 0: root ^  ; []
after@0 batch1 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root operator-operator ==_ter ^ ^  ^ ^ ; ['copy-operator']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root operator-operator ==_ter ^ ^  ^ ^ ; ['copy-operator']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root Literal-Literal value 16_ter ^ ^ ^  ^ ^ ; ['copy-Literal']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root Literal-Literal value 2_ter ^ ^ ^  ^ ^ ; ['copy-Literal']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
before@1 batch0 x: -12.22048568725586: root parameters ^ ^  ; ['root -> parameters']
after@1 batch0 x: -12.22048568725586: root parameters ^ ^  ; ['root -> parameters']
before@1 batch1 x: -12.610405921936035: root StatementExpression ^ ^  ; ['root -> StatementExpression']
after@1 batch1 x: -12.610405921936035: root StatementExpression ^ ^  ; ['root -> StatementExpression']
copynode -0.10843317210674286:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -0.10843317210674286:  root modified ^ operator-operator ==_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-operator']
copynode -0.10843317210674286:  root modified ^ operator-operator ==_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-operator']
copynode -2.2776970863342285:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -2.2776970863342285:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.10843317210674286:  root modified ^ operator-operator ||_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-operator']
copynode -0.10843317210674286:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.10843317210674286:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -0.10843317210674286:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -0.10843317210674286:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -2.2776970863342285:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -0.10843317210674286:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-Literal']
copynode -0.10843317210674286:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-Literal']
copynode -2.2776970863342285:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -2.2776970863342285:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -2.2776970863342285:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -2.2776970863342285:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -2.2776970863342285:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -2.2776970863342285:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -2.2776970863342285:  root add ^ Statement_ter ^ ^ ; ['root -> add', 'root -> Statement_ter']
copynode -10.315254211425781:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -11.373651504516602:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -11.18199348449707:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -10.315254211425781:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -11.060426712036133:  root operator-operator ==_ter ^ ^  >=_ter ^ ^ ^ ; ['copy-operator', 'operator -> >=_ter']
copynode -11.659713745117188:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -12.22048568725586:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -11.469304084777832:  root operator-operator ==_ter ^ ^  >=_ter ^ ^ ^ ; ['copy-operator', 'operator -> >=_ter']
copynode -11.060426712036133:  root operator-operator ==_ter ^ ^  <=_ter ^ ^ ^ ; ['copy-operator', 'operator -> <=_ter']
copynode -11.060426712036133:  root operator-operator ==_ter ^ ^  ==_ter ^ ^ ^ ; ['copy-operator', 'operator -> ==_ter']
copynode -11.469304084777832:  root operator-operator ==_ter ^ ^  <=_ter ^ ^ ^ ; ['copy-operator', 'operator -> <=_ter']
copynode -11.469304084777832:  root operator-operator ==_ter ^ ^  ==_ter ^ ^ ^ ; ['copy-operator', 'operator -> ==_ter']
copynode -11.060426712036133:  root operator-operator ==_ter ^ ^  >_ter ^ ^ ^ ; ['copy-operator', 'operator -> >_ter']
copynode -11.060426712036133:  root operator-operator ==_ter ^ ^  !=_ter ^ ^ ^ ; ['copy-operator', 'operator -> !=_ter']
copynode -11.060426712036133:  root operator-operator ==_ter ^ ^  -_ter ^ ^ ^ ; ['copy-operator', 'operator -> -_ter']
copynode -11.469304084777832:  root operator-operator ==_ter ^ ^  -_ter ^ ^ ^ ; ['copy-operator', 'operator -> -_ter']
copynode -11.469304084777832:  root operator-operator ==_ter ^ ^  >_ter ^ ^ ^ ; ['copy-operator', 'operator -> >_ter']
copynode -11.469304084777832:  root operator-operator ==_ter ^ ^  !=_ter ^ ^ ^ ; ['copy-operator', 'operator -> !=_ter']
copynode -12.22048568725586:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -11.060426712036133:  root operator-operator ==_ter ^ ^  <_ter ^ ^ ^ ; ['copy-operator', 'operator -> <_ter']
copynode -11.659713745117188:  root StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.659713745117188:  root StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.659713745117188:  root StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments MemberReference member entityName_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.659713745117188:  root StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.659713745117188:  root StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.469304084777832:  root operator-operator ==_ter ^ ^  <_ter ^ ^ ^ ; ['copy-operator', 'operator -> <_ter']
copynode -11.659713745117188:  root StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.659713745117188:  root StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Cast type BasicType name char_ter ^ ^ ^ ^ expression MemberReference member loc19 ^ ^ ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.659713745117188:  root StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.659713745117188:  root StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation member intValue_ter ^ ^ ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.060426712036133:  root operator-operator ==_ter ^ ^  >>_ter ^ ^ ^ ; ['copy-operator', 'operator -> >>_ter']
copynode -11.060426712036133:  root operator-operator ==_ter ^ ^  +_ter ^ ^ ^ ; ['copy-operator', 'operator -> +_ter']
copynode -11.469304084777832:  root operator-operator ==_ter ^ ^  >>_ter ^ ^ ^ ; ['copy-operator', 'operator -> >>_ter']
copynode -11.469304084777832:  root operator-operator ==_ter ^ ^  +_ter ^ ^ ^ ; ['copy-operator', 'operator -> +_ter']
copynode -11.060426712036133:  root operator-operator ==_ter ^ ^  >>>_ter ^ ^ ^ ; ['copy-operator', 'operator -> >>>_ter']
copynode -11.469304084777832:  root operator-operator ==_ter ^ ^  >>>_ter ^ ^ ^ ; ['copy-operator', 'operator -> >>>_ter']
copynode -12.22048568725586:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -12.22048568725586:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -11.373651504516602:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ TryStatement block IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation member intValue_ter ^ ^ ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ catches CatchClause parameter CatchClauseParameter types NumberFormatException_ter ^ ^ name ex_ter ^ ^ ^ ^ block StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.373651504516602:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ TryStatement block IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation member intValue_ter ^ ^ ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ catches CatchClause parameter CatchClauseParameter types NumberFormatException_ter ^ ^ name ex_ter ^ ^ ^ ^ block StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value This selectors MethodInvocation arguments MemberReference member entityName_ter ^ ^ ^ ^ member loc19 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.373651504516602:  root IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation member intValue_ter ^ ^ ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.22048568725586:  root parameters loc0 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -12.22048568725586:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -12.22048568725586:  root parameters loc19 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -12.22048568725586:  root parameters loc19 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -12.22048568725586:  root parameters loc19 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -12.22048568725586:  root parameters loc19 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.373651504516602:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ TryStatement block IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation member intValue_ter ^ ^ ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ catches CatchClause parameter CatchClauseParameter types NumberFormatException_ter ^ ^ name ex_ter ^ ^ ^ ^ block StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value This selectors MethodInvocation arguments MemberReference member entityName_ter ^ ^ ^ ^ member loc19 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.373651504516602:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc19 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments MemberReference member entityName_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Cast type BasicType name char_ter ^ ^ ^ ^ expression MemberReference member loc19 ^ ^ ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.373651504516602:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -11.373651504516602:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -11.18199348449707:  root ReturnStatement loc19 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.18199348449707:  root ReturnStatement loc19 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.18199348449707:  root ReturnStatement loc19 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.18199348449707:  root ReturnStatement loc19 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.18199348449707:  root ReturnStatement loc19 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.18199348449707:  root ReturnStatement loc19 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.18199348449707:  root ReturnStatement loc19 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.315254211425781:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -11.18199348449707:  root ReturnStatement loc19 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.18199348449707:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.373651504516602:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -10.315254211425781:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.315254211425781:  root return_type loc19 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.315254211425781:  root return_type loc19 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.315254211425781:  root return_type loc19 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.315254211425781:  root return_type loc19 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.315254211425781:  root return_type loc19 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.315254211425781:  root return_type loc19 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.373651504516602:  root IfStatement loc0 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -0.09070916473865509:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-Literal']
copynode -0.09070916473865509:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-Literal']
copynode -0.09070916473865509:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -0.09070916473865509:  root modified ^ member-member parseInt_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -2.4473414421081543:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -2.4473414421081543:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.09070916473865509:  root modified ^ member-member substring_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.09070916473865509:  root modified ^ qualifier-qualifier Integer_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -0.09070916473865509:  root modified ^ qualifier-qualifier loc3 ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -0.09070916473865509:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -2.4473414421081543:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -0.09070916473865509:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -2.4473414421081543:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -0.09070916473865509:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -2.4473414421081543:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -2.4473414421081543:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -2.4473414421081543:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -2.4473414421081543:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -2.4473414421081543:  root add ^ TernaryExpression ^ ^ ; ['root -> add', 'root -> TernaryExpression']
copynode -2.4473414421081543:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter']
copynode -11.34538745880127:  root Literal-Literal value 16_ter ^ ^ ^  value ^ ^ ^ ; ['copy-Literal', 'Literal -> value']
copynode -11.20013427734375:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -11.979204177856445:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -12.09742259979248:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -12.180746078491211:  root Literal-Literal value 2_ter ^ ^ ^  value ^ ^ ^ ; ['copy-Literal', 'Literal -> value']
copynode -12.201746940612793:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -12.610405921936035:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -11.20013427734375:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -11.34538745880127:  root Literal-Literal value 16_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['copy-Literal', 'Literal -> prefix_operators value']
copynode -12.201746940612793:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -12.180746078491211:  root Literal-Literal value 2_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['copy-Literal', 'Literal -> prefix_operators value']
copynode -11.34538745880127:  root Literal-Literal value 16_ter ^ ^ ^  value 10_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -12.610405921936035:  root StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.34538745880127:  root Literal-Literal value 16_ter ^ ^ ^  value 16_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -12.610405921936035:  root StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.610405921936035:  root StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.610405921936035:  root StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.180746078491211:  root Literal-Literal value 2_ter ^ ^ ^  value 10_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -12.610405921936035:  root StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.610405921936035:  root StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.34538745880127:  root Literal-Literal value 16_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -12.610405921936035:  root StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.180746078491211:  root Literal-Literal value 2_ter ^ ^ ^  value 16_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -12.610405921936035:  root StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.610405921936035:  root StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value This selectors MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member loc4 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.34538745880127:  root Literal-Literal value 16_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -12.180746078491211:  root Literal-Literal value 2_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -11.34538745880127:  root Literal-Literal value 16_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -12.180746078491211:  root Literal-Literal value 2_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -11.34538745880127:  root Literal-Literal value 16_ter ^ ^ ^  selectors ^ value ^ ^ ^ ; ['copy-Literal', 'Literal -> selectors value']
copynode -12.180746078491211:  root Literal-Literal value 2_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -12.201746940612793:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -12.180746078491211:  root Literal-Literal value 2_ter ^ ^ ^  selectors ^ value ^ ^ ^ ; ['copy-Literal', 'Literal -> selectors value']
copynode -11.34538745880127:  root Literal-Literal value 16_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -11.34538745880127:  root Literal-Literal value 16_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -12.180746078491211:  root Literal-Literal value 2_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -12.180746078491211:  root Literal-Literal value 2_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -12.201746940612793:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -11.979204177856445:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc3 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ TryStatement block SwitchStatement expression MemberReference member loc6 ^ ^ ^ ^ cases SwitchStatementCase case Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ statements BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ SwitchStatementCase statements BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ catches CatchClause parameter CatchClauseParameter types NumberFormatException_ter ^ ^ name e_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value This selectors MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member loc4 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.979204177856445:  root IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ TryStatement block SwitchStatement expression MemberReference member loc6 ^ ^ ^ ^ cases SwitchStatementCase case Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ statements BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ SwitchStatementCase statements BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ catches CatchClause parameter CatchClauseParameter types NumberFormatException_ter ^ ^ name e_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.201746940612793:  root parameters loc0 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.979204177856445:  root IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc3 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ TryStatement block SwitchStatement expression MemberReference member loc6 ^ ^ ^ ^ cases SwitchStatementCase case Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ statements BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ SwitchStatementCase statements BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ catches CatchClause parameter CatchClauseParameter types NumberFormatException_ter ^ ^ name e_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value This selectors MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member loc4 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.201746940612793:  root parameters loc3 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -12.201746940612793:  root parameters loc5 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -12.201746940612793:  root parameters loc4 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.979204177856445:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member c_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MemberReference member i_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier string_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member indexOf_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier string_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member i_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ member indexOf_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier string_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc3 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ TryStatement block SwitchStatement expression MemberReference member loc6 ^ ^ ^ ^ cases SwitchStatementCase case Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ statements BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ SwitchStatementCase statements BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ catches CatchClause parameter CatchClauseParameter types NumberFormatException_ter ^ ^ name e_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value This selectors MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member loc4 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MemberReference member loc1 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.201746940612793:  root parameters loc2 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -12.201746940612793:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -11.979204177856445:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.979204177856445:  root IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.979204177856445:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.20013427734375:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -11.979204177856445:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -11.979204177856445:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -11.20013427734375:  root return_type loc3 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.20013427734375:  root return_type loc2 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.20013427734375:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -12.09742259979248:  root ReturnStatement loc6 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.20013427734375:  root return_type loc5 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.20013427734375:  root return_type loc4 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.20013427734375:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -12.09742259979248:  root ReturnStatement loc4 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -12.09742259979248:  root ReturnStatement loc5 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -12.09742259979248:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -12.09742259979248:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -12.09742259979248:  root ReturnStatement loc3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -12.09742259979248:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.20013427734375:  root return_type loc6 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -12.09742259979248:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
before@2 batch0 x: -34.1636848449707: root IfStatement loc0 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch0 x: -34.1636848449707: root IfStatement loc0 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch1 x: -28.559046745300293: root ReturnStatement unknown ^ ^ ^  ; ['root -> ReturnStatement', 'start -> unknown']
after@2 batch1 x: -28.559046745300293: root ReturnStatement unknown ^ ^ ^  ; ['root -> ReturnStatement', 'start -> unknown']
copynode -0.5208952873945236:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.736541986465454:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -1.9809372872114182:  root modified ^ operator-operator ==_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter']
copynode -2.2722343653440475:  root modified ^ operator-operator ==_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter']
copynode -1.9809372872114182:  root modified ^ operator-operator ==_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter']
copynode -1.9809372872114182:  root modified ^ operator-operator ==_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter']
copynode -3.383684515953064:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -2.2722343653440475:  root modified ^ operator-operator ==_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter']
copynode -2.2722343653440475:  root modified ^ operator-operator ==_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter']
copynode -3.8801254481077194:  root modified ^ operator-operator ||_ter ^ ^  ||_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ||_ter']
copynode -1.9809372872114182:  root modified ^ operator-operator ==_ter ^ ^  >_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >_ter']
copynode -1.9809372872114182:  root modified ^ operator-operator ==_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter']
copynode -4.396958753466606:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -2.2722343653440475:  root modified ^ operator-operator ==_ter ^ ^  >_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >_ter']
copynode -2.2722343653440475:  root modified ^ operator-operator ==_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter']
copynode -4.668524190783501:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.016806051135063:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -1.9809372872114182:  root modified ^ operator-operator ==_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter']
copynode -3.8801254481077194:  root modified ^ operator-operator ||_ter ^ ^  &&_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &&_ter']
copynode -2.2722343653440475:  root modified ^ operator-operator ==_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter']
copynode -6.218290567398071:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -1.9809372872114182:  root modified ^ operator-operator ==_ter ^ ^  -_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> -_ter']
copynode -3.383684515953064:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.383684515953064:  root add ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.383684515953064:  root add ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments MemberReference member entityName_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.2722343653440475:  root modified ^ operator-operator ==_ter ^ ^  -_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> -_ter']
copynode -3.383684515953064:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.383684515953064:  root add ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.383684515953064:  root add ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Cast type BasicType name char_ter ^ ^ ^ ^ expression MemberReference member loc19 ^ ^ ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.383684515953064:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.383684515953064:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.383684515953064:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation member intValue_ter ^ ^ ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.9809372872114182:  root modified ^ operator-operator ==_ter ^ ^  >>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>_ter']
copynode -1.9809372872114182:  root modified ^ operator-operator ==_ter ^ ^  >>>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>>_ter']
copynode -1.9809372872114182:  root modified ^ operator-operator ==_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter']
copynode -2.2722343653440475:  root modified ^ operator-operator ==_ter ^ ^  >>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>_ter']
copynode -2.2722343653440475:  root modified ^ operator-operator ==_ter ^ ^  >>>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>>_ter']
copynode -2.2722343653440475:  root modified ^ operator-operator ==_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter']
copynode -7.18959467113018:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value']
copynode -4.396958753466606:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -4.668524190783501:  root modified ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments MemberReference member entityName_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.668524190783501:  root modified ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.565660402178764:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value']
copynode -4.668524190783501:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.668524190783501:  root modified ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.668524190783501:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.668524190783501:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.396958753466606:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -5.016806051135063:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -7.6506733894348145:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -4.668524190783501:  root modified ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Cast type BasicType name char_ter ^ ^ ^ ^ expression MemberReference member loc19 ^ ^ ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.396958753466606:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -4.668524190783501:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -8.34048318862915:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -4.668524190783501:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation member intValue_ter ^ ^ ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.016806051135063:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -8.197063446044922:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -5.016806051135063:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -9.082714557647705:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -7.6506733894348145:  root add ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -8.891111373901367:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.18959467113018:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value']
copynode -0.5208952873945236:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ TryStatement block IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation member intValue_ter ^ ^ ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ catches CatchClause parameter CatchClauseParameter types NumberFormatException_ter ^ ^ name ex_ter ^ ^ ^ ^ block StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -4.396958753466606:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -9.692827701568604:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -9.700220584869385:  root add ^ Statement_ter ^ ^ ; ['root -> add', 'root -> Statement_ter', 'root -> End']
copynode -3.8801254481077194:  root modified ^ operator-operator ||_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter']
copynode -7.565660402178764:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value']
copynode -5.016806051135063:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -3.8801254481077194:  root modified ^ operator-operator ||_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter']
copynode -7.18959467113018:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 16_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -7.18959467113018:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -7.18959467113018:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> selectors value']
copynode -3.8801254481077194:  root modified ^ operator-operator ||_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter']
copynode -2.736541986465454:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ TryStatement block IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation member intValue_ter ^ ^ ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ catches CatchClause parameter CatchClauseParameter types NumberFormatException_ter ^ ^ name ex_ter ^ ^ ^ ^ block StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -7.565660402178764:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 16_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -7.565660402178764:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -3.8801254481077194:  root modified ^ operator-operator ||_ter ^ ^  >_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >_ter']
copynode -7.565660402178764:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> selectors value']
copynode -0.5208952873945236:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ TryStatement block IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation member intValue_ter ^ ^ ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ catches CatchClause parameter CatchClauseParameter types NumberFormatException_ter ^ ^ name ex_ter ^ ^ ^ ^ block StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value This selectors MethodInvocation arguments MemberReference member entityName_ter ^ ^ ^ ^ member loc19 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -0.5208952873945236:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation member intValue_ter ^ ^ ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -7.18959467113018:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  prefix_operators ^ selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators selectors value']
copynode -7.18959467113018:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -7.18959467113018:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -7.565660402178764:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  prefix_operators ^ selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators selectors value']
copynode -3.8801254481077194:  root modified ^ operator-operator ||_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter']
copynode -6.218290567398071:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -7.6506733894348145:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.18959467113018:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -7.6506733894348145:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.6506733894348145:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.565660402178764:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -7.565660402178764:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -7.6506733894348145:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.18959467113018:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -11.374582425749395:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -7.6506733894348145:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc19 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -4.396958753466606:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -0.9394558221101761:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value']
copynode -1.6074445992708206:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value']
copynode -1.8225236684083939:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -2.2341773062944412:  root modified ^ member-member parseInt_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -2.778173416852951:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -0.9394558221101761:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value 10_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -3.950916290283203:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -3.9668223410844803:  root modified ^ member-member substring_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -0.9394558221101761:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -2.2341773062944412:  root modified ^ member-member parseInt_ter ^ ^  charAt_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -4.0596901923418045:  root modified ^ qualifier-qualifier Integer_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -1.6074445992708206:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 10_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -0.9394558221101761:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value 16_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -1.6074445992708206:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -0.9394558221101761:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -0.9394558221101761:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -0.9394558221101761:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value']
copynode -1.6074445992708206:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -1.6074445992708206:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 16_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -4.681340649724007:  root modified ^ qualifier-qualifier loc3 ^ ^  loc3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc3']
copynode -2.2341773062944412:  root modified ^ member-member parseInt_ter ^ ^  parseInt_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.6074445992708206:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value']
copynode -4.681340649724007:  root modified ^ qualifier-qualifier loc3 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -1.6074445992708206:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -2.2341773062944412:  root modified ^ member-member parseInt_ter ^ ^  charAt_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.2341773062944412:  root modified ^ member-member parseInt_ter ^ ^  indexOf_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -4.0596901923418045:  root modified ^ qualifier-qualifier Integer_ter ^ ^  loc3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc3']
copynode -4.681340649724007:  root modified ^ qualifier-qualifier loc3 ^ ^  loc6 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc6']
copynode -6.585874557495117:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -0.9394558221101761:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -3.9668223410844803:  root modified ^ member-member substring_ter ^ ^  charAt_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.2341773062944412:  root modified ^ member-member parseInt_ter ^ ^  write_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.2341773062944412:  root modified ^ member-member parseInt_ter ^ ^  write_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.2341773062944412:  root modified ^ member-member parseInt_ter ^ ^  write_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.2341773062944412:  root modified ^ member-member parseInt_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter']
copynode -2.2341773062944412:  root modified ^ member-member parseInt_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -0.9394558221101761:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -7.127687886357307:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -7.0231418162584305:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -3.9668223410844803:  root modified ^ member-member substring_ter ^ ^  length_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -7.183208465576172:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -3.9668223410844803:  root modified ^ member-member substring_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -3.950916290283203:  root add ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.8225236684083939:  root modified ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.0596901923418045:  root modified ^ qualifier-qualifier Integer_ter ^ ^  writer_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -0.9394558221101761:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -3.9668223410844803:  root modified ^ member-member substring_ter ^ ^  substring_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.950916290283203:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.0596901923418045:  root modified ^ qualifier-qualifier Integer_ter ^ ^  Integer_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -1.8225236684083939:  root modified ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.0596901923418045:  root modified ^ qualifier-qualifier Integer_ter ^ ^  loc6 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc6']
copynode -4.0596901923418045:  root modified ^ qualifier-qualifier Integer_ter ^ ^  writer_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -3.950916290283203:  root add ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.0596901923418045:  root modified ^ qualifier-qualifier Integer_ter ^ ^  writer_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -1.8225236684083939:  root modified ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.6074445992708206:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -3.950916290283203:  root add ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.0596901923418045:  root modified ^ qualifier-qualifier Integer_ter ^ ^  writer_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -3.950916290283203:  root add ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.950916290283203:  root add ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.0596901923418045:  root modified ^ qualifier-qualifier Integer_ter ^ ^  writer_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -4.681340649724007:  root modified ^ qualifier-qualifier loc3 ^ ^  loc5 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc5']
copynode -1.6074445992708206:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -1.8225236684083939:  root modified ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.8225236684083939:  root modified ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.950916290283203:  root add ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.950916290283203:  root add ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.8225236684083939:  root modified ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.0596901923418045:  root modified ^ qualifier-qualifier Integer_ter ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0']
copynode -3.950916290283203:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value This selectors MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member loc4 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.8225236684083939:  root modified ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.6074445992708206:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -1.8225236684083939:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value This selectors MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member loc4 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.8225236684083939:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.681340649724007:  root modified ^ qualifier-qualifier loc3 ^ ^  loc2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc2']
copynode -7.450935363769531:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -4.681340649724007:  root modified ^ qualifier-qualifier loc3 ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0']
copynode -4.681340649724007:  root modified ^ qualifier-qualifier loc3 ^ ^  Integer_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -3.9668223410844803:  root modified ^ member-member substring_ter ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> add_ter']
copynode -8.16874885559082:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -3.9668223410844803:  root modified ^ member-member substring_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter']
copynode -3.9668223410844803:  root modified ^ member-member substring_ter ^ ^  charAt_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -4.681340649724007:  root modified ^ qualifier-qualifier loc3 ^ ^  writer_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -3.9668223410844803:  root modified ^ member-member substring_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter']
copynode -4.681340649724007:  root modified ^ qualifier-qualifier loc3 ^ ^  writer_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -4.681340649724007:  root modified ^ qualifier-qualifier loc3 ^ ^  loc4 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc4']
copynode -3.9668223410844803:  root modified ^ member-member substring_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter']
copynode -8.587190628051758:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -7.03730583190918:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -8.782674789428711:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> End']
copynode -7.450935363769531:  root add ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -8.74014663696289:  root add ^ TernaryExpression condition ^ ^ ^ ; ['root -> add', 'root -> TernaryExpression', 'TernaryExpression -> condition']
copynode -8.74014663696289:  root add ^ TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ; ['root -> add', 'root -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -7.450935363769531:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.450935363769531:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier string_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.450935363769531:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.0231418162584305:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -7.450935363769531:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier string_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member i_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ member indexOf_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.0231418162584305:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
before@3 batch0 x: -11.910543844103813: root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
after@3 batch0 x: -11.910543844103813: root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
before@3 batch1 x: -10.70504541695118: root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  postfix_operators ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
after@3 batch1 x: -10.70504541695118: root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  postfix_operators ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -0.5213372938742395:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -3.002628967165947:  root modified ^ operator-operator ==_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter', 'root -> End']
copynode -2.7374642570503056:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -3.2934350222349167:  root modified ^ operator-operator ==_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter', 'root -> End']
copynode -3.544024035334587:  root modified ^ operator-operator ==_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter', 'root -> End']
copynode -3.646940752863884:  root modified ^ operator-operator ==_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter', 'root -> End']
copynode -0.5213372938742395:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.873907968401909:  root modified ^ operator-operator ==_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter', 'root -> End']
copynode -3.9071072787046432:  root modified ^ operator-operator ==_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter', 'root -> End']
copynode -4.083712741732597:  root modified ^ operator-operator ||_ter ^ ^  ||_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ||_ter', 'root -> End']
copynode -4.402546688914299:  root modified ^ operator-operator ==_ter ^ ^  >_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >_ter', 'root -> End']
copynode -4.409506604075432:  root modified ^ operator-operator ==_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter', 'root -> End']
copynode -2.7374642570503056:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.8728001415729523:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -4.676070138812065:  root modified ^ operator-operator ==_ter ^ ^  >_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >_ter', 'root -> End']
copynode -4.742867395281792:  root modified ^ operator-operator ==_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter', 'root -> End']
copynode -2.7374642570503056:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -4.495555438101292:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.8728001415729523:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -0.5213372938742395:  root modified ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -5.123147703707218:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.5325973480939865:  root modified ^ operator-operator ==_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter', 'root -> End']
copynode -5.620671436190605:  root modified ^ operator-operator ||_ter ^ ^  &&_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &&_ter', 'root -> End']
copynode -5.030496314167976:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -5.776894494891167:  root modified ^ operator-operator ==_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter', 'root -> End']
copynode -5.030496314167976:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.369330212473869:  root modified ^ operator-operator ==_ter ^ ^  -_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> -_ter', 'root -> End']
copynode -6.384473204612732:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.475930571556091:  root add ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.582562372088432:  root modified ^ operator-operator ==_ter ^ ^  -_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> -_ter', 'root -> End']
copynode -6.544316649436951:  root add ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments MemberReference member entityName_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.591277480125427:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -3.8728001415729523:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -6.639943480491638:  root add ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.672177672386169:  root add ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Cast type BasicType name char_ter ^ ^ ^ ^ expression MemberReference member loc19 ^ ^ ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.692336440086365:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.7278512716293335:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.783208250999451:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation member intValue_ter ^ ^ ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -0.5213372938742395:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc19 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.209061428904533:  root modified ^ operator-operator ==_ter ^ ^  >>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>_ter', 'root -> End']
copynode -2.7374642570503056:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc19 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.338118359446526:  root modified ^ operator-operator ==_ter ^ ^  >>>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>>_ter', 'root -> End']
copynode -2.7374642570503056:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.38555221259594:  root modified ^ operator-operator ==_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter', 'root -> End']
copynode -4.495555438101292:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member entityName_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.444420740008354:  root modified ^ operator-operator ==_ter ^ ^  >>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>_ter', 'root -> End']
copynode -2.7374642570503056:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.5804242342710495:  root modified ^ operator-operator ==_ter ^ ^  >>>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>>_ter', 'root -> End']
copynode -7.611449167132378:  root modified ^ operator-operator ==_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter', 'root -> End']
copynode -4.495555438101292:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.495555438101292:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.495555438101292:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member entityName_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -2.7374642570503056:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -7.951356336474419:  root modified ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments MemberReference member entityName_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.7374642570503056:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.6474854201078415:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -5.030496314167976:  root modified ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -7.969788953661919:  root modified ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -8.050855323672295:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.637679472565651:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.07614104449749:  root modified ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -8.085305616259575:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -0.5213372938742395:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -0.5213372938742395:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -8.123658820986748:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.123147703707218:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member entityName_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -8.241380378603935:  root modified ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Cast type BasicType name char_ter ^ ^ ^ ^ expression MemberReference member loc19 ^ ^ ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -8.2085622549057:  root add ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -5.123147703707218:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -8.305307075381279:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.123147703707218:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member entityName_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.123147703707218:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.419301435351372:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation member intValue_ter ^ ^ ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -8.010786578059196:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter']
copynode -0.5213372938742395:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -8.157334968447685:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -8.15352027118206:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -4.495555438101292:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc19 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -3.002628967165947:  root modified ^ operator-operator ==_ter ^ ^  >=_ter ^ ^ StatementExpression ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter', 'root -> StatementExpression']
copynode -8.377842649817467:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -8.859906792640686:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -3.8728001415729523:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -4.495555438101292:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc19 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.495555438101292:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc19 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -3.8728001415729523:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -0.5213372938742395:  root modified ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -3.2934350222349167:  root modified ^ operator-operator ==_ter ^ ^  >=_ter ^ ^ StatementExpression ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter', 'root -> StatementExpression']
copynode -2.7374642570503056:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -8.268313810229301:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -8.696798250079155:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -4.495555438101292:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc19 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.495555438101292:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.123147703707218:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc19 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.637679472565651:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> null_ter']
copynode -3.646940752863884:  root modified ^ operator-operator ==_ter ^ ^  <=_ter ^ ^ StatementExpression ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter', 'root -> StatementExpression']
copynode -9.177250623703003:  root add ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -6.384473204612732:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -6.475930571556091:  root add ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -1.0861692875623703:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter']
copynode -1.849054392427206:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -1.0861692875623703:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 2_ter']
copynode -2.568290963768959:  root modified ^ member-member parseInt_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -1.0861692875623703:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter']
copynode -1.7397367060184479:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter']
copynode -1.7397367060184479:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 2_ter']
copynode -1.7397367060184479:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter']
copynode -2.779482058249414:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -2.779482058249414:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -4.060740068554878:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value 10_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -4.339613363146782:  root modified ^ member-member substring_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -4.514263704419136:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -4.598775580525398:  root modified ^ member-member parseInt_ter ^ ^  charAt_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.599140837788582:  root modified ^ qualifier-qualifier Integer_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -4.235629469156265:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -5.028649643063545:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 10_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -5.121144130825996:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value 16_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -1.0861692875623703:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> false_ter']
copynode -4.235629469156265:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -5.193232610821724:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -1.849054392427206:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -5.294264629483223:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -5.319899395108223:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -2.779482058249414:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -5.816329792141914:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  prefix_operators -_ter ^ ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter']
copynode -5.943835571408272:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -5.966342285275459:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 16_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -5.9907369166612625:  root modified ^ qualifier-qualifier loc3 ^ ^  loc3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc3', 'root -> End']
copynode -6.020477011799812:  root modified ^ member-member parseInt_ter ^ ^  parseInt_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -1.0861692875623703:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value true_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> true_ter']
copynode -6.11024697124958:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  prefix_operators -_ter ^ ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter']
copynode -6.189902380108833:  root modified ^ qualifier-qualifier loc3 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.196225479245186:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -6.301276877522469:  root modified ^ member-member parseInt_ter ^ ^  charAt_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -1.0861692875623703:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.487193778157234:  root modified ^ member-member parseInt_ter ^ ^  indexOf_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.561094716191292:  root modified ^ qualifier-qualifier Integer_ter ^ ^  loc3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc3', 'root -> End']
copynode -6.594052389264107:  root modified ^ qualifier-qualifier loc3 ^ ^  loc6 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc6', 'root -> End']
copynode -6.703995540738106:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -6.7057966738939285:  root modified ^ member-member substring_ter ^ ^  charAt_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.78833170235157:  root modified ^ member-member parseInt_ter ^ ^  write_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.790258124470711:  root modified ^ member-member parseInt_ter ^ ^  write_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.794589713215828:  root modified ^ member-member parseInt_ter ^ ^  write_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.798755839467049:  root modified ^ member-member parseInt_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter', 'root -> End']
copynode -6.867399409413338:  root modified ^ member-member parseInt_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -6.919545009732246:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -2.779482058249414:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.1710886508226395:  root modified ^ member-member substring_ter ^ ^  length_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.213430836796761:  root modified ^ member-member substring_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -7.279926374554634:  root modified ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -1.7397367060184479:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> false_ter']
copynode -7.361827805638313:  root modified ^ qualifier-qualifier Integer_ter ^ ^  writer_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -7.375874355435371:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -7.385976269841194:  root modified ^ member-member substring_ter ^ ^  substring_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -1.0861692875623703:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -7.251614332199097:  root add ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.462394669651985:  root modified ^ qualifier-qualifier Integer_ter ^ ^  Integer_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -7.465868070721626:  root modified ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.481688216328621:  root modified ^ qualifier-qualifier Integer_ter ^ ^  loc6 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc6', 'root -> End']
copynode -7.504062607884407:  root modified ^ qualifier-qualifier Integer_ter ^ ^  writer_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -7.523321345448494:  root modified ^ qualifier-qualifier Integer_ter ^ ^  writer_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -7.552080228924751:  root modified ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.553668335080147:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -2.779482058249414:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.592149928212166:  root modified ^ qualifier-qualifier Integer_ter ^ ^  writer_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -7.435736417770386:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.622205689549446:  root modified ^ qualifier-qualifier Integer_ter ^ ^  writer_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -7.62584014236927:  root modified ^ qualifier-qualifier loc3 ^ ^  loc5 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc5', 'root -> End']
copynode -7.6513145714998245:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -7.726957395672798:  root modified ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.513628721237183:  root add ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.755842283368111:  root modified ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.779482058249414:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.5704734325408936:  root add ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.595246076583862:  root add ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.598175764083862:  root add ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.779482058249414:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc3 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.922920301556587:  root modified ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.935047820210457:  root modified ^ qualifier-qualifier Integer_ter ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0', 'root -> End']
copynode -7.993284299969673:  root modified ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -8.002578094601631:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -1.7397367060184479:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.02295882999897:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value This selectors MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member loc4 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -8.032655790448189:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.1396158412098885:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member loc6 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -8.065243676304817:  root modified ^ qualifier-qualifier loc3 ^ ^  loc2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc2', 'root -> End']
copynode -7.861983060836792:  root add ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.872812986373901:  root add ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.130107780452818:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -7.130107780452818:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -7.941885709762573:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value This selectors MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member loc4 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -4.235629469156265:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -1.7397367060184479:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value true_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> true_ter']
copynode -8.290755227208138:  root modified ^ qualifier-qualifier loc3 ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0', 'root -> End']
copynode -8.300107434391975:  root modified ^ qualifier-qualifier loc3 ^ ^  Integer_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -8.301799967885017:  root modified ^ member-member substring_ter ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> add_ter', 'root -> End']
before@4 batch0 x: -9.520043730735779: root add ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ StatementExpression ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
after@4 batch0 x: -9.520043730735779: root add ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ StatementExpression ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
before@4 batch1 x: -8.301884729284211: root modified ^ member-member substring_ter ^ ^  add_ter ^ ^ ^  ; ['root -> modified', 'copy-member', 'member -> add_ter', 'root -> End']
after@4 batch1 x: -8.301884729284211: root modified ^ member-member substring_ter ^ ^  add_ter ^ ^ ^  ; ['root -> modified', 'copy-member', 'member -> add_ter', 'root -> End']
copynode -0.5779042438080069:  root modified ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -0.5779042438080069:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -0.5779042438080069:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.183845527935773:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.7075219385733362:  root modified ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.809624291956425:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -4.817329436540604:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -4.496070891618729:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -0.5779042438080069:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.771789618302137:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -4.433275290299207:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.183845527935773:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.419850058853626:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -5.120629095326876:  root modified ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -3.7075219385733362:  root modified ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.183845527935773:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.778517439961433:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -4.771789618302137:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -5.803126111626625:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.433275290299207:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.7075219385733362:  root modified ^ IfStatement condition MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation member intValue_ter ^ ^ ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.7075219385733362:  root modified ^ IfStatement condition MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.496070891618729:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.120629095326876:  root modified ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -3.7075219385733362:  root modified ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -3.7075219385733362:  root modified ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.433275290299207:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -6.731452971696854:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -3.7075219385733362:  root modified ^ IfStatement condition MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.981880449544406:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc19 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -3.7075219385733362:  root modified ^ IfStatement condition MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.433275290299207:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -4.496070891618729:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.433275290299207:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.433275290299207:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -7.44136456400156:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member entityName_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -4.771789618302137:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.269569702912122:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc19 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.641062296926975:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -7.653017796576023:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -7.346968479920179:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.671186722815037:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member entityName_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -3.7075219385733362:  root modified ^ IfStatement condition MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.496070891618729:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.7075219385733362:  root modified ^ IfStatement condition MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.525276966858655:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -5.803126111626625:  root modified ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -8.070451155304909:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -4.433275290299207:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -8.099874758016085:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -8.103243135701632:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -8.15489623695612:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member entityName_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -7.965772017836571:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators -_ter ^ ^ member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> loc0']
copynode -7.95917732315138:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -8.279064871370792:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -5.120629095326876:  root modified ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.941427536774427:  root add ^ IfStatement condition Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal', 'Literal -> value']
copynode -4.496070891618729:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -8.388384319841862:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member entityName_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -1.7795744389295578:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -1.8887539878487587:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -2.4628932923078537:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 2_ter', 'root -> End']
copynode -2.6262445896863937:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter', 'root -> End']
copynode -2.717841237783432:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -2.730607122182846:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 2_ter', 'root -> End']
copynode -3.157534748315811:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter', 'root -> End']
copynode -3.2715744292363524:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.805868059396744:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -4.038878015242517:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.122265860438347:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> false_ter', 'root -> End']
copynode -5.144939333200455:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.210315760225058:  root modified ^ StatementExpression expression MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.038878015242517:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.849654462188482:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter', 'value -> 1_ter']
copynode -4.038878015242517:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -6.0507364720106125:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value true_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> true_ter', 'root -> End']
copynode -6.145891163498163:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter', 'value -> 1_ter']
copynode -5.724142483435571:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -6.377173468470573:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.210315760225058:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.2715744292363524:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.2715744292363524:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.038878015242517:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -4.038878015242517:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -5.724142483435571:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -4.038878015242517:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.144939333200455:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.309920459985733:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> false_ter', 'root -> End']
copynode -7.394085928797722:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> <string>_ter', 'root -> End']
copynode -7.097263029776514:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -4.038878015242517:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -3.2715744292363524:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl MemberReference member i_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.144939333200455:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.574554136954248:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -8.020257145166397:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -1.8887539878487587:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'copy-Assignment']
before@5 batch0 x: -8.390218486078084: root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member entityName_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
after@5 batch0 x: -8.390218486078084: root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member entityName_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
before@5 batch1 x: -8.032883208012208: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
after@5 batch1 x: -8.032883208012208: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -1.5485676125099417:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -1.7238844827224966:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -1.8174246743728872:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -1.5485676125099417:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -3.4158744891174138:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -3.4158744891174138:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.8935184672882315:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.818236374703702:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -4.710193418752169:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.427494757663226:  root modified ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.414972790051252:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -3.4158744891174138:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.295092471409589:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.4158744891174138:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -3.4158744891174138:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -5.595680959988385:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -5.874661513138562:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -3.4158744891174138:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -6.230393909703707:  root modified ^ IfStatement condition MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation member intValue_ter ^ ^ ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -4.87872776389122:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -6.380670093785739:  root modified ^ IfStatement condition MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -5.309640117455274:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.541212105046725:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -3.4158744891174138:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -4.87872776389122:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -3.4158744891174138:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter']
copynode -5.295092471409589:  root add ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.695843362103915:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.725772880803561:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -6.838332482147962:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -5.787649132311344:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -4.818236374703702:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -6.948239826451754:  root modified ^ IfStatement condition MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -5.541212105046725:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member entityName_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -1.5485676125099417:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -4.710193418752169:  root modified ^ IfStatement condition MethodInvocation qualifier Integer_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -7.122766041051364:  root modified ^ IfStatement condition MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -7.1312745292671025:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -4.818236374703702:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -4.710193418752169:  root modified ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -4.87872776389122:  root add ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.8766027092933655:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -6.209385380148888:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.217370219994336:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -4.87872776389122:  root add ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.818236374703702:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -1.5485676125099417:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.710193418752169:  root modified ^ IfStatement condition MethodInvocation qualifier Integer_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.87872776389122:  root add ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.75623228479526:  root modified ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -4.710193418752169:  root modified ^ IfStatement condition MethodInvocation qualifier entityName_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.397408276796341:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -4.87872776389122:  root add ^ StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.414972790051252:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> StatementExpression']
copynode -5.787649132311344:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -5.787649132311344:  root modified ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -4.818236374703702:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -5.595680959988385:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> StatementExpression']
copynode -1.897029310464859:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -1.897029310464859:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -1.897029310464859:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -1.897029310464859:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -3.38538936432451:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.38538936432451:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -3.38538936432451:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -5.740611966699362:  root modified ^ StatementExpression expression MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -4.810057133436203:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -3.38538936432451:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -5.971046473830938:  root modified ^ Literal-Literal value 16_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter', 'value -> 1_ter', 'root -> End']
copynode -6.0502927815541625:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -3.38538936432451:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -6.225291263312101:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter', 'value -> 1_ter', 'root -> End']
copynode -5.807923845015466:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -4.810057133436203:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -5.488959044218063:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -3.38538936432451:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -4.947852722369134:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.810057133436203:  root add ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -6.79361682292074:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -4.810057133436203:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -3.38538936432451:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter']
copynode -6.832568339072168:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -4.947852722369134:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -3.38538936432451:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -6.474112442694604:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.4981183325871825:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.947852722369134:  root add ^ IfStatement condition MethodInvocation qualifier Integer_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.810057133436203:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -6.297412089072168:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.746608308516443:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc3']
copynode -4.947852722369134:  root add ^ IfStatement condition MethodInvocation qualifier Integer_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -7.1490258276462555:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -1.897029310464859:  root modified ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
before@6 batch0 x: -7.717775352764875: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> StatementExpression']
after@6 batch0 x: -7.717775352764875: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> StatementExpression']
before@6 batch1 x: -7.733613058924675: root add ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
after@6 batch1 x: -7.733613058924675: root add ^ StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -1.6561857432534453:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -1.6561857432534453:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -3.9285417393257376:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.6057260115630925:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -3.9285417393257376:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -4.782785304356366:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.380263590661343:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -5.620927759300685:  root modified ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -5.723815687466413:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.761970527935773:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -5.813190229702741:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -1.6561857432534453:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference']
copynode -5.881474832538515:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.526333832036471:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -1.6561857432534453:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation']
copynode -5.74296809034422:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.461736583005404:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.221400984097272:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -6.491246946621686:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
copynode -5.74296809034422:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -6.698649309430039:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc0']
copynode -6.623197325039655:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference']
copynode -6.8675448670983315:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value BinaryOperation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation']
copynode -7.0335618488898035:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member entityName_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -4.6057260115630925:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -6.6697391350753605:  root add ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -6.406059094239026:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -7.277139015961438:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -7.252487748861313:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter', 'member -> loc0']
copynode -6.534245818853378:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -4.782785304356366:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -5.881474832538515:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc0']
copynode -1.6561857432534453:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -7.57013962417841:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value BinaryOperation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation']
copynode -7.639479972422123:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -7.553805261850357:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -7.518065594922518:  root modified ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -6.6697391350753605:  root add ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> StatementExpression']
copynode -1.6561857432534453:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -6.726359801104991:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.3686650693416595:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
copynode -6.3686650693416595:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -4.6057260115630925:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -5.526333832036471:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member entityName_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -1.6561857432534453:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -7.0744235746969935:  root modified ^ IfStatement condition MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -7.06949504170916:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -6.8410294111818075:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -4.6057260115630925:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -2.7744143307209015:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -3.4588511288166046:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -3.470825582742691:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -3.780743032693863:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -4.4587394362315536:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -4.730982935987413:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.769448012113571:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -5.489854133687913:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -4.730982935987413:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -5.912408149801195:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -6.056002891622484:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.3547515189275146:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -4.4587394362315536:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -6.362361520528793:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -5.489854133687913:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation']
copynode -6.531756437383592:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
copynode -2.7744143307209015:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value BinaryOperation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation']
copynode -6.7367282807827:  root add ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -2.7744143307209015:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference']
copynode -6.803550451993942:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -5.912408149801195:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation']
copynode -3.4588511288166046:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference']
copynode -7.139331549406052:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -6.839816368184984:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference']
copynode -6.79740459099412:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc3 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc3']
copynode -7.295952669344842:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc3', 'selectors -> MethodInvocation']
copynode -2.7744143307209015:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value TernaryExpression ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> TernaryExpression']
copynode -2.7744143307209015:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value Cast ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Cast']
copynode -3.470825582742691:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference']
copynode -3.780743032693863:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference']
copynode -6.951619422994554:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -4.730982935987413:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc3 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
before@7 batch0 x: -8.064053304959089: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
after@7 batch0 x: -8.064053304959089: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
before@7 batch1 x: -7.653252757154405: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc3 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
after@7 batch1 x: -7.653252757154405: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc3 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -2.150635060708737:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.150635060708737:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.6823445529153105:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -2.6823445529153105:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'copy-operandr']
copynode -4.851004563737661:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.42818691287539:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.994615219999105:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -2.6823445529153105:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MethodInvocation']
copynode -4.42818691287539:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.9487454489280935:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -5.417464730737265:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.058187760878354:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.096905924845487:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.9487454489280935:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr']
copynode -6.373647593747592:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.282656309049344:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.477659159194445:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.305692533496767:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.77129838662222:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -2.6823445529153105:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MemberReference']
copynode -6.0426408727653325:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.8872732295130845:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc0', 'root -> End']
copynode -6.918207206297666:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.098930285166716:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member entityName_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.419079420011258:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.9487454489280935:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation']
copynode -6.558134861756116:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.78904975252226:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -2.150635060708737:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.0426408727653325:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.417464730737265:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.529644548892975:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter', 'member -> loc0', 'root -> End']
copynode -7.513995953369886:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.539697021245956:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.705656015168643:  root modified ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -7.704917818307877:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -6.945357941091061:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.799836486577988:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -7.678326681256294:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -2.150635060708737:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.808127850294113:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.305692533496767:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression']
copynode -7.860471390973544:  root modified ^ IfStatement condition MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.570001462940127:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc0', 'root -> End']
copynode -6.558134861756116:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.945357941091061:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.831622313708067:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.533385217189789:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.5295158326625824:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.8527986854314804:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.684224656783044:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.110965377651155:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.5295158326625824:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.8527986854314804:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.533385217189789:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -2.831622313708067:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.973884201608598:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -2.831622313708067:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -2.831622313708067:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -6.400960422120988:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.814752958714962:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc6 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -3.533385217189789:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.5295158326625824:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.537108398042619:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.9966234331950545:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.69748529791832:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.049416810274124:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.8527986854314804:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.5295158326625824:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.351648009382188:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.5295158326625824:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -2.831622313708067:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.191142350435257:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member']
copynode -3.533385217189789:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -2.831622313708067:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.331379569135606:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.814752958714962:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -7.277114659547806:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member']
copynode -2.831622313708067:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -7.4349720776081085:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -3.5295158326625824:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -3.533385217189789:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.8527986854314804:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.147697687149048:  root add ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.831622313708067:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.4712879955768585:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value Cast type ^ expression ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Cast', 'Cast -> type expression']
before@8 batch0 x: -8.015838764607906: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'copy-BinaryOperation']
after@8 batch0 x: -8.015838764607906: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc19 ^ ^ ^ ^ value BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'copy-BinaryOperation']
before@8 batch1 x: -7.541509874165058: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value Cast type ^ expression ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Cast', 'Cast -> type expression']
after@8 batch1 x: -7.541509874165058: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value Cast type ^ expression ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Cast', 'Cast -> type expression']
copynode -2.6762009829690214:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -3.0913159817864653:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -3.2072906464745756:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.6762009829690214:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -3.9288716286828276:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'copy-operandr', 'root -> End']
copynode -3.0913159817864653:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.860455651301891:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.001963630784303:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.947683830599999:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -5.4683329657127615:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.051212188642239:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.374322314601159:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -2.6762009829690214:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -3.2072906464745756:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.947683830599999:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -3.2072906464745756:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.2687267855217215:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr', 'root -> End']
copynode -3.2072906464745756:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.0690641035325825:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.106697395909578:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.385093822929775:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.399637346010422:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.374322314601159:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -6.579976492415881:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -5.051212188642239:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -2.6762009829690214:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MemberReference']
copynode -6.78072366071865:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.774600950477179:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation']
copynode -5.001963630784303:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.928349894005805:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.860455651301891:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.0913159817864653:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.784092065732693:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.774600950477179:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MemberReference']
copynode -3.0913159817864653:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.051212188642239:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.774600950477179:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> BinaryOperation']
copynode -5.774600950477179:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> Literal']
copynode -3.2072906464745756:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.2072906464745756:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.055936496704817:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.8722042441368103:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.9385178685188293:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.286797925829887:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.055936496704817:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.516083091497421:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
copynode -5.740585669875145:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
copynode -5.761304318904877:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
copynode -4.699291989207268:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -4.699291989207268:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -3.055936496704817:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -3.9385178685188293:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.9385178685188293:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -3.8722042441368103:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.8722042441368103:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -5.134062589146197:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -3.9385178685188293:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.055936496704817:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.326005410403013:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
copynode -4.286797925829887:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.9385178685188293:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.286797925829887:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -3.055936496704817:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.134062589146197:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -3.8722042441368103:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.055936496704817:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.8722042441368103:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.699291989207268:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -4.286797925829887:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.055936496704817:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.9385178685188293:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.9385178685188293:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.9385178685188293:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.055936496704817:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.055936496704817:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.286797925829887:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.838298510760069:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.712532304227352:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc6 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'value -> MethodInvocation']
copynode -6.0004468774423:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -3.8722042441368103:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.8722042441368103:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.134062589146197:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -6.418932627886534:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier']
copynode -3.8722042441368103:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.286797925829887:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.286797925829887:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.286797925829887:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.838298510760069:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -7.1742843091487885:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
copynode -7.185177177190781:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
copynode -6.0004468774423:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -7.264520358294249:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
before@9 batch0 x: -7.828997609060025: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
after@9 batch0 x: -7.828997609060025: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
before@9 batch1 x: -7.272718996740878: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
after@9 batch1 x: -7.272718996740878: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
copynode -3.1811671227624174:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -3.3524292380025145:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -3.3524292380025145:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -3.798859950940823:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.4202336192538496:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -3.4202336192538496:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -3.4202336192538496:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -3.4202336192538496:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.713726994436001:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.536853928904748:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -4.713726994436001:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -5.327096894849092:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -5.1539042186923325:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -5.943098780553555:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -3.4202336192538496:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -3.798859950940823:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.798859950940823:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.235226389806485:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.279471156041836:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -3.798859950940823:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.807267208438134:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -5.1539042186923325:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -5.965903539996361:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.4202336192538496:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -3.798859950940823:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.460387974831974:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -3.798859950940823:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.807267208438134:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -6.78330754939816:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -5.870486375730252:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.779161074053263:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown']
copynode -5.776063439290738:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.691999395232415:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -3.798859950940823:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc19 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.691999395232415:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.327096894849092:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -6.314995021093637:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -6.300601564813405:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -3.3524292380025145:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference']
copynode -6.618484039645409:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -6.660622735362267:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.300601564813405:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -6.314995021093637:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -3.798859950940823:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.618484039645409:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> BinaryOperation']
copynode -5.691999395232415:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -7.412711349723395:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MemberReference', 'MemberReference -> member']
copynode -6.660622735362267:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -3.5238248519599438:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -3.5238248519599438:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -3.5238248519599438:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -5.5262408927083015:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter', 'root -> End']
copynode -5.750570192933083:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter', 'root -> End']
copynode -5.771567258052528:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter', 'root -> End']
copynode -4.734238028526306:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -4.734238028526306:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.863352224230766:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> Literal']
copynode -5.888132497668266:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'operandr -> Literal']
copynode -5.087076842784882:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.087076842784882:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -4.734238028526306:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -6.336753414943814:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter', 'root -> End']
copynode -3.5238248519599438:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments BinaryOperation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation']
copynode -5.377019569277763:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -5.377019569277763:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.454628150910139:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.087076842784882:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -5.454628150910139:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -6.8283681981265545:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.884790193289518:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation']
copynode -6.6572404354810715:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'operandr -> Literal']
copynode -5.377019569277763:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -6.219420493580401:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'operandr -> Literal']
copynode -5.904146354645491:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal']
copynode -5.953116238117218:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.022697865962982:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -7.181029516737908:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter', 'root -> End']
copynode -3.5238248519599438:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments This ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This']
copynode -7.195674818009138:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter', 'root -> End']
copynode -6.019223988056183:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal']
copynode -5.953116238117218:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -7.272718996740878:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter', 'root -> End']
copynode -6.022697865962982:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -6.487227619625628:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> Literal']
copynode -6.310060661286116:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -6.2182788252830505:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal']
copynode -6.219420493580401:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'operandr -> MemberReference']
copynode -6.348186179995537:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.285557568073273:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.904146354645491:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference']
copynode -6.285557568073273:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -6.432479545474052:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal']
copynode -6.348186179995537:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -6.41929703950882:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.8540759310126305:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc6 ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.019223988056183:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference']
copynode -5.904146354645491:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation']
copynode -6.884000004269183:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'operandr -> Literal']
copynode -6.47996537014842:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.5027965903282166:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
before@10 batch0 x: -7.505355377536034: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
after@10 batch0 x: -7.505355377536034: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
before@10 batch1 x: -7.733454525470734: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
after@10 batch1 x: -7.733454525470734: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -4.23443224732182:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -4.018982258479809:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.018982258479809:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.591785085242009:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -4.386342045705533:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -4.952333223860478:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -4.23443224732182:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'copy-operandr']
copynode -5.1295030236651655:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.682574257720262:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -5.212237966101384:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -4.386342045705533:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.807898600120097:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -4.591785085242009:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -5.560797688405728:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -5.3990557164361235:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.202384349744534:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -5.3990557164361235:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.218242046277737:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.3215211600472685:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -5.1295030236651655:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -6.4938841057009995:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.6208375662972685:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.23443224732182:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MethodInvocation']
copynode -6.684598323743558:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.386342045705533:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -4.386342045705533:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.386342045705533:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -6.190442693274235:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -6.842244454514002:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.560797688405728:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr']
copynode -6.979642269056058:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc19 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.952333223860478:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -6.693686147074914:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -6.574065816443181:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -6.476116259436822:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.952333223860478:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> BinaryOperation']
copynode -7.2270537172444165:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.476116259436822:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.338801462989068:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> End']
copynode -7.284927219618112:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -7.32005533282063:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.39971482459805:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.386342045705533:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -7.314167820382863:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -7.368389927316457:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -4.735444705933332:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.9911151342093945:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal']
copynode -4.669803183525801:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.669803183525801:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.908471703529358:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.240549385547638:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.9911151342093945:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -6.149612590670586:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> Literal', 'Literal -> value']
copynode -6.1615419536828995:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'operandr -> Literal', 'Literal -> value']
copynode -6.5354224890470505:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.6035669259727:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.286126732826233:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal']
copynode -5.875579476356506:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.669803183525801:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.444097202271223:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.9283689968287945:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.6585583090782166:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal']
copynode -6.9303369373083115:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'operandr -> Literal', 'Literal -> value']
copynode -7.085249841213226:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.875579476356506:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.255037605762482:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.1648306250572205:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.070790808647871:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'copy-Literal']
copynode -6.961503192782402:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal']
copynode -6.255037605762482:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.534503266215324:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.735444705933332:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.068419397808611:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'operandr -> Literal', 'Literal -> value']
copynode -7.488092347979546:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.510381042957306:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.875579476356506:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.71387080475688:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.286126732826233:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -7.640730798244476:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.460507334209979:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.205242335796356:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'copy-Literal']
copynode -7.714680831879377:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.733454525470734:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.326911450363696:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> Literal', 'Literal -> value']
copynode -6.534503266215324:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.410368263721466:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'copy-Literal']
copynode -6.71387080475688:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.669803183525801:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.883246708661318:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -7.554370444267988:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member']
before@11 batch0 x: -7.4365838770754635: root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
after@11 batch0 x: -7.4365838770754635: root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
before@11 batch1 x: -7.949821900576353: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member']
after@11 batch1 x: -7.949821900576353: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.731799986999249:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.76237824265263:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -5.537322115938878:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.832658734958386:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -5.744329583685612:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.737803370226175:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.432186958234524:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.550360110442853:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'copy-operandr', 'copy-operandr']
copynode -5.889801089186221:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.091397684853291:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.091397684853291:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.749056574743008:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -4.76237824265263:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -6.090480741899228:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.832658734958386:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.832658734958386:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.141873893182492:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -5.907377612631535:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -5.550360110442853:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'copy-operandr', 'operandr -> BinaryOperation']
copynode -5.637609374563908:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.637609374563908:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.794484984915471:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.832658734958386:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.731799986999249:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.731799986999249:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.389031541388249:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -5.907377612631535:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'copy-operandr']
copynode -6.570192318875343:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.175412428419804:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.091397684853291:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.696427103917813:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.689885136525845:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -6.736514088552212:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -6.862001654546475:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr', 'copy-operandr']
copynode -6.675935533683514:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.091397684853291:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.805995743721724:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -4.805995743721724:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -6.390106663107872:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.3653328232467175:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation']
copynode -4.805995743721724:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -6.390919715166092:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.3653328232467175:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal']
copynode -5.57641164585948:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.87861518189311:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal']
copynode -5.9781961888074875:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -5.57641164585948:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.3653328232467175:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference']
copynode -6.358758490532637:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -4.805995743721724:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.57641164585948:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -6.309558026492596:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -7.1465215384960175:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.87861518189311:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference']
copynode -6.604501955211163:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -6.358758490532637:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -7.532127063721418:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -6.920442204922438:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter']
copynode -5.3653328232467175:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ BinaryOperation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> BinaryOperation']
copynode -5.9781961888074875:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -4.805995743721724:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.691753923892975:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation']
copynode -5.87861518189311:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.66984124109149:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -4.805995743721724:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.691753923892975:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal']
copynode -5.9781961888074875:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -6.828510880470276:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.309558026492596:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -6.8572509698569775:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal']
copynode -7.535915614105761:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.66984124109149:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -5.87861518189311:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation']
copynode -7.16470468044281:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal']
copynode -7.070683013647795:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.87861518189311:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ BinaryOperation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> BinaryOperation']
copynode -7.682888388633728:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -7.103047996759415:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation']
copynode -6.691753923892975:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference']
copynode -6.828510880470276:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -6.309558026492596:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5']
before@12 batch0 x: -7.452019375603413: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
after@12 batch0 x: -7.452019375603413: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
before@12 batch1 x: -8.280031077563763: root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5']
after@12 batch1 x: -8.280031077563763: root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -5.059127894084668:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-operandr']
copynode -5.553447048034286:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.75935952164582:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.006459441821789:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.001621064584469:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.0273238689114805:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -6.2844834298302885:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.807883315254003:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.739088383357739:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -5.006459441821789:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.103979748528218:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -6.44537698928616:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-operandr']
copynode -5.739088383357739:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -5.059127894084668:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'operandr -> BinaryOperation']
copynode -6.534516108076787:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.339241889159894:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.4160902172734495:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -6.813055411766982:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.055575479287654:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.006459441821789:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -6.3697034985234495:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.923633483092999:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -6.612557318847394:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.969571974914288:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -7.12698341612122:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'copy-operandr', 'root -> End']
copynode -6.8687479168584105:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.807883315254003:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression']
copynode -6.622507822554326:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -6.055575479287654:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression']
copynode -7.251580652635312:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.103979748528218:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -7.000462365191197:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.193289955001092:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.333094683330273:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -6.3697034985234495:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -6.3676294356992:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.486561119556427:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.565867513418198:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.126764934509993:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal']
copynode -6.9430424980819225:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.621759157627821:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal']
copynode -6.310154598206282:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal']
copynode -6.48672841116786:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.5484167747199535:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal']
copynode -7.269983805716038:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.426637809723616:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.630668323487043:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.849884074181318:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'copy-Literal']
copynode -6.90024046599865:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal']
copynode -6.849884074181318:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value']
copynode -6.126764934509993:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MethodInvocation']
copynode -6.621759157627821:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'Literal -> value']
copynode -6.48672841116786:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.818334739655256:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -6.95242665335536:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> MethodInvocation']
copynode -7.665467958897352:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.93788842484355:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -6.997488539665937:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -7.257406048476696:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal']
copynode -6.310154598206282:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End']
copynode -6.310154598206282:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> MethodInvocation']
copynode -6.126764934509993:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End']
copynode -6.95242665335536:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> Literal']
copynode -8.155147444456816:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.479852668941021:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal']
copynode -8.260099947452545:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.630668323487043:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -6.5484167747199535:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MethodInvocation']
copynode -6.126764934509993:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference']
copynode -6.997488539665937:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> Literal']
copynode -7.649174552410841:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MethodInvocation']
copynode -6.126764934509993:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ BinaryOperation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> BinaryOperation']
copynode -6.5484167747199535:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End']
copynode -7.175217788666487:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference']
copynode -7.946779668331146:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal']
copynode -6.310154598206282:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> MemberReference']
copynode -8.229871790856123:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.705669924616814:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal']
copynode -7.818333089351654:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.93788842484355:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.630668323487043:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
before@13 batch0 x: -7.401606258208631: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
after@13 batch0 x: -7.401606258208631: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
before@13 batch1 x: -8.591520112007856: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
after@13 batch1 x: -8.591520112007856: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -5.274883818667149:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -6.026775759499287:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.924971249740338:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -6.307700875069713:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.697750161256408:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -6.635901433270192:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -6.672300872247433:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -5.920242188352859:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -6.885239926021313:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.508532252948498:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -7.051855441968655:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -7.095777568261838:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -6.4006663829495665:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.738504615466809:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -7.154755559604382:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.181629073660588:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -6.4006663829495665:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.284307868074393:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.79429587427876:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.156192832160741:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.920242188352859:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -7.022392717044568:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -7.205073345918208:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.050186660926556:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.959069848846411:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -7.334326711337781:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -5.697750161256408:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -6.884577420394635:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -7.343015816848492:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.314885419647908:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.050186660926556:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.941987078636885:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal']
copynode -7.136467557400465:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'copy-Literal']
copynode -7.327479939907789:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal']
copynode -7.61120955273509:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.9219714142382145:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -7.106888394802809:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal']
copynode -8.088280361145735:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member']
copynode -7.724418982863426:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal']
copynode -7.189888101071119:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -8.155150573700666:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member']
copynode -7.005045745521784:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -7.915725331753492:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.941987078636885:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value']
copynode -8.4523617438972:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member']
copynode -8.369218032807112:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.106888394802809:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation']
copynode -7.701462905853987:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal']
copynode -8.085887126624584:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal']
copynode -7.8109576515853405:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -7.005045745521784:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -8.58289460465312:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.8608408980071545:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -7.136467557400465:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'Literal -> value']
copynode -7.9651149325072765:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.840003054589033:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -8.5146757774055:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.388062041252851:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> Literal', 'copy-Literal']
copynode -8.212217669934034:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> Literal', 'copy-Literal']
copynode -7.8109576515853405:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -7.189888101071119:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -7.971310507506132:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter']
copynode -7.005045745521784:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.189888101071119:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier Integer_ter ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -8.313174955546856:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal']
copynode -7.8608408980071545:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -8.433365982025862:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.106888394802809:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference']
copynode -7.327479939907789:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'Literal -> value']
copynode -8.073223631829023:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.534433577209711:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.13020769879222:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -8.483084242790937:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member']
before@14 batch0 x: -7.930329945724225: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
after@14 batch0 x: -7.930329945724225: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
before@14 batch1 x: -9.01568452641368: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member']
after@14 batch1 x: -9.01568452641368: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.487969902198529:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.561264942254638:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.812672076601302:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.9649154216458555:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.910295300971484:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.2172514319827314:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -7.178436067741131:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.178841967921471:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.533476295735454:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -7.6777503163029905:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.275367167632794:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -7.67020463742665:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -7.7494888909568544:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.811333726014709:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -7.787692275684094:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.9136499435117:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.542717569041997:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -7.683968294877559:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -6.2172514319827314:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -6.533476295735454:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -7.461473897885298:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -6.2172514319827314:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -7.930329945724225:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -7.833177652995801:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -6.533476295735454:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -7.327882718294859:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> End']
copynode -7.927759771235287:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -7.532008808106184:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'copy-Literal', 'arguments -> End']
copynode -7.7019236497581005:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> End']
copynode -8.170358691364527:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -8.250018779188395:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -8.3308818154037:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -8.314216826111078:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End']
copynode -8.545411471277475:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -7.327882718294859:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal']
copynode -8.10939870402217:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal']
copynode -8.208697721362114:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> End']
copynode -8.658054564148188:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End']
copynode -8.844404313713312:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -8.734346222132444:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> Literal', 'copy-Literal', 'arguments -> End']
copynode -8.913515906780958:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.726335760205984:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -8.951841097325087:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -8.98216101899743:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -8.61330383270979:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> End']
copynode -7.532008808106184:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal']
copynode -8.46335868164897:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -7.7019236497581005:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal']
copynode -7.726335760205984:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -8.587244790047407:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal']
copynode -8.560235004872084:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -8.851049177348614:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> End']
copynode -8.676060061901808:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -8.10939870402217:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'Literal -> value']
copynode -8.747168522328138:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> Literal', 'copy-Literal', 'arguments -> End']
copynode -8.248241763561964:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal']
copynode -8.552680965512991:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.62078158184886:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> Literal']
copynode -8.46335868164897:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -8.915844660252333:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -7.726335760205984:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -8.658310618251562:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -8.248241763561964:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference']
copynode -8.88875026628375:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter']
copynode -8.773497324436903:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> Literal']
copynode -8.208697721362114:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal']
copynode -8.62078158184886:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End']
before@15 batch0 x: -8.436502399708843: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
after@15 batch0 x: -8.436502399708843: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
before@15 batch1 x: -9.655439775437117: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End']
after@15 batch1 x: -9.655439775437117: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End']
copynode -6.5106527831812855:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.124544274847722:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.986594901274657:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.492474260594463:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.660760993923759:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.909990405518329:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.660760993923759:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.708924329694128:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.713447329442715:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-operandr']
copynode -7.730472894239938:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.046942405868322:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -8.129860241431743:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -7.1152908437361475:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -7.936026914831018:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -8.279500854056096:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> End']
copynode -7.320485886972165:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -8.243705880682683:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -8.250729265477275:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -8.278231994103407:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.376248922984814:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.436502399708843:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> End']
copynode -6.909990405518329:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.398422886471963:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -7.861683151539182:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.1152908437361475:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -7.871077310293913:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
copynode -7.931776624172926:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
copynode -8.174726627767086:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -8.158179562538862:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
copynode -8.254842875525355:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -8.365260448306799:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -8.396950494498014:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member']
copynode -8.549858912359923:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -8.697114869952202:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
copynode -8.745427448302507:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member']
copynode -8.905446358025074:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.909083183854818:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
copynode -8.67776696011424:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End']
copynode -9.028043482452631:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -9.079538609832525:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -9.095230244100094:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
copynode -8.676169227808714:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal']
copynode -9.323840849101543:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
copynode -9.365721087902784:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
copynode -9.128733437508345:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End']
copynode -9.419467147439718:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -9.327033381909132:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End']
copynode -9.097965877503157:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal']
copynode -9.142772000283003:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal']
copynode -9.655439775437117:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member']
copynode -9.304560881108046:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End']
copynode -9.56626794859767:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End']
copynode -9.531172554939985:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End']
copynode -9.590394224971533:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End']
copynode -9.59559677168727:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -9.014487262815237:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End']
copynode -9.642255708575249:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal']
copynode -8.676169227808714:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'Literal -> value']
copynode -9.356830935925245:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -9.014487262815237:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal']
copynode -8.967940032482147:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -9.50208691880107:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> Literal', 'Literal -> value']
copynode -9.50208691880107:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> Literal', 'copy-Literal']
copynode -9.25270938500762:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End']
copynode -9.25270938500762:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal']
copynode -9.373653750866652:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value']
before@16 batch0 x: -8.583227836381411: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
after@16 batch0 x: -8.583227836381411: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
before@16 batch1 x: -10.44838247820735: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value']
after@16 batch1 x: -10.44838247820735: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value']
copynode -6.788278075720882:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -7.68026291843853:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -7.724570965248859:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -7.92553650852642:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -8.025406243134057:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.210595239739632:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.992416706721997:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-operandr', 'copy-operandr']
copynode -6.788278075720882:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -8.159882270585513:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.573452713753795:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.318582431267714:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -7.318582431267714:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -8.442527508217609:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -8.517478515248513:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -7.210595239739632:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -8.577911696251249:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -8.583227836381411:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -8.322411979403114:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.935658759291982:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -8.29763632718823:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -8.406814903806662:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -8.04770068556536:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -8.300561056326842:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.906512502580881:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -7.965653110295534:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -8.192883353680372:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -8.374602272175252:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -8.43589362502098:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -8.74167399480939:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -8.787583947181702:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -8.931072667241096:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -8.936594132333994:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -8.963490527123213:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
copynode -9.05579793639481:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -9.106122709810734:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -9.140511739999056:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -9.154616009443998:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End']
copynode -9.369181409478188:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -9.393589349463582:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -9.42116854712367:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member']
copynode -9.467808112502098:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -9.560763787478209:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member']
copynode -9.576326202601194:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End']
copynode -9.688641883432865:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -9.601362567394972:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End']
copynode -9.725624304264784:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
copynode -9.818839561194181:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member']
copynode -9.883502017706633:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'copy-member']
copynode -10.0667006932199:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member']
copynode -10.220060870051384:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End']
copynode -10.273877363651991:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End']
copynode -10.364242970943451:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End']
copynode -9.995988111943007:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -10.41089640185237:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> Literal', 'copy-Literal', 'arguments -> End']
copynode -10.414464708417654:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member']
copynode -10.280802603811026:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'copy-Literal']
copynode -10.262609552592039:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -10.44544767960906:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal']
copynode -10.403815787285566:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -10.44838247820735:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -9.985439326614141:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member']
before@17 batch0 x: -8.993653879355406: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
after@17 batch0 x: -8.993653879355406: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
before@17 batch1 x: -11.363250281661749: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member']
after@17 batch1 x: -11.363250281661749: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member']
copynode -7.654198738600826:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.052074720006203:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -8.103622105758404:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -8.183901878859615:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -8.246028545167064:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -8.423782245110488:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -8.370433703850722:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.564651598077035:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -8.629328305687523:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -8.563708976696944:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.752875205915188:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.7162856523355:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.621854279976105:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.892694634501822:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -8.993653879355406:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -8.199924887012457:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.805387527536368:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -7.915451728738844:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -7.97412780392915:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -8.201254900544882:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -8.443300941027701:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -8.750636736862361:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -8.795425502583385:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -8.93681792076677:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -8.943364903796464:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -8.990356355905533:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -9.062855895143002:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -9.113488353323191:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -9.150116455741227:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -9.261661600321531:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
copynode -9.37822209764272:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -9.401782819069922:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -9.459842760115862:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -9.497147472575307:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -9.597327437251806:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -9.698529484681785:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -9.67199170961976:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
copynode -9.700709033757448:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
copynode -9.752020502462983:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -9.856771517544985:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -9.922925230115652:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -10.321981519460678:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
copynode -10.357190158218145:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member']
copynode -10.416234463453293:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member']
copynode -10.498295824974775:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
copynode -10.497288685292006:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -10.261099707335234:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -10.619993042200804:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -11.073581289499998:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End']
copynode -11.254464965313673:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End']
copynode -10.982506271451712:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'copy-Literal', 'arguments -> End']
copynode -11.321646075695753:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End']
copynode -11.122982200235128:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> End']
copynode -11.363250281661749:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member', 'arguments -> End']
before@18 batch0 x: -9.740543813299155: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
after@18 batch0 x: -9.740543813299155: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
before@18 batch1 x: -11.784210737794638: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member', 'arguments -> End']
after@18 batch1 x: -11.784210737794638: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -7.753283704485511:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.443851501535391:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.202989122684812:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.456860617588973:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.202989122684812:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.925730758463033:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -8.67333842892549:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation']
copynode -8.67333842892549:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr']
copynode -8.863260288577294:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr']
copynode -8.804481587227201:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.778424954827642:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -9.000219215638936:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -9.290324542671442:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -9.466867945156991:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -9.502729980740696:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -9.603735876269639:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -9.699964044615626:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -9.728881824761629:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -9.764069761149585:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -9.863151102792472:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -9.929524268954992:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -10.356237892061472:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -10.38457165658474:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -10.45268040522933:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -10.522518400102854:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -10.689108859747648:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.546062823385:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -11.066977601498365:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -11.139380220323801:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member']
copynode -11.31598350778222:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member']
copynode -11.410741325467825:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
copynode -11.539605494588614:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'copy-member']
copynode -11.784210737794638:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -11.632647152990103:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
before@19 batch0 x: -9.753324068005895: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
after@19 batch0 x: -9.753324068005895: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
before@19 batch1 x: -11.837541949003935: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
after@19 batch1 x: -11.837541949003935: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member']
copynode -8.275429869856453:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -8.7085973926296:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr']
copynode -8.92089988369844:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -8.916796884353971:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr']
copynode -9.064126274402952:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-operandr']
copynode -9.726273259933805:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -9.505421058129286:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'copy-operandr']
copynode -9.657424886565423:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'copy-operandr']
copynode -8.7085973926296:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation']
copynode -8.275429869856453:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation']
copynode -9.490073338936782:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -9.299650002270937:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -9.708889139816165:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -9.737774926237762:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -10.365267392247915:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -10.391721760854125:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -10.46219311002642:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'copy-Literal', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -10.532084901817143:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -10.714661665260792:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -10.765028189867735:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -11.092759247869253:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -11.17056106030941:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -11.34276857972145:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -11.610406320542097:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -11.806538458913565:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -11.78070443496108:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -11.837541949003935:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'arguments -> End']
before@20 batch0 x: -10.5077687658777: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
after@20 batch0 x: -10.5077687658777: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
before@20 batch1 x: -12.035455223172903: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'arguments -> End']
after@20 batch1 x: -12.035455223172903: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -8.421965773071861:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -8.95800365586183:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'root -> End']
copynode -9.086044118594145:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -9.13614524048171:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'root -> End']
copynode -9.327655068453168:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-operandr', 'root -> End']
copynode -9.842364705022192:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -9.869174704741454:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -10.00466607962153:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -10.304741830419516:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -10.3492168438097:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -10.5077687658777:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -10.720638704951853:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -10.805915586650372:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -11.098626083694398:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -11.177959609311074:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ Literal value 16_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'copy-Literal', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -11.350541233085096:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier loc3 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -11.811889511998743:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -11.80296478793025:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -11.832789666950703:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.035455223172903:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
before@21 batch0 x: -11.177997962426161: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
after@21 batch0 x: -11.177997962426161: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
before@21 batch1 x: -12.059576492756605: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
after@21 batch1 x: -12.059576492756605: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.602131099294638:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -11.177997962426161:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -10.644091184105491:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -10.8273642398417:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -11.827234875410795:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -11.855571815744042:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -12.059576492756605:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'type -> =_ter']
before@22 batch0 x: -11.709053571190452: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
after@22 batch0 x: -11.709053571190452: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
before@22 batch1 x: -12.070774897933006: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'type -> =_ter']
after@22 batch1 x: -12.070774897933006: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -11.705123619030928:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -11.64854380566976:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -11.709053571190452:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -10.834120429120958:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -11.838845953345299:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -11.862531335093081:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -12.070774897933006:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc4 ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc5 ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'copy-Literal', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
before@23 batch0 x: -12.281200106110191: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
after@23 batch0 x: -12.281200106110191: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -11.726306372176623:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -12.279203922342276:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -12.281200106110191:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
before@24 batch0 x: -12.298223021294689: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
after@24 batch0 x: -12.298223021294689: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -12.296129898022627:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -12.298223021294689:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -12.235967689048266:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
before@25 batch0 x: -12.968569152842974: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
after@25 batch0 x: -12.968569152842974: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -12.968569152842974:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -12.599968747090315:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -12.703616234328365:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
before@26 batch0 x: -13.535012516047573: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
after@26 batch0 x: -13.535012516047573: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -13.424668744992232:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -13.535012516047573:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -13.023266781907296:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
before@27 batch0 x: -13.688511122803902: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
after@27 batch0 x: -13.688511122803902: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -13.688511122803902:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -13.498722695600009:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -13.688511122803902:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation']
before@28 batch0 x: -14.740572561364388: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation']
after@28 batch0 x: -14.740572561364388: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation']
copynode -14.19579636011622:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -14.48725184131763:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -14.740572561364388:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
6 charAt1_ter
method
7 
method
7 
6 charAt1_ter
6 charAt1_ter
6 charAt1_ter
method
charAt1_ter {'charAt1_ter': 'char', 'entityValue_ter': 'int'}
7 char
method
Integer_ter {'nextIdx_ter': 'int', 'semiColonIdx_ter': 'int', 'amphersandIdx_ter': 'int', 'entityContent_ter': 'String', 'entityValue_ter': 'int', 'entityContentLen_ter': 'int', 'isHexChar_ter': 'char'}
Integer_ter BASIC_ARRAY
Integer_ter APOS_ARRAY
Integer_ter ISO8859_1_ARRAY
Integer_ter HTML40_ARRAY
Integer_ter XML
Integer_ter HTML32
Integer_ter HTML40
Integer_ter map
except
method
entityContent_ter {'nextIdx_ter': 'int', 'semiColonIdx_ter': 'int', 'amphersandIdx_ter': 'int', 'entityContent_ter': 'String', 'entityValue_ter': 'int', 'entityContentLen_ter': 'int', 'isHexChar_ter': 'char'}
7 String
String  get substring_ter
String  getIgnoreCase substring_ter
method
7 
method
7 
stderr: Check out program version: Lang-62b........................................ OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:48<00:00, 48.20s/it]100%|██████████| 1/1 [00:48<00:00, 48.20s/it]
