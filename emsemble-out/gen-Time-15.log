stdout: else_statement -> BlockStatement
using GPU
p
path org.joda.time.field.FieldUtils
safeMultiply
Position(line=135, column=19)
FOUND IT!
[{'bugid': 'Time-15', 'treeroot': <Searchnode.Node object at 0x7fdf6ad93e50>, 'troot': <Searchnode.Node object at 0x7fdf6ad93e50>, 'oldcode': '                return -val1;', 'filepath': 'buggy/Time-15/src/main/java/org/joda/time/field/FieldUtils.java', 'subroot': <Searchnode.Node object at 0x7fdf6ad8f8d0>, 'vardic': {'safeMultiply_ter': 'meth0', 'val1_ter': 'par0', 'val2_ter': 'par1', 'total_ter': 'loc0'}, 'typedic': {'val1_ter': 'long', 'val2_ter': 'int', 'total_ter': 'long'}, 'idss': 'Time-15', 'classname': 'org.joda.time.field.FieldUtils', 'precode': '/*\n *  Copyright 2001-2005 Stephen Colebourne\n *\n *  Licensed under the Apache License, Version 2.0 (the "License");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an "AS IS" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\npackage org.joda.time.field;\n\nimport org.joda.time.DateTimeField;\nimport org.joda.time.DateTimeFieldType;\nimport org.joda.time.IllegalFieldValueException;\n\n/**\n * General utilities that don\'t fit elsewhere.\n * <p>\n * FieldUtils is thread-safe and immutable.\n *\n * @author Stephen Colebourne\n * @since 1.0\n */\npublic class FieldUtils {\n\n    /**\n     * Restricted constructor.\n     */\n    private FieldUtils() {\n        super();\n    }\n    \n    //------------------------------------------------------------------------\n    /**\n     * Negates the input throwing an exception if it can\'t negate it.\n     * \n     * @param value  the value to negate\n     * @return the negated value\n     * @throws ArithmeticException if the value is Integer.MIN_VALUE\n     * @since 1.1\n     */\n    public static int safeNegate(int value) {\n        if (value == Integer.MIN_VALUE) {\n            throw new ArithmeticException("Integer.MIN_VALUE cannot be negated");\n        }\n        return -value;\n    }\n    \n    /**\n     * Add two values throwing an exception if overflow occurs.\n     * \n     * @param val1  the first value\n     * @param val2  the second value\n     * @return the new total\n     * @throws ArithmeticException if the value is too big or too small\n     */\n    public static int safeAdd(int val1, int val2) {\n        int sum = val1 + val2;\n        // If there is a sign change, but the two values have the same sign...\n        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {\n            throw new ArithmeticException\n                ("The calculation caused an overflow: " + val1 + " + " + val2);\n        }\n        return sum;\n    }\n    \n    /**\n     * Add two values throwing an exception if overflow occurs.\n     * \n     * @param val1  the first value\n     * @param val2  the second value\n     * @return the new total\n     * @throws ArithmeticException if the value is too big or too small\n     */\n    public static long safeAdd(long val1, long val2) {\n        long sum = val1 + val2;\n        // If there is a sign change, but the two values have the same sign...\n        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {\n            throw new ArithmeticException\n                ("The calculation caused an overflow: " + val1 + " + " + val2);\n        }\n        return sum;\n    }\n    \n    /**\n     * Subtracts two values throwing an exception if overflow occurs.\n     * \n     * @param val1  the first value, to be taken away from\n     * @param val2  the second value, the amount to take away\n     * @return the new total\n     * @throws ArithmeticException if the value is too big or too small\n     */\n    public static long safeSubtract(long val1, long val2) {\n        long diff = val1 - val2;\n        // If there is a sign change, but the two values have different signs...\n        if ((val1 ^ diff) < 0 && (val1 ^ val2) < 0) {\n            throw new ArithmeticException\n                ("The calculation caused an overflow: " + val1 + " - " + val2);\n        }\n        return diff;\n    }\n    \n    /**\n     * Multiply two values throwing an exception if overflow occurs.\n     * \n     * @param val1  the first value\n     * @param val2  the second value\n     * @return the new total\n     * @throws ArithmeticException if the value is too big or too small\n     * @since 1.2\n     */\n    public static int safeMultiply(int val1, int val2) {\n        long total = (long) val1 * (long) val2;\n        if (total < Integer.MIN_VALUE || total > Integer.MAX_VALUE) {\n          throw new ArithmeticException("Multiplication overflows an int: " + val1 + " * " + val2);\n        }\n        return (int) total;\n    }\n\n    /**\n     * Multiply two values throwing an exception if overflow occurs.\n     * \n     * @param val1  the first value\n     * @param val2  the second value\n     * @return the new total\n     * @throws ArithmeticException if the value is too big or too small\n     * @since 1.2\n     */\n    public static long safeMultiply(long val1, int val2) {\n        switch (val2) {\n            case -1:', 'aftercode': '            case 0:\n                return 0L;\n            case 1:\n                return val1;\n        }\n        long total = val1 * val2;\n        if (total / val2 != val1) {\n          throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);\n        }\n        return total;\n    }\n\n    /**\n     * Multiply two values throwing an exception if overflow occurs.\n     * \n     * @param val1  the first value\n     * @param val2  the second value\n     * @return the new total\n     * @throws ArithmeticException if the value is too big or too small\n     */\n    public static long safeMultiply(long val1, long val2) {\n        if (val2 == 1) {\n            return val1;\n        }\n        if (val1 == 1) {\n            return val2;\n        }\n        if (val1 == 0 || val2 == 0) {\n            return 0;\n        }\n        long total = val1 * val2;\n        if (total / val2 != val1 || val1 == Long.MIN_VALUE && val2 == -1 || val2 == Long.MIN_VALUE && val1 == -1) {\n            throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);\n        }\n        return total;\n    }\n    \n    /**\n     * Casts to an int throwing an exception if overflow occurs.\n     * \n     * @param value  the value\n     * @return the value as an int\n     * @throws ArithmeticException if the value is too big or too small\n     */\n    public static int safeToInt(long value) {\n        if (Integer.MIN_VALUE <= value && value <= Integer.MAX_VALUE) {\n            return (int) value;\n        }\n        throw new ArithmeticException("Value cannot fit in an int: " + value);\n    }\n    \n    /**\n     * Multiply two values to return an int throwing an exception if overflow occurs.\n     * \n     * @param val1  the first value\n     * @param val2  the second value\n     * @return the new total\n     * @throws ArithmeticException if the value is too big or too small\n     */\n    public static int safeMultiplyToInt(long val1, long val2) {\n        long val = FieldUtils.safeMultiply(val1, val2);\n        return FieldUtils.safeToInt(val);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Verify that input values are within specified bounds.\n     * \n     * @param value  the value to check\n     * @param lowerBound  the lower bound allowed for value\n     * @param upperBound  the upper bound allowed for value\n     * @throws IllegalFieldValueException if value is not in the specified bounds\n     */\n    public static void verifyValueBounds(DateTimeField field, \n                                         int value, int lowerBound, int upperBound) {\n        if ((value < lowerBound) || (value > upperBound)) {\n            throw new IllegalFieldValueException\n                (field.getType(), Integer.valueOf(value),\n                 Integer.valueOf(lowerBound), Integer.valueOf(upperBound));\n        }\n    }\n\n    /**\n     * Verify that input values are within specified bounds.\n     * \n     * @param value  the value to check\n     * @param lowerBound  the lower bound allowed for value\n     * @param upperBound  the upper bound allowed for value\n     * @throws IllegalFieldValueException if value is not in the specified bounds\n     * @since 1.1\n     */\n    public static void verifyValueBounds(DateTimeFieldType fieldType, \n                                         int value, int lowerBound, int upperBound) {\n        if ((value < lowerBound) || (value > upperBound)) {\n            throw new IllegalFieldValueException\n                (fieldType, Integer.valueOf(value),\n                 Integer.valueOf(lowerBound), Integer.valueOf(upperBound));\n        }\n    }\n\n    /**\n     * Verify that input values are within specified bounds.\n     * \n     * @param value  the value to check\n     * @param lowerBound  the lower bound allowed for value\n     * @param upperBound  the upper bound allowed for value\n     * @throws IllegalFieldValueException if value is not in the specified bounds\n     */\n    public static void verifyValueBounds(String fieldName,\n                                         int value, int lowerBound, int upperBound) {\n        if ((value < lowerBound) || (value > upperBound)) {\n            throw new IllegalFieldValueException\n                (fieldName, Integer.valueOf(value),\n                 Integer.valueOf(lowerBound), Integer.valueOf(upperBound));\n        }\n    }\n\n    /**\n     * Utility method used by addWrapField implementations to ensure the new\n     * value lies within the field\'s legal value range.\n     *\n     * @param currentValue the current value of the data, which may lie outside\n     * the wrapped value range\n     * @param wrapValue  the value to add to current value before\n     *  wrapping.  This may be negative.\n     * @param minValue the wrap range minimum value.\n     * @param maxValue the wrap range maximum value.  This must be\n     *  greater than minValue (checked by the method).\n     * @return the wrapped value\n     * @throws IllegalArgumentException if minValue is greater\n     *  than or equal to maxValue\n     */\n    public static int getWrappedValue(int currentValue, int wrapValue,\n                                      int minValue, int maxValue) {\n        return getWrappedValue(currentValue + wrapValue, minValue, maxValue);\n    }\n\n    /**\n     * Utility method that ensures the given value lies within the field\'s\n     * legal value range.\n     * \n     * @param value  the value to fit into the wrapped value range\n     * @param minValue the wrap range minimum value.\n     * @param maxValue the wrap range maximum value.  This must be\n     *  greater than minValue (checked by the method).\n     * @return the wrapped value\n     * @throws IllegalArgumentException if minValue is greater\n     *  than or equal to maxValue\n     */\n    public static int getWrappedValue(int value, int minValue, int maxValue) {\n        if (minValue >= maxValue) {\n            throw new IllegalArgumentException("MIN > MAX");\n        }\n\n        int wrapRange = maxValue - minValue + 1;\n        value -= minValue;\n\n        if (value >= 0) {\n            return (value % wrapRange) + minValue;\n        }\n\n        int remByRange = (-value) % wrapRange;\n\n        if (remByRange == 0) {\n            return 0 + minValue;\n        }\n        return (wrapRange - remByRange) + minValue;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Compares two objects as equals handling null.\n     * \n     * @param object1  the first object\n     * @param object2  the second object\n     * @return true if equal\n     * @since 1.4\n     */\n    public static boolean equals(Object object1, Object object2) {\n        if (object1 == object2) {\n            return true;\n        }\n        if (object1 == null || object2 == null) {\n            return false;\n        }\n        return object1.equals(object2);\n    }\n\n}', 'tree': 'MethodDeclaration modifiers static_ter ^ public_ter ^ ^ return_type BasicType name long_ter ^ ^ ^ ^ name meth0 ^ ^ parameters FormalParameter type BasicType name long_ter ^ ^ ^ ^ name par0 ^ ^ ^ FormalParameter type BasicType name int_ter ^ ^ ^ ^ name par1 ^ ^ ^ ^ body SwitchStatement expression MemberReference member par1 ^ ^ ^ ^ cases SwitchStatementCase case Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ statements ReturnStatement expression MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ ^ ^ ^ SwitchStatementCase case Literal value 0_ter ^ ^ ^ ^ statements ReturnStatement expression Literal value 0L_ter ^ ^ ^ ^ ^ ^ ^ SwitchStatementCase case Literal value 1_ter ^ ^ ^ ^ statements ReturnStatement expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator *_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name ArithmeticException_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 138, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  ^ ^ ; ['copy-MemberReference']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root LocalVariableDeclaration ^ ^ ; ['root -> LocalVariableDeclaration']
before@1 batch0 x: -13.20020580291748: root LocalVariableDeclaration ^ ^  ; ['root -> LocalVariableDeclaration']
after@1 batch0 x: -13.20020580291748: root LocalVariableDeclaration ^ ^  ; ['root -> LocalVariableDeclaration']
copynode -0.2667894959449768:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.2667894959449768:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -1.455998420715332:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -1.455998420715332:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -1.455998420715332:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -1.455998420715332:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -1.455998420715332:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -1.455998420715332:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -1.455998420715332:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -1.455998420715332:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter']
copynode -0.2667894959449768:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -1.455998420715332:  root add ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  ^ ^ ; ['root -> add', 'copy-MemberReference']
copynode -0.2667894959449768:  root modified ^ member-member par0 ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -7.918854713439941:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -1.455998420715332:  root add ^ ^ ; ['root -> add', 'root -> End']
copynode -0.2667894959449768:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -8.029057502746582:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -0.2667894959449768:  root modified ^ ContinueStatement_ter ^ ^ ; ['root -> modified', 'root -> ContinueStatement_ter']
copynode -8.029057502746582:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -0.2667894959449768:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter']
copynode -9.730688095092773:  root MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member']
copynode -10.278374671936035:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -10.178032875061035:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -0.2667894959449768:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -10.354460716247559:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -0.2667894959449768:  root modified ^ BreakStatement_ter ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter']
copynode -9.730688095092773:  root MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -0.2667894959449768:  root modified ^ add ^ ^ ; ['root -> modified', 'root -> add']
copynode -9.730688095092773:  root MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member']
copynode -13.20020580291748:  root LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -7.918854713439941:  root ReturnStatement expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -9.730688095092773:  root MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -7.918854713439941:  root ReturnStatement expression Literal value 0L_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.918854713439941:  root ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -9.730688095092773:  root MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> selectors member']
copynode -9.730688095092773:  root MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -8.029057502746582:  root return_type BasicType name long_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'copy-return_type']
copynode -10.354460716247559:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -10.354460716247559:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -9.730688095092773:  root MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -13.20020580291748:  root LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -8.029057502746582:  root return_type par0 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -10.354460716247559:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -8.029057502746582:  root return_type par1 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -9.730688095092773:  root MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -10.178032875061035:  root StatementExpression par0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -10.354460716247559:  root parameters FormalParameter type BasicType name long_ter ^ ^ ^ ^ name par0 ^ ^ ^ FormalParameter type BasicType name int_ter ^ ^ ^ ^ name par1 ^ ^ ^ ^ ^ ; ['root -> parameters', 'copy-parameters']
copynode -10.178032875061035:  root StatementExpression par1 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -9.730688095092773:  root MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators selectors member']
copynode -13.20020580291748:  root LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator *_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.730688095092773:  root MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier selectors member']
copynode -7.918854713439941:  root ReturnStatement expression MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -13.20020580291748:  root LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -10.178032875061035:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -10.278374671936035:  root IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name ArithmeticException_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -13.20020580291748:  root LocalVariableDeclaration par0 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -10.354460716247559:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -13.20020580291748:  root LocalVariableDeclaration unknown ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'start -> unknown']
copynode -13.20020580291748:  root LocalVariableDeclaration par1 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -8.029057502746582:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.354460716247559:  root parameters loc0 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -10.354460716247559:  root parameters par0 ^ ^ ^ ; ['root -> parameters', 'copy-FormalParameter']
copynode -13.20020580291748:  root LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -7.918854713439941:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -8.029057502746582:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -10.278374671936035:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -10.354460716247559:  root parameters par1 ^ ^ ^ ; ['root -> parameters', 'copy-FormalParameter']
copynode -7.918854713439941:  root ReturnStatement par0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -7.918854713439941:  root ReturnStatement par1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -10.278374671936035:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -10.278374671936035:  root IfStatement par0 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -10.278374671936035:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -10.278374671936035:  root IfStatement par1 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -10.178032875061035:  root StatementExpression loc0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -10.178032875061035:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -7.918854713439941:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.354460716247559:  root parameters unknown ^ ^ ^ ; ['root -> parameters', 'start -> unknown']
copynode -13.20020580291748:  root LocalVariableDeclaration loc0 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-VariableDeclarator']
copynode -10.278374671936035:  root IfStatement loc0 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch0 x: -32.49258518218994: root IfStatement loc0 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch0 x: -32.49258518218994: root IfStatement loc0 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -0.7174070477485657:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -1.2866669297218323:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -2.215335488319397:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -0.7174070477485657:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -2.6839786767959595:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -3.212644100189209:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -0.7174070477485657:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -0.7174070477485657:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -0.7174070477485657:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -4.736762762069702:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -0.7174070477485657:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -6.311248302459717:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -0.7174070477485657:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -6.592628002166748:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -6.849414348602295:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -6.899821758270264:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> End']
copynode -2.6839786767959595:  root add ^ ReturnStatement expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -1.2866669297218323:  root modified ^ ReturnStatement expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -0.7174070477485657:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -2.6839786767959595:  root add ^ ReturnStatement expression Literal value 0L_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.718517363071442:  root modified ^ member-member par0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -7.684831142425537:  root add ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member ^ ^ ^ ; ['root -> add', 'copy-MemberReference', 'MemberReference -> member']
copynode -8.097227156162262:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.2866669297218323:  root modified ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -2.6839786767959595:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -0.7174070477485657:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators selectors member']
copynode -1.2866669297218323:  root modified ^ ReturnStatement expression Literal value 0L_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.925525453407317:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -8.222932949662209:  root return_type ReferenceType name ArithmeticException_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -7.925525453407317:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -7.684831142425537:  root add ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> add', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -7.925525453407317:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -6.311248302459717:  root add ^ control par1 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -0.7174070477485657:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators qualifier member']
copynode -6.311248302459717:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -4.736762762069702:  root add ^ BreakStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> BreakStatement_ter']
copynode -8.222932949662209:  root return_type ReferenceType name ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -9.763698637485504:  root modified ^ ContinueStatement_ter ^ ^ ; ['root -> modified', 'root -> ContinueStatement_ter', 'root -> End']
copynode -10.016403257846832:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter', 'root -> End']
copynode -7.925525453407317:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -10.3455029129982:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -6.311248302459717:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -8.222932949662209:  root return_type ReferenceType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name']
copynode -7.718517363071442:  root modified ^ member-member par0 ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -10.28591688722372:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -10.612880766391754:  root modified ^ BreakStatement_ter ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> End']
copynode -3.212644100189209:  root add ^ StatementExpression par0 ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-FormalParameter']
copynode -10.278552905700053:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -4.736762762069702:  root add ^ BreakStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ReturnStatement']
copynode -4.736762762069702:  root add ^ BreakStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> IfStatement']
copynode -4.736762762069702:  root add ^ BreakStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ContinueStatement_ter']
copynode -7.684831142425537:  root add ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> add', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -10.220809161663055:  root MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -4.736762762069702:  root add ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -9.989837884902954:  root return_type BasicType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'BasicType -> name']
copynode -9.989837884902954:  root return_type BasicType name long_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'copy-BasicType']
copynode -6.849414348602295:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -10.378711441531777:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -11.404049932956696:  root modified ^ add ^ ^ ; ['root -> modified', 'root -> add', 'root -> End']
copynode -10.378711441531777:  root parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -3.212644100189209:  root add ^ StatementExpression par1 ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-FormalParameter']
copynode -10.963664293289185:  root MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -10.220809161663055:  root MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -10.278552905700053:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -6.592628002166748:  root add ^ ReturnStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> BreakStatement_ter']
copynode -4.736762762069702:  root add ^ BreakStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ReturnStatement_ter']
copynode -10.28591688722372:  root StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -10.963664293289185:  root MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.849414348602295:  root add ^ LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator *_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -8.222932949662209:  root return_type ReferenceType name ^ dimensions ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name dimensions']
copynode -6.592628002166748:  root add ^ ReturnStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement']
copynode -6.592628002166748:  root add ^ ReturnStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ContinueStatement_ter']
copynode -7.925525453407317:  root ReturnStatement expression ClassCreator ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator']
copynode -8.222932949662209:  root return_type ReferenceType name ^ dimensions ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name dimensions arguments']
copynode -7.684831142425537:  root add ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> add', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -10.220809161663055:  root MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -10.278552905700053:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -6.311248302459717:  root add ^ control ForControl_ter ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl_ter']
copynode -9.989837884902954:  root return_type BasicType name int_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'copy-BasicType']
copynode -6.592628002166748:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -6.592628002166748:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -8.222932949662209:  root return_type ReferenceType name ^ sub_type ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name sub_type']
copynode -10.378711441531777:  root parameters FormalParameter type BasicType name long_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'copy-FormalParameter']
copynode -9.989837884902954:  root return_type BasicType name long_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'copy-BasicType']
copynode -7.684831142425537:  root add ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> add', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -8.222932949662209:  root return_type ReferenceType name ^ arguments ^ sub_type ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments sub_type']
copynode -9.989837884902954:  root return_type BasicType name long_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'copy-BasicType']
copynode -6.899821758270264:  root add ^ ContinueStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> BreakStatement_ter']
copynode -6.899821758270264:  root add ^ ContinueStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> IfStatement']
copynode -10.220809161663055:  root MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member par2 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -10.378711441531777:  root parameters FormalParameter type BasicType name int_ter ^ ^ ^ ^ name par1 ^ ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'copy-FormalParameter']
copynode -10.220809161663055:  root MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.718517363071442:  root modified ^ member-member par0 ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -10.28591688722372:  root StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -13.224126940593123:  root LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -2.215335488319397:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name ArithmeticException_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -4.736762762069702:  root add ^ BreakStatement_ter ^ control ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> control']
before@3 batch0 x: -13.356204748153687: root add ^ BreakStatement_ter ^ control ^ ^  ; ['root -> add', 'root -> BreakStatement_ter', 'root -> control']
after@3 batch0 x: -13.356204748153687: root add ^ BreakStatement_ter ^ control ^ ^  ; ['root -> add', 'root -> BreakStatement_ter', 'root -> control']
copynode -1.133564054965973:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -1.2912272326648235:  root modified ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -1.2912272326648235:  root modified ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -2.218332350254059:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -2.215524452898535:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -1.133564054965973:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -1.2912272326648235:  root modified ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -1.2912272326648235:  root modified ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -1.133564054965973:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.384732708334923:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.215524452898535:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -2.706633573397994:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -2.706633573397994:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -1.133564054965973:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -1.133564054965973:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -2.218332350254059:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ~_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ~_ter']
copynode -1.133564054965973:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -2.215524452898535:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -2.706633573397994:  root add ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -4.095571577548981:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -4.563951551914215:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -4.1249313950538635:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -2.218332350254059:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators --_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> --_ter']
copynode -1.2912272326648235:  root modified ^ ReturnStatement expression TernaryExpression ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression']
copynode -2.218332350254059:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ++_ter']
copynode -1.2912272326648235:  root modified ^ ReturnStatement expression ClassCreator ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator']
copynode -2.218332350254059:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -3.384732708334923:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -4.095571577548981:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators --_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter']
copynode -2.706633573397994:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -4.1249313950538635:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier par1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -4.1249313950538635:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -1.133564054965973:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -3.384732708334923:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -6.1288703083992:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators -_ter ^ ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> -_ter']
copynode -6.492134541273117:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -1.2912272326648235:  root modified ^ ReturnStatement expression ArrayCreator ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator']
copynode -1.2912272326648235:  root modified ^ ReturnStatement expression This ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This']
copynode -1.2912272326648235:  root modified ^ ReturnStatement expression Cast ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast']
copynode -6.505504906177521:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators -_ter ^ ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member', 'prefix_operators -> -_ter']
copynode -6.872446600347757:  root add ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -1.133564054965973:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member par3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par3']
copynode -4.563951551914215:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors MemberReference ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> MemberReference']
copynode -4.563951551914215:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors MethodInvocation ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> MethodInvocation']
copynode -7.1279202699661255:  root add ^ ReturnStatement expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.213581144809723:  root modified ^ ReturnStatement expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -2.218332350254059:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators +_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> +_ter']
copynode -2.706633573397994:  root add ^ ReturnStatement expression ClassCreator ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator']
copynode -2.215524452898535:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -1.133564054965973:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -7.699586987495422:  root add ^ ReturnStatement expression Literal value 0L_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.811534576117992:  root modified ^ member-member par0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -7.25609427690506:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier unknown ^ ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member', 'start -> unknown']
copynode -2.706633573397994:  root add ^ ReturnStatement expression ArrayCreator ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator']
copynode -2.706633573397994:  root add ^ ReturnStatement expression TernaryExpression ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression']
copynode -1.133564054965973:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member par4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par4']
copynode -3.384732708334923:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -8.19920164346695:  root modified ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.1288703083992:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ~_ter ^ ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> ~_ter']
copynode -8.264577984809875:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -1.2912272326648235:  root modified ^ ReturnStatement expression MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -7.994014352560043:  root add ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> add', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -4.1249313950538635:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -8.124070573598146:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -8.533123075962067:  root modified ^ ReturnStatement expression Literal value 0L_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -8.269184410572052:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators ++_ter ^ ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators selectors member', 'postfix_operators -> ++_ter']
copynode -6.505504906177521:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ~_ter ^ ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member', 'prefix_operators -> ~_ter']
copynode -7.25609427690506:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier par1 ^ ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member', 'qualifier -> par1']
copynode -2.215524452898535:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -7.25609427690506:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member', 'qualifier -> par0']
copynode -2.215524452898535:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -6.1288703083992:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators --_ter ^ ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> --_ter']
copynode -6.1288703083992:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -8.955274358391762:  root return_type ReferenceType name ArithmeticException_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType', 'root -> End']
copynode -2.706633573397994:  root add ^ ReturnStatement expression MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -2.706633573397994:  root add ^ ReturnStatement expression This ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This']
copynode -8.86491569550708:  root ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -4.1249313950538635:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier par2 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par2']
copynode -3.384732708334923:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -6.1288703083992:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ++_ter ^ ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> ++_ter']
copynode -2.706633573397994:  root add ^ ReturnStatement expression This_ter ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This_ter']
copynode -6.505504906177521:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators --_ter ^ ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member', 'prefix_operators -> --_ter']
copynode -4.095571577548981:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> End']
copynode -8.124070573598146:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -6.505504906177521:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators !_ter ^ ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member', 'prefix_operators -> !_ter']
copynode -4.1249313950538635:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier loc1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1']
copynode -6.505504906177521:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ++_ter ^ ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member', 'prefix_operators -> ++_ter']
copynode -9.486676957923919:  root ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -8.269184410572052:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators --_ter ^ ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators selectors member', 'postfix_operators -> --_ter']
copynode -9.218328383285552:  root ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -9.75343108177185:  root add ^ BreakStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> BreakStatement_ter', 'root -> End']
copynode -7.994014352560043:  root add ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> add', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -9.566290616989136:  root add ^ control par1 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter', 'root -> End']
before@4 batch0 x: -9.826522171497345: root add ^ control par1 ^ ^ ^  ; ['root -> add', 'root -> control', 'copy-FormalParameter', 'root -> End']
after@4 batch0 x: -9.826522171497345: root add ^ control par1 ^ ^ ^  ; ['root -> add', 'root -> control', 'copy-FormalParameter', 'root -> End']
copynode -1.7389909029006958:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -2.521402608603239:  root modified ^ ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.66911919710401:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.771503508090973:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -2.587906014174223:  root modified ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -2.6417125463485718:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0']
copynode -3.0700799338519573:  root modified ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -3.435657560825348:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -2.9111958853900433:  root modified ^ ReturnStatement expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.6417125463485718:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par1']
copynode -2.587906014174223:  root modified ^ ReturnStatement expression MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -3.7284903582185507:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -3.7467703875154257:  root add ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -4.078359663486481:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -4.122596800327301:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2', 'root -> End']
copynode -4.3089523911476135:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -3.6620901077985764:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.341609483584762:  root add ^ ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.9111958853900433:  root modified ^ ReturnStatement expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.171970784664154:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ~_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ~_ter', 'member -> par0']
copynode -3.6620901077985764:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.672424572680029:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.311617153856787:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -4.918012749403715:  root modified ^ ReturnStatement expression TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -2.9111958853900433:  root modified ^ ReturnStatement expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.788494899868965:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors ArraySelector index ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index']
copynode -4.4518309235572815:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators ++_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter', 'member -> par0']
copynode -5.161722049117088:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -3.0700799338519573:  root modified ^ ReturnStatement expression Literal prefix_operators ^ value ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> prefix_operators value']
copynode -4.171970784664154:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ~_ter ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ~_ter', 'member -> par1']
copynode -4.311617153856787:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -4.4518309235572815:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators ++_ter ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter', 'member -> par1']
copynode -4.853949129581451:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators --_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> --_ter', 'member -> par0']
copynode -2.587906014174223:  root modified ^ ReturnStatement expression MemberReference selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> selectors member']
copynode -4.9980588555336:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ++_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ++_ter', 'member -> par0']
copynode -3.672424572680029:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.0156251303851604:  root modified ^ ReturnStatement expression ClassCreator type ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments']
copynode -5.031862795352936:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators !_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par0']
copynode -2.587906014174223:  root modified ^ ReturnStatement expression MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.519695818424225:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -2.521402608603239:  root modified ^ ReturnStatement expression BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.0700799338519573:  root modified ^ ReturnStatement expression Literal selectors ^ value ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> selectors value']
copynode -2.9111958853900433:  root modified ^ ReturnStatement expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -4.853949129581451:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators --_ter ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> --_ter', 'member -> par1']
copynode -3.672424572680029:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.672424572680029:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.031862795352936:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators !_ter ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par1']
copynode -3.6620901077985764:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.9980588555336:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ++_ter ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ++_ter', 'member -> par1']
copynode -3.7467703875154257:  root add ^ ReturnStatement expression MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -2.587906014174223:  root modified ^ ReturnStatement expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -6.081665098667145:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -5.751549065113068:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -3.672424572680029:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -5.445065557956696:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators --_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter', 'member -> par0']
copynode -3.6620901077985764:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.46447897516191:  root add ^ ReturnStatement expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.672424572680029:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -2.521402608603239:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.521402608603239:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.521402608603239:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.445065557956696:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators --_ter ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter', 'member -> par1']
copynode -4.840336203575134:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier unknown ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'member -> par0']
copynode -2.6417125463485718:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> loc0']
copynode -6.237382873892784:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -3.0700799338519573:  root modified ^ ReturnStatement expression Literal value 0L_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'copy-Literal']
copynode -2.9111958853900433:  root modified ^ ReturnStatement expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.9111958853900433:  root modified ^ ReturnStatement expression MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -2.66911919710401:  root add ^ IfStatement condition BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.521402608603239:  root modified ^ ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.0156251303851604:  root modified ^ ReturnStatement expression ClassCreator type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type']
copynode -3.7467703875154257:  root add ^ ReturnStatement expression MemberReference selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> selectors member']
copynode -3.672424572680029:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -6.671937834471464:  root modified ^ ReturnStatement expression This selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This', 'This -> selectors']
copynode -3.672424572680029:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -3.7467703875154257:  root add ^ ReturnStatement expression MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member']
copynode -2.6417125463485718:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'start -> unknown']
copynode -3.7284903582185507:  root add ^ ReturnStatement expression Literal value 0L_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'copy-Literal']
copynode -6.690994631499052:  root modified ^ ReturnStatement expression Cast type ^ expression ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression']
copynode -5.46447897516191:  root add ^ ReturnStatement expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.521402608603239:  root modified ^ ReturnStatement expression BinaryOperation operator !=_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.938455641269684:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  member par3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par3', 'root -> End']
copynode -2.9111958853900433:  root modified ^ ReturnStatement expression MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -2.66911919710401:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.002432644367218:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors MemberReference member ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -2.66911919710401:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.840336203575134:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier unknown ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'member -> par1']
copynode -3.7284903582185507:  root add ^ ReturnStatement expression Literal prefix_operators ^ value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> prefix_operators value']
copynode -5.0156251303851604:  root modified ^ ReturnStatement expression ClassCreator selectors ^ type ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> selectors type arguments']
copynode -6.853766739368439:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators -_ter ^ ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member', 'prefix_operators -> -_ter', 'selectors -> End']
copynode -3.0700799338519573:  root modified ^ ReturnStatement expression Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'copy-Literal']
copynode -2.6417125463485718:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par2']
copynode -6.670359026640654:  root modified ^ ReturnStatement expression ArrayCreator type ^ dimensions ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator', 'ArrayCreator -> type dimensions']
copynode -4.341609483584762:  root add ^ ReturnStatement expression BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.482203364372253:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators -_ter ^ ^ qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> -_ter', 'start -> unknown']
before@5 batch0 x: -7.392485737800598: root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators -_ter ^ ^ qualifier unknown ^ ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> -_ter', 'start -> unknown']
after@5 batch0 x: -7.392485737800598: root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators -_ter ^ ^ qualifier unknown ^ ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> -_ter', 'start -> unknown']
copynode -3.183472454547882:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0', 'root -> End']
copynode -3.141077231615782:  root modified ^ ReturnStatement expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -2.6715856306254864:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter']
copynode -2.725944913152489:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -3.674071192741394:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par1', 'root -> End']
copynode -3.361519228667021:  root modified ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -2.6715856306254864:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -3.590152096003294:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -3.844623815268278:  root modified ^ ReturnStatement expression MemberReference prefix_operators -_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -3.8508428391069174:  root add ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -3.9999664183706045:  root add ^ ReturnStatement expression MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -4.72656387090683:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ~_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ~_ter', 'member -> par0', 'root -> End']
copynode -3.590152096003294:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -2.725944913152489:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -2.6715856306254864:  root modified ^ ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter']
copynode -2.725944913152489:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -2.725944913152489:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -4.437344178557396:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.160739779472351:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators ++_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter', 'member -> par0', 'root -> End']
copynode -3.9999664183706045:  root add ^ ReturnStatement expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.1779837012290955:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ~_ter ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ~_ter', 'member -> par1', 'root -> End']
copynode -5.1632166194031015:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -5.166874300688505:  root modified ^ ReturnStatement expression Literal prefix_operators -_ter ^ ^ value ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter']
copynode -4.936849009245634:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -2.6715856306254864:  root modified ^ ReturnStatement expression BinaryOperation operator /_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter']
copynode -4.755091354250908:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.266410547468695:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.294885456562042:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators ++_ter ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter', 'member -> par1', 'root -> End']
copynode -4.590646158903837:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -2.725944913152489:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.923278893344104:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation']
copynode -3.141077231615782:  root modified ^ ReturnStatement expression MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.411962449550629:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators --_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> --_ter', 'member -> par0', 'root -> End']
copynode -4.87296988365415:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.518128335475922:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ++_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ++_ter', 'member -> par0', 'root -> End']
copynode -3.361519228667021:  root modified ^ ReturnStatement expression Literal value 1_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -5.493187081068754:  root modified ^ ReturnStatement expression MemberReference selectors ArraySelector ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -2.725944913152489:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -5.605131804943085:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators !_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par0', 'root -> End']
copynode -4.899713236067328:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.590646158903837:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -3.361519228667021:  root modified ^ ReturnStatement expression Literal value 2_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -4.574454000219703:  root add ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter']
copynode -3.8508428391069174:  root add ^ ReturnStatement expression Literal value 1_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -4.574454000219703:  root add ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -5.82239443063736:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'root -> End']
copynode -5.841907750815153:  root modified ^ ReturnStatement expression BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -5.860000550746918:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators --_ter ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> --_ter', 'member -> par1', 'root -> End']
copynode -5.015680611133575:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors ArraySelector index Literal ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index', 'index -> Literal']
copynode -3.844623815268278:  root modified ^ ReturnStatement expression MemberReference prefix_operators ~_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ~_ter']
copynode -5.869897383425268:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.437344178557396:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1']
copynode -5.998234450817108:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators !_ter ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par1', 'root -> End']
copynode -2.725944913152489:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -6.0318742245435715:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.047589123249054:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators ++_ter ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ++_ter', 'member -> par1', 'root -> End']
copynode -5.549978982657194:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType ^ ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType']
copynode -3.8508428391069174:  root add ^ ReturnStatement expression Literal value 2_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -5.015680611133575:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors ArraySelector index MemberReference ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index', 'index -> MemberReference']
copynode -6.137745589017868:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -6.1462814986443846:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.150850057601929:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators --_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter', 'member -> par0', 'root -> End']
copynode -2.725944913152489:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter']
copynode -6.206105488512549:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -5.851513277739286:  root modified ^ ReturnStatement expression Literal selectors ArraySelector ^ ^ value ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> selectors value', 'selectors -> ArraySelector']
copynode -6.216012965887785:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.437344178557396:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -5.891469258043799:  root add ^ IfStatement condition MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.223909389227629:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.226450216025114:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.574454000219703:  root add ^ ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter']
copynode -4.923278893344104:  root modified ^ ReturnStatement expression TernaryExpression condition MemberReference ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MemberReference']
copynode -6.297124683856964:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  postfix_operators --_ter ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter', 'member -> par1', 'root -> End']
copynode -6.071783196181059:  root modified ^ ReturnStatement expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -4.87296988365415:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -6.353094696998596:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  qualifier unknown ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'member -> par0', 'root -> End']
copynode -4.899713236067328:  root add ^ IfStatement condition MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -3.590152096003294:  root modified ^ ReturnStatement expression MethodInvocation qualifier par1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1']
copynode -5.522649186823401:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -4.574454000219703:  root add ^ ReturnStatement expression BinaryOperation operator /_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter']
copynode -5.799217354506254:  root modified ^ ReturnStatement expression MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -3.8508428391069174:  root add ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -4.899713236067328:  root add ^ IfStatement condition MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.428843379020691:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> loc0', 'root -> End']
copynode -6.458658825606108:  root modified ^ ReturnStatement expression Literal value 0L_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'copy-Literal', 'root -> End']
copynode -5.857484232634306:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0']
copynode -4.590646158903837:  root modified ^ ReturnStatement expression MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -5.549978982657194:  root modified ^ ReturnStatement expression ClassCreator type BasicType ^ ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> BasicType']
copynode -3.844623815268278:  root modified ^ ReturnStatement expression MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.481500040739775:  root modified ^ ReturnStatement expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.755091354250908:  root add ^ StatementExpression expression MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.59935213252902:  root modified ^ ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
before@6 batch0 x: -6.600054521870334: root modified ^ ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
after@6 batch0 x: -6.600054521870334: root modified ^ ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -3.289037775248289:  root modified ^ ReturnStatement expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -3.5208098657167284:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -3.7000131122767925:  root modified ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -3.463581155985594:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference']
copynode -3.841461133211851:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference']
copynode -4.234456431120634:  root modified ^ ReturnStatement expression MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0']
copynode -4.394321506842971:  root add ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -4.134312521666288:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -4.604443883523345:  root add ^ ReturnStatement expression MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -4.784313834432396:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -4.91411868405703:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -5.008879340413841:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -5.162932788953185:  root add ^ ReturnStatement expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -5.1910047779092565:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -5.200048457831144:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.908023905009031:  root modified ^ ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference']
copynode -5.262388929724693:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.742335271090269:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -5.373554419726133:  root modified ^ ReturnStatement expression MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -5.19213174842298:  root modified ^ ReturnStatement expression Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter', 'value -> 1_ter']
copynode -5.367948020808399:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.529156815260649:  root modified ^ ReturnStatement expression Literal value 1_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 1_ter', 'root -> End']
copynode -5.213514398783445:  root modified ^ ReturnStatement expression BinaryOperation operator /_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference']
copynode -5.326390183690819:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.1601831167936325:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.739813696593046:  root modified ^ ReturnStatement expression Literal value 2_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 2_ter', 'root -> End']
copynode -5.771152501925826:  root add ^ ReturnStatement expression Literal value 1_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 1_ter', 'root -> End']
copynode -5.860608160495758:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors ArraySelector index Literal value ^ ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index', 'index -> Literal', 'Literal -> value']
copynode -5.320237826555967:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -5.8722946755588055:  root modified ^ ReturnStatement expression MemberReference prefix_operators ~_ter ^ ^ member par0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ~_ter', 'member -> par0']
copynode -5.597897208455834:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -5.511382597658667:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.6151352703309385:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.055617343634367:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name ArithmeticException_ter ^ ^ ^ ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -6.070119744166732:  root add ^ ReturnStatement expression Literal value 2_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 2_ter', 'root -> End']
copynode -6.04785924218595:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -3.463581155985594:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> BinaryOperation']
copynode -3.463581155985594:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MethodInvocation']
copynode -3.841461133211851:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation']
copynode -4.134312521666288:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -5.89699663889769:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.148276607200387:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.122590124607086:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors ArraySelector index MemberReference member ^ ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index', 'index -> MemberReference', 'MemberReference -> member']
copynode -5.7677178885787725:  root add ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference']
copynode -5.279293755229446:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.031384385350975:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
copynode -5.5925282798707485:  root modified ^ ReturnStatement expression MemberReference selectors ArraySelector index ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index']
copynode -6.221900600168738:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.134312521666288:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -6.1549250252282945:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference']
copynode -5.788416555151343:  root add ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference']
copynode -6.32714794203639:  root modified ^ ReturnStatement expression MemberReference postfix_operators ++_ter ^ ^ member par0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter', 'member -> par0']
copynode -6.408868914470077:  root add ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> false_ter', 'root -> End']
copynode -6.270127738825977:  root modified ^ ReturnStatement expression TernaryExpression condition MemberReference member ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MemberReference', 'MemberReference -> member']
copynode -6.464551996439695:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation']
copynode -6.539386920630932:  root modified ^ ReturnStatement expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -5.320237826555967:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'member -> meth0']
copynode -3.5208098657167284:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -5.279293755229446:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member par1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par1']
copynode -3.841461133211851:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation']
copynode -6.518471967428923:  root modified ^ ReturnStatement expression MemberReference prefix_operators !_ter ^ ^ member par0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par0']
copynode -6.395980495188269:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -6.582806870341301:  root add ^ StatementExpression expression MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.279293755229446:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par0']
copynode -6.4193098127580015:  root add ^ IfStatement condition MemberReference member par0 ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> ReturnStatement']
copynode -4.742335271090269:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal']
copynode -6.360006409857306:  root add ^ IfStatement condition MemberReference member par1 ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement']
copynode -6.235243370756507:  root add ^ ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference']
before@7 batch0 x: -6.746980836614966: root add ^ ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference']
after@7 batch0 x: -6.746980836614966: root add ^ ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference']
copynode -3.6844234384334413:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.7560880593955517:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.318665836006403:  root modified ^ ReturnStatement expression MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0', 'root -> End']
copynode -4.170031558722258:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.590805184096098:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.903255111697945:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.086449555281433:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.190533525470528:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.230908235535026:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.436454465612769:  root modified ^ ReturnStatement expression Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter', 'value -> 1_ter', 'root -> End']
copynode -5.368629466742277:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.240829776972532:  root modified ^ ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.20984296372626:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.731479749083519:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.546411734074354:  root modified ^ ReturnStatement expression BinaryOperation operator /_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.2901789881289005:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.657468146804604:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.936405371874571:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -5.950787369161844:  root modified ^ ReturnStatement expression MemberReference prefix_operators ~_ter ^ ^ member par0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ~_ter', 'member -> par0', 'root -> End']
copynode -5.993585723612341:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.020796078417334:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.967063225034508:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.192378243431449:  root add ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.202145910981926:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.7560880593955517:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference prefix_operators ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -5.895461857318878:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index', 'index -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -5.466880175285041:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.175160608414444:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.332235655907425:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.170031558722258:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference prefix_operators ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -6.110568832606077:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.411690752953291:  root modified ^ ReturnStatement expression MemberReference postfix_operators ++_ter ^ ^ member par0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter', 'member -> par0', 'root -> End']
copynode -5.2901789881289005:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.407690754160285:  root add ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.179289339735988:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.080552691593766:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name ArithmeticException_ter ^ ^ ^ ^ arguments MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference']
copynode -6.143300008028746:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.5405104868113995:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'member -> meth0', 'root -> End']
copynode -6.201769868072006:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.187033921480179:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors ArraySelector index MemberReference member par0 ^ ^ ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index', 'index -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.60441205278039:  root modified ^ ReturnStatement expression MemberReference prefix_operators !_ter ^ ^ member par0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par0', 'root -> End']
copynode -6.529416288249195:  root modified ^ ReturnStatement expression TernaryExpression condition MemberReference member par0 ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.237495653491351:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.6639536544680595:  root add ^ StatementExpression expression MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.746980836614966:  root add ^ ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.689862298939261:  root add ^ IfStatement condition MemberReference member par0 ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.20984296372626:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par1 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.718678194258246:  root add ^ IfStatement condition MemberReference member par1 ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.644047829482588:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.137641739100218:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.466880175285041:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -6.664122680362198:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member par0 ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par0', 'root -> ReturnStatement']
copynode -6.206449564546347:  root modified ^ ReturnStatement expression MemberReference selectors ArraySelector index Literal ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index', 'index -> Literal']
copynode -6.5301096849143505:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.583336929019424:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member par1 ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par1', 'root -> ReturnStatement']
before@8 batch0 x: -7.022394517596695: root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member par1 ^ ^ ^ ^ ^ ReturnStatement ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par1', 'root -> ReturnStatement']
after@8 batch0 x: -7.022394517596695: root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member par1 ^ ^ ^ ^ ^ ReturnStatement ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par1', 'root -> ReturnStatement']
copynode -3.9293119721114635:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.701136530537042:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.40336936339736:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.614404164254665:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.701136530537042:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -4.915768092658254:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.102428940284881:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.489774163812399:  root modified ^ ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.207536797199282:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.771736484020948:  root modified ^ ReturnStatement expression BinaryOperation operator /_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.915768092658254:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.451754402369261:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.207536797199282:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.267627386376262:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -5.102428940284881:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.2687899470329285:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index', 'index -> Literal', 'Literal -> value', 'value -> 0_ter', 'selectors -> End']
copynode -5.75505748949945:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.307845446281135:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.451754402369261:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.773595008999109:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.474512988701463:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name ArithmeticException_ter ^ ^ ^ ^ arguments MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.267627386376262:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.43734326834965:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.873116932038101:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.56011489033699:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors ArraySelector index MemberReference member par0 ^ ^ ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index', 'index -> MemberReference', 'MemberReference -> member', 'member -> par0', 'selectors -> End']
copynode -6.229933064430952:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -6.541477570470306:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.216578155916068:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.6994275288889185:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MemberReference']
copynode -3.9293119721114635:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.011234634715947:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.011234634715947:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.21083646453917:  root add ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.424178335815668:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -5.267627386376262:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal']
copynode -6.353528510779142:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -6.34667932910088:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.75505748949945:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.135598982844385:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.165264300230774:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -3.701136530537042:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.920478316955268:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -6.428869551047683:  root add ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.983237441629171:  root modified ^ ReturnStatement expression MemberReference selectors ArraySelector index Literal value ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index', 'index -> Literal', 'Literal -> value']
copynode -6.736396394830081:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.9705542122683255:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member par0 ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par0', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.773595008999109:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
before@9 batch0 x: -7.075353417545557: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
after@9 batch0 x: -7.075353417545557: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -4.015514966100454:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -4.4889273308217525:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -4.240492166180047:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -4.240492166180047:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -4.702375711101922:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal']
copynode -4.702375711101922:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference']
copynode -4.6739689484238625:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -4.6739689484238625:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -5.503599470641348:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -4.015514966100454:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -5.565699842918548:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -5.5689822398126125:  root modified ^ ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -5.865547603156301:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal']
copynode -6.1801224034279585:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.821655015621218:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -5.8515173234045506:  root modified ^ ReturnStatement expression BinaryOperation operator /_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -6.3358912244439125:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index', 'index -> Literal', 'Literal -> value', 'value -> 0_ter', 'selectors -> End', 'member -> par0']
copynode -6.399606633000076:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.4889273308217525:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -6.464274976402521:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -4.015514966100454:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -4.6739689484238625:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal']
copynode -6.541015209630132:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name ArithmeticException_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.110431353721651:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference']
copynode -6.6781673865625635:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MemberReference', 'MemberReference -> member']
copynode -6.198365477073821:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference']
copynode -6.645971428602934:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0']
copynode -6.612056992176804:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -6.766931209713221:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'start -> unknown']
copynode -6.55614092759788:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -4.015514966100454:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MethodInvocation']
copynode -6.346287881955504:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -5.503599470641348:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -6.727610939342412:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -6.863892864435911:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0']
copynode -6.754866891700658:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.941446925673517:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.405840944498777:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -4.015514966100454:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> BinaryOperation']
copynode -7.039281177334487:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.4889273308217525:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MethodInvocation']
copynode -7.0686422513535945:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -7.075353417545557:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.565699842918548:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -6.996851614836487:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -6.631426148116589:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors ArraySelector index MemberReference member par0 ^ ^ ^ ^ ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index', 'index -> MemberReference', 'MemberReference -> member', 'member -> par0', 'selectors -> End', 'member -> par1']
copynode -6.095517169684172:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
before@10 batch0 x: -7.183805238455534: root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
after@10 batch0 x: -7.183805238455534: root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -4.516238685697317:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.028218508858117:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -4.96240433678031:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.018824757236871:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.463491500515374:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value']
copynode -5.507272721428308:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.788920558989048:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.849729543711874:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -5.916511055082083:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -6.052021769035491:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.062231805175543:  root modified ^ ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.200929319646093:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value']
copynode -6.426678970456123:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index', 'index -> Literal', 'Literal -> value', 'value -> 0_ter', 'selectors -> End', 'member -> par0', 'root -> End']
copynode -6.2174639869481325:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.318863670501742:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.501545783132315:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> End']
copynode -6.485693853348494:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.460894661955535:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.376247171312571:  root modified ^ ReturnStatement expression BinaryOperation operator /_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.766357324246201:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.808215586468577:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.541497506201267:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value']
copynode -6.795239131897688:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.478115167468786:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -6.637665490779909:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.018824757236871:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.718503979194793:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -4.516238685697317:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -6.70306912495289:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MemberReference member par1 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.875043934371206:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.528205133974552:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'member -> meth0']
copynode -7.132636568669113:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.728790108114481:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0', 'operandr -> MemberReference']
copynode -7.163345985114574:  root modified ^ MemberReference-MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^  selectors ArraySelector index MemberReference member par0 ^ ^ ^ ^ ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index', 'index -> MemberReference', 'MemberReference -> member', 'member -> par0', 'selectors -> End', 'member -> par1', 'root -> End']
copynode -7.0819467371329665:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.96240433678031:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -4.516238685697317:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.507272721428308:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.110968497741851:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -7.05460512265563:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.1072348059824435:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> ReturnStatement']
copynode -7.10724775865674:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.946071680635214:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0', 'operandr -> MemberReference']
copynode -6.604435758665204:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name ArithmeticException_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -6.8314968310296535:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.036048109803232:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -4.96240433678031:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
before@11 batch0 x: -7.697502221912146: root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
after@11 batch0 x: -7.697502221912146: root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
copynode -4.700823675841093:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.137585484582814:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.181074287742376:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.238232464689645:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.810740690678358:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.930876186277601:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.5760718594974605:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.5760718594974605:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -5.768078060049447:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.238232464689645:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.289442470457288:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.445871846750379:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -5.137585484582814:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.202336889851722:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.285104762762785:  root modified ^ ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -4.700823675841093:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.149923916906118:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.473142589602503:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.541040229611099:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -6.591894526034594:  root modified ^ ReturnStatement expression BinaryOperation operator /_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.060411311686039:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -6.932726682323846:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -4.700823675841093:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.019691859022714:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MemberReference member par1 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MemberReference', 'MemberReference -> member', 'member -> par1', 'type -> =_ter']
copynode -7.157061073929071:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.181074287742376:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.768078060049447:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.218616725105676:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -7.2224233422166435:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.349617775529623:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.77620369118813:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.296231076281401:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.238232464689645:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.207636829465628:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -7.47189755924046:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name ArithmeticException_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.149923916906118:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -7.312078911811113:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -6.819645758718252:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.813377566635609:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -5.181074287742376:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.77620369118813:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
before@12 batch0 x: -7.594954668704304: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
after@12 batch0 x: -7.594954668704304: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.0684304647147655:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -5.5491865538060665:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -5.446431600648793:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -5.877576620478067:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement']
copynode -6.011961635202169:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -6.037367215540144:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -6.238939167160424:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -6.37323355783883:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> ReturnStatement']
copynode -6.405568570989999:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.4365708540863125:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.660364221781492:  root modified ^ ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -6.721231829375029:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -6.593312704164418:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> ReturnStatement']
copynode -6.780337031930685:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -6.498082062389585:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -6.607162309039268:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement']
copynode -6.564584547653794:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'start -> unknown']
copynode -6.991859871894121:  root modified ^ ReturnStatement expression BinaryOperation operator /_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -6.972825395874679:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -7.138199221342802:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.884667570862803:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement']
copynode -7.143722180859186:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MemberReference member par1 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MemberReference', 'MemberReference -> member', 'member -> par1', 'type -> =_ter', 'root -> End']
copynode -7.336206343024969:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -7.517758127301931:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter', 'root -> End']
copynode -7.546187397092581:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -7.564197447150946:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -7.35922393311921:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement']
copynode -7.206302259117365:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.522447306662798:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'start -> unknown']
copynode -5.446431600648793:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.508590550321969:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> ReturnStatement']
copynode -7.404621613372001:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> ReturnStatement']
copynode -7.5462105348706245:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -7.439283844083548:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.5133528877049685:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name ArithmeticException_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.564584547653794:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'member -> meth0']
copynode -6.037367215540144:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.877576620478067:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -7.447587072078022:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -7.594954668704304:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal']
before@13 batch0 x: -8.077187626782688: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal']
after@13 batch0 x: -8.077187626782688: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal']
copynode -5.617748030621442:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.057083265084657:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.273884257461759:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.454798774022493:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.58928603043023:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.601831943888101:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.619652972716722:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.764975615937146:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.791581293728086:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.969771320000291:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.886812878001365:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.1439433648920385:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.1247660694643855:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.584045086055994:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -7.602688264101744:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.566942454475793:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.668841869730386:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.8307146690785885:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -7.876477295532823:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -7.709952307093772:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.8521303702145815:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name ArithmeticException_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -6.1518951915204525:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'member -> meth0']
copynode -8.040841876689228:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -8.077187626782688:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value']
copynode -5.617748030621442:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement']
before@14 batch0 x: -8.290417679745588: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member par0 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement']
after@14 batch0 x: -8.290417679745588: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member par0 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -5.765592330295476:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.189161689180764:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.431964552190038:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.598006204862031:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.741407738227281:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.943509062912199:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.9233347262925236:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -5.765592330295476:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -6.753462375301751:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.765549407500657:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -7.051041019309196:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -5.765592330295476:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -7.309212411913904:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -7.387520539574325:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MemberReference ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'if_true -> MemberReference']
copynode -7.934955263510346:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name ArithmeticException_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'root -> End']
copynode -7.99006774649024:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -6.189161689180764:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -6.189161689180764:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -6.753462375301751:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -6.765549407500657:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
before@15 batch0 x: -8.11747454215947: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
after@15 batch0 x: -8.11747454215947: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -6.262289875347051:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.717270643610391:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.940980291154119:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.037696705359849:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.211858556765947:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.401247849848005:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.442537971932325:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.501625769931707:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.542416931290063:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.564337716597947:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.588165355075034:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.756661289531621:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -7.840046907935175:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.886198210529983:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'if_true -> MemberReference', 'MemberReference -> member']
copynode -8.008988172907266:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -8.037569792169961:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -8.07578414787713:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -8.11747454215947:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
before@16 batch0 x: -8.277055815953645: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
after@16 batch0 x: -8.277055815953645: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -6.314017449665698:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.779321012247237:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.993342911984655:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.08839646463457:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.257984400886926:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.4897015589958755:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.452068386759493:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.64859797169629:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.603393663812312:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.624674604434404:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.900755002323422:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.8775876398867695:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.314017449665698:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 1_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -8.02436715643853:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member par1 ^ ^ ^ ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'if_true -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.6001545723265735:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter']
copynode -7.6001545723265735:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -6.314017449665698:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -8.137662396926316:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par1']
before@17 batch0 x: -8.69966767837468: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member par1 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par1']
after@17 batch0 x: -8.69966767837468: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member par1 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.828323935318622:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -7.186022219408187:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -7.495677625920507:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -7.594962154675159:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -7.686773509878549:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -7.9195969897991745:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -7.954249618735048:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -8.015960739154252:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -8.053167124438914:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -8.085200772780809:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -8.273368670765194:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -8.376452469427022:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -8.405159627247485:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 1_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 1_ter', 'root -> End']
copynode -8.678541814137134:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> false_ter', 'root -> End']
copynode -8.69966767837468:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -8.432949834663305:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference']
copynode -8.41237762849778:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member par1 ^ ^ ^ ^ if_false MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'if_true -> MemberReference', 'MemberReference -> member', 'member -> par1', 'if_false -> MemberReference']
copynode -8.64622395594779:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference']
before@18 batch0 x: -9.340354734260472: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference']
after@18 batch0 x: -9.340354734260472: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference']
copynode -8.839456969100866:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -9.340354734260472:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -9.250787231139839:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member par1 ^ ^ ^ ^ if_false MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'if_true -> MemberReference', 'MemberReference -> member', 'member -> par1', 'if_false -> MemberReference', 'MemberReference -> member']
before@19 batch0 x: -9.409307512454689: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member par1 ^ ^ ^ ^ if_false MemberReference member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'if_true -> MemberReference', 'MemberReference -> member', 'member -> par1', 'if_false -> MemberReference', 'MemberReference -> member']
after@19 batch0 x: -9.409307512454689: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member par1 ^ ^ ^ ^ if_false MemberReference member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'if_true -> MemberReference', 'MemberReference -> member', 'member -> par1', 'if_false -> MemberReference', 'MemberReference -> member']
copynode -8.858262478534016:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -9.361727574068937:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -9.409307512454689:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member par1 ^ ^ ^ ^ if_false MemberReference member par2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'if_true -> MemberReference', 'MemberReference -> member', 'member -> par1', 'if_false -> MemberReference', 'MemberReference -> member', 'member -> par2']
before@20 batch0 x: -10.327219101600349: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member par1 ^ ^ ^ ^ if_false MemberReference member par2 ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'if_true -> MemberReference', 'MemberReference -> member', 'member -> par1', 'if_false -> MemberReference', 'MemberReference -> member', 'member -> par2']
after@20 batch0 x: -10.327219101600349: root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member par1 ^ ^ ^ ^ if_false MemberReference member par2 ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'if_true -> MemberReference', 'MemberReference -> member', 'member -> par1', 'if_false -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -9.248261897984776:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference']
copynode -10.327219101600349:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member par1 ^ ^ ^ ^ if_false MemberReference member par2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'if_true -> MemberReference', 'MemberReference -> member', 'member -> par1', 'if_false -> MemberReference', 'MemberReference -> member', 'member -> par2', 'root -> End']
copynode -9.79164514799777:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference']
before@21 batch0 x: -10.365229942995938: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference']
after@21 batch0 x: -10.365229942995938: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference']
copynode -9.874338477078709:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -10.365229942995938:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member']
before@22 batch0 x: -10.42159836103383: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member']
after@22 batch0 x: -10.42159836103383: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -9.922289728347096:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -10.42159836103383:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1']
before@23 batch0 x: -11.01297722866002: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1']
after@23 batch0 x: -11.01297722866002: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -10.477610825721058:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -11.01297722866002:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
6 val1_ter
6 val1_ter
6 val1_ter
6 val1_ter
6 val1_ter
6 val1_ter
6 val1_ter
6 val1_ter
6 val1_ter
6 val1_ter
6 val1_ter
6 val1_ter
6 val1_ter
6 val1_ter
6 val1_ter
6 val1_ter
6 val1_ter
method
val1_ter {'val1_ter': 'long', 'val2_ter': 'int', 'total_ter': 'long'}
7 long
6 val1_ter
6 val1_ter
6 val1_ter
method
7 
int  safeNegate 
int  safeAdd 
long  safeAdd 
long  safeSubtract 
int  safeMultiply 
long  safeMultiply 
long  safeMultiply 
int  safeToInt 
int  safeMultiplyToInt 
None  verifyValueBounds 
None  verifyValueBounds 
None  verifyValueBounds 
int  getWrappedValue 
int  getWrappedValue 
boolean  equals 
6 val1_ter
6 val1_ter
6 val1_ter
6 val1_ter
6 val1_ter
6 val1_ter
method
7 
int  safeNegate 
int  safeAdd 
long  safeAdd 
long  safeSubtract 
int  safeMultiply 
long  safeMultiply 
long  safeMultiply 
int  safeToInt 
int  safeMultiplyToInt 
None  verifyValueBounds 
None  verifyValueBounds 
None  verifyValueBounds 
int  getWrappedValue 
int  getWrappedValue 
boolean  equals 
method
7 
method
except
method
7 
int  safeNegate 
int  safeAdd 
long  safeAdd 
long  safeSubtract 
int  safeMultiply 
long  safeMultiply 
long  safeMultiply 
int  safeToInt 
int  safeMultiplyToInt 
None  verifyValueBounds 
None  verifyValueBounds 
None  verifyValueBounds 
int  getWrappedValue 
int  getWrappedValue 
boolean  equals 
method
7 
int  safeNegate 
int  safeAdd 
long  safeAdd 
long  safeSubtract 
int  safeMultiply 
long  safeMultiply 
long  safeMultiply 
int  safeToInt 
int  safeMultiplyToInt 
None  verifyValueBounds 
None  verifyValueBounds 
None  verifyValueBounds 
int  getWrappedValue 
int  getWrappedValue 
boolean  equals 
stderr: Check out 0cefc4c2 to /root/projects/Recoder-bwk/buggy/Time-15............. OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 0cefc4c2:383354ad..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Time-15b........................................ OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:12<00:00, 12.47s/it]100%|██████████| 1/1 [00:12<00:00, 12.47s/it]
