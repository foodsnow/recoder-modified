stdout: ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier pattern_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:pattern.append(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:appendTo.append(c);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier pos_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:pos.append(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member start_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:appendTo.append(start);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member START_FMT_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:appendTo.append(START_FMT);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member END_FE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:appendTo.append(END_FE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member START_FE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:appendTo.append(START_FE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:appendTo.append(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier start_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:start.append(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier c_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:c.append(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member appendTo_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:appendTo.append(appendTo);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ MemberReference member lastHold_ter ^ ^ ^ BinaryOperation operator -_ter ^ ^ operandl MethodInvocation qualifier pos_ter ^ ^ member getIndex_ter ^ ^ ^ ^ operandr MemberReference member lastHold_ter ^ ^ ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:appendTo.append(c, lastHold, (pos.getIndex() - lastHold));
BreakStatement_ter ^ 
break;

ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member pos_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:appendTo.append(pos);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member pattern_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:appendTo.append(pattern);
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo != null))?null:appendTo.append(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo >= null))?null:appendTo.append(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member ESCAPED_QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:appendTo.append(ESCAPED_QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member c_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((c == null))?null:appendTo.append(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member lastHold_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:appendTo.append(lastHold);
ReturnStatement expression BinaryOperation operator ==_ter ^ ^ operandl MemberReference selectors ArraySelector index MemberReference member start_ter ^ ^ ^ ^ ^ ^ member c_ter ^ ^ ^ ^ operandr MemberReference member QUOTE_ter ^ ^ ^ ^ ^ ^ ^ 
return (c[start] == QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member escapingOn_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:appendTo.append(escapingOn);
ReturnStatement expression TernaryExpression condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo <= null))?null:appendTo.append(QUOTE);
ReturnStatement expression MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ 
return appendTo.append(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((start == null))?null:appendTo.append(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo > null))?null:appendTo.append(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier i_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:i.append(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier lastHold_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:lastHold.append(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:appendTo.startsWith(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier ESCAPED_QUOTE_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:ESCAPED_QUOTE.append(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ MemberReference member lastHold_ter ^ ^ ^ BinaryOperation operator -_ter ^ ^ operandl MethodInvocation qualifier pos_ter ^ ^ member getIndex_ter ^ ^ ^ ^ operandr MemberReference member lastHold_ter ^ ^ ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
if (true) { return ((appendTo == null))?null:appendTo.append(c, lastHold, (pos.getIndex() - lastHold)); }

StatementExpression expression MethodInvocation arguments MemberReference member pos_ter ^ ^ ^ ^ member next_ter ^ ^ ^ ^ ^ 
next(pos);

ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?appendTo.append(QUOTE):appendTo.append(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MemberReference member QUOTE_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?QUOTE:appendTo.append(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator -_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo - null))?null:appendTo.append(QUOTE);
StatementExpression expression MethodInvocation qualifier appendTo_ter ^ ^ selectors MethodInvocation arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ arguments MemberReference member c_ter ^ ^ ^ MemberReference member lastHold_ter ^ ^ ^ BinaryOperation operator -_ter ^ ^ operandl MethodInvocation qualifier pos_ter ^ ^ member getIndex_ter ^ ^ ^ ^ operandr MemberReference member lastHold_ter ^ ^ ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ 
appendTo.append(c, lastHold, (pos.getIndex() - lastHold)).append(QUOTE);

ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member appendQuotedString_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:appendTo.appendQuotedString(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member toCharArray_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:appendTo.toCharArray(QUOTE);
StatementExpression expression Assignment expressionl MemberReference member lastHold_ter ^ ^ ^ ^ value MethodInvocation qualifier pos_ter ^ ^ member getIndex_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
lastHold = pos.getIndex();

ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MethodInvocation qualifier pos_ter ^ ^ member getIndex_ter ^ ^ ^ ^ operandr MemberReference member lastHold_ter ^ ^ ^ ^ ^ ^ ^ 
return (pos.getIndex() - lastHold);
ReturnStatement expression TernaryExpression condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo < null))?null:appendTo.append(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member pattern_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((pattern == null))?null:appendTo.append(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MemberReference member QUOTE_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:QUOTE;
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member setIndex_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:appendTo.setIndex(QUOTE);
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member pos_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((pos == null))?null:appendTo.append(QUOTE);
ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ 
if (true) { return null; }

ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member next_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?null:appendTo.next(QUOTE);
StatementExpression expression MethodInvocation qualifier pos_ter ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference member i_ter ^ ^ ^ ^ operandr MethodInvocation qualifier ESCAPED_QUOTE_ter ^ ^ member length_ter ^ ^ ^ ^ ^ ^ member setIndex_ter ^ ^ ^ ^ ^ 
pos.setIndex((i + ESCAPED_QUOTE.length()));

ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value false_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?false:appendTo.append(QUOTE);
BreakStatement_ter ^ 
BreakStatement_ter ^ 
break;
break;

ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value true_ter ^ ^ ^ ^ if_false MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null))?true:appendTo.append(QUOTE);
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member appendTo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier appendTo_ter ^ ^ arguments MemberReference member QUOTE_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ^ 
return ((appendTo == null) && appendTo.append(QUOTE));
stderr: 