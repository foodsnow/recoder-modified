stdout: else_statement -> BlockStatement
using GPU
p
path org.jfree.chart.plot.PiePlot
initialise
Position(line=2046, column=12)
FOUND IT!
path org.jfree.chart.plot.PiePlot
getMaximumExplodePercent
Position(line=1377, column=12)
FOUND IT!
[{'bugid': 'Chart-15', 'treeroot': <Searchnode.Node object at 0x7f8eb98a9d50>, 'troot': <Searchnode.Node object at 0x7f8eb98a9d50>, 'oldcode': '            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                    plot.getDataset()));', 'filepath': 'buggy/Chart-15/source/org/jfree/chart/plot/PiePlot.java', 'subroot': <Searchnode.Node object at 0x7f8eb98b6150>, 'vardic': {'initialise_ter': 'meth0', 'g2_ter': 'par0', 'plotArea_ter': 'par1', 'plot_ter': 'par2', 'index_ter': 'par3', 'info_ter': 'par4', 'state_ter': 'loc0'}, 'typedic': {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}, 'idss': 'Chart-15', 'classname': 'org.jfree.chart.plot.PiePlot', 'precode': '/* ===========================================================\n * JFreeChart : a free chart library for the Java(tm) platform\n * ===========================================================\n *\n * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors.\n *\n * Project Info:  http://www.jfree.org/jfreechart/index.html\n *\n * This library is free software; you can redistribute it and/or modify it \n * under the terms of the GNU Lesser General Public License as published by \n * the Free Software Foundation; either version 2.1 of the License, or \n * (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful, but \n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public \n * License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, \n * USA.  \n *\n * [Java is a trademark or registered trademark of Sun Microsystems, Inc. \n * in the United States and other countries.]\n *\n * ------------\n * PiePlot.java\n * ------------\n * (C) Copyright 2000-2008, by Andrzej Porebski and Contributors.\n *\n * Original Author:  Andrzej Porebski;\n * Contributor(s):   David Gilbert (for Object Refinery Limited);\n *                   Martin Cordova (percentages in labels);\n *                   Richard Atkinson (URL support for image maps);\n *                   Christian W. Zuckschwerdt;\n *                   Arnaud Lelievre;\n *                   Andreas Schroeder (very minor);\n *\n * Changes (from 21-Jun-2001)\n * --------------------------\n * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG);\n * 18-Sep-2001 : Updated header (DG);\n * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG);\n * 19-Oct-2001 : Moved series paint and stroke methods from JFreeChart.java to \n *               Plot.java (DG);\n * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG);\n * 13-Nov-2001 : Modified plot subclasses so that null axes are possible for \n *               pie plot (DG);\n * 17-Nov-2001 : Added PieDataset interface and amended this class accordingly,\n *               and completed removal of BlankAxis class as it is no longer \n *               required (DG);\n * 19-Nov-2001 : Changed \'drawCircle\' property to \'circular\' property (DG);\n * 21-Nov-2001 : Added options for exploding pie sections and filled out range \n *               of properties (DG);\n *               Added option for percentages in chart labels, based on code\n *               by Martin Cordova (DG);\n * 30-Nov-2001 : Changed default font from "Arial" --> "SansSerif" (DG);\n * 12-Dec-2001 : Removed unnecessary \'throws\' clause in constructor (DG);\n * 13-Dec-2001 : Added tooltips (DG);\n * 16-Jan-2002 : Renamed tooltips class (DG);\n * 22-Jan-2002 : Fixed bug correlating legend labels with pie data (DG);\n * 05-Feb-2002 : Added alpha-transparency to plot class, and updated \n *               constructors accordingly (DG);\n * 06-Feb-2002 : Added optional background image and alpha-transparency to Plot\n *               and subclasses.  Clipped drawing within plot area (DG);\n * 26-Mar-2002 : Added an empty zoom method (DG);\n * 18-Apr-2002 : PieDataset is no longer sorted (oldman);\n * 23-Apr-2002 : Moved dataset from JFreeChart to Plot.  Added \n *               getLegendItemLabels() method (DG);\n * 19-Jun-2002 : Added attributes to control starting angle and direction \n *               (default is now clockwise) (DG);\n * 25-Jun-2002 : Removed redundant imports (DG);\n * 02-Jul-2002 : Fixed sign of percentage bug introduced in 0.9.2 (DG);\n * 16-Jul-2002 : Added check for null dataset in getLegendItemLabels() (DG);\n * 30-Jul-2002 : Moved summation code to DatasetUtilities (DG);\n * 05-Aug-2002 : Added URL support for image maps - new member variable for\n *               urlGenerator, modified constructor and minor change to the \n *               draw method (RA);\n * 18-Sep-2002 : Modified the percent label creation and added setters for the\n *               formatters (AS);\n * 24-Sep-2002 : Added getLegendItems() method (DG);\n * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG);\n * 09-Oct-2002 : Added check for null entity collection (DG);\n * 30-Oct-2002 : Changed PieDataset interface (DG);\n * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG);\n * 02-Jan-2003 : Fixed "no data" message (DG);\n * 23-Jan-2003 : Modified to extract data from rows OR columns in \n *               CategoryDataset (DG);\n * 14-Feb-2003 : Fixed label drawing so that foreground alpha does not apply \n *               (bug id 685536) (DG);\n * 07-Mar-2003 : Modified to pass pieIndex on to PieSectionEntity and tooltip \n *               and URL generators (DG);\n * 21-Mar-2003 : Added a minimum angle for drawing arcs \n *               (see bug id 620031) (DG);\n * 24-Apr-2003 : Switched around PieDataset and KeyedValuesDataset (DG);\n * 02-Jun-2003 : Fixed bug 721733 (DG);\n * 30-Jul-2003 : Modified entity constructor (CZ);\n * 19-Aug-2003 : Implemented Cloneable (DG);\n * 29-Aug-2003 : Fixed bug 796936 (null pointer on setOutlinePaint()) (DG);\n * 08-Sep-2003 : Added internationalization via use of properties \n *               resourceBundle (RFE 690236) (AL);\n * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG);\n * 29-Oct-2003 : Added workaround for font alignment in PDF output (DG);\n * 05-Nov-2003 : Fixed missing legend bug (DG);\n * 10-Nov-2003 : Re-added the DatasetChangeListener to constructors (CZ);\n * 29-Jan-2004 : Fixed clipping bug in draw() method (DG);\n * 11-Mar-2004 : Major overhaul to improve labelling (DG);\n * 31-Mar-2004 : Made an adjustment for the plot area when the label generator \n *               is null.  Fixed null pointer exception when the label \n *               generator returns null for a label (DG);\n * 06-Apr-2004 : Added getter, setter, serialization and draw support for \n *               labelBackgroundPaint (AS);\n * 08-Apr-2004 : Added flag to control whether null values are ignored or \n *               not (DG);\n * 15-Apr-2004 : Fixed some minor warnings from Eclipse (DG);\n * 26-Apr-2004 : Added attributes for label outline and shadow (DG);\n * 04-Oct-2004 : Renamed ShapeUtils --> ShapeUtilities (DG);\n * 04-Nov-2004 : Fixed null pointer exception with new LegendTitle class (DG);\n * 09-Nov-2004 : Added user definable legend item shape (DG);\n * 25-Nov-2004 : Added new legend label generator (DG);\n * 20-Apr-2005 : Added a tool tip generator for legend labels (DG);\n * 26-Apr-2005 : Removed LOGGER (DG);\n * 05-May-2005 : Updated draw() method parameters (DG);\n * 10-May-2005 : Added flag to control visibility of label linking lines, plus\n *               another flag to control the handling of zero values (DG);\n * 08-Jun-2005 : Fixed bug in getLegendItems() method (not respecting flags\n *               for ignoring null and zero values), and fixed equals() method \n *               to handle GradientPaint (DG);\n * 15-Jul-2005 : Added sectionOutlinesVisible attribute (DG);\n * ------------- JFREECHART 1.0.x ---------------------------------------------\n * 09-Jan-2006 : Fixed bug 1400442, inconsistent treatment of null and zero\n *               values in dataset (DG);\n * 28-Feb-2006 : Fixed bug 1440415, bad distribution of pie section \n *               labels (DG);\n * 27-Sep-2006 : Initialised baseSectionPaint correctly, added lookup methods\n *               for section paint, outline paint and outline stroke (DG);\n * 27-Sep-2006 : Refactored paint and stroke methods to use keys rather than\n *               section indices (DG);\n * 03-Oct-2006 : Replaced call to JRE 1.5 method (DG);\n * 23-Nov-2006 : Added support for URLs for the legend items (DG);\n * 24-Nov-2006 : Cloning fixes (DG);\n * 17-Apr-2007 : Check for null label in legend items (DG);\n * 19-Apr-2007 : Deprecated override settings (DG);\n * 18-May-2007 : Set dataset for LegendItem (DG);\n * 14-Jun-2007 : Added label distributor attribute (DG);\n * 19-Jun-2007 : Removed deprecated code (DG);\n * 20-Jun-2007 : Removed JCommon dependencies (DG);\n * 18-Jul-2007 : Added simple label option (DG);\n * 21-Nov-2007 : Fixed labelling bugs, added debug code, restored default\n *               white background (DG); \n * 19-Mar-2008 : Fixed IllegalArgumentException when drawing with null \n *               dataset (DG);\n *    \n */\n\npackage org.jfree.chart.plot;\n\nimport java.awt.AlphaComposite;\nimport java.awt.BasicStroke;\nimport java.awt.Color;\nimport java.awt.Composite;\nimport java.awt.Font;\nimport java.awt.FontMetrics;\nimport java.awt.Graphics2D;\nimport java.awt.Paint;\nimport java.awt.Shape;\nimport java.awt.Stroke;\nimport java.awt.geom.Arc2D;\nimport java.awt.geom.Ellipse2D;\nimport java.awt.geom.Line2D;\nimport java.awt.geom.Point2D;\nimport java.awt.geom.Rectangle2D;\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.io.Serializable;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.ResourceBundle;\nimport java.util.TreeMap;\n\nimport org.jfree.chart.LegendItem;\nimport org.jfree.chart.LegendItemCollection;\nimport org.jfree.chart.PaintMap;\nimport org.jfree.chart.StrokeMap;\nimport org.jfree.chart.entity.EntityCollection;\nimport org.jfree.chart.entity.PieSectionEntity;\nimport org.jfree.chart.event.PlotChangeEvent;\nimport org.jfree.chart.labels.PieSectionLabelGenerator;\nimport org.jfree.chart.labels.PieToolTipGenerator;\nimport org.jfree.chart.labels.StandardPieSectionLabelGenerator;\nimport org.jfree.chart.text.G2TextMeasurer;\nimport org.jfree.chart.text.TextAnchor;\nimport org.jfree.chart.text.TextBlock;\nimport org.jfree.chart.text.TextBox;\nimport org.jfree.chart.text.TextUtilities;\nimport org.jfree.chart.urls.PieURLGenerator;\nimport org.jfree.chart.util.ObjectUtilities;\nimport org.jfree.chart.util.PaintUtilities;\nimport org.jfree.chart.util.PublicCloneable;\nimport org.jfree.chart.util.RectangleAnchor;\nimport org.jfree.chart.util.RectangleInsets;\nimport org.jfree.chart.util.Rotation;\nimport org.jfree.chart.util.SerialUtilities;\nimport org.jfree.chart.util.ShapeUtilities;\nimport org.jfree.chart.util.UnitType;\nimport org.jfree.data.DefaultKeyedValues;\nimport org.jfree.data.KeyedValues;\nimport org.jfree.data.general.DatasetChangeEvent;\nimport org.jfree.data.general.DatasetUtilities;\nimport org.jfree.data.general.PieDataset;\n\n/**\n * A plot that displays data in the form of a pie chart, using data from any \n * class that implements the {@link PieDataset} interface.\n * <P>\n * Special notes:\n * <ol>\n * <li>the default starting point is 12 o\'clock and the pie sections proceed\n * in a clockwise direction, but these settings can be changed;</li>\n * <li>negative values in the dataset are ignored;</li>\n * <li>there are utility methods for creating a {@link PieDataset} from a\n * {@link org.jfree.data.category.CategoryDataset};</li>\n * </ol>\n *\n * @see Plot\n * @see PieDataset\n */\npublic class PiePlot extends Plot implements Cloneable, Serializable {\n    \n    /** For serialization. */\n    private static final long serialVersionUID = -795612466005590431L;\n    \n    /** The default interior gap. */\n    public static final double DEFAULT_INTERIOR_GAP = 0.08;\n\n    /** The maximum interior gap (currently 40%). */\n    public static final double MAX_INTERIOR_GAP = 0.40;\n\n    /** The default starting angle for the pie chart. */\n    public static final double DEFAULT_START_ANGLE = 90.0;\n\n    /** The default section label font. */\n    public static final Font DEFAULT_LABEL_FONT = new Font("SansSerif", \n            Font.PLAIN, 10);\n\n    /** The default section label paint. */\n    public static final Paint DEFAULT_LABEL_PAINT = Color.black;\n    \n    /** The default section label background paint. */\n    public static final Paint DEFAULT_LABEL_BACKGROUND_PAINT = new Color(255, \n            255, 192);\n\n    /** The default section label outline paint. */\n    public static final Paint DEFAULT_LABEL_OUTLINE_PAINT = Color.black;\n    \n    /** The default section label outline stroke. */\n    public static final Stroke DEFAULT_LABEL_OUTLINE_STROKE = new BasicStroke(\n            0.5f);\n    \n    /** The default section label shadow paint. */\n    public static final Paint DEFAULT_LABEL_SHADOW_PAINT = new Color(151, 151, \n            151, 128);\n    \n    /** The default minimum arc angle to draw. */\n    public static final double DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW = 0.00001;\n\n    /** The dataset for the pie chart. */\n    private PieDataset dataset;\n\n    /** The pie index (used by the {@link MultiplePiePlot} class). */\n    private int pieIndex;\n\n    /** \n     * The amount of space left around the outside of the pie plot, expressed \n     * as a percentage of the plot area width and height. \n     */\n    private double interiorGap;\n\n    /** Flag determining whether to draw an ellipse or a perfect circle. */\n    private boolean circular;\n\n    /** The starting angle. */\n    private double startAngle;\n\n    /** The direction for the pie segments. */\n    private Rotation direction;\n\n    /** The section paint map. */\n    private PaintMap sectionPaintMap;\n\n    /** The base section paint (fallback). */\n    private transient Paint baseSectionPaint;\n\n    /** \n     * A flag that controls whether or not an outline is drawn for each\n     * section in the plot.\n     */\n    private boolean sectionOutlinesVisible;\n\n    /** The section outline paint map. */\n    private PaintMap sectionOutlinePaintMap;\n\n    /** The base section outline paint (fallback). */\n    private transient Paint baseSectionOutlinePaint;\n\n    /** The section outline stroke map. */\n    private StrokeMap sectionOutlineStrokeMap;\n\n    /** The base section outline stroke (fallback). */\n    private transient Stroke baseSectionOutlineStroke;\n\n    /** The shadow paint. */\n    private transient Paint shadowPaint = Color.gray;\n\n    /** The x-offset for the shadow effect. */\n    private double shadowXOffset = 4.0f;\n    \n    /** The y-offset for the shadow effect. */\n    private double shadowYOffset = 4.0f;\n    \n    /** The percentage amount to explode each pie section. */\n    private Map explodePercentages;\n    \n    /** The section label generator. */\n    private PieSectionLabelGenerator labelGenerator;\n\n    /** The font used to display the section labels. */\n    private Font labelFont;\n\n    /** The color used to draw the section labels. */\n    private transient Paint labelPaint;\n    \n    /** \n     * The color used to draw the background of the section labels.  If this\n     * is <code>null</code>, the background is not filled.\n     */\n    private transient Paint labelBackgroundPaint;\n\n    /** \n     * The paint used to draw the outline of the section labels \n     * (<code>null</code> permitted). \n     */\n    private transient Paint labelOutlinePaint;\n    \n    /** \n     * The stroke used to draw the outline of the section labels \n     * (<code>null</code> permitted). \n     */\n    private transient Stroke labelOutlineStroke;\n    \n    /** \n     * The paint used to draw the shadow for the section labels \n     * (<code>null</code> permitted). \n     */\n    private transient Paint labelShadowPaint;\n    \n    /**\n     * A flag that controls whether simple or extended labels are used.\n     * \n     * @since 1.0.7\n     */\n    private boolean simpleLabels = true;\n    \n    /**\n     * The padding between the labels and the label outlines.  This is not\n     * allowed to be <code>null</code>.\n     * \n     * @since 1.0.7\n     */\n    private RectangleInsets labelPadding;\n    \n    /**\n     * The simple label offset.\n     * \n     * @since 1.0.7\n     */\n    private RectangleInsets simpleLabelOffset;\n    \n    /** The maximum label width as a percentage of the plot width. */\n    private double maximumLabelWidth = 0.14;\n    \n    /** \n     * The gap between the labels and the link corner, as a percentage of the \n     * plot width. \n     */\n    private double labelGap = 0.025;\n\n    /** A flag that controls whether or not the label links are drawn. */\n    private boolean labelLinksVisible;\n    \n    /** The link margin. */\n    private double labelLinkMargin = 0.025;\n    \n    /** The paint used for the label linking lines. */\n    private transient Paint labelLinkPaint = Color.black;\n    \n    /** The stroke used for the label linking lines. */\n    private transient Stroke labelLinkStroke = new BasicStroke(0.5f);\n    \n    /** \n     * The pie section label distributor.\n     * \n     * @since 1.0.6\n     */\n    private AbstractPieLabelDistributor labelDistributor;\n    \n    /** The tooltip generator. */\n    private PieToolTipGenerator toolTipGenerator;\n\n    /** The URL generator. */\n    private PieURLGenerator urlGenerator;\n    \n    /** The legend label generator. */\n    private PieSectionLabelGenerator legendLabelGenerator;\n    \n    /** A tool tip generator for the legend. */\n    private PieSectionLabelGenerator legendLabelToolTipGenerator;\n    \n    /** \n     * A URL generator for the legend items (optional).  \n     *\n     * @since 1.0.4. \n     */\n    private PieURLGenerator legendLabelURLGenerator;\n    \n    /** \n     * A flag that controls whether <code>null</code> values are ignored.  \n     */\n    private boolean ignoreNullValues;\n    \n    /**\n     * A flag that controls whether zero values are ignored.\n     */\n    private boolean ignoreZeroValues;\n\n    /** The legend item shape. */\n    private transient Shape legendItemShape;\n    \n    /**\n     * The smallest arc angle that will get drawn (this is to avoid a bug in \n     * various Java implementations that causes the JVM to crash).  See this \n     * link for details:\n     *\n     * http://www.jfree.org/phpBB2/viewtopic.php?t=2707\n     *\n     * ...and this bug report in the Java Bug Parade:\n     *\n     * http://developer.java.sun.com/developer/bugParade/bugs/4836495.html\n     */\n    private double minimumArcAngleToDraw;\n\n    /** The resourceBundle for the localization. */\n    protected static ResourceBundle localizationResources =\n            ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");\n\n    /** \n     * This debug flag controls whether or not an outline is drawn showing the \n     * interior of the plot region.  This is drawn as a lightGray rectangle \n     * showing the padding provided by the \'interiorGap\' setting.\n     */\n    static final boolean DEBUG_DRAW_INTERIOR = false;\n    \n    /** \n     * This debug flag controls whether or not an outline is drawn showing the \n     * link area (in blue) and link ellipse (in yellow).  This controls where \n     * the label links have \'elbow\' points.\n     */\n    static final boolean DEBUG_DRAW_LINK_AREA = false;\n    \n    /**\n     * This debug flag controls whether or not an outline is drawn showing\n     * the pie area (in green).\n     */\n    static final boolean DEBUG_DRAW_PIE_AREA = false;\n    \n    /**\n     * Creates a new plot.  The dataset is initially set to <code>null</code>.\n     */\n    public PiePlot() {\n        this(null);\n    }\n\n    /**\n     * Creates a plot that will draw a pie chart for the specified dataset.\n     *\n     * @param dataset  the dataset (<code>null</code> permitted).\n     */\n    public PiePlot(PieDataset dataset) {\n        super();\n        this.dataset = dataset;\n        if (dataset != null) {\n            dataset.addChangeListener(this);\n        }\n        this.pieIndex = 0;\n        \n        this.interiorGap = DEFAULT_INTERIOR_GAP;\n        this.circular = true;\n        this.startAngle = DEFAULT_START_ANGLE;\n        this.direction = Rotation.CLOCKWISE;\n        this.minimumArcAngleToDraw = DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;\n\n        this.sectionPaintMap = new PaintMap();\n        this.baseSectionPaint = Color.gray;\n\n        this.sectionOutlinesVisible = true;\n        this.sectionOutlinePaintMap = new PaintMap();\n        this.baseSectionOutlinePaint = DEFAULT_OUTLINE_PAINT;\n\n        this.sectionOutlineStrokeMap = new StrokeMap();\n        this.baseSectionOutlineStroke = DEFAULT_OUTLINE_STROKE;\n        \n        this.explodePercentages = new TreeMap();\n\n        this.labelGenerator = new StandardPieSectionLabelGenerator();\n        this.labelFont = DEFAULT_LABEL_FONT;\n        this.labelPaint = DEFAULT_LABEL_PAINT;\n        this.labelBackgroundPaint = DEFAULT_LABEL_BACKGROUND_PAINT;\n        this.labelOutlinePaint = DEFAULT_LABEL_OUTLINE_PAINT;\n        this.labelOutlineStroke = DEFAULT_LABEL_OUTLINE_STROKE;\n        this.labelShadowPaint = DEFAULT_LABEL_SHADOW_PAINT;\n        this.labelLinksVisible = true;\n        this.labelDistributor = new PieLabelDistributor(0);\n        \n        this.simpleLabels = false;\n        this.simpleLabelOffset = new RectangleInsets(UnitType.RELATIVE, 0.18, \n                0.18, 0.18, 0.18);\n        this.labelPadding = new RectangleInsets(2, 2, 2, 2);\n        \n        this.toolTipGenerator = null;\n        this.urlGenerator = null;\n        this.legendLabelGenerator = new StandardPieSectionLabelGenerator();\n        this.legendLabelToolTipGenerator = null;\n        this.legendLabelURLGenerator = null;\n        this.legendItemShape = Plot.DEFAULT_LEGEND_ITEM_CIRCLE;\n        \n        this.ignoreNullValues = false;\n        this.ignoreZeroValues = false;\n    }\n\n    /**\n     * Returns the dataset.\n     *\n     * @return The dataset (possibly <code>null</code>).\n     * \n     * @see #setDataset(PieDataset)\n     */\n    public PieDataset getDataset() {\n        return this.dataset;\n    }\n\n    /**\n     * Sets the dataset and sends a {@link DatasetChangeEvent} to \'this\'.\n     *\n     * @param dataset  the dataset (<code>null</code> permitted).\n     * \n     * @see #getDataset()\n     */\n    public void setDataset(PieDataset dataset) {\n        // if there is an existing dataset, remove the plot from the list of \n        // change listeners...\n        PieDataset existing = this.dataset;\n        if (existing != null) {\n            existing.removeChangeListener(this);\n        }\n\n        // set the new dataset, and register the chart as a change listener...\n        this.dataset = dataset;\n        if (dataset != null) {\n            setDatasetGroup(dataset.getGroup());\n            dataset.addChangeListener(this);\n        }\n\n        // send a dataset change event to self...\n        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);\n        datasetChanged(event);\n    }\n    \n    /**\n     * Returns the pie index (this is used by the {@link MultiplePiePlot} class\n     * to track subplots).\n     * \n     * @return The pie index.\n     * \n     * @see #setPieIndex(int)\n     */\n    public int getPieIndex() {\n        return this.pieIndex;\n    }\n    \n    /**\n     * Sets the pie index (this is used by the {@link MultiplePiePlot} class to \n     * track subplots).\n     * \n     * @param index  the index.\n     * \n     * @see #getPieIndex()\n     */\n    public void setPieIndex(int index) {\n        this.pieIndex = index;\n    }\n    \n    /**\n     * Returns the start angle for the first pie section.  This is measured in \n     * degrees starting from 3 o\'clock and measuring anti-clockwise.\n     *\n     * @return The start angle.\n     * \n     * @see #setStartAngle(double)\n     */\n    public double getStartAngle() {\n        return this.startAngle;\n    }\n\n    /**\n     * Sets the starting angle and sends a {@link PlotChangeEvent} to all \n     * registered listeners.  The initial default value is 90 degrees, which \n     * corresponds to 12 o\'clock.  A value of zero corresponds to 3 o\'clock...\n     * this is the encoding used by Java\'s Arc2D class.\n     *\n     * @param angle  the angle (in degrees).\n     * \n     * @see #getStartAngle()\n     */\n    public void setStartAngle(double angle) {\n        this.startAngle = angle;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the direction in which the pie sections are drawn (clockwise or \n     * anti-clockwise).\n     *\n     * @return The direction (never <code>null</code>).\n     * \n     * @see #setDirection(Rotation)\n     */\n    public Rotation getDirection() {\n        return this.direction;\n    }\n\n    /**\n     * Sets the direction in which the pie sections are drawn and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     *\n     * @param direction  the direction (<code>null</code> not permitted).\n     * \n     * @see #getDirection()\n     */\n    public void setDirection(Rotation direction) {\n        if (direction == null) {\n            throw new IllegalArgumentException("Null \'direction\' argument.");\n        }\n        this.direction = direction;\n        notifyListeners(new PlotChangeEvent(this));\n\n    }\n\n    /**\n     * Returns the interior gap, measured as a percentage of the available \n     * drawing space.\n     *\n     * @return The gap (as a percentage of the available drawing space).\n     * \n     * @see #setInteriorGap(double)\n     */\n    public double getInteriorGap() {\n        return this.interiorGap;\n    }\n\n    /**\n     * Sets the interior gap and sends a {@link PlotChangeEvent} to all \n     * registered listeners.  This controls the space between the edges of the \n     * pie plot and the plot area itself (the region where the section labels \n     * appear).\n     *\n     * @param percent  the gap (as a percentage of the available drawing space).\n     * \n     * @see #getInteriorGap()\n     */\n    public void setInteriorGap(double percent) {\n\n        if ((percent < 0.0) || (percent > MAX_INTERIOR_GAP)) {\n            throw new IllegalArgumentException(\n                "Invalid \'percent\' (" + percent + ") argument.");\n        }\n\n        if (this.interiorGap != percent) {\n            this.interiorGap = percent;\n            notifyListeners(new PlotChangeEvent(this));\n        }\n\n    }\n\n    /**\n     * Returns a flag indicating whether the pie chart is circular, or\n     * stretched into an elliptical shape.\n     *\n     * @return A flag indicating whether the pie chart is circular.\n     * \n     * @see #setCircular(boolean)\n     */\n    public boolean isCircular() {\n        return this.circular;\n    }\n\n    /**\n     * A flag indicating whether the pie chart is circular, or stretched into\n     * an elliptical shape.\n     *\n     * @param flag  the new value.\n     * \n     * @see #isCircular()\n     */\n    public void setCircular(boolean flag) {\n        setCircular(flag, true);\n    }\n\n    /**\n     * Sets the circular attribute and, if requested, sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     *\n     * @param circular  the new value of the flag.\n     * @param notify  notify listeners?\n     * \n     * @see #isCircular()\n     */\n    public void setCircular(boolean circular, boolean notify) {\n        this.circular = circular;\n        if (notify) {\n            notifyListeners(new PlotChangeEvent(this));   \n        }\n    }\n\n    /**\n     * Returns the flag that controls whether <code>null</code> values in the \n     * dataset are ignored.  \n     * \n     * @return A boolean.\n     * \n     * @see #setIgnoreNullValues(boolean)\n     */\n    public boolean getIgnoreNullValues() {\n        return this.ignoreNullValues;   \n    }\n    \n    /**\n     * Sets a flag that controls whether <code>null</code> values are ignored, \n     * and sends a {@link PlotChangeEvent} to all registered listeners.  At \n     * present, this only affects whether or not the key is presented in the \n     * legend.\n     * \n     * @param flag  the flag.\n     * \n     * @see #getIgnoreNullValues()\n     * @see #setIgnoreZeroValues(boolean)\n     */\n    public void setIgnoreNullValues(boolean flag) {\n        this.ignoreNullValues = flag;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the flag that controls whether zero values in the \n     * dataset are ignored.  \n     * \n     * @return A boolean.\n     * \n     * @see #setIgnoreZeroValues(boolean)\n     */\n    public boolean getIgnoreZeroValues() {\n        return this.ignoreZeroValues;   \n    }\n    \n    /**\n     * Sets a flag that controls whether zero values are ignored, \n     * and sends a {@link PlotChangeEvent} to all registered listeners.  This \n     * only affects whether or not a label appears for the non-visible\n     * pie section.\n     * \n     * @param flag  the flag.\n     * \n     * @see #getIgnoreZeroValues()\n     * @see #setIgnoreNullValues(boolean)\n     */\n    public void setIgnoreZeroValues(boolean flag) {\n        this.ignoreZeroValues = flag;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    //// SECTION PAINT ////////////////////////////////////////////////////////\n\n    /**\n     * Returns the paint for the specified section.  This is equivalent to\n     * <code>lookupSectionPaint(section, false)</code>.\n     * \n     * @param key  the section key.\n     * \n     * @return The paint for the specified section.\n     * \n     * @since 1.0.3\n     * \n     * @see #lookupSectionPaint(Comparable, boolean)\n     */\n    protected Paint lookupSectionPaint(Comparable key) {\n        return lookupSectionPaint(key, false);        \n    }\n    \n    /**\n     * Returns the paint for the specified section.  The lookup involves these\n     * steps:\n     * <ul>\n     * <li>if {@link #getSectionPaint(Comparable)} is non-<code>null</code> \n     *         return it;</li>\n     * <li>if {@link #getSectionPaint(Comparable)} is <code>null</code> but \n     *         <code>autoPopulate</code> is <code>true</code>, attempt to fetch\n     *         a new paint from the drawing supplier \n     *         ({@link #getDrawingSupplier()});\n     * <li>if all else fails, return {@link #getBaseSectionPaint()}.\n     * </ul> \n     * \n     * @param key  the section key.\n     * @param autoPopulate  a flag that controls whether the drawing supplier \n     *     is used to auto-populate the section paint settings.\n     *     \n     * @return The paint.\n     * \n     * @since 1.0.3\n     */\n    protected Paint lookupSectionPaint(Comparable key, boolean autoPopulate) {\n        Paint result = null;\n        \n        // is a paint defined for the specified key\n        result = this.sectionPaintMap.getPaint(key);\n        if (result != null) {\n            return result;\n        }\n        \n        // nothing defined - do we autoPopulate?\n        if (autoPopulate) {\n            DrawingSupplier ds = getDrawingSupplier();\n            if (ds != null) {\n                result = ds.getNextPaint();\n                this.sectionPaintMap.put(key, result);\n            }\n            else {\n                result = this.baseSectionPaint;\n            }\n        }\n        else {\n            result = this.baseSectionPaint;\n        }\n        return result;\n    }\n    \n    /**\n     * Returns a key for the specified section.  If there is no such section \n     * in the dataset, we generate a key.  This is to provide some backward\n     * compatibility for the (now deprecated) methods that get/set attributes \n     * based on section indices.  The preferred way of doing this now is to\n     * link the attributes directly to the section key (there are new methods\n     * for this, starting from version 1.0.3).  \n     * \n     * @param section  the section index.\n     * \n     * @return The key.\n     *\n     * @since 1.0.3\n     */\n    protected Comparable getSectionKey(int section) {\n        Comparable key = null;\n        if (this.dataset != null) {\n            if (section >= 0 && section < this.dataset.getItemCount()) {\n                key = this.dataset.getKey(section);\n            }\n        }\n        if (key == null) {\n            key = new Integer(section);\n        }\n        return key;\n    }\n    \n    /**\n     * Returns the paint associated with the specified key, or \n     * <code>null</code> if there is no paint associated with the key.\n     * \n     * @param key  the key (<code>null</code> not permitted).\n     * \n     * @return The paint associated with the specified key, or \n     *     <code>null</code>.\n     *     \n     * @throws IllegalArgumentException if <code>key</code> is \n     *     <code>null</code>.\n     * \n     * @see #setSectionPaint(Comparable, Paint)\n     * \n     * @since 1.0.3\n     */\n    public Paint getSectionPaint(Comparable key) {\n        // null argument check delegated...\n        return this.sectionPaintMap.getPaint(key);\n    }\n    \n    /**\n     * Sets the paint associated with the specified key, and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param key  the key (<code>null</code> not permitted).\n     * @param paint  the paint.\n     * \n     * @throws IllegalArgumentException if <code>key</code> is \n     *     <code>null</code>.\n     *     \n     * @see #getSectionPaint(Comparable)\n     * \n     * @since 1.0.3\n     */\n    public void setSectionPaint(Comparable key, Paint paint) {\n        // null argument check delegated...\n        this.sectionPaintMap.put(key, paint);\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the base section paint.  This is used when no other paint is \n     * defined, which is rare.  The default value is <code>Color.gray</code>.\n     * \n     * @return The paint (never <code>null</code>).\n     * \n     * @see #setBaseSectionPaint(Paint)\n     */\n    public Paint getBaseSectionPaint() {\n        return this.baseSectionPaint;   \n    }\n    \n    /**\n     * Sets the base section paint and sends a {@link PlotChangeEvent} to all\n     * registered listeners.\n     * \n     * @param paint  the paint (<code>null</code> not permitted).\n     * \n     * @see #getBaseSectionPaint()\n     */\n    public void setBaseSectionPaint(Paint paint) {\n        if (paint == null) {\n            throw new IllegalArgumentException("Null \'paint\' argument.");   \n        }\n        this.baseSectionPaint = paint;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    //// SECTION OUTLINE PAINT ////////////////////////////////////////////////\n\n    /**\n     * Returns the flag that controls whether or not the outline is drawn for\n     * each pie section.\n     * \n     * @return The flag that controls whether or not the outline is drawn for\n     *         each pie section.\n     *         \n     * @see #setSectionOutlinesVisible(boolean)\n     */\n    public boolean getSectionOutlinesVisible() {\n        return this.sectionOutlinesVisible;\n    }\n    \n    /**\n     * Sets the flag that controls whether or not the outline is drawn for \n     * each pie section, and sends a {@link PlotChangeEvent} to all registered\n     * listeners.\n     * \n     * @param visible  the flag.\n     * \n     * @see #getSectionOutlinesVisible()\n     */\n    public void setSectionOutlinesVisible(boolean visible) {\n        this.sectionOutlinesVisible = visible;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the outline paint for the specified section.  This is equivalent \n     * to <code>lookupSectionPaint(section, false)</code>.\n     * \n     * @param key  the section key.\n     * \n     * @return The paint for the specified section.\n     * \n     * @since 1.0.3\n     * \n     * @see #lookupSectionOutlinePaint(Comparable, boolean)\n     */\n    protected Paint lookupSectionOutlinePaint(Comparable key) {\n        return lookupSectionOutlinePaint(key, false);        \n    }\n    \n    /**\n     * Returns the outline paint for the specified section.  The lookup \n     * involves these steps:\n     * <ul>\n     * <li>if {@link #getSectionOutlinePaint(Comparable)} is \n     *         non-<code>null</code> return it;</li>\n     * <li>if {@link #getSectionOutlinePaint(Comparable)} is \n     *         <code>null</code> but <code>autoPopulate</code> is \n     *         <code>true</code>, attempt to fetch a new outline paint from \n     *         the drawing supplier ({@link #getDrawingSupplier()});\n     * <li>if all else fails, return {@link #getBaseSectionOutlinePaint()}.\n     * </ul> \n     * \n     * @param key  the section key.\n     * @param autoPopulate  a flag that controls whether the drawing supplier \n     *     is used to auto-populate the section outline paint settings.\n     *     \n     * @return The paint.\n     * \n     * @since 1.0.3\n     */\n    protected Paint lookupSectionOutlinePaint(Comparable key, \n            boolean autoPopulate) {\n        \n        Paint result = null;\n        \n        // is a paint defined for the specified key\n        result = this.sectionOutlinePaintMap.getPaint(key);\n        if (result != null) {\n            return result;\n        }\n        \n        // nothing defined - do we autoPopulate?\n        if (autoPopulate) {\n            DrawingSupplier ds = getDrawingSupplier();\n            if (ds != null) {\n                result = ds.getNextOutlinePaint();\n                this.sectionOutlinePaintMap.put(key, result);\n            }\n            else {\n                result = this.baseSectionOutlinePaint;\n            }\n        }\n        else {\n            result = this.baseSectionOutlinePaint;\n        }\n        return result;\n    }\n\n    /**\n     * Returns the outline paint associated with the specified key, or \n     * <code>null</code> if there is no paint associated with the key.\n     * \n     * @param key  the key (<code>null</code> not permitted).\n     * \n     * @return The paint associated with the specified key, or \n     *     <code>null</code>.\n     *     \n     * @throws IllegalArgumentException if <code>key</code> is \n     *     <code>null</code>.\n     * \n     * @see #setSectionOutlinePaint(Comparable, Paint)\n     * \n     * @since 1.0.3\n     */\n    public Paint getSectionOutlinePaint(Comparable key) {\n        // null argument check delegated...\n        return this.sectionOutlinePaintMap.getPaint(key);\n    }\n    \n    /**\n     * Sets the outline paint associated with the specified key, and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param key  the key (<code>null</code> not permitted).\n     * @param paint  the paint.\n     * \n     * @throws IllegalArgumentException if <code>key</code> is \n     *     <code>null</code>.\n     *     \n     * @see #getSectionOutlinePaint(Comparable)\n     * \n     * @since 1.0.3\n     */\n    public void setSectionOutlinePaint(Comparable key, Paint paint) {\n        // null argument check delegated...\n        this.sectionOutlinePaintMap.put(key, paint);\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the base section paint.  This is used when no other paint is \n     * available.\n     * \n     * @return The paint (never <code>null</code>).\n     * \n     * @see #setBaseSectionOutlinePaint(Paint)\n     */\n    public Paint getBaseSectionOutlinePaint() {\n        return this.baseSectionOutlinePaint;   \n    }\n    \n    /**\n     * Sets the base section paint.\n     * \n     * @param paint  the paint (<code>null</code> not permitted).\n     * \n     * @see #getBaseSectionOutlinePaint()\n     */\n    public void setBaseSectionOutlinePaint(Paint paint) {\n        if (paint == null) {\n            throw new IllegalArgumentException("Null \'paint\' argument.");   \n        }\n        this.baseSectionOutlinePaint = paint;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    //// SECTION OUTLINE STROKE ///////////////////////////////////////////////\n\n    /**\n     * Returns the outline stroke for the specified section.  This is equivalent \n     * to <code>lookupSectionOutlineStroke(section, false)</code>.\n     * \n     * @param key  the section key.\n     * \n     * @return The stroke for the specified section.\n     * \n     * @since 1.0.3\n     * \n     * @see #lookupSectionOutlineStroke(Comparable, boolean)\n     */\n    protected Stroke lookupSectionOutlineStroke(Comparable key) {\n        return lookupSectionOutlineStroke(key, false);        \n    }\n    \n    /**\n     * Returns the outline stroke for the specified section.  The lookup \n     * involves these steps:\n     * <ul>\n     * <li>if {@link #getSectionOutlineStroke(Comparable)} is \n     *         non-<code>null</code> return it;</li>\n     * <li>if {@link #getSectionOutlineStroke(Comparable)} is \n     *         <code>null</code> but <code>autoPopulate</code> is \n     *         <code>true</code>, attempt to fetch a new outline stroke from \n     *         the drawing supplier ({@link #getDrawingSupplier()});\n     * <li>if all else fails, return {@link #getBaseSectionOutlineStroke()}.\n     * </ul> \n     * \n     * @param key  the section key.\n     * @param autoPopulate  a flag that controls whether the drawing supplier \n     *     is used to auto-populate the section outline stroke settings.\n     *     \n     * @return The stroke.\n     * \n     * @since 1.0.3\n     */\n    protected Stroke lookupSectionOutlineStroke(Comparable key, \n            boolean autoPopulate) {\n        \n        Stroke result = null;\n        \n        // is a stroke defined for the specified key\n        result = this.sectionOutlineStrokeMap.getStroke(key);\n        if (result != null) {\n            return result;\n        }\n        \n        // nothing defined - do we autoPopulate?\n        if (autoPopulate) {\n            DrawingSupplier ds = getDrawingSupplier();\n            if (ds != null) {\n                result = ds.getNextOutlineStroke();\n                this.sectionOutlineStrokeMap.put(key, result);\n            }\n            else {\n                result = this.baseSectionOutlineStroke;\n            }\n        }\n        else {\n            result = this.baseSectionOutlineStroke;\n        }\n        return result;\n    }\n    \n    /**\n     * Returns the outline stroke associated with the specified key, or \n     * <code>null</code> if there is no stroke associated with the key.\n     * \n     * @param key  the key (<code>null</code> not permitted).\n     * \n     * @return The stroke associated with the specified key, or \n     *     <code>null</code>.\n     *     \n     * @throws IllegalArgumentException if <code>key</code> is \n     *     <code>null</code>.\n     * \n     * @see #setSectionOutlineStroke(Comparable, Stroke)\n     * \n     * @since 1.0.3\n     */\n    public Stroke getSectionOutlineStroke(Comparable key) {\n        // null argument check delegated...\n        return this.sectionOutlineStrokeMap.getStroke(key);\n    }\n    \n    /**\n     * Sets the outline stroke associated with the specified key, and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param key  the key (<code>null</code> not permitted).\n     * @param stroke  the stroke.\n     * \n     * @throws IllegalArgumentException if <code>key</code> is \n     *     <code>null</code>.\n     *     \n     * @see #getSectionOutlineStroke(Comparable)\n     * \n     * @since 1.0.3\n     */\n    public void setSectionOutlineStroke(Comparable key, Stroke stroke) {\n        // null argument check delegated...\n        this.sectionOutlineStrokeMap.put(key, stroke);\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the base section stroke.  This is used when no other stroke is \n     * available.\n     * \n     * @return The stroke (never <code>null</code>).\n     * \n     * @see #setBaseSectionOutlineStroke(Stroke)\n     */\n    public Stroke getBaseSectionOutlineStroke() {\n        return this.baseSectionOutlineStroke;   \n    }\n    \n    /**\n     * Sets the base section stroke.\n     * \n     * @param stroke  the stroke (<code>null</code> not permitted).\n     * \n     * @see #getBaseSectionOutlineStroke()\n     */\n    public void setBaseSectionOutlineStroke(Stroke stroke) {\n        if (stroke == null) {\n            throw new IllegalArgumentException("Null \'stroke\' argument.");   \n        }\n        this.baseSectionOutlineStroke = stroke;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the shadow paint.\n     * \n     * @return The paint (possibly <code>null</code>).\n     * \n     * @see #setShadowPaint(Paint)\n     */\n    public Paint getShadowPaint() {\n        return this.shadowPaint;   \n    }\n    \n    /**\n     * Sets the shadow paint and sends a {@link PlotChangeEvent} to all \n     * registered listeners.\n     * \n     * @param paint  the paint (<code>null</code> permitted).\n     * \n     * @see #getShadowPaint()\n     */\n    public void setShadowPaint(Paint paint) {\n        this.shadowPaint = paint;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the x-offset for the shadow effect.\n     * \n     * @return The offset (in Java2D units).\n     * \n     * @see #setShadowXOffset(double)\n     */\n    public double getShadowXOffset() {\n        return this.shadowXOffset;\n    }\n    \n    /**\n     * Sets the x-offset for the shadow effect and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param offset  the offset (in Java2D units).\n     * \n     * @see #getShadowXOffset()\n     */\n    public void setShadowXOffset(double offset) {\n        this.shadowXOffset = offset;   \n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the y-offset for the shadow effect.\n     * \n     * @return The offset (in Java2D units).\n     * \n     * @see #setShadowYOffset(double)\n     */\n    public double getShadowYOffset() {\n        return this.shadowYOffset;\n    }\n    \n    /**\n     * Sets the y-offset for the shadow effect and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param offset  the offset (in Java2D units).\n     * \n     * @see #getShadowYOffset()\n     */\n    public void setShadowYOffset(double offset) {\n        this.shadowYOffset = offset;   \n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the amount that the section with the specified key should be\n     * exploded.\n     * \n     * @param key  the key (<code>null</code> not permitted).\n     * \n     * @return The amount that the section with the specified key should be\n     *     exploded.\n     * \n     * @throws IllegalArgumentException if <code>key</code> is \n     *     <code>null</code>.\n     *\n     * @since 1.0.3\n     * \n     * @see #setExplodePercent(Comparable, double)\n     */\n    public double getExplodePercent(Comparable key) {\n        double result = 0.0;\n        if (this.explodePercentages != null) {\n            Number percent = (Number) this.explodePercentages.get(key);\n            if (percent != null) {\n                result = percent.doubleValue();\n            }\n        }\n        return result;\n    }\n    \n    /**\n     * Sets the amount that a pie section should be exploded and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     *\n     * @param key  the section key (<code>null</code> not permitted).\n     * @param percent  the explode percentage (0.30 = 30 percent).\n     * \n     * @since 1.0.3\n     * \n     * @see #getExplodePercent(Comparable)\n     */\n    public void setExplodePercent(Comparable key, double percent) {\n        if (key == null) { \n            throw new IllegalArgumentException("Null \'key\' argument.");\n        }\n        if (this.explodePercentages == null) {\n            this.explodePercentages = new TreeMap();\n        }\n        this.explodePercentages.put(key, new Double(percent));\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the maximum explode percent.\n     * \n     * @return The percent.\n     */\n    public double getMaximumExplodePercent() {\n        double result = 0.0;\n        Iterator iterator = this.dataset.getKeys().iterator();\n        while (iterator.hasNext()) {\n            Comparable key = (Comparable) iterator.next();\n            Number explode = (Number) this.explodePercentages.get(key);\n            if (explode != null) {\n                result = Math.max(result, explode.doubleValue());   \n            }\n        }\n        return result;\n    }\n    \n    /**\n     * Returns the section label generator. \n     * \n     * @return The generator (possibly <code>null</code>).\n     * \n     * @see #setLabelGenerator(PieSectionLabelGenerator)\n     */\n    public PieSectionLabelGenerator getLabelGenerator() {\n        return this.labelGenerator;   \n    }\n    \n    /**\n     * Sets the section label generator and sends a {@link PlotChangeEvent} to\n     * all registered listeners.\n     * \n     * @param generator  the generator (<code>null</code> permitted).\n     * \n     * @see #getLabelGenerator()\n     */\n    public void setLabelGenerator(PieSectionLabelGenerator generator) {\n        this.labelGenerator = generator;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the gap between the edge of the pie and the labels, expressed as \n     * a percentage of the plot width.\n     * \n     * @return The gap (a percentage, where 0.05 = five percent).\n     * \n     * @see #setLabelGap(double)\n     */\n    public double getLabelGap() {\n        return this.labelGap;   \n    }\n    \n    /**\n     * Sets the gap between the edge of the pie and the labels (expressed as a \n     * percentage of the plot width) and sends a {@link PlotChangeEvent} to all\n     * registered listeners.\n     * \n     * @param gap  the gap (a percentage, where 0.05 = five percent).\n     * \n     * @see #getLabelGap()\n     */\n    public void setLabelGap(double gap) {\n        this.labelGap = gap;   \n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the maximum label width as a percentage of the plot width.\n     * \n     * @return The width (a percentage, where 0.20 = 20 percent).\n     * \n     * @see #setMaximumLabelWidth(double)\n     */\n    public double getMaximumLabelWidth() {\n        return this.maximumLabelWidth;   \n    }\n    \n    /**\n     * Sets the maximum label width as a percentage of the plot width and sends\n     * a {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param width  the width (a percentage, where 0.20 = 20 percent).\n     * \n     * @see #getMaximumLabelWidth()\n     */\n    public void setMaximumLabelWidth(double width) {\n        this.maximumLabelWidth = width;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the flag that controls whether or not label linking lines are\n     * visible.\n     * \n     * @return A boolean.\n     * \n     * @see #setLabelLinksVisible(boolean)\n     */\n    public boolean getLabelLinksVisible() {\n        return this.labelLinksVisible;\n    }\n    \n    /**\n     * Sets the flag that controls whether or not label linking lines are \n     * visible and sends a {@link PlotChangeEvent} to all registered listeners.\n     * Please take care when hiding the linking lines - depending on the data \n     * values, the labels can be displayed some distance away from the\n     * corresponding pie section.\n     * \n     * @param visible  the flag.\n     * \n     * @see #getLabelLinksVisible()\n     */\n    public void setLabelLinksVisible(boolean visible) {\n        this.labelLinksVisible = visible;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the margin (expressed as a percentage of the width or height) \n     * between the edge of the pie and the link point.\n     * \n     * @return The link margin (as a percentage, where 0.05 is five percent).\n     * \n     * @see #setLabelLinkMargin(double)\n     */\n    public double getLabelLinkMargin() {\n        return this.labelLinkMargin;   \n    }\n    \n    /**\n     * Sets the link margin and sends a {@link PlotChangeEvent} to all \n     * registered listeners.\n     * \n     * @param margin  the margin.\n     * \n     * @see #getLabelLinkMargin()\n     */\n    public void setLabelLinkMargin(double margin) {\n        this.labelLinkMargin = margin;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the paint used for the lines that connect pie sections to their \n     * corresponding labels.\n     * \n     * @return The paint (never <code>null</code>).\n     * \n     * @see #setLabelLinkPaint(Paint)\n     */\n    public Paint getLabelLinkPaint() {\n        return this.labelLinkPaint;   \n    }\n    \n    /**\n     * Sets the paint used for the lines that connect pie sections to their \n     * corresponding labels, and sends a {@link PlotChangeEvent} to all \n     * registered listeners.\n     * \n     * @param paint  the paint (<code>null</code> not permitted).\n     * \n     * @see #getLabelLinkPaint()\n     */\n    public void setLabelLinkPaint(Paint paint) {\n        if (paint == null) {\n            throw new IllegalArgumentException("Null \'paint\' argument.");\n        }\n        this.labelLinkPaint = paint;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the stroke used for the label linking lines.\n     * \n     * @return The stroke.\n     * \n     * @see #setLabelLinkStroke(Stroke)\n     */\n    public Stroke getLabelLinkStroke() {\n        return this.labelLinkStroke;   \n    }\n    \n    /**\n     * Sets the link stroke and sends a {@link PlotChangeEvent} to all \n     * registered listeners.\n     * \n     * @param stroke  the stroke.\n     * \n     * @see #getLabelLinkStroke()\n     */\n    public void setLabelLinkStroke(Stroke stroke) {\n        if (stroke == null) {\n            throw new IllegalArgumentException("Null \'stroke\' argument.");\n        }\n        this.labelLinkStroke = stroke;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the section label font.\n     *\n     * @return The font (never <code>null</code>).\n     * \n     * @see #setLabelFont(Font)\n     */\n    public Font getLabelFont() {\n        return this.labelFont;\n    }\n\n    /**\n     * Sets the section label font and sends a {@link PlotChangeEvent} to all \n     * registered listeners.\n     *\n     * @param font  the font (<code>null</code> not permitted).\n     * \n     * @see #getLabelFont()\n     */\n    public void setLabelFont(Font font) {\n        if (font == null) {\n            throw new IllegalArgumentException("Null \'font\' argument.");\n        }\n        this.labelFont = font;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the section label paint.\n     *\n     * @return The paint (never <code>null</code>).\n     * \n     * @see #setLabelPaint(Paint)\n     */\n    public Paint getLabelPaint() {\n        return this.labelPaint;\n    }\n\n    /**\n     * Sets the section label paint and sends a {@link PlotChangeEvent} to all \n     * registered listeners.\n     *\n     * @param paint  the paint (<code>null</code> not permitted).\n     * \n     * @see #getLabelPaint()\n     */\n    public void setLabelPaint(Paint paint) {\n        if (paint == null) {\n            throw new IllegalArgumentException("Null \'paint\' argument.");\n        }\n        this.labelPaint = paint;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the section label background paint.\n     *\n     * @return The paint (possibly <code>null</code>).\n     * \n     * @see #setLabelBackgroundPaint(Paint)\n     */\n    public Paint getLabelBackgroundPaint() {\n        return this.labelBackgroundPaint;\n    }\n\n    /**\n     * Sets the section label background paint and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     *\n     * @param paint  the paint (<code>null</code> permitted).\n     * \n     * @see #getLabelBackgroundPaint()\n     */\n    public void setLabelBackgroundPaint(Paint paint) {\n        this.labelBackgroundPaint = paint;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the section label outline paint.\n     *\n     * @return The paint (possibly <code>null</code>).\n     * \n     * @see #setLabelOutlinePaint(Paint)\n     */\n    public Paint getLabelOutlinePaint() {\n        return this.labelOutlinePaint;\n    }\n\n    /**\n     * Sets the section label outline paint and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     *\n     * @param paint  the paint (<code>null</code> permitted).\n     * \n     * @see #getLabelOutlinePaint()\n     */\n    public void setLabelOutlinePaint(Paint paint) {\n        this.labelOutlinePaint = paint;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the section label outline stroke.\n     *\n     * @return The stroke (possibly <code>null</code>).\n     * \n     * @see #setLabelOutlineStroke(Stroke)\n     */\n    public Stroke getLabelOutlineStroke() {\n        return this.labelOutlineStroke;\n    }\n\n    /**\n     * Sets the section label outline stroke and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     *\n     * @param stroke  the stroke (<code>null</code> permitted).\n     * \n     * @see #getLabelOutlineStroke()\n     */\n    public void setLabelOutlineStroke(Stroke stroke) {\n        this.labelOutlineStroke = stroke;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the section label shadow paint.\n     *\n     * @return The paint (possibly <code>null</code>).\n     * \n     * @see #setLabelShadowPaint(Paint)\n     */\n    public Paint getLabelShadowPaint() {\n        return this.labelShadowPaint;\n    }\n\n    /**\n     * Sets the section label shadow paint and sends a {@link PlotChangeEvent}\n     * to all registered listeners.\n     *\n     * @param paint  the paint (<code>null</code> permitted).\n     * \n     * @see #getLabelShadowPaint()\n     */\n    public void setLabelShadowPaint(Paint paint) {\n        this.labelShadowPaint = paint;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the label padding.\n     * \n     * @return The label padding (never <code>null</code>).\n     * \n     * @since 1.0.7\n     * \n     * @see #setLabelPadding(RectangleInsets)\n     */\n    public RectangleInsets getLabelPadding() {\n        return this.labelPadding;\n    }\n    \n    /**\n     * Sets the padding between each label and its outline and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param padding  the padding (<code>null</code> not permitted).\n     * \n     * @since 1.0.7\n     * \n     * @see #getLabelPadding()\n     */\n    public void setLabelPadding(RectangleInsets padding) {\n        if (padding == null) {\n            throw new IllegalArgumentException("Null \'padding\' argument.");\n        }\n        this.labelPadding = padding;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the flag that controls whether simple or extended labels are\n     * displayed on the plot.\n     * \n     * @return A boolean.\n     * \n     * @since 1.0.7\n     */\n    public boolean getSimpleLabels() {\n        return this.simpleLabels;\n    }\n    \n    /**\n     * Sets the flag that controls whether simple or extended labels are \n     * displayed on the plot, and sends a {@link PlotChangeEvent} to all \n     * registered listeners.\n     * \n     * @param simple  the new flag value.\n     * \n     * @since 1.0.7\n     */\n    public void setSimpleLabels(boolean simple) {\n        this.simpleLabels = simple;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the offset used for the simple labels, if they are displayed.\n     * \n     * @return The offset (never <code>null</code>).\n     * \n     * @since 1.0.7\n     * \n     * @see #setSimpleLabelOffset(RectangleInsets)\n     */\n    public RectangleInsets getSimpleLabelOffset() {\n        return this.simpleLabelOffset;\n    }\n    \n    /**\n     * Sets the offset for the simple labels and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param offset  the offset (<code>null</code> not permitted).\n     * \n     * @since 1.0.7\n     * \n     * @see #getSimpleLabelOffset()\n     */\n    public void setSimpleLabelOffset(RectangleInsets offset) {\n        if (offset == null) {\n            throw new IllegalArgumentException("Null \'offset\' argument.");\n        }\n        this.simpleLabelOffset = offset;\n        notifyListeners(new PlotChangeEvent(this));        \n    }\n    \n    /**\n     * Returns the object responsible for the vertical layout of the pie \n     * section labels.\n     * \n     * @return The label distributor (never <code>null</code>).\n     * \n     * @since 1.0.6\n     */\n    public AbstractPieLabelDistributor getLabelDistributor() {\n        return this.labelDistributor;\n    }\n    \n    /**\n     * Sets the label distributor and sends a {@link PlotChangeEvent} to all \n     * registered listeners.\n     * \n     * @param distributor  the distributor (<code>null</code> not permitted).\n     *\n     * @since 1.0.6\n     */\n    public void setLabelDistributor(AbstractPieLabelDistributor distributor) {\n        if (distributor == null) {\n            throw new IllegalArgumentException("Null \'distributor\' argument.");\n        }\n        this.labelDistributor = distributor;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the tool tip generator, an object that is responsible for \n     * generating the text items used for tool tips by the plot.  If the \n     * generator is <code>null</code>, no tool tips will be created.\n     *\n     * @return The generator (possibly <code>null</code>).\n     * \n     * @see #setToolTipGenerator(PieToolTipGenerator)\n     */\n    public PieToolTipGenerator getToolTipGenerator() {\n        return this.toolTipGenerator;\n    }\n\n    /**\n     * Sets the tool tip generator and sends a {@link PlotChangeEvent} to all \n     * registered listeners.  Set the generator to <code>null</code> if you \n     * don\'t want any tool tips.\n     *\n     * @param generator  the generator (<code>null</code> permitted).\n     * \n     * @see #getToolTipGenerator()\n     */\n    public void setToolTipGenerator(PieToolTipGenerator generator) {\n        this.toolTipGenerator = generator;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the URL generator.\n     *\n     * @return The generator (possibly <code>null</code>).\n     * \n     * @see #setURLGenerator(PieURLGenerator)\n     */\n    public PieURLGenerator getURLGenerator() {\n        return this.urlGenerator;\n    }\n\n    /**\n     * Sets the URL generator and sends a {@link PlotChangeEvent} to all \n     * registered listeners.\n     *\n     * @param generator  the generator (<code>null</code> permitted).\n     * \n     * @see #getURLGenerator()\n     */\n    public void setURLGenerator(PieURLGenerator generator) {\n        this.urlGenerator = generator;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the minimum arc angle that will be drawn.  Pie sections for an \n     * angle smaller than this are not drawn, to avoid a JDK bug.\n     *\n     * @return The minimum angle.\n     * \n     * @see #setMinimumArcAngleToDraw(double)\n     */\n    public double getMinimumArcAngleToDraw() {\n        return this.minimumArcAngleToDraw;\n    }\n\n    /**\n     * Sets the minimum arc angle that will be drawn.  Pie sections for an \n     * angle smaller than this are not drawn, to avoid a JDK bug.  See this \n     * link for details:\n     * <br><br>\n     * <a href="http://www.jfree.org/phpBB2/viewtopic.php?t=2707">\n     * http://www.jfree.org/phpBB2/viewtopic.php?t=2707</a>\n     * <br><br>\n     * ...and this bug report in the Java Bug Parade:\n     * <br><br>\n     * <a href=\n     * "http://developer.java.sun.com/developer/bugParade/bugs/4836495.html">\n     * http://developer.java.sun.com/developer/bugParade/bugs/4836495.html</a>\n     *\n     * @param angle  the minimum angle.\n     * \n     * @see #getMinimumArcAngleToDraw()\n     */\n    public void setMinimumArcAngleToDraw(double angle) {\n        this.minimumArcAngleToDraw = angle;\n    }\n    \n    /**\n     * Returns the shape used for legend items.\n     * \n     * @return The shape (never <code>null</code>).\n     * \n     * @see #setLegendItemShape(Shape)\n     */\n    public Shape getLegendItemShape() {\n        return this.legendItemShape;\n    }\n\n    /**\n     * Sets the shape used for legend items and sends a {@link PlotChangeEvent}\n     * to all registered listeners.\n     * \n     * @param shape  the shape (<code>null</code> not permitted).\n     * \n     * @see #getLegendItemShape()\n     */\n    public void setLegendItemShape(Shape shape) {\n        if (shape == null) {\n            throw new IllegalArgumentException("Null \'shape\' argument.");\n        }\n        this.legendItemShape = shape;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the legend label generator.\n     * \n     * @return The legend label generator (never <code>null</code>).\n     * \n     * @see #setLegendLabelGenerator(PieSectionLabelGenerator)\n     */\n    public PieSectionLabelGenerator getLegendLabelGenerator() {\n        return this.legendLabelGenerator;\n    }\n    \n    /**\n     * Sets the legend label generator and sends a {@link PlotChangeEvent} to \n     * all registered listeners.\n     * \n     * @param generator  the generator (<code>null</code> not permitted).\n     * \n     * @see #getLegendLabelGenerator()\n     */\n    public void setLegendLabelGenerator(PieSectionLabelGenerator generator) {\n        if (generator == null) {\n            throw new IllegalArgumentException("Null \'generator\' argument.");\n        }\n        this.legendLabelGenerator = generator;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the legend label tool tip generator.\n     * \n     * @return The legend label tool tip generator (possibly <code>null</code>).\n     * \n     * @see #setLegendLabelToolTipGenerator(PieSectionLabelGenerator)\n     */\n    public PieSectionLabelGenerator getLegendLabelToolTipGenerator() {\n        return this.legendLabelToolTipGenerator;\n    }\n    \n    /**\n     * Sets the legend label tool tip generator and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param generator  the generator (<code>null</code> permitted).\n     * \n     * @see #getLegendLabelToolTipGenerator()\n     */\n    public void setLegendLabelToolTipGenerator(\n            PieSectionLabelGenerator generator) {\n        this.legendLabelToolTipGenerator = generator;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the legend label URL generator.\n     * \n     * @return The legend label URL generator (possibly <code>null</code>).\n     * \n     * @see #setLegendLabelURLGenerator(PieURLGenerator)\n     * \n     * @since 1.0.4\n     */\n    public PieURLGenerator getLegendLabelURLGenerator() {\n        return this.legendLabelURLGenerator;\n    }\n    \n    /**\n     * Sets the legend label URL generator and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param generator  the generator (<code>null</code> permitted).\n     * \n     * @see #getLegendLabelURLGenerator()\n     * \n     * @since 1.0.4\n     */\n    public void setLegendLabelURLGenerator(PieURLGenerator generator) {\n        this.legendLabelURLGenerator = generator;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Initialises the drawing procedure.  This method will be called before \n     * the first item is rendered, giving the plot an opportunity to initialise\n     * any state information it wants to maintain.\n     *\n     * @param g2  the graphics device.\n     * @param plotArea  the plot area (<code>null</code> not permitted).\n     * @param plot  the plot.\n     * @param index  the secondary index (<code>null</code> for primary \n     *               renderer).\n     * @param info  collects chart rendering information for return to caller.\n     * \n     * @return A state object (maintains state information relevant to one \n     *         chart drawing).\n     */\n    public PiePlotState initialise(Graphics2D g2, Rectangle2D plotArea,\n            PiePlot plot, Integer index, PlotRenderingInfo info) {\n     \n        PiePlotState state = new PiePlotState(info);\n        state.setPassesRequired(2);', 'aftercode': '        state.setLatestAngle(plot.getStartAngle());\n        return state;\n        \n    }\n    \n    /**\n     * Draws the plot on a Java 2D graphics device (such as the screen or a \n     * printer).\n     *\n     * @param g2  the graphics device.\n     * @param area  the area within which the plot should be drawn.\n     * @param anchor  the anchor point (<code>null</code> permitted).\n     * @param parentState  the state from the parent plot, if there is one.\n     * @param info  collects info about the drawing \n     *              (<code>null</code> permitted).\n     */\n    public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,\n                     PlotState parentState, PlotRenderingInfo info) {\n\n        // adjust for insets...\n        RectangleInsets insets = getInsets();\n        insets.trim(area);\n\n        if (info != null) {\n            info.setPlotArea(area);\n            info.setDataArea(area);\n        }\n\n        drawBackground(g2, area);\n        drawOutline(g2, area);\n\n        Shape savedClip = g2.getClip();\n        g2.clip(area);\n\n        Composite originalComposite = g2.getComposite();\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, \n                getForegroundAlpha()));\n\n        if (!DatasetUtilities.isEmptyOrNull(this.dataset)) {\n            drawPie(g2, area, info);\n        }\n        else {\n            drawNoDataMessage(g2, area);\n        }\n\n        g2.setClip(savedClip);\n        g2.setComposite(originalComposite);\n\n        drawOutline(g2, area);\n\n    }\n\n    /**\n     * Draws the pie.\n     *\n     * @param g2  the graphics device.\n     * @param plotArea  the plot area.\n     * @param info  chart rendering info.\n     */\n    protected void drawPie(Graphics2D g2, Rectangle2D plotArea, \n                           PlotRenderingInfo info) {\n\n        PiePlotState state = initialise(g2, plotArea, this, null, info);\n\n        // adjust the plot area for interior spacing and labels...\n        double labelReserve = 0.0;\n        if (this.labelGenerator != null && !this.simpleLabels) {\n            labelReserve = this.labelGap + this.maximumLabelWidth;    \n        }\n        double gapHorizontal = plotArea.getWidth() * (this.interiorGap \n                + labelReserve) * 2.0;\n        double gapVertical = plotArea.getHeight() * this.interiorGap * 2.0;\n\n        \n        if (DEBUG_DRAW_INTERIOR) {\n            double hGap = plotArea.getWidth() * this.interiorGap;\n            double vGap = plotArea.getHeight() * this.interiorGap;\n        \n            double igx1 = plotArea.getX() + hGap;\n            double igx2 = plotArea.getMaxX() - hGap;\n            double igy1 = plotArea.getY() + vGap;\n            double igy2 = plotArea.getMaxY() - vGap;\n            g2.setPaint(Color.gray);\n            g2.draw(new Rectangle2D.Double(igx1, igy1, igx2 - igx1, \n                    igy2 - igy1));\n        }\n        \n        double linkX = plotArea.getX() + gapHorizontal / 2;\n        double linkY = plotArea.getY() + gapVertical / 2;\n        double linkW = plotArea.getWidth() - gapHorizontal;\n        double linkH = plotArea.getHeight() - gapVertical;\n        \n        // make the link area a square if the pie chart is to be circular...\n        if (this.circular) {\n            double min = Math.min(linkW, linkH) / 2;\n            linkX = (linkX + linkX + linkW) / 2 - min;\n            linkY = (linkY + linkY + linkH) / 2 - min;\n            linkW = 2 * min;\n            linkH = 2 * min;\n        }\n\n        // the link area defines the dog leg points for the linking lines to \n        // the labels\n        Rectangle2D linkArea = new Rectangle2D.Double(linkX, linkY, linkW, \n                linkH);\n        state.setLinkArea(linkArea);\n\n        if (DEBUG_DRAW_LINK_AREA) {\n            g2.setPaint(Color.blue);\n            g2.draw(linkArea);\n            g2.setPaint(Color.yellow);\n            g2.draw(new Ellipse2D.Double(linkArea.getX(), linkArea.getY(), \n                    linkArea.getWidth(), linkArea.getHeight()));\n        }\n        \n        // the explode area defines the max circle/ellipse for the exploded \n        // pie sections.  it is defined by shrinking the linkArea by the \n        // linkMargin factor.\n        double lm = 0.0;\n        if (!this.simpleLabels) {\n            lm = this.labelLinkMargin;\n        }\n        double hh = linkArea.getWidth() * lm * 2.0;\n        double vv = linkArea.getHeight() * lm * 2.0;\n        Rectangle2D explodeArea = new Rectangle2D.Double(linkX + hh / 2.0, \n                linkY + vv / 2.0, linkW - hh, linkH - vv);\n       \n        state.setExplodedPieArea(explodeArea);\n        \n        // the pie area defines the circle/ellipse for regular pie sections.\n        // it is defined by shrinking the explodeArea by the explodeMargin \n        // factor. \n        double maximumExplodePercent = getMaximumExplodePercent();\n        double percent = maximumExplodePercent / (1.0 + maximumExplodePercent);\n        \n        double h1 = explodeArea.getWidth() * percent;\n        double v1 = explodeArea.getHeight() * percent;\n        Rectangle2D pieArea = new Rectangle2D.Double(explodeArea.getX() \n                + h1 / 2.0, explodeArea.getY() + v1 / 2.0, \n                explodeArea.getWidth() - h1, explodeArea.getHeight() - v1);\n\n        if (DEBUG_DRAW_PIE_AREA) {\n            g2.setPaint(Color.green);\n            g2.draw(pieArea);\n        }\n        state.setPieArea(pieArea);\n        state.setPieCenterX(pieArea.getCenterX());\n        state.setPieCenterY(pieArea.getCenterY());\n        state.setPieWRadius(pieArea.getWidth() / 2.0);\n        state.setPieHRadius(pieArea.getHeight() / 2.0);\n        \n        // plot the data (unless the dataset is null)...\n        if ((this.dataset != null) && (this.dataset.getKeys().size() > 0)) {\n\n            List keys = this.dataset.getKeys();\n            double totalValue = DatasetUtilities.calculatePieDatasetTotal(\n                    this.dataset);\n\n            int passesRequired = state.getPassesRequired();\n            for (int pass = 0; pass < passesRequired; pass++) {\n                double runningTotal = 0.0;\n                for (int section = 0; section < keys.size(); section++) {\n                    Number n = this.dataset.getValue(section);\n                    if (n != null) {\n                        double value = n.doubleValue();\n                        if (value > 0.0) {\n                            runningTotal += value;\n                            drawItem(g2, section, explodeArea, state, pass);\n                        }\n                    } \n                }\n            }\n            if (this.simpleLabels) {\n                drawSimpleLabels(g2, keys, totalValue, plotArea, linkArea, \n                        state);\n            }\n            else {\n                drawLabels(g2, keys, totalValue, plotArea, linkArea, state);\n            }\n\n        }\n        else {\n            drawNoDataMessage(g2, plotArea);\n        }\n    }\n    \n    /**\n     * Draws a single data item.\n     *\n     * @param g2  the graphics device (<code>null</code> not permitted).\n     * @param section  the section index.\n     * @param dataArea  the data plot area.\n     * @param state  state information for one chart.\n     * @param currentPass  the current pass index.\n     */\n    protected void drawItem(Graphics2D g2, int section, Rectangle2D dataArea,\n                            PiePlotState state, int currentPass) {\n    \n        Number n = this.dataset.getValue(section);\n        if (n == null) {\n            return;   \n        }\n        double value = n.doubleValue();\n        double angle1 = 0.0;\n        double angle2 = 0.0;\n        \n        if (this.direction == Rotation.CLOCKWISE) {\n            angle1 = state.getLatestAngle();\n            angle2 = angle1 - value / state.getTotal() * 360.0;\n        }\n        else if (this.direction == Rotation.ANTICLOCKWISE) {\n            angle1 = state.getLatestAngle();\n            angle2 = angle1 + value / state.getTotal() * 360.0;         \n        }\n        else {\n            throw new IllegalStateException("Rotation type not recognised.");   \n        }\n        \n        double angle = (angle2 - angle1);\n        if (Math.abs(angle) > getMinimumArcAngleToDraw()) {\n            double ep = 0.0;\n            double mep = getMaximumExplodePercent();\n            if (mep > 0.0) {\n                ep = getExplodePercent(getSectionKey(section)) / mep;                \n            }\n            Rectangle2D arcBounds = getArcBounds(state.getPieArea(), \n                    state.getExplodedPieArea(), angle1, angle, ep);\n            Arc2D.Double arc = new Arc2D.Double(arcBounds, angle1, angle, \n                    Arc2D.PIE);\n            \n            if (currentPass == 0) {\n                if (this.shadowPaint != null) {\n                    Shape shadowArc = ShapeUtilities.createTranslatedShape(\n                            arc, (float) this.shadowXOffset, \n                            (float) this.shadowYOffset);\n                    g2.setPaint(this.shadowPaint);\n                    g2.fill(shadowArc);\n                }\n            }\n            else if (currentPass == 1) {\n                Comparable key = getSectionKey(section);\n                Paint paint = lookupSectionPaint(key, true);\n                g2.setPaint(paint);\n                g2.fill(arc);\n\n                Paint outlinePaint = lookupSectionOutlinePaint(key);\n                Stroke outlineStroke = lookupSectionOutlineStroke(key);\n                if (this.sectionOutlinesVisible) {\n                    g2.setPaint(outlinePaint);\n                    g2.setStroke(outlineStroke);\n                    g2.draw(arc);\n                }\n                \n                // update the linking line target for later\n                // add an entity for the pie section\n                if (state.getInfo() != null) {\n                    EntityCollection entities = state.getEntityCollection();\n                    if (entities != null) {\n                        String tip = null;\n                        if (this.toolTipGenerator != null) {\n                            tip = this.toolTipGenerator.generateToolTip(\n                                    this.dataset, key);\n                        }\n                        String url = null;\n                        if (this.urlGenerator != null) {\n                            url = this.urlGenerator.generateURL(this.dataset, \n                                    key, this.pieIndex);\n                        }\n                        PieSectionEntity entity = new PieSectionEntity(\n                                arc, this.dataset, this.pieIndex, section, key,\n                                tip, url);\n                        entities.add(entity);\n                    }\n                }\n            }\n        }    \n        state.setLatestAngle(angle2);\n    }\n    \n    /**\n     * Draws the pie section labels in the simple form.\n     * \n     * @param g2  the graphics device.\n     * @param keys  the section keys.\n     * @param totalValue  the total value for all sections in the pie.\n     * @param plotArea  the plot area.\n     * @param pieArea  the area containing the pie.\n     * @param state  the plot state.\n     *\n     * @since 1.0.7\n     */\n    protected void drawSimpleLabels(Graphics2D g2, List keys, \n            double totalValue, Rectangle2D plotArea, Rectangle2D pieArea, \n            PiePlotState state) {\n        \n        Composite originalComposite = g2.getComposite();\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, \n                1.0f));\n\n        RectangleInsets labelInsets = new RectangleInsets(UnitType.RELATIVE, \n                0.18, 0.18, 0.18, 0.18);\n        Rectangle2D labelsArea = labelInsets.createInsetRectangle(pieArea);\n        double runningTotal = 0.0;\n        Iterator iterator = keys.iterator();\n        while (iterator.hasNext()) {\n            Comparable key = (Comparable) iterator.next();\n            boolean include = true;\n            double v = 0.0;\n            Number n = getDataset().getValue(key);\n            if (n == null) {\n                include = !getIgnoreNullValues();\n            }\n            else {\n                v = n.doubleValue();\n                include = getIgnoreZeroValues() ? v > 0.0 : v >= 0.0;\n            }\n\n            if (include) {\n                runningTotal = runningTotal + v;\n                // work out the mid angle (0 - 90 and 270 - 360) = right, \n                // otherwise left\n                double mid = getStartAngle() + (getDirection().getFactor()\n                        * ((runningTotal - v / 2.0) * 360) / totalValue);\n                \n                Arc2D arc = new Arc2D.Double(labelsArea, getStartAngle(), \n                        mid - getStartAngle(), Arc2D.OPEN);\n                int x = (int) arc.getEndPoint().getX();\n                int y = (int) arc.getEndPoint().getY();\n                \n                PieSectionLabelGenerator labelGenerator = getLabelGenerator();\n                if (labelGenerator == null) {\n                    continue;\n                }\n                String label = labelGenerator.generateSectionLabel(\n                        this.dataset, key);\n                if (label == null) {\n                    continue;\n                }\n                g2.setFont(this.labelFont);\n                FontMetrics fm = g2.getFontMetrics();\n                Rectangle2D bounds = TextUtilities.getTextBounds(label, g2, fm);\n                Rectangle2D out = this.labelPadding.createOutsetRectangle(\n                        bounds);\n                Shape bg = ShapeUtilities.createTranslatedShape(out, \n                        x - bounds.getCenterX(), y - bounds.getCenterY());\n                if (this.labelShadowPaint != null) {\n                    Shape shadow = ShapeUtilities.createTranslatedShape(bg, \n                            this.shadowXOffset, this.shadowYOffset);\n                    g2.setPaint(this.labelShadowPaint);\n                    g2.fill(shadow);\n                }\n                if (this.labelBackgroundPaint != null) {\n                    g2.setPaint(this.labelBackgroundPaint);\n                    g2.fill(bg);\n                }\n                if (this.labelOutlinePaint != null \n                        && this.labelOutlineStroke != null) {\n                    g2.setPaint(this.labelOutlinePaint);\n                    g2.setStroke(this.labelOutlineStroke);\n                    g2.draw(bg);\n                }\n                \n                g2.setPaint(this.labelPaint);\n                g2.setFont(this.labelFont);\n                TextUtilities.drawAlignedString(getLabelGenerator()\n                        .generateSectionLabel(getDataset(), key), g2, x, y, \n                        TextAnchor.CENTER);\n                \n            }\n        }\n       \n        g2.setComposite(originalComposite);\n\n    }\n\n    /**\n     * Draws the labels for the pie sections.\n     * \n     * @param g2  the graphics device.\n     * @param keys  the keys.\n     * @param totalValue  the total value.\n     * @param plotArea  the plot area.\n     * @param linkArea  the link area.\n     * @param state  the state.\n     */\n    protected void drawLabels(Graphics2D g2, List keys, double totalValue, \n                              Rectangle2D plotArea, Rectangle2D linkArea, \n                              PiePlotState state) {   \n\n        Composite originalComposite = g2.getComposite();\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, \n                1.0f));\n\n        // classify the keys according to which side the label will appear...\n        DefaultKeyedValues leftKeys = new DefaultKeyedValues();\n        DefaultKeyedValues rightKeys = new DefaultKeyedValues();\n       \n        double runningTotal = 0.0;\n        Iterator iterator = keys.iterator();\n        while (iterator.hasNext()) {\n            Comparable key = (Comparable) iterator.next();\n            boolean include = true;\n            double v = 0.0;\n            Number n = this.dataset.getValue(key);\n            if (n == null) {\n                include = !this.ignoreNullValues;\n            }\n            else {\n                v = n.doubleValue();\n                include = this.ignoreZeroValues ? v > 0.0 : v >= 0.0;\n            }\n\n            if (include) {\n                runningTotal = runningTotal + v;\n                // work out the mid angle (0 - 90 and 270 - 360) = right, \n                // otherwise left\n                double mid = this.startAngle + (this.direction.getFactor()\n                        * ((runningTotal - v / 2.0) * 360) / totalValue);\n                if (Math.cos(Math.toRadians(mid)) < 0.0) {\n                    leftKeys.addValue(key, new Double(mid));\n                }\n                else {\n                    rightKeys.addValue(key, new Double(mid));\n                }\n            }\n        }\n       \n        g2.setFont(getLabelFont());\n        \n        // calculate the max label width from the plot dimensions, because\n        // a circular pie can leave a lot more room for labels...\n        double marginX = plotArea.getX() + this.interiorGap * plotArea.getWidth();\n        double gap = plotArea.getWidth() * this.labelGap;\n        double ww = linkArea.getX() - gap - marginX;\n        float labelWidth = (float) this.labelPadding.trimWidth(ww);\n        \n        // draw the labels...\n        if (this.labelGenerator != null) {\n            drawLeftLabels(leftKeys, g2, plotArea, linkArea, labelWidth, \n                    state);\n            drawRightLabels(rightKeys, g2, plotArea, linkArea, labelWidth, \n                    state);\n        }\n        g2.setComposite(originalComposite);\n\n    }\n\n    /**\n     * Draws the left labels.\n     * \n     * @param leftKeys  a collection of keys and angles (to the middle of the\n     *         section, in degrees) for the sections on the left side of the \n     *         plot.\n     * @param g2  the graphics device.\n     * @param plotArea  the plot area.\n     * @param linkArea  the link area.\n     * @param maxLabelWidth  the maximum label width.\n     * @param state  the state.\n     */\n    protected void drawLeftLabels(KeyedValues leftKeys, Graphics2D g2, \n                                  Rectangle2D plotArea, Rectangle2D linkArea, \n                                  float maxLabelWidth, PiePlotState state) {\n        \n        this.labelDistributor.clear();\n        double lGap = plotArea.getWidth() * this.labelGap;\n        double verticalLinkRadius = state.getLinkArea().getHeight() / 2.0;\n        for (int i = 0; i < leftKeys.getItemCount(); i++) {   \n            String label = this.labelGenerator.generateSectionLabel(\n                    this.dataset, leftKeys.getKey(i));\n            if (label != null) {\n                TextBlock block = TextUtilities.createTextBlock(label, \n                        this.labelFont, this.labelPaint, maxLabelWidth, \n                        new G2TextMeasurer(g2));\n                TextBox labelBox = new TextBox(block);\n                labelBox.setBackgroundPaint(this.labelBackgroundPaint);\n                labelBox.setOutlinePaint(this.labelOutlinePaint);\n                labelBox.setOutlineStroke(this.labelOutlineStroke);\n                labelBox.setShadowPaint(this.labelShadowPaint);\n                labelBox.setInteriorGap(this.labelPadding);\n                double theta = Math.toRadians(\n                        leftKeys.getValue(i).doubleValue());\n                double baseY = state.getPieCenterY() - Math.sin(theta) \n                               * verticalLinkRadius;\n                double hh = labelBox.getHeight(g2);\n\n                this.labelDistributor.addPieLabelRecord(new PieLabelRecord(\n                        leftKeys.getKey(i), theta, baseY, labelBox, hh,\n                        lGap / 2.0 + lGap / 2.0 * -Math.cos(theta), 0.9 \n                        + getExplodePercent(leftKeys.getKey(i))));\n            }\n        }\n        this.labelDistributor.distributeLabels(plotArea.getMinY(), \n                plotArea.getHeight());\n        for (int i = 0; i < this.labelDistributor.getItemCount(); i++) {\n            drawLeftLabel(g2, state, \n                    this.labelDistributor.getPieLabelRecord(i));\n        }\n    }\n    \n    /**\n     * Draws the right labels.\n     * \n     * @param keys  the keys.\n     * @param g2  the graphics device.\n     * @param plotArea  the plot area.\n     * @param linkArea  the link area.\n     * @param maxLabelWidth  the maximum label width.\n     * @param state  the state.\n     */\n    protected void drawRightLabels(KeyedValues keys, Graphics2D g2, \n                                   Rectangle2D plotArea, Rectangle2D linkArea, \n                                   float maxLabelWidth, PiePlotState state) {\n\n        // draw the right labels...\n        this.labelDistributor.clear();\n        double lGap = plotArea.getWidth() * this.labelGap;\n        double verticalLinkRadius = state.getLinkArea().getHeight() / 2.0;\n\n        for (int i = 0; i < keys.getItemCount(); i++) {\n            String label = this.labelGenerator.generateSectionLabel(\n                    this.dataset, keys.getKey(i));\n\n            if (label != null) {\n                TextBlock block = TextUtilities.createTextBlock(label, \n                        this.labelFont, this.labelPaint, maxLabelWidth, \n                        new G2TextMeasurer(g2));\n                TextBox labelBox = new TextBox(block);\n                labelBox.setBackgroundPaint(this.labelBackgroundPaint);\n                labelBox.setOutlinePaint(this.labelOutlinePaint);\n                labelBox.setOutlineStroke(this.labelOutlineStroke);\n                labelBox.setShadowPaint(this.labelShadowPaint);\n                labelBox.setInteriorGap(this.labelPadding);\n                double theta = Math.toRadians(keys.getValue(i).doubleValue());\n                double baseY = state.getPieCenterY() \n                              - Math.sin(theta) * verticalLinkRadius;\n                double hh = labelBox.getHeight(g2);\n                this.labelDistributor.addPieLabelRecord(new PieLabelRecord(\n                        keys.getKey(i), theta, baseY, labelBox, hh,\n                        lGap / 2.0 + lGap / 2.0 * Math.cos(theta), \n                        0.9 + getExplodePercent(keys.getKey(i))));\n            }\n        }\n        this.labelDistributor.distributeLabels(plotArea.getMinY(), \n                plotArea.getHeight());\n        for (int i = 0; i < this.labelDistributor.getItemCount(); i++) {\n            drawRightLabel(g2, state, \n                    this.labelDistributor.getPieLabelRecord(i));\n        }\n\n    }\n    \n    /**\n     * Returns a collection of legend items for the pie chart.\n     *\n     * @return The legend items (never <code>null</code>).\n     */\n    public LegendItemCollection getLegendItems() {\n\n        LegendItemCollection result = new LegendItemCollection();\n        if (this.dataset == null) {\n            return result;\n        }\n        List keys = this.dataset.getKeys();\n        int section = 0;\n        Shape shape = getLegendItemShape();\n        Iterator iterator = keys.iterator();\n        while (iterator.hasNext()) {\n            Comparable key = (Comparable) iterator.next();\n            Number n = this.dataset.getValue(key);\n            boolean include = true;\n            if (n == null) {\n                include = !this.ignoreNullValues;   \n            }\n            else {\n                double v = n.doubleValue();\n                if (v == 0.0) {\n                    include = !this.ignoreZeroValues;   \n                }\n                else {\n                    include = v > 0.0;   \n                }\n            }\n            if (include) {\n                String label = this.legendLabelGenerator.generateSectionLabel(\n                        this.dataset, key);\n                if (label != null) {\n                    String description = label;\n                    String toolTipText = null;\n                    if (this.legendLabelToolTipGenerator != null) {\n                        toolTipText = this.legendLabelToolTipGenerator\n                                .generateSectionLabel(this.dataset, key);\n                    }\n                    String urlText = null;\n                    if (this.legendLabelURLGenerator != null) {\n                        urlText = this.legendLabelURLGenerator.generateURL(\n                                this.dataset, key, this.pieIndex);\n                    }\n                    Paint paint = lookupSectionPaint(key, true);\n                    Paint outlinePaint = lookupSectionOutlinePaint(key);\n                    Stroke outlineStroke = lookupSectionOutlineStroke(key);\n                    LegendItem item = new LegendItem(label, description, \n                            toolTipText, urlText, true, shape, true, paint, \n                            true, outlinePaint, outlineStroke, \n                            false,          // line not visible\n                            new Line2D.Float(), new BasicStroke(), Color.black);\n                    item.setDataset(getDataset());\n                    result.add(item);\n                }\n                section++;\n            }\n            else {\n                section++;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Returns a short string describing the type of plot.\n     *\n     * @return The plot type.\n     */\n    public String getPlotType() {\n        return localizationResources.getString("Pie_Plot");\n    }\n\n    /**\n     * Returns a rectangle that can be used to create a pie section (taking\n     * into account the amount by which the pie section is \'exploded\').\n     *\n     * @param unexploded  the area inside which the unexploded pie sections are\n     *                    drawn.\n     * @param exploded  the area inside which the exploded pie sections are \n     *                  drawn.\n     * @param angle  the start angle.\n     * @param extent  the extent of the arc.\n     * @param explodePercent  the amount by which the pie section is exploded.\n     *\n     * @return A rectangle that can be used to create a pie section.\n     */\n    protected Rectangle2D getArcBounds(Rectangle2D unexploded, \n                                       Rectangle2D exploded,\n                                       double angle, double extent, \n                                       double explodePercent) {\n\n        if (explodePercent == 0.0) {\n            return unexploded;\n        }\n        else {\n            Arc2D arc1 = new Arc2D.Double(unexploded, angle, extent / 2, \n                    Arc2D.OPEN);\n            Point2D point1 = arc1.getEndPoint();\n            Arc2D.Double arc2 = new Arc2D.Double(exploded, angle, extent / 2, \n                    Arc2D.OPEN);\n            Point2D point2 = arc2.getEndPoint();\n            double deltaX = (point1.getX() - point2.getX()) * explodePercent;\n            double deltaY = (point1.getY() - point2.getY()) * explodePercent;\n            return new Rectangle2D.Double(unexploded.getX() - deltaX, \n                    unexploded.getY() - deltaY, unexploded.getWidth(), \n                    unexploded.getHeight());\n        }\n    }\n    \n    /**\n     * Draws a section label on the left side of the pie chart.\n     * \n     * @param g2  the graphics device.\n     * @param state  the state.\n     * @param record  the label record.\n     */\n    protected void drawLeftLabel(Graphics2D g2, PiePlotState state, \n                                 PieLabelRecord record) {\n\n        double anchorX = state.getLinkArea().getMinX();\n        double targetX = anchorX - record.getGap();\n        double targetY = record.getAllocatedY();\n        \n        if (this.labelLinksVisible) {\n            double theta = record.getAngle();\n            double linkX = state.getPieCenterX() + Math.cos(theta) \n                    * state.getPieWRadius() * record.getLinkPercent();\n            double linkY = state.getPieCenterY() - Math.sin(theta) \n                    * state.getPieHRadius() * record.getLinkPercent();\n            double elbowX = state.getPieCenterX() + Math.cos(theta) \n                    * state.getLinkArea().getWidth() / 2.0;\n            double elbowY = state.getPieCenterY() - Math.sin(theta) \n                    * state.getLinkArea().getHeight() / 2.0;\n            double anchorY = elbowY;\n            g2.setPaint(this.labelLinkPaint);\n            g2.setStroke(this.labelLinkStroke);\n            g2.draw(new Line2D.Double(linkX, linkY, elbowX, elbowY));\n            g2.draw(new Line2D.Double(anchorX, anchorY, elbowX, elbowY));\n            g2.draw(new Line2D.Double(anchorX, anchorY, targetX, targetY));\n        }\n        TextBox tb = record.getLabel();\n        tb.draw(g2, (float) targetX, (float) targetY, RectangleAnchor.RIGHT);\n        \n    }\n\n    /**\n     * Draws a section label on the right side of the pie chart.\n     * \n     * @param g2  the graphics device.\n     * @param state  the state.\n     * @param record  the label record.\n     */\n    protected void drawRightLabel(Graphics2D g2, PiePlotState state, \n                                  PieLabelRecord record) {\n        \n        double anchorX = state.getLinkArea().getMaxX();\n        double targetX = anchorX + record.getGap();\n        double targetY = record.getAllocatedY();\n        \n        if (this.labelLinksVisible) {\n            double theta = record.getAngle();\n            double linkX = state.getPieCenterX() + Math.cos(theta) \n                    * state.getPieWRadius() * record.getLinkPercent();\n            double linkY = state.getPieCenterY() - Math.sin(theta) \n                    * state.getPieHRadius() * record.getLinkPercent();\n            double elbowX = state.getPieCenterX() + Math.cos(theta) \n                    * state.getLinkArea().getWidth() / 2.0;\n            double elbowY = state.getPieCenterY() - Math.sin(theta) \n                    * state.getLinkArea().getHeight() / 2.0;\n            double anchorY = elbowY;\n            g2.setPaint(this.labelLinkPaint);\n            g2.setStroke(this.labelLinkStroke);\n            g2.draw(new Line2D.Double(linkX, linkY, elbowX, elbowY));\n            g2.draw(new Line2D.Double(anchorX, anchorY, elbowX, elbowY));\n            g2.draw(new Line2D.Double(anchorX, anchorY, targetX, targetY));\n        }\n        \n        TextBox tb = record.getLabel();\n        tb.draw(g2, (float) targetX, (float) targetY, RectangleAnchor.LEFT);\n    \n    }\n\n    /**\n     * Tests this plot for equality with an arbitrary object.  Note that the \n     * plot\'s dataset is NOT included in the test for equality.\n     *\n     * @param obj  the object to test against (<code>null</code> permitted).\n     *\n     * @return <code>true</code> or <code>false</code>.\n     */\n    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof PiePlot)) {\n            return false;\n        }\n        if (!super.equals(obj)) {\n            return false;\n        }\n        PiePlot that = (PiePlot) obj;\n        if (this.pieIndex != that.pieIndex) {\n            return false;\n        }\n        if (this.interiorGap != that.interiorGap) {\n            return false;\n        }\n        if (this.circular != that.circular) {\n            return false;\n        }\n        if (this.startAngle != that.startAngle) {\n            return false;\n        }\n        if (this.direction != that.direction) {\n            return false;\n        }\n        if (this.ignoreZeroValues != that.ignoreZeroValues) {\n            return false;\n        }\n        if (this.ignoreNullValues != that.ignoreNullValues) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.sectionPaintMap, \n                that.sectionPaintMap)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.baseSectionPaint, \n                that.baseSectionPaint)) {\n            return false;\n        }\n        if (this.sectionOutlinesVisible != that.sectionOutlinesVisible) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.sectionOutlinePaintMap, \n                that.sectionOutlinePaintMap)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(\n            this.baseSectionOutlinePaint, that.baseSectionOutlinePaint\n        )) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.sectionOutlineStrokeMap, \n                that.sectionOutlineStrokeMap)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(\n            this.baseSectionOutlineStroke, that.baseSectionOutlineStroke\n        )) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.shadowPaint, that.shadowPaint)) {\n            return false;\n        }\n        if (!(this.shadowXOffset == that.shadowXOffset)) {\n            return false;\n        }\n        if (!(this.shadowYOffset == that.shadowYOffset)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.explodePercentages, \n                that.explodePercentages)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelGenerator, \n                that.labelGenerator)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelBackgroundPaint, \n                that.labelBackgroundPaint)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelOutlinePaint, \n                that.labelOutlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOutlineStroke, \n                that.labelOutlineStroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelShadowPaint, \n                that.labelShadowPaint)) {\n            return false;\n        }\n        if (this.simpleLabels != that.simpleLabels) {\n            return false;\n        }\n        if (!this.simpleLabelOffset.equals(that.simpleLabelOffset)) {\n            return false;\n        }\n        if (!this.labelPadding.equals(that.labelPadding)) {\n            return false;\n        }\n        if (!(this.maximumLabelWidth == that.maximumLabelWidth)) {\n            return false;\n        }\n        if (!(this.labelGap == that.labelGap)) {\n            return false;\n        }\n        if (!(this.labelLinkMargin == that.labelLinkMargin)) {\n            return false;\n        }\n        if (this.labelLinksVisible != that.labelLinksVisible) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelLinkPaint, that.labelLinkPaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelLinkStroke, \n                that.labelLinkStroke)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.toolTipGenerator, \n                that.toolTipGenerator)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.urlGenerator, that.urlGenerator)) {\n            return false;\n        }\n        if (!(this.minimumArcAngleToDraw == that.minimumArcAngleToDraw)) {\n            return false;\n        }\n        if (!ShapeUtilities.equal(this.legendItemShape, that.legendItemShape)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.legendLabelGenerator, \n                that.legendLabelGenerator)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.legendLabelToolTipGenerator,\n                that.legendLabelToolTipGenerator)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.legendLabelURLGenerator,\n                that.legendLabelURLGenerator)) {\n            return false;\n        }\n        // can\'t find any difference...\n        return true;\n    }\n\n    /**\n     * Returns a clone of the plot.\n     *\n     * @return A clone.\n     *\n     * @throws CloneNotSupportedException if some component of the plot does \n     *         not support cloning.\n     */\n    public Object clone() throws CloneNotSupportedException {\n        PiePlot clone = (PiePlot) super.clone();\n        if (clone.dataset != null) {\n            clone.dataset.addChangeListener(clone);\n        }\n        if (this.urlGenerator instanceof PublicCloneable) {\n            clone.urlGenerator = (PieURLGenerator) ObjectUtilities.clone(\n                    this.urlGenerator);\n        }\n        clone.legendItemShape = ShapeUtilities.clone(this.legendItemShape);\n        if (this.legendLabelGenerator != null) {\n            clone.legendLabelGenerator = (PieSectionLabelGenerator) \n                    ObjectUtilities.clone(this.legendLabelGenerator);\n        }\n        if (this.legendLabelToolTipGenerator != null) {\n            clone.legendLabelToolTipGenerator = (PieSectionLabelGenerator) \n                    ObjectUtilities.clone(this.legendLabelToolTipGenerator);\n        }\n        if (this.legendLabelURLGenerator instanceof PublicCloneable) {\n            clone.legendLabelURLGenerator = (PieURLGenerator) \n                    ObjectUtilities.clone(this.legendLabelURLGenerator);\n        }\n        return clone;\n    }\n\n    /**\n     * Provides serialization support.\n     *\n     * @param stream  the output stream.\n     *\n     * @throws IOException  if there is an I/O error.\n     */\n    private void writeObject(ObjectOutputStream stream) throws IOException {\n        stream.defaultWriteObject();\n        SerialUtilities.writePaint(this.baseSectionPaint, stream);\n        SerialUtilities.writePaint(this.baseSectionOutlinePaint, stream);\n        SerialUtilities.writeStroke(this.baseSectionOutlineStroke, stream);\n        SerialUtilities.writePaint(this.shadowPaint, stream);\n        SerialUtilities.writePaint(this.labelPaint, stream);\n        SerialUtilities.writePaint(this.labelBackgroundPaint, stream);\n        SerialUtilities.writePaint(this.labelOutlinePaint, stream);\n        SerialUtilities.writeStroke(this.labelOutlineStroke, stream);\n        SerialUtilities.writePaint(this.labelShadowPaint, stream);\n        SerialUtilities.writePaint(this.labelLinkPaint, stream);\n        SerialUtilities.writeStroke(this.labelLinkStroke, stream);\n        SerialUtilities.writeShape(this.legendItemShape, stream);\n    }\n\n    /**\n     * Provides serialization support.\n     *\n     * @param stream  the input stream.\n     *\n     * @throws IOException  if there is an I/O error.\n     * @throws ClassNotFoundException  if there is a classpath problem.\n     */\n    private void readObject(ObjectInputStream stream) \n        throws IOException, ClassNotFoundException {\n        stream.defaultReadObject();\n        this.baseSectionPaint = SerialUtilities.readPaint(stream);\n        this.baseSectionOutlinePaint = SerialUtilities.readPaint(stream);\n        this.baseSectionOutlineStroke = SerialUtilities.readStroke(stream);\n        this.shadowPaint = SerialUtilities.readPaint(stream);\n        this.labelPaint = SerialUtilities.readPaint(stream);\n        this.labelBackgroundPaint = SerialUtilities.readPaint(stream);\n        this.labelOutlinePaint = SerialUtilities.readPaint(stream);\n        this.labelOutlineStroke = SerialUtilities.readStroke(stream);\n        this.labelShadowPaint = SerialUtilities.readPaint(stream);\n        this.labelLinkPaint = SerialUtilities.readPaint(stream);\n        this.labelLinkStroke = SerialUtilities.readStroke(stream);\n        this.legendItemShape = SerialUtilities.readShape(stream);\n    }\n\n}', 'tree': 'MethodDeclaration modifiers public_ter ^ ^ return_type ReferenceType name PiePlotState_ter ^ ^ ^ ^ name meth0 ^ ^ parameters FormalParameter type ReferenceType name Graphics2D_ter ^ ^ ^ ^ name par0 ^ ^ ^ FormalParameter type ReferenceType name Rectangle2D_ter ^ ^ ^ ^ name par1 ^ ^ ^ FormalParameter type ReferenceType name PiePlot_ter ^ ^ ^ ^ name par2 ^ ^ ^ FormalParameter type ReferenceType name Integer_ter ^ ^ ^ ^ name par3 ^ ^ ^ FormalParameter type ReferenceType name PlotRenderingInfo_ter ^ ^ ^ ^ name par4 ^ ^ ^ ^ body LocalVariableDeclaration type ReferenceType name PiePlotState_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name PiePlotState_ter ^ ^ ^ ^ arguments MemberReference member par4 ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member setPassesRequired_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getStartAngle_ter ^ ^ ^ ^ member setLatestAngle_ter ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2], 'mode': 0, 'line': 2051, 'isa': False, 'fl_score': 1}, {'bugid': 'Chart-15', 'treeroot': <Searchnode.Node object at 0x7f8ecb832290>, 'troot': <Searchnode.Node object at 0x7f8ecb832290>, 'oldcode': '        double result = 0.0;', 'filepath': 'buggy/Chart-15/source/org/jfree/chart/plot/PiePlot.java', 'subroot': <Searchnode.Node object at 0x7f8ecb8325d0>, 'vardic': {'getMaximumExplodePercent_ter': 'meth0', 'result_ter': 'loc0', 'iterator_ter': 'loc1', 'key_ter': 'loc2', 'explode_ter': 'loc3'}, 'typedic': {'result_ter': 'double', 'iterator_ter': 'Iterator', 'key_ter': 'Comparable', 'explode_ter': 'Number'}, 'idss': 'Chart-15', 'classname': 'org.jfree.chart.plot.PiePlot', 'precode': '/* ===========================================================\n * JFreeChart : a free chart library for the Java(tm) platform\n * ===========================================================\n *\n * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors.\n *\n * Project Info:  http://www.jfree.org/jfreechart/index.html\n *\n * This library is free software; you can redistribute it and/or modify it \n * under the terms of the GNU Lesser General Public License as published by \n * the Free Software Foundation; either version 2.1 of the License, or \n * (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful, but \n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public \n * License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, \n * USA.  \n *\n * [Java is a trademark or registered trademark of Sun Microsystems, Inc. \n * in the United States and other countries.]\n *\n * ------------\n * PiePlot.java\n * ------------\n * (C) Copyright 2000-2008, by Andrzej Porebski and Contributors.\n *\n * Original Author:  Andrzej Porebski;\n * Contributor(s):   David Gilbert (for Object Refinery Limited);\n *                   Martin Cordova (percentages in labels);\n *                   Richard Atkinson (URL support for image maps);\n *                   Christian W. Zuckschwerdt;\n *                   Arnaud Lelievre;\n *                   Andreas Schroeder (very minor);\n *\n * Changes (from 21-Jun-2001)\n * --------------------------\n * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG);\n * 18-Sep-2001 : Updated header (DG);\n * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG);\n * 19-Oct-2001 : Moved series paint and stroke methods from JFreeChart.java to \n *               Plot.java (DG);\n * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG);\n * 13-Nov-2001 : Modified plot subclasses so that null axes are possible for \n *               pie plot (DG);\n * 17-Nov-2001 : Added PieDataset interface and amended this class accordingly,\n *               and completed removal of BlankAxis class as it is no longer \n *               required (DG);\n * 19-Nov-2001 : Changed \'drawCircle\' property to \'circular\' property (DG);\n * 21-Nov-2001 : Added options for exploding pie sections and filled out range \n *               of properties (DG);\n *               Added option for percentages in chart labels, based on code\n *               by Martin Cordova (DG);\n * 30-Nov-2001 : Changed default font from "Arial" --> "SansSerif" (DG);\n * 12-Dec-2001 : Removed unnecessary \'throws\' clause in constructor (DG);\n * 13-Dec-2001 : Added tooltips (DG);\n * 16-Jan-2002 : Renamed tooltips class (DG);\n * 22-Jan-2002 : Fixed bug correlating legend labels with pie data (DG);\n * 05-Feb-2002 : Added alpha-transparency to plot class, and updated \n *               constructors accordingly (DG);\n * 06-Feb-2002 : Added optional background image and alpha-transparency to Plot\n *               and subclasses.  Clipped drawing within plot area (DG);\n * 26-Mar-2002 : Added an empty zoom method (DG);\n * 18-Apr-2002 : PieDataset is no longer sorted (oldman);\n * 23-Apr-2002 : Moved dataset from JFreeChart to Plot.  Added \n *               getLegendItemLabels() method (DG);\n * 19-Jun-2002 : Added attributes to control starting angle and direction \n *               (default is now clockwise) (DG);\n * 25-Jun-2002 : Removed redundant imports (DG);\n * 02-Jul-2002 : Fixed sign of percentage bug introduced in 0.9.2 (DG);\n * 16-Jul-2002 : Added check for null dataset in getLegendItemLabels() (DG);\n * 30-Jul-2002 : Moved summation code to DatasetUtilities (DG);\n * 05-Aug-2002 : Added URL support for image maps - new member variable for\n *               urlGenerator, modified constructor and minor change to the \n *               draw method (RA);\n * 18-Sep-2002 : Modified the percent label creation and added setters for the\n *               formatters (AS);\n * 24-Sep-2002 : Added getLegendItems() method (DG);\n * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG);\n * 09-Oct-2002 : Added check for null entity collection (DG);\n * 30-Oct-2002 : Changed PieDataset interface (DG);\n * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG);\n * 02-Jan-2003 : Fixed "no data" message (DG);\n * 23-Jan-2003 : Modified to extract data from rows OR columns in \n *               CategoryDataset (DG);\n * 14-Feb-2003 : Fixed label drawing so that foreground alpha does not apply \n *               (bug id 685536) (DG);\n * 07-Mar-2003 : Modified to pass pieIndex on to PieSectionEntity and tooltip \n *               and URL generators (DG);\n * 21-Mar-2003 : Added a minimum angle for drawing arcs \n *               (see bug id 620031) (DG);\n * 24-Apr-2003 : Switched around PieDataset and KeyedValuesDataset (DG);\n * 02-Jun-2003 : Fixed bug 721733 (DG);\n * 30-Jul-2003 : Modified entity constructor (CZ);\n * 19-Aug-2003 : Implemented Cloneable (DG);\n * 29-Aug-2003 : Fixed bug 796936 (null pointer on setOutlinePaint()) (DG);\n * 08-Sep-2003 : Added internationalization via use of properties \n *               resourceBundle (RFE 690236) (AL);\n * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG);\n * 29-Oct-2003 : Added workaround for font alignment in PDF output (DG);\n * 05-Nov-2003 : Fixed missing legend bug (DG);\n * 10-Nov-2003 : Re-added the DatasetChangeListener to constructors (CZ);\n * 29-Jan-2004 : Fixed clipping bug in draw() method (DG);\n * 11-Mar-2004 : Major overhaul to improve labelling (DG);\n * 31-Mar-2004 : Made an adjustment for the plot area when the label generator \n *               is null.  Fixed null pointer exception when the label \n *               generator returns null for a label (DG);\n * 06-Apr-2004 : Added getter, setter, serialization and draw support for \n *               labelBackgroundPaint (AS);\n * 08-Apr-2004 : Added flag to control whether null values are ignored or \n *               not (DG);\n * 15-Apr-2004 : Fixed some minor warnings from Eclipse (DG);\n * 26-Apr-2004 : Added attributes for label outline and shadow (DG);\n * 04-Oct-2004 : Renamed ShapeUtils --> ShapeUtilities (DG);\n * 04-Nov-2004 : Fixed null pointer exception with new LegendTitle class (DG);\n * 09-Nov-2004 : Added user definable legend item shape (DG);\n * 25-Nov-2004 : Added new legend label generator (DG);\n * 20-Apr-2005 : Added a tool tip generator for legend labels (DG);\n * 26-Apr-2005 : Removed LOGGER (DG);\n * 05-May-2005 : Updated draw() method parameters (DG);\n * 10-May-2005 : Added flag to control visibility of label linking lines, plus\n *               another flag to control the handling of zero values (DG);\n * 08-Jun-2005 : Fixed bug in getLegendItems() method (not respecting flags\n *               for ignoring null and zero values), and fixed equals() method \n *               to handle GradientPaint (DG);\n * 15-Jul-2005 : Added sectionOutlinesVisible attribute (DG);\n * ------------- JFREECHART 1.0.x ---------------------------------------------\n * 09-Jan-2006 : Fixed bug 1400442, inconsistent treatment of null and zero\n *               values in dataset (DG);\n * 28-Feb-2006 : Fixed bug 1440415, bad distribution of pie section \n *               labels (DG);\n * 27-Sep-2006 : Initialised baseSectionPaint correctly, added lookup methods\n *               for section paint, outline paint and outline stroke (DG);\n * 27-Sep-2006 : Refactored paint and stroke methods to use keys rather than\n *               section indices (DG);\n * 03-Oct-2006 : Replaced call to JRE 1.5 method (DG);\n * 23-Nov-2006 : Added support for URLs for the legend items (DG);\n * 24-Nov-2006 : Cloning fixes (DG);\n * 17-Apr-2007 : Check for null label in legend items (DG);\n * 19-Apr-2007 : Deprecated override settings (DG);\n * 18-May-2007 : Set dataset for LegendItem (DG);\n * 14-Jun-2007 : Added label distributor attribute (DG);\n * 19-Jun-2007 : Removed deprecated code (DG);\n * 20-Jun-2007 : Removed JCommon dependencies (DG);\n * 18-Jul-2007 : Added simple label option (DG);\n * 21-Nov-2007 : Fixed labelling bugs, added debug code, restored default\n *               white background (DG); \n * 19-Mar-2008 : Fixed IllegalArgumentException when drawing with null \n *               dataset (DG);\n *    \n */\n\npackage org.jfree.chart.plot;\n\nimport java.awt.AlphaComposite;\nimport java.awt.BasicStroke;\nimport java.awt.Color;\nimport java.awt.Composite;\nimport java.awt.Font;\nimport java.awt.FontMetrics;\nimport java.awt.Graphics2D;\nimport java.awt.Paint;\nimport java.awt.Shape;\nimport java.awt.Stroke;\nimport java.awt.geom.Arc2D;\nimport java.awt.geom.Ellipse2D;\nimport java.awt.geom.Line2D;\nimport java.awt.geom.Point2D;\nimport java.awt.geom.Rectangle2D;\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.io.Serializable;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.ResourceBundle;\nimport java.util.TreeMap;\n\nimport org.jfree.chart.LegendItem;\nimport org.jfree.chart.LegendItemCollection;\nimport org.jfree.chart.PaintMap;\nimport org.jfree.chart.StrokeMap;\nimport org.jfree.chart.entity.EntityCollection;\nimport org.jfree.chart.entity.PieSectionEntity;\nimport org.jfree.chart.event.PlotChangeEvent;\nimport org.jfree.chart.labels.PieSectionLabelGenerator;\nimport org.jfree.chart.labels.PieToolTipGenerator;\nimport org.jfree.chart.labels.StandardPieSectionLabelGenerator;\nimport org.jfree.chart.text.G2TextMeasurer;\nimport org.jfree.chart.text.TextAnchor;\nimport org.jfree.chart.text.TextBlock;\nimport org.jfree.chart.text.TextBox;\nimport org.jfree.chart.text.TextUtilities;\nimport org.jfree.chart.urls.PieURLGenerator;\nimport org.jfree.chart.util.ObjectUtilities;\nimport org.jfree.chart.util.PaintUtilities;\nimport org.jfree.chart.util.PublicCloneable;\nimport org.jfree.chart.util.RectangleAnchor;\nimport org.jfree.chart.util.RectangleInsets;\nimport org.jfree.chart.util.Rotation;\nimport org.jfree.chart.util.SerialUtilities;\nimport org.jfree.chart.util.ShapeUtilities;\nimport org.jfree.chart.util.UnitType;\nimport org.jfree.data.DefaultKeyedValues;\nimport org.jfree.data.KeyedValues;\nimport org.jfree.data.general.DatasetChangeEvent;\nimport org.jfree.data.general.DatasetUtilities;\nimport org.jfree.data.general.PieDataset;\n\n/**\n * A plot that displays data in the form of a pie chart, using data from any \n * class that implements the {@link PieDataset} interface.\n * <P>\n * Special notes:\n * <ol>\n * <li>the default starting point is 12 o\'clock and the pie sections proceed\n * in a clockwise direction, but these settings can be changed;</li>\n * <li>negative values in the dataset are ignored;</li>\n * <li>there are utility methods for creating a {@link PieDataset} from a\n * {@link org.jfree.data.category.CategoryDataset};</li>\n * </ol>\n *\n * @see Plot\n * @see PieDataset\n */\npublic class PiePlot extends Plot implements Cloneable, Serializable {\n    \n    /** For serialization. */\n    private static final long serialVersionUID = -795612466005590431L;\n    \n    /** The default interior gap. */\n    public static final double DEFAULT_INTERIOR_GAP = 0.08;\n\n    /** The maximum interior gap (currently 40%). */\n    public static final double MAX_INTERIOR_GAP = 0.40;\n\n    /** The default starting angle for the pie chart. */\n    public static final double DEFAULT_START_ANGLE = 90.0;\n\n    /** The default section label font. */\n    public static final Font DEFAULT_LABEL_FONT = new Font("SansSerif", \n            Font.PLAIN, 10);\n\n    /** The default section label paint. */\n    public static final Paint DEFAULT_LABEL_PAINT = Color.black;\n    \n    /** The default section label background paint. */\n    public static final Paint DEFAULT_LABEL_BACKGROUND_PAINT = new Color(255, \n            255, 192);\n\n    /** The default section label outline paint. */\n    public static final Paint DEFAULT_LABEL_OUTLINE_PAINT = Color.black;\n    \n    /** The default section label outline stroke. */\n    public static final Stroke DEFAULT_LABEL_OUTLINE_STROKE = new BasicStroke(\n            0.5f);\n    \n    /** The default section label shadow paint. */\n    public static final Paint DEFAULT_LABEL_SHADOW_PAINT = new Color(151, 151, \n            151, 128);\n    \n    /** The default minimum arc angle to draw. */\n    public static final double DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW = 0.00001;\n\n    /** The dataset for the pie chart. */\n    private PieDataset dataset;\n\n    /** The pie index (used by the {@link MultiplePiePlot} class). */\n    private int pieIndex;\n\n    /** \n     * The amount of space left around the outside of the pie plot, expressed \n     * as a percentage of the plot area width and height. \n     */\n    private double interiorGap;\n\n    /** Flag determining whether to draw an ellipse or a perfect circle. */\n    private boolean circular;\n\n    /** The starting angle. */\n    private double startAngle;\n\n    /** The direction for the pie segments. */\n    private Rotation direction;\n\n    /** The section paint map. */\n    private PaintMap sectionPaintMap;\n\n    /** The base section paint (fallback). */\n    private transient Paint baseSectionPaint;\n\n    /** \n     * A flag that controls whether or not an outline is drawn for each\n     * section in the plot.\n     */\n    private boolean sectionOutlinesVisible;\n\n    /** The section outline paint map. */\n    private PaintMap sectionOutlinePaintMap;\n\n    /** The base section outline paint (fallback). */\n    private transient Paint baseSectionOutlinePaint;\n\n    /** The section outline stroke map. */\n    private StrokeMap sectionOutlineStrokeMap;\n\n    /** The base section outline stroke (fallback). */\n    private transient Stroke baseSectionOutlineStroke;\n\n    /** The shadow paint. */\n    private transient Paint shadowPaint = Color.gray;\n\n    /** The x-offset for the shadow effect. */\n    private double shadowXOffset = 4.0f;\n    \n    /** The y-offset for the shadow effect. */\n    private double shadowYOffset = 4.0f;\n    \n    /** The percentage amount to explode each pie section. */\n    private Map explodePercentages;\n    \n    /** The section label generator. */\n    private PieSectionLabelGenerator labelGenerator;\n\n    /** The font used to display the section labels. */\n    private Font labelFont;\n\n    /** The color used to draw the section labels. */\n    private transient Paint labelPaint;\n    \n    /** \n     * The color used to draw the background of the section labels.  If this\n     * is <code>null</code>, the background is not filled.\n     */\n    private transient Paint labelBackgroundPaint;\n\n    /** \n     * The paint used to draw the outline of the section labels \n     * (<code>null</code> permitted). \n     */\n    private transient Paint labelOutlinePaint;\n    \n    /** \n     * The stroke used to draw the outline of the section labels \n     * (<code>null</code> permitted). \n     */\n    private transient Stroke labelOutlineStroke;\n    \n    /** \n     * The paint used to draw the shadow for the section labels \n     * (<code>null</code> permitted). \n     */\n    private transient Paint labelShadowPaint;\n    \n    /**\n     * A flag that controls whether simple or extended labels are used.\n     * \n     * @since 1.0.7\n     */\n    private boolean simpleLabels = true;\n    \n    /**\n     * The padding between the labels and the label outlines.  This is not\n     * allowed to be <code>null</code>.\n     * \n     * @since 1.0.7\n     */\n    private RectangleInsets labelPadding;\n    \n    /**\n     * The simple label offset.\n     * \n     * @since 1.0.7\n     */\n    private RectangleInsets simpleLabelOffset;\n    \n    /** The maximum label width as a percentage of the plot width. */\n    private double maximumLabelWidth = 0.14;\n    \n    /** \n     * The gap between the labels and the link corner, as a percentage of the \n     * plot width. \n     */\n    private double labelGap = 0.025;\n\n    /** A flag that controls whether or not the label links are drawn. */\n    private boolean labelLinksVisible;\n    \n    /** The link margin. */\n    private double labelLinkMargin = 0.025;\n    \n    /** The paint used for the label linking lines. */\n    private transient Paint labelLinkPaint = Color.black;\n    \n    /** The stroke used for the label linking lines. */\n    private transient Stroke labelLinkStroke = new BasicStroke(0.5f);\n    \n    /** \n     * The pie section label distributor.\n     * \n     * @since 1.0.6\n     */\n    private AbstractPieLabelDistributor labelDistributor;\n    \n    /** The tooltip generator. */\n    private PieToolTipGenerator toolTipGenerator;\n\n    /** The URL generator. */\n    private PieURLGenerator urlGenerator;\n    \n    /** The legend label generator. */\n    private PieSectionLabelGenerator legendLabelGenerator;\n    \n    /** A tool tip generator for the legend. */\n    private PieSectionLabelGenerator legendLabelToolTipGenerator;\n    \n    /** \n     * A URL generator for the legend items (optional).  \n     *\n     * @since 1.0.4. \n     */\n    private PieURLGenerator legendLabelURLGenerator;\n    \n    /** \n     * A flag that controls whether <code>null</code> values are ignored.  \n     */\n    private boolean ignoreNullValues;\n    \n    /**\n     * A flag that controls whether zero values are ignored.\n     */\n    private boolean ignoreZeroValues;\n\n    /** The legend item shape. */\n    private transient Shape legendItemShape;\n    \n    /**\n     * The smallest arc angle that will get drawn (this is to avoid a bug in \n     * various Java implementations that causes the JVM to crash).  See this \n     * link for details:\n     *\n     * http://www.jfree.org/phpBB2/viewtopic.php?t=2707\n     *\n     * ...and this bug report in the Java Bug Parade:\n     *\n     * http://developer.java.sun.com/developer/bugParade/bugs/4836495.html\n     */\n    private double minimumArcAngleToDraw;\n\n    /** The resourceBundle for the localization. */\n    protected static ResourceBundle localizationResources =\n            ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");\n\n    /** \n     * This debug flag controls whether or not an outline is drawn showing the \n     * interior of the plot region.  This is drawn as a lightGray rectangle \n     * showing the padding provided by the \'interiorGap\' setting.\n     */\n    static final boolean DEBUG_DRAW_INTERIOR = false;\n    \n    /** \n     * This debug flag controls whether or not an outline is drawn showing the \n     * link area (in blue) and link ellipse (in yellow).  This controls where \n     * the label links have \'elbow\' points.\n     */\n    static final boolean DEBUG_DRAW_LINK_AREA = false;\n    \n    /**\n     * This debug flag controls whether or not an outline is drawn showing\n     * the pie area (in green).\n     */\n    static final boolean DEBUG_DRAW_PIE_AREA = false;\n    \n    /**\n     * Creates a new plot.  The dataset is initially set to <code>null</code>.\n     */\n    public PiePlot() {\n        this(null);\n    }\n\n    /**\n     * Creates a plot that will draw a pie chart for the specified dataset.\n     *\n     * @param dataset  the dataset (<code>null</code> permitted).\n     */\n    public PiePlot(PieDataset dataset) {\n        super();\n        this.dataset = dataset;\n        if (dataset != null) {\n            dataset.addChangeListener(this);\n        }\n        this.pieIndex = 0;\n        \n        this.interiorGap = DEFAULT_INTERIOR_GAP;\n        this.circular = true;\n        this.startAngle = DEFAULT_START_ANGLE;\n        this.direction = Rotation.CLOCKWISE;\n        this.minimumArcAngleToDraw = DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;\n\n        this.sectionPaintMap = new PaintMap();\n        this.baseSectionPaint = Color.gray;\n\n        this.sectionOutlinesVisible = true;\n        this.sectionOutlinePaintMap = new PaintMap();\n        this.baseSectionOutlinePaint = DEFAULT_OUTLINE_PAINT;\n\n        this.sectionOutlineStrokeMap = new StrokeMap();\n        this.baseSectionOutlineStroke = DEFAULT_OUTLINE_STROKE;\n        \n        this.explodePercentages = new TreeMap();\n\n        this.labelGenerator = new StandardPieSectionLabelGenerator();\n        this.labelFont = DEFAULT_LABEL_FONT;\n        this.labelPaint = DEFAULT_LABEL_PAINT;\n        this.labelBackgroundPaint = DEFAULT_LABEL_BACKGROUND_PAINT;\n        this.labelOutlinePaint = DEFAULT_LABEL_OUTLINE_PAINT;\n        this.labelOutlineStroke = DEFAULT_LABEL_OUTLINE_STROKE;\n        this.labelShadowPaint = DEFAULT_LABEL_SHADOW_PAINT;\n        this.labelLinksVisible = true;\n        this.labelDistributor = new PieLabelDistributor(0);\n        \n        this.simpleLabels = false;\n        this.simpleLabelOffset = new RectangleInsets(UnitType.RELATIVE, 0.18, \n                0.18, 0.18, 0.18);\n        this.labelPadding = new RectangleInsets(2, 2, 2, 2);\n        \n        this.toolTipGenerator = null;\n        this.urlGenerator = null;\n        this.legendLabelGenerator = new StandardPieSectionLabelGenerator();\n        this.legendLabelToolTipGenerator = null;\n        this.legendLabelURLGenerator = null;\n        this.legendItemShape = Plot.DEFAULT_LEGEND_ITEM_CIRCLE;\n        \n        this.ignoreNullValues = false;\n        this.ignoreZeroValues = false;\n    }\n\n    /**\n     * Returns the dataset.\n     *\n     * @return The dataset (possibly <code>null</code>).\n     * \n     * @see #setDataset(PieDataset)\n     */\n    public PieDataset getDataset() {\n        return this.dataset;\n    }\n\n    /**\n     * Sets the dataset and sends a {@link DatasetChangeEvent} to \'this\'.\n     *\n     * @param dataset  the dataset (<code>null</code> permitted).\n     * \n     * @see #getDataset()\n     */\n    public void setDataset(PieDataset dataset) {\n        // if there is an existing dataset, remove the plot from the list of \n        // change listeners...\n        PieDataset existing = this.dataset;\n        if (existing != null) {\n            existing.removeChangeListener(this);\n        }\n\n        // set the new dataset, and register the chart as a change listener...\n        this.dataset = dataset;\n        if (dataset != null) {\n            setDatasetGroup(dataset.getGroup());\n            dataset.addChangeListener(this);\n        }\n\n        // send a dataset change event to self...\n        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);\n        datasetChanged(event);\n    }\n    \n    /**\n     * Returns the pie index (this is used by the {@link MultiplePiePlot} class\n     * to track subplots).\n     * \n     * @return The pie index.\n     * \n     * @see #setPieIndex(int)\n     */\n    public int getPieIndex() {\n        return this.pieIndex;\n    }\n    \n    /**\n     * Sets the pie index (this is used by the {@link MultiplePiePlot} class to \n     * track subplots).\n     * \n     * @param index  the index.\n     * \n     * @see #getPieIndex()\n     */\n    public void setPieIndex(int index) {\n        this.pieIndex = index;\n    }\n    \n    /**\n     * Returns the start angle for the first pie section.  This is measured in \n     * degrees starting from 3 o\'clock and measuring anti-clockwise.\n     *\n     * @return The start angle.\n     * \n     * @see #setStartAngle(double)\n     */\n    public double getStartAngle() {\n        return this.startAngle;\n    }\n\n    /**\n     * Sets the starting angle and sends a {@link PlotChangeEvent} to all \n     * registered listeners.  The initial default value is 90 degrees, which \n     * corresponds to 12 o\'clock.  A value of zero corresponds to 3 o\'clock...\n     * this is the encoding used by Java\'s Arc2D class.\n     *\n     * @param angle  the angle (in degrees).\n     * \n     * @see #getStartAngle()\n     */\n    public void setStartAngle(double angle) {\n        this.startAngle = angle;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the direction in which the pie sections are drawn (clockwise or \n     * anti-clockwise).\n     *\n     * @return The direction (never <code>null</code>).\n     * \n     * @see #setDirection(Rotation)\n     */\n    public Rotation getDirection() {\n        return this.direction;\n    }\n\n    /**\n     * Sets the direction in which the pie sections are drawn and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     *\n     * @param direction  the direction (<code>null</code> not permitted).\n     * \n     * @see #getDirection()\n     */\n    public void setDirection(Rotation direction) {\n        if (direction == null) {\n            throw new IllegalArgumentException("Null \'direction\' argument.");\n        }\n        this.direction = direction;\n        notifyListeners(new PlotChangeEvent(this));\n\n    }\n\n    /**\n     * Returns the interior gap, measured as a percentage of the available \n     * drawing space.\n     *\n     * @return The gap (as a percentage of the available drawing space).\n     * \n     * @see #setInteriorGap(double)\n     */\n    public double getInteriorGap() {\n        return this.interiorGap;\n    }\n\n    /**\n     * Sets the interior gap and sends a {@link PlotChangeEvent} to all \n     * registered listeners.  This controls the space between the edges of the \n     * pie plot and the plot area itself (the region where the section labels \n     * appear).\n     *\n     * @param percent  the gap (as a percentage of the available drawing space).\n     * \n     * @see #getInteriorGap()\n     */\n    public void setInteriorGap(double percent) {\n\n        if ((percent < 0.0) || (percent > MAX_INTERIOR_GAP)) {\n            throw new IllegalArgumentException(\n                "Invalid \'percent\' (" + percent + ") argument.");\n        }\n\n        if (this.interiorGap != percent) {\n            this.interiorGap = percent;\n            notifyListeners(new PlotChangeEvent(this));\n        }\n\n    }\n\n    /**\n     * Returns a flag indicating whether the pie chart is circular, or\n     * stretched into an elliptical shape.\n     *\n     * @return A flag indicating whether the pie chart is circular.\n     * \n     * @see #setCircular(boolean)\n     */\n    public boolean isCircular() {\n        return this.circular;\n    }\n\n    /**\n     * A flag indicating whether the pie chart is circular, or stretched into\n     * an elliptical shape.\n     *\n     * @param flag  the new value.\n     * \n     * @see #isCircular()\n     */\n    public void setCircular(boolean flag) {\n        setCircular(flag, true);\n    }\n\n    /**\n     * Sets the circular attribute and, if requested, sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     *\n     * @param circular  the new value of the flag.\n     * @param notify  notify listeners?\n     * \n     * @see #isCircular()\n     */\n    public void setCircular(boolean circular, boolean notify) {\n        this.circular = circular;\n        if (notify) {\n            notifyListeners(new PlotChangeEvent(this));   \n        }\n    }\n\n    /**\n     * Returns the flag that controls whether <code>null</code> values in the \n     * dataset are ignored.  \n     * \n     * @return A boolean.\n     * \n     * @see #setIgnoreNullValues(boolean)\n     */\n    public boolean getIgnoreNullValues() {\n        return this.ignoreNullValues;   \n    }\n    \n    /**\n     * Sets a flag that controls whether <code>null</code> values are ignored, \n     * and sends a {@link PlotChangeEvent} to all registered listeners.  At \n     * present, this only affects whether or not the key is presented in the \n     * legend.\n     * \n     * @param flag  the flag.\n     * \n     * @see #getIgnoreNullValues()\n     * @see #setIgnoreZeroValues(boolean)\n     */\n    public void setIgnoreNullValues(boolean flag) {\n        this.ignoreNullValues = flag;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the flag that controls whether zero values in the \n     * dataset are ignored.  \n     * \n     * @return A boolean.\n     * \n     * @see #setIgnoreZeroValues(boolean)\n     */\n    public boolean getIgnoreZeroValues() {\n        return this.ignoreZeroValues;   \n    }\n    \n    /**\n     * Sets a flag that controls whether zero values are ignored, \n     * and sends a {@link PlotChangeEvent} to all registered listeners.  This \n     * only affects whether or not a label appears for the non-visible\n     * pie section.\n     * \n     * @param flag  the flag.\n     * \n     * @see #getIgnoreZeroValues()\n     * @see #setIgnoreNullValues(boolean)\n     */\n    public void setIgnoreZeroValues(boolean flag) {\n        this.ignoreZeroValues = flag;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    //// SECTION PAINT ////////////////////////////////////////////////////////\n\n    /**\n     * Returns the paint for the specified section.  This is equivalent to\n     * <code>lookupSectionPaint(section, false)</code>.\n     * \n     * @param key  the section key.\n     * \n     * @return The paint for the specified section.\n     * \n     * @since 1.0.3\n     * \n     * @see #lookupSectionPaint(Comparable, boolean)\n     */\n    protected Paint lookupSectionPaint(Comparable key) {\n        return lookupSectionPaint(key, false);        \n    }\n    \n    /**\n     * Returns the paint for the specified section.  The lookup involves these\n     * steps:\n     * <ul>\n     * <li>if {@link #getSectionPaint(Comparable)} is non-<code>null</code> \n     *         return it;</li>\n     * <li>if {@link #getSectionPaint(Comparable)} is <code>null</code> but \n     *         <code>autoPopulate</code> is <code>true</code>, attempt to fetch\n     *         a new paint from the drawing supplier \n     *         ({@link #getDrawingSupplier()});\n     * <li>if all else fails, return {@link #getBaseSectionPaint()}.\n     * </ul> \n     * \n     * @param key  the section key.\n     * @param autoPopulate  a flag that controls whether the drawing supplier \n     *     is used to auto-populate the section paint settings.\n     *     \n     * @return The paint.\n     * \n     * @since 1.0.3\n     */\n    protected Paint lookupSectionPaint(Comparable key, boolean autoPopulate) {\n        Paint result = null;\n        \n        // is a paint defined for the specified key\n        result = this.sectionPaintMap.getPaint(key);\n        if (result != null) {\n            return result;\n        }\n        \n        // nothing defined - do we autoPopulate?\n        if (autoPopulate) {\n            DrawingSupplier ds = getDrawingSupplier();\n            if (ds != null) {\n                result = ds.getNextPaint();\n                this.sectionPaintMap.put(key, result);\n            }\n            else {\n                result = this.baseSectionPaint;\n            }\n        }\n        else {\n            result = this.baseSectionPaint;\n        }\n        return result;\n    }\n    \n    /**\n     * Returns a key for the specified section.  If there is no such section \n     * in the dataset, we generate a key.  This is to provide some backward\n     * compatibility for the (now deprecated) methods that get/set attributes \n     * based on section indices.  The preferred way of doing this now is to\n     * link the attributes directly to the section key (there are new methods\n     * for this, starting from version 1.0.3).  \n     * \n     * @param section  the section index.\n     * \n     * @return The key.\n     *\n     * @since 1.0.3\n     */\n    protected Comparable getSectionKey(int section) {\n        Comparable key = null;\n        if (this.dataset != null) {\n            if (section >= 0 && section < this.dataset.getItemCount()) {\n                key = this.dataset.getKey(section);\n            }\n        }\n        if (key == null) {\n            key = new Integer(section);\n        }\n        return key;\n    }\n    \n    /**\n     * Returns the paint associated with the specified key, or \n     * <code>null</code> if there is no paint associated with the key.\n     * \n     * @param key  the key (<code>null</code> not permitted).\n     * \n     * @return The paint associated with the specified key, or \n     *     <code>null</code>.\n     *     \n     * @throws IllegalArgumentException if <code>key</code> is \n     *     <code>null</code>.\n     * \n     * @see #setSectionPaint(Comparable, Paint)\n     * \n     * @since 1.0.3\n     */\n    public Paint getSectionPaint(Comparable key) {\n        // null argument check delegated...\n        return this.sectionPaintMap.getPaint(key);\n    }\n    \n    /**\n     * Sets the paint associated with the specified key, and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param key  the key (<code>null</code> not permitted).\n     * @param paint  the paint.\n     * \n     * @throws IllegalArgumentException if <code>key</code> is \n     *     <code>null</code>.\n     *     \n     * @see #getSectionPaint(Comparable)\n     * \n     * @since 1.0.3\n     */\n    public void setSectionPaint(Comparable key, Paint paint) {\n        // null argument check delegated...\n        this.sectionPaintMap.put(key, paint);\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the base section paint.  This is used when no other paint is \n     * defined, which is rare.  The default value is <code>Color.gray</code>.\n     * \n     * @return The paint (never <code>null</code>).\n     * \n     * @see #setBaseSectionPaint(Paint)\n     */\n    public Paint getBaseSectionPaint() {\n        return this.baseSectionPaint;   \n    }\n    \n    /**\n     * Sets the base section paint and sends a {@link PlotChangeEvent} to all\n     * registered listeners.\n     * \n     * @param paint  the paint (<code>null</code> not permitted).\n     * \n     * @see #getBaseSectionPaint()\n     */\n    public void setBaseSectionPaint(Paint paint) {\n        if (paint == null) {\n            throw new IllegalArgumentException("Null \'paint\' argument.");   \n        }\n        this.baseSectionPaint = paint;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    //// SECTION OUTLINE PAINT ////////////////////////////////////////////////\n\n    /**\n     * Returns the flag that controls whether or not the outline is drawn for\n     * each pie section.\n     * \n     * @return The flag that controls whether or not the outline is drawn for\n     *         each pie section.\n     *         \n     * @see #setSectionOutlinesVisible(boolean)\n     */\n    public boolean getSectionOutlinesVisible() {\n        return this.sectionOutlinesVisible;\n    }\n    \n    /**\n     * Sets the flag that controls whether or not the outline is drawn for \n     * each pie section, and sends a {@link PlotChangeEvent} to all registered\n     * listeners.\n     * \n     * @param visible  the flag.\n     * \n     * @see #getSectionOutlinesVisible()\n     */\n    public void setSectionOutlinesVisible(boolean visible) {\n        this.sectionOutlinesVisible = visible;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the outline paint for the specified section.  This is equivalent \n     * to <code>lookupSectionPaint(section, false)</code>.\n     * \n     * @param key  the section key.\n     * \n     * @return The paint for the specified section.\n     * \n     * @since 1.0.3\n     * \n     * @see #lookupSectionOutlinePaint(Comparable, boolean)\n     */\n    protected Paint lookupSectionOutlinePaint(Comparable key) {\n        return lookupSectionOutlinePaint(key, false);        \n    }\n    \n    /**\n     * Returns the outline paint for the specified section.  The lookup \n     * involves these steps:\n     * <ul>\n     * <li>if {@link #getSectionOutlinePaint(Comparable)} is \n     *         non-<code>null</code> return it;</li>\n     * <li>if {@link #getSectionOutlinePaint(Comparable)} is \n     *         <code>null</code> but <code>autoPopulate</code> is \n     *         <code>true</code>, attempt to fetch a new outline paint from \n     *         the drawing supplier ({@link #getDrawingSupplier()});\n     * <li>if all else fails, return {@link #getBaseSectionOutlinePaint()}.\n     * </ul> \n     * \n     * @param key  the section key.\n     * @param autoPopulate  a flag that controls whether the drawing supplier \n     *     is used to auto-populate the section outline paint settings.\n     *     \n     * @return The paint.\n     * \n     * @since 1.0.3\n     */\n    protected Paint lookupSectionOutlinePaint(Comparable key, \n            boolean autoPopulate) {\n        \n        Paint result = null;\n        \n        // is a paint defined for the specified key\n        result = this.sectionOutlinePaintMap.getPaint(key);\n        if (result != null) {\n            return result;\n        }\n        \n        // nothing defined - do we autoPopulate?\n        if (autoPopulate) {\n            DrawingSupplier ds = getDrawingSupplier();\n            if (ds != null) {\n                result = ds.getNextOutlinePaint();\n                this.sectionOutlinePaintMap.put(key, result);\n            }\n            else {\n                result = this.baseSectionOutlinePaint;\n            }\n        }\n        else {\n            result = this.baseSectionOutlinePaint;\n        }\n        return result;\n    }\n\n    /**\n     * Returns the outline paint associated with the specified key, or \n     * <code>null</code> if there is no paint associated with the key.\n     * \n     * @param key  the key (<code>null</code> not permitted).\n     * \n     * @return The paint associated with the specified key, or \n     *     <code>null</code>.\n     *     \n     * @throws IllegalArgumentException if <code>key</code> is \n     *     <code>null</code>.\n     * \n     * @see #setSectionOutlinePaint(Comparable, Paint)\n     * \n     * @since 1.0.3\n     */\n    public Paint getSectionOutlinePaint(Comparable key) {\n        // null argument check delegated...\n        return this.sectionOutlinePaintMap.getPaint(key);\n    }\n    \n    /**\n     * Sets the outline paint associated with the specified key, and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param key  the key (<code>null</code> not permitted).\n     * @param paint  the paint.\n     * \n     * @throws IllegalArgumentException if <code>key</code> is \n     *     <code>null</code>.\n     *     \n     * @see #getSectionOutlinePaint(Comparable)\n     * \n     * @since 1.0.3\n     */\n    public void setSectionOutlinePaint(Comparable key, Paint paint) {\n        // null argument check delegated...\n        this.sectionOutlinePaintMap.put(key, paint);\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the base section paint.  This is used when no other paint is \n     * available.\n     * \n     * @return The paint (never <code>null</code>).\n     * \n     * @see #setBaseSectionOutlinePaint(Paint)\n     */\n    public Paint getBaseSectionOutlinePaint() {\n        return this.baseSectionOutlinePaint;   \n    }\n    \n    /**\n     * Sets the base section paint.\n     * \n     * @param paint  the paint (<code>null</code> not permitted).\n     * \n     * @see #getBaseSectionOutlinePaint()\n     */\n    public void setBaseSectionOutlinePaint(Paint paint) {\n        if (paint == null) {\n            throw new IllegalArgumentException("Null \'paint\' argument.");   \n        }\n        this.baseSectionOutlinePaint = paint;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    //// SECTION OUTLINE STROKE ///////////////////////////////////////////////\n\n    /**\n     * Returns the outline stroke for the specified section.  This is equivalent \n     * to <code>lookupSectionOutlineStroke(section, false)</code>.\n     * \n     * @param key  the section key.\n     * \n     * @return The stroke for the specified section.\n     * \n     * @since 1.0.3\n     * \n     * @see #lookupSectionOutlineStroke(Comparable, boolean)\n     */\n    protected Stroke lookupSectionOutlineStroke(Comparable key) {\n        return lookupSectionOutlineStroke(key, false);        \n    }\n    \n    /**\n     * Returns the outline stroke for the specified section.  The lookup \n     * involves these steps:\n     * <ul>\n     * <li>if {@link #getSectionOutlineStroke(Comparable)} is \n     *         non-<code>null</code> return it;</li>\n     * <li>if {@link #getSectionOutlineStroke(Comparable)} is \n     *         <code>null</code> but <code>autoPopulate</code> is \n     *         <code>true</code>, attempt to fetch a new outline stroke from \n     *         the drawing supplier ({@link #getDrawingSupplier()});\n     * <li>if all else fails, return {@link #getBaseSectionOutlineStroke()}.\n     * </ul> \n     * \n     * @param key  the section key.\n     * @param autoPopulate  a flag that controls whether the drawing supplier \n     *     is used to auto-populate the section outline stroke settings.\n     *     \n     * @return The stroke.\n     * \n     * @since 1.0.3\n     */\n    protected Stroke lookupSectionOutlineStroke(Comparable key, \n            boolean autoPopulate) {\n        \n        Stroke result = null;\n        \n        // is a stroke defined for the specified key\n        result = this.sectionOutlineStrokeMap.getStroke(key);\n        if (result != null) {\n            return result;\n        }\n        \n        // nothing defined - do we autoPopulate?\n        if (autoPopulate) {\n            DrawingSupplier ds = getDrawingSupplier();\n            if (ds != null) {\n                result = ds.getNextOutlineStroke();\n                this.sectionOutlineStrokeMap.put(key, result);\n            }\n            else {\n                result = this.baseSectionOutlineStroke;\n            }\n        }\n        else {\n            result = this.baseSectionOutlineStroke;\n        }\n        return result;\n    }\n    \n    /**\n     * Returns the outline stroke associated with the specified key, or \n     * <code>null</code> if there is no stroke associated with the key.\n     * \n     * @param key  the key (<code>null</code> not permitted).\n     * \n     * @return The stroke associated with the specified key, or \n     *     <code>null</code>.\n     *     \n     * @throws IllegalArgumentException if <code>key</code> is \n     *     <code>null</code>.\n     * \n     * @see #setSectionOutlineStroke(Comparable, Stroke)\n     * \n     * @since 1.0.3\n     */\n    public Stroke getSectionOutlineStroke(Comparable key) {\n        // null argument check delegated...\n        return this.sectionOutlineStrokeMap.getStroke(key);\n    }\n    \n    /**\n     * Sets the outline stroke associated with the specified key, and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param key  the key (<code>null</code> not permitted).\n     * @param stroke  the stroke.\n     * \n     * @throws IllegalArgumentException if <code>key</code> is \n     *     <code>null</code>.\n     *     \n     * @see #getSectionOutlineStroke(Comparable)\n     * \n     * @since 1.0.3\n     */\n    public void setSectionOutlineStroke(Comparable key, Stroke stroke) {\n        // null argument check delegated...\n        this.sectionOutlineStrokeMap.put(key, stroke);\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the base section stroke.  This is used when no other stroke is \n     * available.\n     * \n     * @return The stroke (never <code>null</code>).\n     * \n     * @see #setBaseSectionOutlineStroke(Stroke)\n     */\n    public Stroke getBaseSectionOutlineStroke() {\n        return this.baseSectionOutlineStroke;   \n    }\n    \n    /**\n     * Sets the base section stroke.\n     * \n     * @param stroke  the stroke (<code>null</code> not permitted).\n     * \n     * @see #getBaseSectionOutlineStroke()\n     */\n    public void setBaseSectionOutlineStroke(Stroke stroke) {\n        if (stroke == null) {\n            throw new IllegalArgumentException("Null \'stroke\' argument.");   \n        }\n        this.baseSectionOutlineStroke = stroke;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the shadow paint.\n     * \n     * @return The paint (possibly <code>null</code>).\n     * \n     * @see #setShadowPaint(Paint)\n     */\n    public Paint getShadowPaint() {\n        return this.shadowPaint;   \n    }\n    \n    /**\n     * Sets the shadow paint and sends a {@link PlotChangeEvent} to all \n     * registered listeners.\n     * \n     * @param paint  the paint (<code>null</code> permitted).\n     * \n     * @see #getShadowPaint()\n     */\n    public void setShadowPaint(Paint paint) {\n        this.shadowPaint = paint;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the x-offset for the shadow effect.\n     * \n     * @return The offset (in Java2D units).\n     * \n     * @see #setShadowXOffset(double)\n     */\n    public double getShadowXOffset() {\n        return this.shadowXOffset;\n    }\n    \n    /**\n     * Sets the x-offset for the shadow effect and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param offset  the offset (in Java2D units).\n     * \n     * @see #getShadowXOffset()\n     */\n    public void setShadowXOffset(double offset) {\n        this.shadowXOffset = offset;   \n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the y-offset for the shadow effect.\n     * \n     * @return The offset (in Java2D units).\n     * \n     * @see #setShadowYOffset(double)\n     */\n    public double getShadowYOffset() {\n        return this.shadowYOffset;\n    }\n    \n    /**\n     * Sets the y-offset for the shadow effect and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param offset  the offset (in Java2D units).\n     * \n     * @see #getShadowYOffset()\n     */\n    public void setShadowYOffset(double offset) {\n        this.shadowYOffset = offset;   \n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the amount that the section with the specified key should be\n     * exploded.\n     * \n     * @param key  the key (<code>null</code> not permitted).\n     * \n     * @return The amount that the section with the specified key should be\n     *     exploded.\n     * \n     * @throws IllegalArgumentException if <code>key</code> is \n     *     <code>null</code>.\n     *\n     * @since 1.0.3\n     * \n     * @see #setExplodePercent(Comparable, double)\n     */\n    public double getExplodePercent(Comparable key) {\n        double result = 0.0;\n        if (this.explodePercentages != null) {\n            Number percent = (Number) this.explodePercentages.get(key);\n            if (percent != null) {\n                result = percent.doubleValue();\n            }\n        }\n        return result;\n    }\n    \n    /**\n     * Sets the amount that a pie section should be exploded and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     *\n     * @param key  the section key (<code>null</code> not permitted).\n     * @param percent  the explode percentage (0.30 = 30 percent).\n     * \n     * @since 1.0.3\n     * \n     * @see #getExplodePercent(Comparable)\n     */\n    public void setExplodePercent(Comparable key, double percent) {\n        if (key == null) { \n            throw new IllegalArgumentException("Null \'key\' argument.");\n        }\n        if (this.explodePercentages == null) {\n            this.explodePercentages = new TreeMap();\n        }\n        this.explodePercentages.put(key, new Double(percent));\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the maximum explode percent.\n     * \n     * @return The percent.\n     */\n    public double getMaximumExplodePercent() {', 'aftercode': '        Iterator iterator = this.dataset.getKeys().iterator();\n        while (iterator.hasNext()) {\n            Comparable key = (Comparable) iterator.next();\n            Number explode = (Number) this.explodePercentages.get(key);\n            if (explode != null) {\n                result = Math.max(result, explode.doubleValue());   \n            }\n        }\n        return result;\n    }\n    \n    /**\n     * Returns the section label generator. \n     * \n     * @return The generator (possibly <code>null</code>).\n     * \n     * @see #setLabelGenerator(PieSectionLabelGenerator)\n     */\n    public PieSectionLabelGenerator getLabelGenerator() {\n        return this.labelGenerator;   \n    }\n    \n    /**\n     * Sets the section label generator and sends a {@link PlotChangeEvent} to\n     * all registered listeners.\n     * \n     * @param generator  the generator (<code>null</code> permitted).\n     * \n     * @see #getLabelGenerator()\n     */\n    public void setLabelGenerator(PieSectionLabelGenerator generator) {\n        this.labelGenerator = generator;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the gap between the edge of the pie and the labels, expressed as \n     * a percentage of the plot width.\n     * \n     * @return The gap (a percentage, where 0.05 = five percent).\n     * \n     * @see #setLabelGap(double)\n     */\n    public double getLabelGap() {\n        return this.labelGap;   \n    }\n    \n    /**\n     * Sets the gap between the edge of the pie and the labels (expressed as a \n     * percentage of the plot width) and sends a {@link PlotChangeEvent} to all\n     * registered listeners.\n     * \n     * @param gap  the gap (a percentage, where 0.05 = five percent).\n     * \n     * @see #getLabelGap()\n     */\n    public void setLabelGap(double gap) {\n        this.labelGap = gap;   \n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the maximum label width as a percentage of the plot width.\n     * \n     * @return The width (a percentage, where 0.20 = 20 percent).\n     * \n     * @see #setMaximumLabelWidth(double)\n     */\n    public double getMaximumLabelWidth() {\n        return this.maximumLabelWidth;   \n    }\n    \n    /**\n     * Sets the maximum label width as a percentage of the plot width and sends\n     * a {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param width  the width (a percentage, where 0.20 = 20 percent).\n     * \n     * @see #getMaximumLabelWidth()\n     */\n    public void setMaximumLabelWidth(double width) {\n        this.maximumLabelWidth = width;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the flag that controls whether or not label linking lines are\n     * visible.\n     * \n     * @return A boolean.\n     * \n     * @see #setLabelLinksVisible(boolean)\n     */\n    public boolean getLabelLinksVisible() {\n        return this.labelLinksVisible;\n    }\n    \n    /**\n     * Sets the flag that controls whether or not label linking lines are \n     * visible and sends a {@link PlotChangeEvent} to all registered listeners.\n     * Please take care when hiding the linking lines - depending on the data \n     * values, the labels can be displayed some distance away from the\n     * corresponding pie section.\n     * \n     * @param visible  the flag.\n     * \n     * @see #getLabelLinksVisible()\n     */\n    public void setLabelLinksVisible(boolean visible) {\n        this.labelLinksVisible = visible;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the margin (expressed as a percentage of the width or height) \n     * between the edge of the pie and the link point.\n     * \n     * @return The link margin (as a percentage, where 0.05 is five percent).\n     * \n     * @see #setLabelLinkMargin(double)\n     */\n    public double getLabelLinkMargin() {\n        return this.labelLinkMargin;   \n    }\n    \n    /**\n     * Sets the link margin and sends a {@link PlotChangeEvent} to all \n     * registered listeners.\n     * \n     * @param margin  the margin.\n     * \n     * @see #getLabelLinkMargin()\n     */\n    public void setLabelLinkMargin(double margin) {\n        this.labelLinkMargin = margin;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the paint used for the lines that connect pie sections to their \n     * corresponding labels.\n     * \n     * @return The paint (never <code>null</code>).\n     * \n     * @see #setLabelLinkPaint(Paint)\n     */\n    public Paint getLabelLinkPaint() {\n        return this.labelLinkPaint;   \n    }\n    \n    /**\n     * Sets the paint used for the lines that connect pie sections to their \n     * corresponding labels, and sends a {@link PlotChangeEvent} to all \n     * registered listeners.\n     * \n     * @param paint  the paint (<code>null</code> not permitted).\n     * \n     * @see #getLabelLinkPaint()\n     */\n    public void setLabelLinkPaint(Paint paint) {\n        if (paint == null) {\n            throw new IllegalArgumentException("Null \'paint\' argument.");\n        }\n        this.labelLinkPaint = paint;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the stroke used for the label linking lines.\n     * \n     * @return The stroke.\n     * \n     * @see #setLabelLinkStroke(Stroke)\n     */\n    public Stroke getLabelLinkStroke() {\n        return this.labelLinkStroke;   \n    }\n    \n    /**\n     * Sets the link stroke and sends a {@link PlotChangeEvent} to all \n     * registered listeners.\n     * \n     * @param stroke  the stroke.\n     * \n     * @see #getLabelLinkStroke()\n     */\n    public void setLabelLinkStroke(Stroke stroke) {\n        if (stroke == null) {\n            throw new IllegalArgumentException("Null \'stroke\' argument.");\n        }\n        this.labelLinkStroke = stroke;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the section label font.\n     *\n     * @return The font (never <code>null</code>).\n     * \n     * @see #setLabelFont(Font)\n     */\n    public Font getLabelFont() {\n        return this.labelFont;\n    }\n\n    /**\n     * Sets the section label font and sends a {@link PlotChangeEvent} to all \n     * registered listeners.\n     *\n     * @param font  the font (<code>null</code> not permitted).\n     * \n     * @see #getLabelFont()\n     */\n    public void setLabelFont(Font font) {\n        if (font == null) {\n            throw new IllegalArgumentException("Null \'font\' argument.");\n        }\n        this.labelFont = font;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the section label paint.\n     *\n     * @return The paint (never <code>null</code>).\n     * \n     * @see #setLabelPaint(Paint)\n     */\n    public Paint getLabelPaint() {\n        return this.labelPaint;\n    }\n\n    /**\n     * Sets the section label paint and sends a {@link PlotChangeEvent} to all \n     * registered listeners.\n     *\n     * @param paint  the paint (<code>null</code> not permitted).\n     * \n     * @see #getLabelPaint()\n     */\n    public void setLabelPaint(Paint paint) {\n        if (paint == null) {\n            throw new IllegalArgumentException("Null \'paint\' argument.");\n        }\n        this.labelPaint = paint;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the section label background paint.\n     *\n     * @return The paint (possibly <code>null</code>).\n     * \n     * @see #setLabelBackgroundPaint(Paint)\n     */\n    public Paint getLabelBackgroundPaint() {\n        return this.labelBackgroundPaint;\n    }\n\n    /**\n     * Sets the section label background paint and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     *\n     * @param paint  the paint (<code>null</code> permitted).\n     * \n     * @see #getLabelBackgroundPaint()\n     */\n    public void setLabelBackgroundPaint(Paint paint) {\n        this.labelBackgroundPaint = paint;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the section label outline paint.\n     *\n     * @return The paint (possibly <code>null</code>).\n     * \n     * @see #setLabelOutlinePaint(Paint)\n     */\n    public Paint getLabelOutlinePaint() {\n        return this.labelOutlinePaint;\n    }\n\n    /**\n     * Sets the section label outline paint and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     *\n     * @param paint  the paint (<code>null</code> permitted).\n     * \n     * @see #getLabelOutlinePaint()\n     */\n    public void setLabelOutlinePaint(Paint paint) {\n        this.labelOutlinePaint = paint;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the section label outline stroke.\n     *\n     * @return The stroke (possibly <code>null</code>).\n     * \n     * @see #setLabelOutlineStroke(Stroke)\n     */\n    public Stroke getLabelOutlineStroke() {\n        return this.labelOutlineStroke;\n    }\n\n    /**\n     * Sets the section label outline stroke and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     *\n     * @param stroke  the stroke (<code>null</code> permitted).\n     * \n     * @see #getLabelOutlineStroke()\n     */\n    public void setLabelOutlineStroke(Stroke stroke) {\n        this.labelOutlineStroke = stroke;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the section label shadow paint.\n     *\n     * @return The paint (possibly <code>null</code>).\n     * \n     * @see #setLabelShadowPaint(Paint)\n     */\n    public Paint getLabelShadowPaint() {\n        return this.labelShadowPaint;\n    }\n\n    /**\n     * Sets the section label shadow paint and sends a {@link PlotChangeEvent}\n     * to all registered listeners.\n     *\n     * @param paint  the paint (<code>null</code> permitted).\n     * \n     * @see #getLabelShadowPaint()\n     */\n    public void setLabelShadowPaint(Paint paint) {\n        this.labelShadowPaint = paint;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the label padding.\n     * \n     * @return The label padding (never <code>null</code>).\n     * \n     * @since 1.0.7\n     * \n     * @see #setLabelPadding(RectangleInsets)\n     */\n    public RectangleInsets getLabelPadding() {\n        return this.labelPadding;\n    }\n    \n    /**\n     * Sets the padding between each label and its outline and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param padding  the padding (<code>null</code> not permitted).\n     * \n     * @since 1.0.7\n     * \n     * @see #getLabelPadding()\n     */\n    public void setLabelPadding(RectangleInsets padding) {\n        if (padding == null) {\n            throw new IllegalArgumentException("Null \'padding\' argument.");\n        }\n        this.labelPadding = padding;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the flag that controls whether simple or extended labels are\n     * displayed on the plot.\n     * \n     * @return A boolean.\n     * \n     * @since 1.0.7\n     */\n    public boolean getSimpleLabels() {\n        return this.simpleLabels;\n    }\n    \n    /**\n     * Sets the flag that controls whether simple or extended labels are \n     * displayed on the plot, and sends a {@link PlotChangeEvent} to all \n     * registered listeners.\n     * \n     * @param simple  the new flag value.\n     * \n     * @since 1.0.7\n     */\n    public void setSimpleLabels(boolean simple) {\n        this.simpleLabels = simple;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the offset used for the simple labels, if they are displayed.\n     * \n     * @return The offset (never <code>null</code>).\n     * \n     * @since 1.0.7\n     * \n     * @see #setSimpleLabelOffset(RectangleInsets)\n     */\n    public RectangleInsets getSimpleLabelOffset() {\n        return this.simpleLabelOffset;\n    }\n    \n    /**\n     * Sets the offset for the simple labels and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param offset  the offset (<code>null</code> not permitted).\n     * \n     * @since 1.0.7\n     * \n     * @see #getSimpleLabelOffset()\n     */\n    public void setSimpleLabelOffset(RectangleInsets offset) {\n        if (offset == null) {\n            throw new IllegalArgumentException("Null \'offset\' argument.");\n        }\n        this.simpleLabelOffset = offset;\n        notifyListeners(new PlotChangeEvent(this));        \n    }\n    \n    /**\n     * Returns the object responsible for the vertical layout of the pie \n     * section labels.\n     * \n     * @return The label distributor (never <code>null</code>).\n     * \n     * @since 1.0.6\n     */\n    public AbstractPieLabelDistributor getLabelDistributor() {\n        return this.labelDistributor;\n    }\n    \n    /**\n     * Sets the label distributor and sends a {@link PlotChangeEvent} to all \n     * registered listeners.\n     * \n     * @param distributor  the distributor (<code>null</code> not permitted).\n     *\n     * @since 1.0.6\n     */\n    public void setLabelDistributor(AbstractPieLabelDistributor distributor) {\n        if (distributor == null) {\n            throw new IllegalArgumentException("Null \'distributor\' argument.");\n        }\n        this.labelDistributor = distributor;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the tool tip generator, an object that is responsible for \n     * generating the text items used for tool tips by the plot.  If the \n     * generator is <code>null</code>, no tool tips will be created.\n     *\n     * @return The generator (possibly <code>null</code>).\n     * \n     * @see #setToolTipGenerator(PieToolTipGenerator)\n     */\n    public PieToolTipGenerator getToolTipGenerator() {\n        return this.toolTipGenerator;\n    }\n\n    /**\n     * Sets the tool tip generator and sends a {@link PlotChangeEvent} to all \n     * registered listeners.  Set the generator to <code>null</code> if you \n     * don\'t want any tool tips.\n     *\n     * @param generator  the generator (<code>null</code> permitted).\n     * \n     * @see #getToolTipGenerator()\n     */\n    public void setToolTipGenerator(PieToolTipGenerator generator) {\n        this.toolTipGenerator = generator;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the URL generator.\n     *\n     * @return The generator (possibly <code>null</code>).\n     * \n     * @see #setURLGenerator(PieURLGenerator)\n     */\n    public PieURLGenerator getURLGenerator() {\n        return this.urlGenerator;\n    }\n\n    /**\n     * Sets the URL generator and sends a {@link PlotChangeEvent} to all \n     * registered listeners.\n     *\n     * @param generator  the generator (<code>null</code> permitted).\n     * \n     * @see #getURLGenerator()\n     */\n    public void setURLGenerator(PieURLGenerator generator) {\n        this.urlGenerator = generator;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n\n    /**\n     * Returns the minimum arc angle that will be drawn.  Pie sections for an \n     * angle smaller than this are not drawn, to avoid a JDK bug.\n     *\n     * @return The minimum angle.\n     * \n     * @see #setMinimumArcAngleToDraw(double)\n     */\n    public double getMinimumArcAngleToDraw() {\n        return this.minimumArcAngleToDraw;\n    }\n\n    /**\n     * Sets the minimum arc angle that will be drawn.  Pie sections for an \n     * angle smaller than this are not drawn, to avoid a JDK bug.  See this \n     * link for details:\n     * <br><br>\n     * <a href="http://www.jfree.org/phpBB2/viewtopic.php?t=2707">\n     * http://www.jfree.org/phpBB2/viewtopic.php?t=2707</a>\n     * <br><br>\n     * ...and this bug report in the Java Bug Parade:\n     * <br><br>\n     * <a href=\n     * "http://developer.java.sun.com/developer/bugParade/bugs/4836495.html">\n     * http://developer.java.sun.com/developer/bugParade/bugs/4836495.html</a>\n     *\n     * @param angle  the minimum angle.\n     * \n     * @see #getMinimumArcAngleToDraw()\n     */\n    public void setMinimumArcAngleToDraw(double angle) {\n        this.minimumArcAngleToDraw = angle;\n    }\n    \n    /**\n     * Returns the shape used for legend items.\n     * \n     * @return The shape (never <code>null</code>).\n     * \n     * @see #setLegendItemShape(Shape)\n     */\n    public Shape getLegendItemShape() {\n        return this.legendItemShape;\n    }\n\n    /**\n     * Sets the shape used for legend items and sends a {@link PlotChangeEvent}\n     * to all registered listeners.\n     * \n     * @param shape  the shape (<code>null</code> not permitted).\n     * \n     * @see #getLegendItemShape()\n     */\n    public void setLegendItemShape(Shape shape) {\n        if (shape == null) {\n            throw new IllegalArgumentException("Null \'shape\' argument.");\n        }\n        this.legendItemShape = shape;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the legend label generator.\n     * \n     * @return The legend label generator (never <code>null</code>).\n     * \n     * @see #setLegendLabelGenerator(PieSectionLabelGenerator)\n     */\n    public PieSectionLabelGenerator getLegendLabelGenerator() {\n        return this.legendLabelGenerator;\n    }\n    \n    /**\n     * Sets the legend label generator and sends a {@link PlotChangeEvent} to \n     * all registered listeners.\n     * \n     * @param generator  the generator (<code>null</code> not permitted).\n     * \n     * @see #getLegendLabelGenerator()\n     */\n    public void setLegendLabelGenerator(PieSectionLabelGenerator generator) {\n        if (generator == null) {\n            throw new IllegalArgumentException("Null \'generator\' argument.");\n        }\n        this.legendLabelGenerator = generator;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the legend label tool tip generator.\n     * \n     * @return The legend label tool tip generator (possibly <code>null</code>).\n     * \n     * @see #setLegendLabelToolTipGenerator(PieSectionLabelGenerator)\n     */\n    public PieSectionLabelGenerator getLegendLabelToolTipGenerator() {\n        return this.legendLabelToolTipGenerator;\n    }\n    \n    /**\n     * Sets the legend label tool tip generator and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param generator  the generator (<code>null</code> permitted).\n     * \n     * @see #getLegendLabelToolTipGenerator()\n     */\n    public void setLegendLabelToolTipGenerator(\n            PieSectionLabelGenerator generator) {\n        this.legendLabelToolTipGenerator = generator;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Returns the legend label URL generator.\n     * \n     * @return The legend label URL generator (possibly <code>null</code>).\n     * \n     * @see #setLegendLabelURLGenerator(PieURLGenerator)\n     * \n     * @since 1.0.4\n     */\n    public PieURLGenerator getLegendLabelURLGenerator() {\n        return this.legendLabelURLGenerator;\n    }\n    \n    /**\n     * Sets the legend label URL generator and sends a \n     * {@link PlotChangeEvent} to all registered listeners.\n     * \n     * @param generator  the generator (<code>null</code> permitted).\n     * \n     * @see #getLegendLabelURLGenerator()\n     * \n     * @since 1.0.4\n     */\n    public void setLegendLabelURLGenerator(PieURLGenerator generator) {\n        this.legendLabelURLGenerator = generator;\n        notifyListeners(new PlotChangeEvent(this));\n    }\n    \n    /**\n     * Initialises the drawing procedure.  This method will be called before \n     * the first item is rendered, giving the plot an opportunity to initialise\n     * any state information it wants to maintain.\n     *\n     * @param g2  the graphics device.\n     * @param plotArea  the plot area (<code>null</code> not permitted).\n     * @param plot  the plot.\n     * @param index  the secondary index (<code>null</code> for primary \n     *               renderer).\n     * @param info  collects chart rendering information for return to caller.\n     * \n     * @return A state object (maintains state information relevant to one \n     *         chart drawing).\n     */\n    public PiePlotState initialise(Graphics2D g2, Rectangle2D plotArea,\n            PiePlot plot, Integer index, PlotRenderingInfo info) {\n     \n        PiePlotState state = new PiePlotState(info);\n        state.setPassesRequired(2);\n            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                    plot.getDataset()));\n        state.setLatestAngle(plot.getStartAngle());\n        return state;\n        \n    }\n    \n    /**\n     * Draws the plot on a Java 2D graphics device (such as the screen or a \n     * printer).\n     *\n     * @param g2  the graphics device.\n     * @param area  the area within which the plot should be drawn.\n     * @param anchor  the anchor point (<code>null</code> permitted).\n     * @param parentState  the state from the parent plot, if there is one.\n     * @param info  collects info about the drawing \n     *              (<code>null</code> permitted).\n     */\n    public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,\n                     PlotState parentState, PlotRenderingInfo info) {\n\n        // adjust for insets...\n        RectangleInsets insets = getInsets();\n        insets.trim(area);\n\n        if (info != null) {\n            info.setPlotArea(area);\n            info.setDataArea(area);\n        }\n\n        drawBackground(g2, area);\n        drawOutline(g2, area);\n\n        Shape savedClip = g2.getClip();\n        g2.clip(area);\n\n        Composite originalComposite = g2.getComposite();\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, \n                getForegroundAlpha()));\n\n        if (!DatasetUtilities.isEmptyOrNull(this.dataset)) {\n            drawPie(g2, area, info);\n        }\n        else {\n            drawNoDataMessage(g2, area);\n        }\n\n        g2.setClip(savedClip);\n        g2.setComposite(originalComposite);\n\n        drawOutline(g2, area);\n\n    }\n\n    /**\n     * Draws the pie.\n     *\n     * @param g2  the graphics device.\n     * @param plotArea  the plot area.\n     * @param info  chart rendering info.\n     */\n    protected void drawPie(Graphics2D g2, Rectangle2D plotArea, \n                           PlotRenderingInfo info) {\n\n        PiePlotState state = initialise(g2, plotArea, this, null, info);\n\n        // adjust the plot area for interior spacing and labels...\n        double labelReserve = 0.0;\n        if (this.labelGenerator != null && !this.simpleLabels) {\n            labelReserve = this.labelGap + this.maximumLabelWidth;    \n        }\n        double gapHorizontal = plotArea.getWidth() * (this.interiorGap \n                + labelReserve) * 2.0;\n        double gapVertical = plotArea.getHeight() * this.interiorGap * 2.0;\n\n        \n        if (DEBUG_DRAW_INTERIOR) {\n            double hGap = plotArea.getWidth() * this.interiorGap;\n            double vGap = plotArea.getHeight() * this.interiorGap;\n        \n            double igx1 = plotArea.getX() + hGap;\n            double igx2 = plotArea.getMaxX() - hGap;\n            double igy1 = plotArea.getY() + vGap;\n            double igy2 = plotArea.getMaxY() - vGap;\n            g2.setPaint(Color.gray);\n            g2.draw(new Rectangle2D.Double(igx1, igy1, igx2 - igx1, \n                    igy2 - igy1));\n        }\n        \n        double linkX = plotArea.getX() + gapHorizontal / 2;\n        double linkY = plotArea.getY() + gapVertical / 2;\n        double linkW = plotArea.getWidth() - gapHorizontal;\n        double linkH = plotArea.getHeight() - gapVertical;\n        \n        // make the link area a square if the pie chart is to be circular...\n        if (this.circular) {\n            double min = Math.min(linkW, linkH) / 2;\n            linkX = (linkX + linkX + linkW) / 2 - min;\n            linkY = (linkY + linkY + linkH) / 2 - min;\n            linkW = 2 * min;\n            linkH = 2 * min;\n        }\n\n        // the link area defines the dog leg points for the linking lines to \n        // the labels\n        Rectangle2D linkArea = new Rectangle2D.Double(linkX, linkY, linkW, \n                linkH);\n        state.setLinkArea(linkArea);\n\n        if (DEBUG_DRAW_LINK_AREA) {\n            g2.setPaint(Color.blue);\n            g2.draw(linkArea);\n            g2.setPaint(Color.yellow);\n            g2.draw(new Ellipse2D.Double(linkArea.getX(), linkArea.getY(), \n                    linkArea.getWidth(), linkArea.getHeight()));\n        }\n        \n        // the explode area defines the max circle/ellipse for the exploded \n        // pie sections.  it is defined by shrinking the linkArea by the \n        // linkMargin factor.\n        double lm = 0.0;\n        if (!this.simpleLabels) {\n            lm = this.labelLinkMargin;\n        }\n        double hh = linkArea.getWidth() * lm * 2.0;\n        double vv = linkArea.getHeight() * lm * 2.0;\n        Rectangle2D explodeArea = new Rectangle2D.Double(linkX + hh / 2.0, \n                linkY + vv / 2.0, linkW - hh, linkH - vv);\n       \n        state.setExplodedPieArea(explodeArea);\n        \n        // the pie area defines the circle/ellipse for regular pie sections.\n        // it is defined by shrinking the explodeArea by the explodeMargin \n        // factor. \n        double maximumExplodePercent = getMaximumExplodePercent();\n        double percent = maximumExplodePercent / (1.0 + maximumExplodePercent);\n        \n        double h1 = explodeArea.getWidth() * percent;\n        double v1 = explodeArea.getHeight() * percent;\n        Rectangle2D pieArea = new Rectangle2D.Double(explodeArea.getX() \n                + h1 / 2.0, explodeArea.getY() + v1 / 2.0, \n                explodeArea.getWidth() - h1, explodeArea.getHeight() - v1);\n\n        if (DEBUG_DRAW_PIE_AREA) {\n            g2.setPaint(Color.green);\n            g2.draw(pieArea);\n        }\n        state.setPieArea(pieArea);\n        state.setPieCenterX(pieArea.getCenterX());\n        state.setPieCenterY(pieArea.getCenterY());\n        state.setPieWRadius(pieArea.getWidth() / 2.0);\n        state.setPieHRadius(pieArea.getHeight() / 2.0);\n        \n        // plot the data (unless the dataset is null)...\n        if ((this.dataset != null) && (this.dataset.getKeys().size() > 0)) {\n\n            List keys = this.dataset.getKeys();\n            double totalValue = DatasetUtilities.calculatePieDatasetTotal(\n                    this.dataset);\n\n            int passesRequired = state.getPassesRequired();\n            for (int pass = 0; pass < passesRequired; pass++) {\n                double runningTotal = 0.0;\n                for (int section = 0; section < keys.size(); section++) {\n                    Number n = this.dataset.getValue(section);\n                    if (n != null) {\n                        double value = n.doubleValue();\n                        if (value > 0.0) {\n                            runningTotal += value;\n                            drawItem(g2, section, explodeArea, state, pass);\n                        }\n                    } \n                }\n            }\n            if (this.simpleLabels) {\n                drawSimpleLabels(g2, keys, totalValue, plotArea, linkArea, \n                        state);\n            }\n            else {\n                drawLabels(g2, keys, totalValue, plotArea, linkArea, state);\n            }\n\n        }\n        else {\n            drawNoDataMessage(g2, plotArea);\n        }\n    }\n    \n    /**\n     * Draws a single data item.\n     *\n     * @param g2  the graphics device (<code>null</code> not permitted).\n     * @param section  the section index.\n     * @param dataArea  the data plot area.\n     * @param state  state information for one chart.\n     * @param currentPass  the current pass index.\n     */\n    protected void drawItem(Graphics2D g2, int section, Rectangle2D dataArea,\n                            PiePlotState state, int currentPass) {\n    \n        Number n = this.dataset.getValue(section);\n        if (n == null) {\n            return;   \n        }\n        double value = n.doubleValue();\n        double angle1 = 0.0;\n        double angle2 = 0.0;\n        \n        if (this.direction == Rotation.CLOCKWISE) {\n            angle1 = state.getLatestAngle();\n            angle2 = angle1 - value / state.getTotal() * 360.0;\n        }\n        else if (this.direction == Rotation.ANTICLOCKWISE) {\n            angle1 = state.getLatestAngle();\n            angle2 = angle1 + value / state.getTotal() * 360.0;         \n        }\n        else {\n            throw new IllegalStateException("Rotation type not recognised.");   \n        }\n        \n        double angle = (angle2 - angle1);\n        if (Math.abs(angle) > getMinimumArcAngleToDraw()) {\n            double ep = 0.0;\n            double mep = getMaximumExplodePercent();\n            if (mep > 0.0) {\n                ep = getExplodePercent(getSectionKey(section)) / mep;                \n            }\n            Rectangle2D arcBounds = getArcBounds(state.getPieArea(), \n                    state.getExplodedPieArea(), angle1, angle, ep);\n            Arc2D.Double arc = new Arc2D.Double(arcBounds, angle1, angle, \n                    Arc2D.PIE);\n            \n            if (currentPass == 0) {\n                if (this.shadowPaint != null) {\n                    Shape shadowArc = ShapeUtilities.createTranslatedShape(\n                            arc, (float) this.shadowXOffset, \n                            (float) this.shadowYOffset);\n                    g2.setPaint(this.shadowPaint);\n                    g2.fill(shadowArc);\n                }\n            }\n            else if (currentPass == 1) {\n                Comparable key = getSectionKey(section);\n                Paint paint = lookupSectionPaint(key, true);\n                g2.setPaint(paint);\n                g2.fill(arc);\n\n                Paint outlinePaint = lookupSectionOutlinePaint(key);\n                Stroke outlineStroke = lookupSectionOutlineStroke(key);\n                if (this.sectionOutlinesVisible) {\n                    g2.setPaint(outlinePaint);\n                    g2.setStroke(outlineStroke);\n                    g2.draw(arc);\n                }\n                \n                // update the linking line target for later\n                // add an entity for the pie section\n                if (state.getInfo() != null) {\n                    EntityCollection entities = state.getEntityCollection();\n                    if (entities != null) {\n                        String tip = null;\n                        if (this.toolTipGenerator != null) {\n                            tip = this.toolTipGenerator.generateToolTip(\n                                    this.dataset, key);\n                        }\n                        String url = null;\n                        if (this.urlGenerator != null) {\n                            url = this.urlGenerator.generateURL(this.dataset, \n                                    key, this.pieIndex);\n                        }\n                        PieSectionEntity entity = new PieSectionEntity(\n                                arc, this.dataset, this.pieIndex, section, key,\n                                tip, url);\n                        entities.add(entity);\n                    }\n                }\n            }\n        }    \n        state.setLatestAngle(angle2);\n    }\n    \n    /**\n     * Draws the pie section labels in the simple form.\n     * \n     * @param g2  the graphics device.\n     * @param keys  the section keys.\n     * @param totalValue  the total value for all sections in the pie.\n     * @param plotArea  the plot area.\n     * @param pieArea  the area containing the pie.\n     * @param state  the plot state.\n     *\n     * @since 1.0.7\n     */\n    protected void drawSimpleLabels(Graphics2D g2, List keys, \n            double totalValue, Rectangle2D plotArea, Rectangle2D pieArea, \n            PiePlotState state) {\n        \n        Composite originalComposite = g2.getComposite();\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, \n                1.0f));\n\n        RectangleInsets labelInsets = new RectangleInsets(UnitType.RELATIVE, \n                0.18, 0.18, 0.18, 0.18);\n        Rectangle2D labelsArea = labelInsets.createInsetRectangle(pieArea);\n        double runningTotal = 0.0;\n        Iterator iterator = keys.iterator();\n        while (iterator.hasNext()) {\n            Comparable key = (Comparable) iterator.next();\n            boolean include = true;\n            double v = 0.0;\n            Number n = getDataset().getValue(key);\n            if (n == null) {\n                include = !getIgnoreNullValues();\n            }\n            else {\n                v = n.doubleValue();\n                include = getIgnoreZeroValues() ? v > 0.0 : v >= 0.0;\n            }\n\n            if (include) {\n                runningTotal = runningTotal + v;\n                // work out the mid angle (0 - 90 and 270 - 360) = right, \n                // otherwise left\n                double mid = getStartAngle() + (getDirection().getFactor()\n                        * ((runningTotal - v / 2.0) * 360) / totalValue);\n                \n                Arc2D arc = new Arc2D.Double(labelsArea, getStartAngle(), \n                        mid - getStartAngle(), Arc2D.OPEN);\n                int x = (int) arc.getEndPoint().getX();\n                int y = (int) arc.getEndPoint().getY();\n                \n                PieSectionLabelGenerator labelGenerator = getLabelGenerator();\n                if (labelGenerator == null) {\n                    continue;\n                }\n                String label = labelGenerator.generateSectionLabel(\n                        this.dataset, key);\n                if (label == null) {\n                    continue;\n                }\n                g2.setFont(this.labelFont);\n                FontMetrics fm = g2.getFontMetrics();\n                Rectangle2D bounds = TextUtilities.getTextBounds(label, g2, fm);\n                Rectangle2D out = this.labelPadding.createOutsetRectangle(\n                        bounds);\n                Shape bg = ShapeUtilities.createTranslatedShape(out, \n                        x - bounds.getCenterX(), y - bounds.getCenterY());\n                if (this.labelShadowPaint != null) {\n                    Shape shadow = ShapeUtilities.createTranslatedShape(bg, \n                            this.shadowXOffset, this.shadowYOffset);\n                    g2.setPaint(this.labelShadowPaint);\n                    g2.fill(shadow);\n                }\n                if (this.labelBackgroundPaint != null) {\n                    g2.setPaint(this.labelBackgroundPaint);\n                    g2.fill(bg);\n                }\n                if (this.labelOutlinePaint != null \n                        && this.labelOutlineStroke != null) {\n                    g2.setPaint(this.labelOutlinePaint);\n                    g2.setStroke(this.labelOutlineStroke);\n                    g2.draw(bg);\n                }\n                \n                g2.setPaint(this.labelPaint);\n                g2.setFont(this.labelFont);\n                TextUtilities.drawAlignedString(getLabelGenerator()\n                        .generateSectionLabel(getDataset(), key), g2, x, y, \n                        TextAnchor.CENTER);\n                \n            }\n        }\n       \n        g2.setComposite(originalComposite);\n\n    }\n\n    /**\n     * Draws the labels for the pie sections.\n     * \n     * @param g2  the graphics device.\n     * @param keys  the keys.\n     * @param totalValue  the total value.\n     * @param plotArea  the plot area.\n     * @param linkArea  the link area.\n     * @param state  the state.\n     */\n    protected void drawLabels(Graphics2D g2, List keys, double totalValue, \n                              Rectangle2D plotArea, Rectangle2D linkArea, \n                              PiePlotState state) {   \n\n        Composite originalComposite = g2.getComposite();\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, \n                1.0f));\n\n        // classify the keys according to which side the label will appear...\n        DefaultKeyedValues leftKeys = new DefaultKeyedValues();\n        DefaultKeyedValues rightKeys = new DefaultKeyedValues();\n       \n        double runningTotal = 0.0;\n        Iterator iterator = keys.iterator();\n        while (iterator.hasNext()) {\n            Comparable key = (Comparable) iterator.next();\n            boolean include = true;\n            double v = 0.0;\n            Number n = this.dataset.getValue(key);\n            if (n == null) {\n                include = !this.ignoreNullValues;\n            }\n            else {\n                v = n.doubleValue();\n                include = this.ignoreZeroValues ? v > 0.0 : v >= 0.0;\n            }\n\n            if (include) {\n                runningTotal = runningTotal + v;\n                // work out the mid angle (0 - 90 and 270 - 360) = right, \n                // otherwise left\n                double mid = this.startAngle + (this.direction.getFactor()\n                        * ((runningTotal - v / 2.0) * 360) / totalValue);\n                if (Math.cos(Math.toRadians(mid)) < 0.0) {\n                    leftKeys.addValue(key, new Double(mid));\n                }\n                else {\n                    rightKeys.addValue(key, new Double(mid));\n                }\n            }\n        }\n       \n        g2.setFont(getLabelFont());\n        \n        // calculate the max label width from the plot dimensions, because\n        // a circular pie can leave a lot more room for labels...\n        double marginX = plotArea.getX() + this.interiorGap * plotArea.getWidth();\n        double gap = plotArea.getWidth() * this.labelGap;\n        double ww = linkArea.getX() - gap - marginX;\n        float labelWidth = (float) this.labelPadding.trimWidth(ww);\n        \n        // draw the labels...\n        if (this.labelGenerator != null) {\n            drawLeftLabels(leftKeys, g2, plotArea, linkArea, labelWidth, \n                    state);\n            drawRightLabels(rightKeys, g2, plotArea, linkArea, labelWidth, \n                    state);\n        }\n        g2.setComposite(originalComposite);\n\n    }\n\n    /**\n     * Draws the left labels.\n     * \n     * @param leftKeys  a collection of keys and angles (to the middle of the\n     *         section, in degrees) for the sections on the left side of the \n     *         plot.\n     * @param g2  the graphics device.\n     * @param plotArea  the plot area.\n     * @param linkArea  the link area.\n     * @param maxLabelWidth  the maximum label width.\n     * @param state  the state.\n     */\n    protected void drawLeftLabels(KeyedValues leftKeys, Graphics2D g2, \n                                  Rectangle2D plotArea, Rectangle2D linkArea, \n                                  float maxLabelWidth, PiePlotState state) {\n        \n        this.labelDistributor.clear();\n        double lGap = plotArea.getWidth() * this.labelGap;\n        double verticalLinkRadius = state.getLinkArea().getHeight() / 2.0;\n        for (int i = 0; i < leftKeys.getItemCount(); i++) {   \n            String label = this.labelGenerator.generateSectionLabel(\n                    this.dataset, leftKeys.getKey(i));\n            if (label != null) {\n                TextBlock block = TextUtilities.createTextBlock(label, \n                        this.labelFont, this.labelPaint, maxLabelWidth, \n                        new G2TextMeasurer(g2));\n                TextBox labelBox = new TextBox(block);\n                labelBox.setBackgroundPaint(this.labelBackgroundPaint);\n                labelBox.setOutlinePaint(this.labelOutlinePaint);\n                labelBox.setOutlineStroke(this.labelOutlineStroke);\n                labelBox.setShadowPaint(this.labelShadowPaint);\n                labelBox.setInteriorGap(this.labelPadding);\n                double theta = Math.toRadians(\n                        leftKeys.getValue(i).doubleValue());\n                double baseY = state.getPieCenterY() - Math.sin(theta) \n                               * verticalLinkRadius;\n                double hh = labelBox.getHeight(g2);\n\n                this.labelDistributor.addPieLabelRecord(new PieLabelRecord(\n                        leftKeys.getKey(i), theta, baseY, labelBox, hh,\n                        lGap / 2.0 + lGap / 2.0 * -Math.cos(theta), 0.9 \n                        + getExplodePercent(leftKeys.getKey(i))));\n            }\n        }\n        this.labelDistributor.distributeLabels(plotArea.getMinY(), \n                plotArea.getHeight());\n        for (int i = 0; i < this.labelDistributor.getItemCount(); i++) {\n            drawLeftLabel(g2, state, \n                    this.labelDistributor.getPieLabelRecord(i));\n        }\n    }\n    \n    /**\n     * Draws the right labels.\n     * \n     * @param keys  the keys.\n     * @param g2  the graphics device.\n     * @param plotArea  the plot area.\n     * @param linkArea  the link area.\n     * @param maxLabelWidth  the maximum label width.\n     * @param state  the state.\n     */\n    protected void drawRightLabels(KeyedValues keys, Graphics2D g2, \n                                   Rectangle2D plotArea, Rectangle2D linkArea, \n                                   float maxLabelWidth, PiePlotState state) {\n\n        // draw the right labels...\n        this.labelDistributor.clear();\n        double lGap = plotArea.getWidth() * this.labelGap;\n        double verticalLinkRadius = state.getLinkArea().getHeight() / 2.0;\n\n        for (int i = 0; i < keys.getItemCount(); i++) {\n            String label = this.labelGenerator.generateSectionLabel(\n                    this.dataset, keys.getKey(i));\n\n            if (label != null) {\n                TextBlock block = TextUtilities.createTextBlock(label, \n                        this.labelFont, this.labelPaint, maxLabelWidth, \n                        new G2TextMeasurer(g2));\n                TextBox labelBox = new TextBox(block);\n                labelBox.setBackgroundPaint(this.labelBackgroundPaint);\n                labelBox.setOutlinePaint(this.labelOutlinePaint);\n                labelBox.setOutlineStroke(this.labelOutlineStroke);\n                labelBox.setShadowPaint(this.labelShadowPaint);\n                labelBox.setInteriorGap(this.labelPadding);\n                double theta = Math.toRadians(keys.getValue(i).doubleValue());\n                double baseY = state.getPieCenterY() \n                              - Math.sin(theta) * verticalLinkRadius;\n                double hh = labelBox.getHeight(g2);\n                this.labelDistributor.addPieLabelRecord(new PieLabelRecord(\n                        keys.getKey(i), theta, baseY, labelBox, hh,\n                        lGap / 2.0 + lGap / 2.0 * Math.cos(theta), \n                        0.9 + getExplodePercent(keys.getKey(i))));\n            }\n        }\n        this.labelDistributor.distributeLabels(plotArea.getMinY(), \n                plotArea.getHeight());\n        for (int i = 0; i < this.labelDistributor.getItemCount(); i++) {\n            drawRightLabel(g2, state, \n                    this.labelDistributor.getPieLabelRecord(i));\n        }\n\n    }\n    \n    /**\n     * Returns a collection of legend items for the pie chart.\n     *\n     * @return The legend items (never <code>null</code>).\n     */\n    public LegendItemCollection getLegendItems() {\n\n        LegendItemCollection result = new LegendItemCollection();\n        if (this.dataset == null) {\n            return result;\n        }\n        List keys = this.dataset.getKeys();\n        int section = 0;\n        Shape shape = getLegendItemShape();\n        Iterator iterator = keys.iterator();\n        while (iterator.hasNext()) {\n            Comparable key = (Comparable) iterator.next();\n            Number n = this.dataset.getValue(key);\n            boolean include = true;\n            if (n == null) {\n                include = !this.ignoreNullValues;   \n            }\n            else {\n                double v = n.doubleValue();\n                if (v == 0.0) {\n                    include = !this.ignoreZeroValues;   \n                }\n                else {\n                    include = v > 0.0;   \n                }\n            }\n            if (include) {\n                String label = this.legendLabelGenerator.generateSectionLabel(\n                        this.dataset, key);\n                if (label != null) {\n                    String description = label;\n                    String toolTipText = null;\n                    if (this.legendLabelToolTipGenerator != null) {\n                        toolTipText = this.legendLabelToolTipGenerator\n                                .generateSectionLabel(this.dataset, key);\n                    }\n                    String urlText = null;\n                    if (this.legendLabelURLGenerator != null) {\n                        urlText = this.legendLabelURLGenerator.generateURL(\n                                this.dataset, key, this.pieIndex);\n                    }\n                    Paint paint = lookupSectionPaint(key, true);\n                    Paint outlinePaint = lookupSectionOutlinePaint(key);\n                    Stroke outlineStroke = lookupSectionOutlineStroke(key);\n                    LegendItem item = new LegendItem(label, description, \n                            toolTipText, urlText, true, shape, true, paint, \n                            true, outlinePaint, outlineStroke, \n                            false,          // line not visible\n                            new Line2D.Float(), new BasicStroke(), Color.black);\n                    item.setDataset(getDataset());\n                    result.add(item);\n                }\n                section++;\n            }\n            else {\n                section++;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Returns a short string describing the type of plot.\n     *\n     * @return The plot type.\n     */\n    public String getPlotType() {\n        return localizationResources.getString("Pie_Plot");\n    }\n\n    /**\n     * Returns a rectangle that can be used to create a pie section (taking\n     * into account the amount by which the pie section is \'exploded\').\n     *\n     * @param unexploded  the area inside which the unexploded pie sections are\n     *                    drawn.\n     * @param exploded  the area inside which the exploded pie sections are \n     *                  drawn.\n     * @param angle  the start angle.\n     * @param extent  the extent of the arc.\n     * @param explodePercent  the amount by which the pie section is exploded.\n     *\n     * @return A rectangle that can be used to create a pie section.\n     */\n    protected Rectangle2D getArcBounds(Rectangle2D unexploded, \n                                       Rectangle2D exploded,\n                                       double angle, double extent, \n                                       double explodePercent) {\n\n        if (explodePercent == 0.0) {\n            return unexploded;\n        }\n        else {\n            Arc2D arc1 = new Arc2D.Double(unexploded, angle, extent / 2, \n                    Arc2D.OPEN);\n            Point2D point1 = arc1.getEndPoint();\n            Arc2D.Double arc2 = new Arc2D.Double(exploded, angle, extent / 2, \n                    Arc2D.OPEN);\n            Point2D point2 = arc2.getEndPoint();\n            double deltaX = (point1.getX() - point2.getX()) * explodePercent;\n            double deltaY = (point1.getY() - point2.getY()) * explodePercent;\n            return new Rectangle2D.Double(unexploded.getX() - deltaX, \n                    unexploded.getY() - deltaY, unexploded.getWidth(), \n                    unexploded.getHeight());\n        }\n    }\n    \n    /**\n     * Draws a section label on the left side of the pie chart.\n     * \n     * @param g2  the graphics device.\n     * @param state  the state.\n     * @param record  the label record.\n     */\n    protected void drawLeftLabel(Graphics2D g2, PiePlotState state, \n                                 PieLabelRecord record) {\n\n        double anchorX = state.getLinkArea().getMinX();\n        double targetX = anchorX - record.getGap();\n        double targetY = record.getAllocatedY();\n        \n        if (this.labelLinksVisible) {\n            double theta = record.getAngle();\n            double linkX = state.getPieCenterX() + Math.cos(theta) \n                    * state.getPieWRadius() * record.getLinkPercent();\n            double linkY = state.getPieCenterY() - Math.sin(theta) \n                    * state.getPieHRadius() * record.getLinkPercent();\n            double elbowX = state.getPieCenterX() + Math.cos(theta) \n                    * state.getLinkArea().getWidth() / 2.0;\n            double elbowY = state.getPieCenterY() - Math.sin(theta) \n                    * state.getLinkArea().getHeight() / 2.0;\n            double anchorY = elbowY;\n            g2.setPaint(this.labelLinkPaint);\n            g2.setStroke(this.labelLinkStroke);\n            g2.draw(new Line2D.Double(linkX, linkY, elbowX, elbowY));\n            g2.draw(new Line2D.Double(anchorX, anchorY, elbowX, elbowY));\n            g2.draw(new Line2D.Double(anchorX, anchorY, targetX, targetY));\n        }\n        TextBox tb = record.getLabel();\n        tb.draw(g2, (float) targetX, (float) targetY, RectangleAnchor.RIGHT);\n        \n    }\n\n    /**\n     * Draws a section label on the right side of the pie chart.\n     * \n     * @param g2  the graphics device.\n     * @param state  the state.\n     * @param record  the label record.\n     */\n    protected void drawRightLabel(Graphics2D g2, PiePlotState state, \n                                  PieLabelRecord record) {\n        \n        double anchorX = state.getLinkArea().getMaxX();\n        double targetX = anchorX + record.getGap();\n        double targetY = record.getAllocatedY();\n        \n        if (this.labelLinksVisible) {\n            double theta = record.getAngle();\n            double linkX = state.getPieCenterX() + Math.cos(theta) \n                    * state.getPieWRadius() * record.getLinkPercent();\n            double linkY = state.getPieCenterY() - Math.sin(theta) \n                    * state.getPieHRadius() * record.getLinkPercent();\n            double elbowX = state.getPieCenterX() + Math.cos(theta) \n                    * state.getLinkArea().getWidth() / 2.0;\n            double elbowY = state.getPieCenterY() - Math.sin(theta) \n                    * state.getLinkArea().getHeight() / 2.0;\n            double anchorY = elbowY;\n            g2.setPaint(this.labelLinkPaint);\n            g2.setStroke(this.labelLinkStroke);\n            g2.draw(new Line2D.Double(linkX, linkY, elbowX, elbowY));\n            g2.draw(new Line2D.Double(anchorX, anchorY, elbowX, elbowY));\n            g2.draw(new Line2D.Double(anchorX, anchorY, targetX, targetY));\n        }\n        \n        TextBox tb = record.getLabel();\n        tb.draw(g2, (float) targetX, (float) targetY, RectangleAnchor.LEFT);\n    \n    }\n\n    /**\n     * Tests this plot for equality with an arbitrary object.  Note that the \n     * plot\'s dataset is NOT included in the test for equality.\n     *\n     * @param obj  the object to test against (<code>null</code> permitted).\n     *\n     * @return <code>true</code> or <code>false</code>.\n     */\n    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof PiePlot)) {\n            return false;\n        }\n        if (!super.equals(obj)) {\n            return false;\n        }\n        PiePlot that = (PiePlot) obj;\n        if (this.pieIndex != that.pieIndex) {\n            return false;\n        }\n        if (this.interiorGap != that.interiorGap) {\n            return false;\n        }\n        if (this.circular != that.circular) {\n            return false;\n        }\n        if (this.startAngle != that.startAngle) {\n            return false;\n        }\n        if (this.direction != that.direction) {\n            return false;\n        }\n        if (this.ignoreZeroValues != that.ignoreZeroValues) {\n            return false;\n        }\n        if (this.ignoreNullValues != that.ignoreNullValues) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.sectionPaintMap, \n                that.sectionPaintMap)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.baseSectionPaint, \n                that.baseSectionPaint)) {\n            return false;\n        }\n        if (this.sectionOutlinesVisible != that.sectionOutlinesVisible) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.sectionOutlinePaintMap, \n                that.sectionOutlinePaintMap)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(\n            this.baseSectionOutlinePaint, that.baseSectionOutlinePaint\n        )) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.sectionOutlineStrokeMap, \n                that.sectionOutlineStrokeMap)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(\n            this.baseSectionOutlineStroke, that.baseSectionOutlineStroke\n        )) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.shadowPaint, that.shadowPaint)) {\n            return false;\n        }\n        if (!(this.shadowXOffset == that.shadowXOffset)) {\n            return false;\n        }\n        if (!(this.shadowYOffset == that.shadowYOffset)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.explodePercentages, \n                that.explodePercentages)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelGenerator, \n                that.labelGenerator)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelBackgroundPaint, \n                that.labelBackgroundPaint)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelOutlinePaint, \n                that.labelOutlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOutlineStroke, \n                that.labelOutlineStroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelShadowPaint, \n                that.labelShadowPaint)) {\n            return false;\n        }\n        if (this.simpleLabels != that.simpleLabels) {\n            return false;\n        }\n        if (!this.simpleLabelOffset.equals(that.simpleLabelOffset)) {\n            return false;\n        }\n        if (!this.labelPadding.equals(that.labelPadding)) {\n            return false;\n        }\n        if (!(this.maximumLabelWidth == that.maximumLabelWidth)) {\n            return false;\n        }\n        if (!(this.labelGap == that.labelGap)) {\n            return false;\n        }\n        if (!(this.labelLinkMargin == that.labelLinkMargin)) {\n            return false;\n        }\n        if (this.labelLinksVisible != that.labelLinksVisible) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelLinkPaint, that.labelLinkPaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelLinkStroke, \n                that.labelLinkStroke)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.toolTipGenerator, \n                that.toolTipGenerator)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.urlGenerator, that.urlGenerator)) {\n            return false;\n        }\n        if (!(this.minimumArcAngleToDraw == that.minimumArcAngleToDraw)) {\n            return false;\n        }\n        if (!ShapeUtilities.equal(this.legendItemShape, that.legendItemShape)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.legendLabelGenerator, \n                that.legendLabelGenerator)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.legendLabelToolTipGenerator,\n                that.legendLabelToolTipGenerator)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.legendLabelURLGenerator,\n                that.legendLabelURLGenerator)) {\n            return false;\n        }\n        // can\'t find any difference...\n        return true;\n    }\n\n    /**\n     * Returns a clone of the plot.\n     *\n     * @return A clone.\n     *\n     * @throws CloneNotSupportedException if some component of the plot does \n     *         not support cloning.\n     */\n    public Object clone() throws CloneNotSupportedException {\n        PiePlot clone = (PiePlot) super.clone();\n        if (clone.dataset != null) {\n            clone.dataset.addChangeListener(clone);\n        }\n        if (this.urlGenerator instanceof PublicCloneable) {\n            clone.urlGenerator = (PieURLGenerator) ObjectUtilities.clone(\n                    this.urlGenerator);\n        }\n        clone.legendItemShape = ShapeUtilities.clone(this.legendItemShape);\n        if (this.legendLabelGenerator != null) {\n            clone.legendLabelGenerator = (PieSectionLabelGenerator) \n                    ObjectUtilities.clone(this.legendLabelGenerator);\n        }\n        if (this.legendLabelToolTipGenerator != null) {\n            clone.legendLabelToolTipGenerator = (PieSectionLabelGenerator) \n                    ObjectUtilities.clone(this.legendLabelToolTipGenerator);\n        }\n        if (this.legendLabelURLGenerator instanceof PublicCloneable) {\n            clone.legendLabelURLGenerator = (PieURLGenerator) \n                    ObjectUtilities.clone(this.legendLabelURLGenerator);\n        }\n        return clone;\n    }\n\n    /**\n     * Provides serialization support.\n     *\n     * @param stream  the output stream.\n     *\n     * @throws IOException  if there is an I/O error.\n     */\n    private void writeObject(ObjectOutputStream stream) throws IOException {\n        stream.defaultWriteObject();\n        SerialUtilities.writePaint(this.baseSectionPaint, stream);\n        SerialUtilities.writePaint(this.baseSectionOutlinePaint, stream);\n        SerialUtilities.writeStroke(this.baseSectionOutlineStroke, stream);\n        SerialUtilities.writePaint(this.shadowPaint, stream);\n        SerialUtilities.writePaint(this.labelPaint, stream);\n        SerialUtilities.writePaint(this.labelBackgroundPaint, stream);\n        SerialUtilities.writePaint(this.labelOutlinePaint, stream);\n        SerialUtilities.writeStroke(this.labelOutlineStroke, stream);\n        SerialUtilities.writePaint(this.labelShadowPaint, stream);\n        SerialUtilities.writePaint(this.labelLinkPaint, stream);\n        SerialUtilities.writeStroke(this.labelLinkStroke, stream);\n        SerialUtilities.writeShape(this.legendItemShape, stream);\n    }\n\n    /**\n     * Provides serialization support.\n     *\n     * @param stream  the input stream.\n     *\n     * @throws IOException  if there is an I/O error.\n     * @throws ClassNotFoundException  if there is a classpath problem.\n     */\n    private void readObject(ObjectInputStream stream) \n        throws IOException, ClassNotFoundException {\n        stream.defaultReadObject();\n        this.baseSectionPaint = SerialUtilities.readPaint(stream);\n        this.baseSectionOutlinePaint = SerialUtilities.readPaint(stream);\n        this.baseSectionOutlineStroke = SerialUtilities.readStroke(stream);\n        this.shadowPaint = SerialUtilities.readPaint(stream);\n        this.labelPaint = SerialUtilities.readPaint(stream);\n        this.labelBackgroundPaint = SerialUtilities.readPaint(stream);\n        this.labelOutlinePaint = SerialUtilities.readPaint(stream);\n        this.labelOutlineStroke = SerialUtilities.readStroke(stream);\n        this.labelShadowPaint = SerialUtilities.readPaint(stream);\n        this.labelLinkPaint = SerialUtilities.readPaint(stream);\n        this.labelLinkStroke = SerialUtilities.readStroke(stream);\n        this.legendItemShape = SerialUtilities.readShape(stream);\n    }\n\n}', 'tree': 'MethodDeclaration modifiers public_ter ^ ^ return_type BasicType name double_ter ^ ^ ^ ^ name meth0 ^ ^ body LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0.0_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ WhileStatement condition MethodInvocation qualifier loc1 ^ ^ member hasNext_ter ^ ^ ^ ^ body BlockStatement statements LocalVariableDeclaration type ReferenceType name Comparable_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType name Comparable_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc1 ^ ^ member next_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Number_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Cast type ReferenceType name Number_ter ^ ^ ^ ^ expression This selectors MemberReference member explodePercentages_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 1378, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
before@0 batch1 x: 0: root ^  ; []
after@0 batch1 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root member-member calculatePieDatasetTotal_ter ^ ^  ^ ^ ; ['copy-member']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root member-member getDataset_ter ^ ^  ^ ^ ; ['copy-member']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root qualifier-qualifier DatasetUtilities_ter ^ ^  ^ ^ ; ['copy-qualifier']
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root LocalVariableDeclaration ^ ^ ; ['root -> LocalVariableDeclaration']
copynode 0:  root BasicType-BasicType name double_ter ^ ^ ^  ^ ^ ; ['copy-BasicType']
before@1 batch0 x: -13.079170227050781: root qualifier-qualifier DatasetUtilities_ter ^ ^  ^ ^  ; ['copy-qualifier']
after@1 batch0 x: -13.079170227050781: root qualifier-qualifier DatasetUtilities_ter ^ ^  ^ ^  ; ['copy-qualifier']
before@1 batch1 x: -13.776347160339355: root BasicType-BasicType name double_ter ^ ^ ^  ^ ^  ; ['copy-BasicType']
after@1 batch1 x: -13.776347160339355: root BasicType-BasicType name double_ter ^ ^ ^  ^ ^  ; ['copy-BasicType']
copynode -0.06716941297054291:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.06716941297054291:  root modified ^ member-member getDataset_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.06716941297054291:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -0.06716941297054291:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -2.735954523086548:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.06716941297054291:  root modified ^ qualifier-qualifier par2 ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -0.06716941297054291:  root modified ^ member-member setTotal_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -2.735954523086548:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -0.06716941297054291:  root modified ^ qualifier-qualifier loc0 ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -2.735954523086548:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -2.735954523086548:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -0.06716941297054291:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -2.735954523086548:  root add ^ member-member calculatePieDatasetTotal_ter ^ ^  ^ ^ ; ['root -> add', 'copy-member']
copynode -2.735954523086548:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -2.735954523086548:  root add ^ member-member getDataset_ter ^ ^  ^ ^ ; ['root -> add', 'copy-member']
copynode -0.06716941297054291:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -0.06716941297054291:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -11.798602104187012:  root member-member calculatePieDatasetTotal_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -2.735954523086548:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -11.895406723022461:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -2.735954523086548:  root add ^ ^ ; ['root -> add', 'root -> End']
copynode -2.735954523086548:  root add ^ qualifier-qualifier DatasetUtilities_ter ^ ^  ^ ^ ; ['root -> add', 'copy-qualifier']
copynode -12.522003173828125:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -12.582111358642578:  root member-member getDataset_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -12.757102966308594:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -13.079170227050781:  root qualifier-qualifier DatasetUtilities_ter ^ ^  unknown ^ ^ ^ ; ['copy-qualifier', 'start -> unknown']
copynode -12.919954299926758:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -13.079170227050781:  root qualifier-qualifier DatasetUtilities_ter ^ ^  par0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par0']
copynode -11.895406723022461:  root ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -13.079170227050781:  root qualifier-qualifier DatasetUtilities_ter ^ ^  loc0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> loc0']
copynode -11.798602104187012:  root member-member calculatePieDatasetTotal_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -12.582111358642578:  root member-member getDataset_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -12.582111358642578:  root member-member getDataset_ter ^ ^  getName_ter ^ ^ ^ ; ['copy-member', 'member -> getName_ter']
copynode -13.079170227050781:  root qualifier-qualifier DatasetUtilities_ter ^ ^  par1 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par1']
copynode -12.919954299926758:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -12.582111358642578:  root member-member getDataset_ter ^ ^  getStartAngle_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.798602104187012:  root member-member calculatePieDatasetTotal_ter ^ ^  getName_ter ^ ^ ^ ; ['copy-member', 'member -> getName_ter']
copynode -12.757102966308594:  root StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member setPassesRequired_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.582111358642578:  root member-member getDataset_ter ^ ^  getDataset_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.757102966308594:  root StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getStartAngle_ter ^ ^ ^ ^ member setLatestAngle_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.582111358642578:  root member-member getDataset_ter ^ ^  toString_ter ^ ^ ^ ; ['copy-member', 'member -> toString_ter']
copynode -13.079170227050781:  root qualifier-qualifier DatasetUtilities_ter ^ ^  par2 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par2']
copynode -11.798602104187012:  root member-member calculatePieDatasetTotal_ter ^ ^  get_ter ^ ^ ^ ; ['copy-member', 'member -> get_ter']
copynode -11.798602104187012:  root member-member calculatePieDatasetTotal_ter ^ ^  toString_ter ^ ^ ^ ; ['copy-member', 'member -> toString_ter']
copynode -11.798602104187012:  root member-member calculatePieDatasetTotal_ter ^ ^  getStartAngle_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.582111358642578:  root member-member getDataset_ter ^ ^  get_ter ^ ^ ^ ; ['copy-member', 'member -> get_ter']
copynode -13.079170227050781:  root qualifier-qualifier DatasetUtilities_ter ^ ^  LOG_ter ^ ^ ^ ; ['copy-qualifier', 'qualifier -> LOG_ter']
copynode -13.079170227050781:  root qualifier-qualifier DatasetUtilities_ter ^ ^  par3 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par3']
copynode -13.079170227050781:  root qualifier-qualifier DatasetUtilities_ter ^ ^  DatasetUtilities_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -13.079170227050781:  root qualifier-qualifier DatasetUtilities_ter ^ ^  Math_ter ^ ^ ^ ; ['copy-qualifier', 'qualifier -> Math_ter']
copynode -11.798602104187012:  root member-member calculatePieDatasetTotal_ter ^ ^  add_ter ^ ^ ^ ; ['copy-member', 'member -> add_ter']
copynode -13.079170227050781:  root qualifier-qualifier DatasetUtilities_ter ^ ^  loc1 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> loc1']
copynode -12.582111358642578:  root member-member getDataset_ter ^ ^  isEmpty_ter ^ ^ ^ ; ['copy-member', 'member -> isEmpty_ter']
copynode -12.582111358642578:  root member-member getDataset_ter ^ ^  size_ter ^ ^ ^ ; ['copy-member', 'member -> size_ter']
copynode -12.582111358642578:  root member-member getDataset_ter ^ ^  par0 ^ ^ ^ ; ['copy-member', 'member -> par0']
copynode -11.798602104187012:  root member-member calculatePieDatasetTotal_ter ^ ^  getDataset_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.919954299926758:  root return_type par2 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -11.798602104187012:  root member-member calculatePieDatasetTotal_ter ^ ^  size_ter ^ ^ ^ ; ['copy-member', 'member -> size_ter']
copynode -11.798602104187012:  root member-member calculatePieDatasetTotal_ter ^ ^  debug_ter ^ ^ ^ ; ['copy-member', 'member -> debug_ter']
copynode -12.919954299926758:  root return_type par3 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -12.919954299926758:  root return_type ReferenceType name PiePlotState_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'copy-return_type']
copynode -12.919954299926758:  root return_type par1 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -12.919954299926758:  root return_type par4 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -12.919954299926758:  root return_type par0 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -12.757102966308594:  root StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.522003173828125:  root IfStatement par4 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -12.522003173828125:  root IfStatement par2 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -12.522003173828125:  root IfStatement par3 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -12.919954299926758:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -12.522003173828125:  root IfStatement par1 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -11.895406723022461:  root ReturnStatement par4 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -11.895406723022461:  root ReturnStatement par2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -11.895406723022461:  root ReturnStatement par3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -12.919954299926758:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.895406723022461:  root ReturnStatement par1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -12.522003173828125:  root IfStatement par0 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -11.895406723022461:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -11.895406723022461:  root ReturnStatement par0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -12.522003173828125:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -12.757102966308594:  root StatementExpression par0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -12.757102966308594:  root StatementExpression par1 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -12.757102966308594:  root StatementExpression par2 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -12.757102966308594:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -12.757102966308594:  root StatementExpression par3 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -12.757102966308594:  root StatementExpression par4 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -12.522003173828125:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -12.522003173828125:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -11.895406723022461:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -12.522003173828125:  root IfStatement loc0 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -0.16763637959957123:  root modified ^ LocalVariableDeclaration ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration']
copynode -1.8705248832702637:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -1.8705248832702637:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.16763637959957123:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-BasicType']
copynode -0.16763637959957123:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -1.8705248832702637:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -0.16763637959957123:  root modified ^ parameters ^ ^ ; ['root -> modified', 'root -> parameters']
copynode -0.16763637959957123:  root modified ^ control ^ ^ ; ['root -> modified', 'root -> control']
copynode -0.16763637959957123:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -1.8705248832702637:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -1.8705248832702637:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -1.8705248832702637:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -1.8705248832702637:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -1.8705248832702637:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -1.8705248832702637:  root add ^ parameters ^ ^ ; ['root -> add', 'root -> parameters']
copynode -1.8705248832702637:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -0.16763637959957123:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -0.16763637959957123:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -9.701601028442383:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -10.429725646972656:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -9.701601028442383:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -11.151322364807129:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -0.16763637959957123:  root modified ^ TernaryExpression ^ ^ ; ['root -> modified', 'root -> TernaryExpression']
copynode -0.16763637959957123:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter']
copynode -11.543890953063965:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -11.8387451171875:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -10.429725646972656:  root ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -13.414243698120117:  root LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -13.776347160339355:  root BasicType-BasicType name double_ter ^ ^ ^  name ^ ^ ^ ; ['copy-BasicType', 'BasicType -> name']
copynode -11.8387451171875:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -11.543890953063965:  root StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -9.701601028442383:  root return_type BasicType name double_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'copy-return_type']
copynode -13.414243698120117:  root LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -13.776347160339355:  root BasicType-BasicType name double_ter ^ ^ ^  name double_ter ^ ^ ^ ^ ; ['copy-BasicType', 'copy-BasicType']
copynode -13.776347160339355:  root BasicType-BasicType name double_ter ^ ^ ^  name double_ter ^ ^ ^ ^ ; ['copy-BasicType', 'copy-BasicType']
copynode -13.414243698120117:  root LocalVariableDeclaration type ReferenceType name Comparable_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType name Comparable_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc1 ^ ^ member next_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.8387451171875:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -13.414243698120117:  root LocalVariableDeclaration type ReferenceType name Number_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Cast type ReferenceType name Number_ter ^ ^ ^ ^ expression This selectors MemberReference member explodePercentages_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.8387451171875:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -13.414243698120117:  root LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -13.414243698120117:  root LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -13.776347160339355:  root BasicType-BasicType name double_ter ^ ^ ^  name ^ dimensions ^ ^ ^ ; ['copy-BasicType', 'BasicType -> name dimensions']
copynode -13.414243698120117:  root LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -9.701601028442383:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -11.151322364807129:  root IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.8387451171875:  root parameters loc1 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.8387451171875:  root parameters loc2 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -13.414243698120117:  root LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0.0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.8387451171875:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -11.8387451171875:  root parameters loc3 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.8387451171875:  root parameters loc0 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -13.414243698120117:  root LocalVariableDeclaration unknown ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'start -> unknown']
copynode -9.701601028442383:  root return_type loc2 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -13.776347160339355:  root BasicType-BasicType name double_ter ^ ^ ^  loc2 ^ ^ ^ ; ['copy-BasicType', 'copy-VariableDeclarator']
copynode -13.776347160339355:  root BasicType-BasicType name double_ter ^ ^ ^  loc1 ^ ^ ^ ; ['copy-BasicType', 'copy-VariableDeclarator']
copynode -9.701601028442383:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.701601028442383:  root return_type loc3 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.701601028442383:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -13.776347160339355:  root BasicType-BasicType name double_ter ^ ^ ^  loc3 ^ ^ ^ ; ['copy-BasicType', 'copy-VariableDeclarator']
copynode -13.776347160339355:  root BasicType-BasicType name double_ter ^ ^ ^  loc0 ^ ^ ^ ; ['copy-BasicType', 'copy-VariableDeclarator']
copynode -11.151322364807129:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -13.776347160339355:  root BasicType-BasicType name double_ter ^ ^ ^  unknown ^ ^ ^ ; ['copy-BasicType', 'start -> unknown']
copynode -10.429725646972656:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -11.151322364807129:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -11.543890953063965:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -11.151322364807129:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -10.429725646972656:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.429725646972656:  root ReturnStatement loc3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.429725646972656:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.543890953063965:  root StatementExpression loc0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -10.429725646972656:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.8387451171875:  root parameters unknown ^ ^ ^ ; ['root -> parameters', 'start -> unknown']
copynode -13.414243698120117:  root LocalVariableDeclaration loc2 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-VariableDeclarator']
copynode -11.151322364807129:  root IfStatement loc2 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -11.151322364807129:  root IfStatement loc0 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -11.543890953063965:  root StatementExpression loc1 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -11.543890953063965:  root StatementExpression loc3 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -11.151322364807129:  root IfStatement loc3 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -11.543890953063965:  root StatementExpression loc2 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -11.151322364807129:  root IfStatement loc1 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -11.543890953063965:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
before@2 batch0 x: -33.137128829956055: root IfStatement loc0 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch0 x: -33.137128829956055: root IfStatement loc0 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch1 x: -32.772616386413574: root StatementExpression label ^ expression ^ ^ ^  ; ['root -> StatementExpression', 'StatementExpression -> label expression']
after@2 batch1 x: -32.772616386413574: root StatementExpression label ^ expression ^ ^ ^  ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -0.7764046043157578:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -1.3012906163930893:  root modified ^ member-member getDataset_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -2.4587905257940292:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -2.599166139960289:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -2.8504793494939804:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -4.078202471137047:  root modified ^ member-member setTotal_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -3.8361084312200546:  root modified ^ qualifier-qualifier par2 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -5.011919260025024:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -1.3012906163930893:  root modified ^ member-member getDataset_ter ^ ^  getStartAngle_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.3012906163930893:  root modified ^ member-member getDataset_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter']
copynode -5.471763834357262:  root modified ^ qualifier-qualifier loc0 ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0']
copynode -0.7764046043157578:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  setPassesRequired_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.3012906163930893:  root modified ^ member-member getDataset_ter ^ ^  getDataset_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.3012906163930893:  root modified ^ member-member getDataset_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -0.7764046043157578:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  setLatestAngle_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.8361084312200546:  root modified ^ qualifier-qualifier par2 ^ ^  par3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par3']
copynode -3.8361084312200546:  root modified ^ qualifier-qualifier par2 ^ ^  par2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par2']
copynode -5.471763834357262:  root modified ^ qualifier-qualifier loc0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -2.599166139960289:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0']
copynode -0.7764046043157578:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -3.8361084312200546:  root modified ^ qualifier-qualifier par2 ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0']
copynode -3.8361084312200546:  root modified ^ qualifier-qualifier par2 ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1']
copynode -3.8361084312200546:  root modified ^ qualifier-qualifier par2 ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0']
copynode -2.599166139960289:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0']
copynode -1.3012906163930893:  root modified ^ member-member getDataset_ter ^ ^  toString_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> toString_ter']
copynode -0.7764046043157578:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  calculatePieDatasetTotal_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.8504793494939804:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member setPassesRequired_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.471763834357262:  root modified ^ qualifier-qualifier loc0 ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0']
copynode -5.471763834357262:  root modified ^ qualifier-qualifier loc0 ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1']
copynode -3.8361084312200546:  root modified ^ qualifier-qualifier par2 ^ ^  par4 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par4']
copynode -2.8504793494939804:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getStartAngle_ter ^ ^ ^ ^ member setLatestAngle_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -0.7764046043157578:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  getStartAngle_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.3012906163930893:  root modified ^ member-member getDataset_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter']
copynode -2.599166139960289:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1']
copynode -3.8361084312200546:  root modified ^ qualifier-qualifier par2 ^ ^  DatasetUtilities_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -0.7764046043157578:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter']
copynode -1.3012906163930893:  root modified ^ member-member getDataset_ter ^ ^  calculatePieDatasetTotal_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -5.471763834357262:  root modified ^ qualifier-qualifier loc0 ^ ^  par2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par2']
copynode -9.033365488052368:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -3.8361084312200546:  root modified ^ qualifier-qualifier par2 ^ ^  par5 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par5']
copynode -2.599166139960289:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  DatasetUtilities_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -5.471763834357262:  root modified ^ qualifier-qualifier loc0 ^ ^  loc3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc3']
copynode -9.351831674575806:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -1.3012906163930893:  root modified ^ member-member getDataset_ter ^ ^  size_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> size_ter']
copynode -0.7764046043157578:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter']
copynode -1.3012906163930893:  root modified ^ member-member getDataset_ter ^ ^  isEmpty_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> isEmpty_ter']
copynode -0.7764046043157578:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  toString_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> toString_ter']
copynode -0.7764046043157578:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter']
copynode -2.599166139960289:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  LOG_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> LOG_ter']
copynode -5.471763834357262:  root modified ^ qualifier-qualifier loc0 ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc1']
copynode -3.8361084312200546:  root modified ^ qualifier-qualifier par2 ^ ^  Math_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> Math_ter']
copynode -2.599166139960289:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  par2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par2']
copynode -9.868005976080894:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -4.078202471137047:  root modified ^ member-member setTotal_ter ^ ^  setPassesRequired_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -10.006973028182983:  root add ^ member-member calculatePieDatasetTotal_ter ^ ^  unknown ^ ^ ^ ; ['root -> add', 'copy-member', 'start -> unknown']
copynode -5.471763834357262:  root modified ^ qualifier-qualifier loc0 ^ ^  par3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par3']
copynode -10.332762002944946:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -5.471763834357262:  root modified ^ qualifier-qualifier loc0 ^ ^  LOG_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> LOG_ter']
copynode -5.471763834357262:  root modified ^ qualifier-qualifier loc0 ^ ^  loc2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc2']
copynode -2.599166139960289:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  Math_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> Math_ter']
copynode -2.599166139960289:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc1']
copynode -2.4587905257940292:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getStartAngle_ter ^ ^ ^ ^ member setLatestAngle_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.599166139960289:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  par3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par3']
copynode -10.904061555862427:  root add ^ member-member getDataset_ter ^ ^  unknown ^ ^ ^ ; ['root -> add', 'copy-member', 'start -> unknown']
copynode -9.033365488052368:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -4.078202471137047:  root modified ^ member-member setTotal_ter ^ ^  setLatestAngle_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.4587905257940292:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member setPassesRequired_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.078202471137047:  root modified ^ member-member setTotal_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -4.078202471137047:  root modified ^ member-member setTotal_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter']
copynode -11.356083139777184:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -9.351831674575806:  root add ^ LocalVariableDeclaration type ReferenceType name PiePlotState_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name PiePlotState_ter ^ ^ ^ ^ arguments MemberReference member par4 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.875389337539673:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -4.078202471137047:  root modified ^ member-member setTotal_ter ^ ^  e_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> e_ter']
copynode -2.8504793494939804:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -11.930758979171515:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -4.078202471137047:  root modified ^ member-member setTotal_ter ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> add_ter']
copynode -11.824330540373921:  root member-member calculatePieDatasetTotal_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['copy-member', 'start -> unknown', 'root -> StatementExpression']
copynode -12.087482690811157:  root add ^ qualifier-qualifier DatasetUtilities_ter ^ ^  unknown ^ ^ ^ ; ['root -> add', 'copy-qualifier', 'start -> unknown']
copynode -12.767145826481283:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -12.652460493147373:  root member-member getDataset_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown', 'root -> End']
copynode -12.087482690811157:  root add ^ qualifier-qualifier DatasetUtilities_ter ^ ^  loc0 ^ ^ ^ ; ['root -> add', 'copy-qualifier', 'qualifier -> loc0']
copynode -4.078202471137047:  root modified ^ member-member setTotal_ter ^ ^  setTotal_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -12.522535048308782:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -4.078202471137047:  root modified ^ member-member setTotal_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter']
copynode -11.824330540373921:  root member-member calculatePieDatasetTotal_ter ^ ^  unknown ^ ^ member-member calculatePieDatasetTotal_ter ^ ^  ^ ^ ; ['copy-member', 'start -> unknown', 'copy-member']
copynode -12.522535048308782:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -4.078202471137047:  root modified ^ member-member setTotal_ter ^ ^  put_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> put_ter']
copynode -11.930758979171515:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -13.376833200454712:  root qualifier-qualifier DatasetUtilities_ter ^ ^  unknown ^ ^ ^ ; ['copy-qualifier', 'start -> unknown', 'root -> End']
copynode -2.4587905257940292:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -11.824330540373921:  root member-member calculatePieDatasetTotal_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown', 'root -> End']
copynode -12.652460493147373:  root member-member getDataset_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['copy-member', 'start -> unknown', 'root -> StatementExpression']
copynode -12.522535048308782:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -12.087482690811157:  root add ^ qualifier-qualifier DatasetUtilities_ter ^ ^  par0 ^ ^ ^ ; ['root -> add', 'copy-qualifier', 'qualifier -> par0']
copynode -10.332762002944946:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -10.904061555862427:  root add ^ member-member getDataset_ter ^ ^  meth0 ^ ^ ^ ; ['root -> add', 'copy-member', 'member -> meth0']
copynode -11.824330540373921:  root member-member calculatePieDatasetTotal_ter ^ ^  unknown ^ ^ member-member getDataset_ter ^ ^  ^ ^ ; ['copy-member', 'start -> unknown', 'copy-member']
copynode -1.8117322772741318:  root modified ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -2.1819701492786407:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -3.3438944816589355:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -4.0207629054784775:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  name ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name']
copynode -1.8117322772741318:  root modified ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -5.31829546391964:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.830087184906006:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -4.0207629054784775:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  name double_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -6.657338127493858:  root modified ^ parameters FormalParameter ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter']
copynode -4.0207629054784775:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  name double_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -7.174397453665733:  root modified ^ control EnhancedForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl']
copynode -7.271704658865929:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -7.4170241355896:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -3.3438944816589355:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.4896159172058105:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -7.575562953948975:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -5.830087184906006:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.999326229095459:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -1.8117322772741318:  root modified ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -7.993550777435303:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -6.657338127493858:  root modified ^ parameters ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> End']
copynode -5.31829546391964:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -9.02506971359253:  root add ^ parameters FormalParameter ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter']
copynode -1.8117322772741318:  root modified ^ LocalVariableDeclaration type ReferenceType name Comparable_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType name Comparable_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc1 ^ ^ member next_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -1.8117322772741318:  root modified ^ LocalVariableDeclaration type ReferenceType name Number_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Cast type ReferenceType name Number_ter ^ ^ ^ ^ expression This selectors MemberReference member explodePercentages_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.345105648040771:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -1.8117322772741318:  root modified ^ LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -4.0207629054784775:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  name ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions']
copynode -10.00674007833004:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -1.8117322772741318:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -10.511190257966518:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -7.174397453665733:  root modified ^ control ForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> ForControl']
copynode -7.4170241355896:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -11.119195580482483:  root return_type BasicType name double_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'copy-BasicType']
copynode -10.056150108575821:  root return_type ReferenceType name Iterator_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -11.28591488301754:  root modified ^ TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ; ['root -> modified', 'root -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -11.508827671408653:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter', 'root -> End']
copynode -10.056150108575821:  root return_type ReferenceType name Number_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -11.151652092434233:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -7.4170241355896:  root add ^ LocalVariableDeclaration type ReferenceType name Comparable_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType name Comparable_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc1 ^ ^ member next_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.02506971359253:  root add ^ parameters ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> End']
copynode -7.4170241355896:  root add ^ LocalVariableDeclaration type ReferenceType name Number_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Cast type ReferenceType name Number_ter ^ ^ ^ ^ expression This selectors MemberReference member explodePercentages_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -10.056150108575821:  root return_type ReferenceType name Comparable_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -11.570398908108473:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -10.056150108575821:  root return_type ReferenceType name Number_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -7.4896159172058105:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -10.511190257966518:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -7.993550777435303:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -7.4896159172058105:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -10.056150108575821:  root return_type ReferenceType name Comparable_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -11.929896667599678:  root parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -11.151652092434233:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -10.056150108575821:  root return_type ReferenceType name ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -10.056150108575821:  root return_type ReferenceType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name']
copynode -11.929896667599678:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -11.28591488301754:  root modified ^ TernaryExpression condition ^ ^ ^ ; ['root -> modified', 'root -> TernaryExpression', 'TernaryExpression -> condition']
copynode -13.014685869216919:  root ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.4170241355896:  root add ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.570398908108473:  root StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -10.511190257966518:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -11.151652092434233:  root IfStatement condition This ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -2.1819701492786407:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -1.8117322772741318:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0.0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -4.0207629054784775:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  loc2 ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-VariableDeclarator']
copynode -13.461925342679024:  root LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -11.151652092434233:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -1.8117322772741318:  root modified ^ LocalVariableDeclaration unknown ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'start -> unknown']
copynode -9.345105648040771:  root add ^ BreakStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> IfStatement']
copynode -10.00674007833004:  root modified ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -11.570398908108473:  root StatementExpression expression This ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -10.511190257966518:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -7.575562953948975:  root add ^ WhileStatement condition MethodInvocation qualifier loc1 ^ ^ member hasNext_ter ^ ^ ^ ^ body BlockStatement statements LocalVariableDeclaration type ReferenceType name Comparable_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType name Comparable_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc1 ^ ^ member next_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Number_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Cast type ReferenceType name Number_ter ^ ^ ^ ^ expression This selectors MemberReference member explodePercentages_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'copy-WhileStatement']
copynode -11.119195580482483:  root return_type BasicType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'BasicType -> name']
copynode -7.4170241355896:  root add ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -10.511190257966518:  root ReturnStatement expression This_ter ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This_ter']
copynode -9.345105648040771:  root add ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -7.4896159172058105:  root add ^ ReturnStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement']
copynode -4.0207629054784775:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  loc3 ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-VariableDeclarator']
copynode -4.0207629054784775:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-VariableDeclarator']
copynode -6.657338127493858:  root modified ^ parameters MemberReference ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> MemberReference']
copynode -11.570398908108473:  root StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -13.84019723534584:  root BasicType-BasicType name double_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['copy-BasicType', 'BasicType -> name', 'name -> int_ter']
copynode -11.119195580482483:  root return_type BasicType name double_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'copy-BasicType']
copynode -7.4170241355896:  root add ^ LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -7.993550777435303:  root add ^ control ForControl_ter ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl_ter']
copynode -13.84019723534584:  root BasicType-BasicType name double_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['copy-BasicType', 'BasicType -> name', 'name -> long_ter']
copynode -11.570398908108473:  root StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -6.657338127493858:  root modified ^ parameters InferredFormalParameter ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> InferredFormalParameter']
copynode -14.375409364700317:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End', 'root -> End']
copynode -11.929896667599678:  root parameters FormalParameter annotations ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> annotations type name']
copynode -7.4896159172058105:  root add ^ ReturnStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement_ter']
copynode -10.056150108575821:  root return_type ReferenceType name ^ dimensions ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name dimensions']
copynode -15.198667287826538:  root StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.4896159172058105:  root add ^ ReturnStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> BreakStatement_ter']
copynode -7.174397453665733:  root modified ^ control ForControl_ter ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> ForControl_ter']
copynode -4.0207629054784775:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-VariableDeclarator']
copynode -10.511190257966518:  root ReturnStatement expression This ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This']
copynode -7.4896159172058105:  root add ^ ReturnStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ContinueStatement_ter']
before@3 batch0 x: -14.576664181426167: root member-member calculatePieDatasetTotal_ter ^ ^  unknown ^ ^ member-member getDataset_ter ^ ^  ^ ^  ; ['copy-member', 'start -> unknown', 'copy-member']
after@3 batch0 x: -14.576664181426167: root member-member calculatePieDatasetTotal_ter ^ ^  unknown ^ ^ member-member getDataset_ter ^ ^  ^ ^  ; ['copy-member', 'start -> unknown', 'copy-member']
before@3 batch1 x: -15.672074794769287: root add ^ ReturnStatement_ter ^ ContinueStatement_ter ^ ^  ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ContinueStatement_ter']
after@3 batch1 x: -15.672074794769287: root add ^ ReturnStatement_ter ^ ContinueStatement_ter ^ ^  ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ContinueStatement_ter']
copynode -0.7882602922618389:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -1.349302839487791:  root modified ^ member-member getDataset_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -2.4593161384109408:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.626181438565254:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -2.8625147929415107:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -4.085081505589187:  root modified ^ member-member setTotal_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -4.124464198946953:  root modified ^ qualifier-qualifier par2 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -5.302340134978294:  root modified ^ member-member getDataset_ter ^ ^  getStartAngle_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.0122593027190305:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -5.862383469939232:  root modified ^ member-member getDataset_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter', 'root -> End']
copynode -5.0122593027190305:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -6.213027641177177:  root modified ^ qualifier-qualifier loc0 ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0', 'root -> End']
copynode -6.275637373328209:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  setPassesRequired_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.320206269621849:  root modified ^ member-member getDataset_ter ^ ^  getDataset_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.343626603484154:  root modified ^ member-member getDataset_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -6.699292406439781:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  setLatestAngle_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.728454813361168:  root modified ^ qualifier-qualifier par2 ^ ^  par3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par3', 'root -> End']
copynode -6.811962112784386:  root modified ^ qualifier-qualifier par2 ^ ^  par2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par2', 'root -> End']
copynode -5.0122593027190305:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -6.88142167031765:  root modified ^ qualifier-qualifier loc0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -7.0054690688848495:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0', 'root -> End']
copynode -7.023863539099693:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -7.157396540045738:  root modified ^ qualifier-qualifier par2 ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0', 'root -> End']
copynode -7.307604059576988:  root modified ^ qualifier-qualifier par2 ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1', 'root -> End']
copynode -7.32217238843441:  root modified ^ qualifier-qualifier par2 ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0', 'root -> End']
copynode -7.565268263220787:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0', 'root -> End']
copynode -2.8625147929415107:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -7.719063386321068:  root modified ^ member-member getDataset_ter ^ ^  toString_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> toString_ter', 'root -> End']
copynode -7.805954679846764:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  calculatePieDatasetTotal_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.872760280966759:  root modified ^ qualifier-qualifier loc0 ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0', 'root -> End']
copynode -7.8671939224004745:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member setPassesRequired_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -8.032992824912071:  root modified ^ qualifier-qualifier loc0 ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1', 'root -> End']
copynode -2.4593161384109408:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -8.089046701788902:  root modified ^ qualifier-qualifier par2 ^ ^  par4 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par4', 'root -> End']
copynode -8.141119703650475:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  getStartAngle_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -8.121882185339928:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getStartAngle_ter ^ ^ ^ ^ member setLatestAngle_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -8.45700989663601:  root modified ^ member-member getDataset_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter', 'root -> End']
copynode -8.59754441678524:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1', 'root -> End']
copynode -2.4593161384109408:  root modified ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -8.868763193488121:  root modified ^ qualifier-qualifier par2 ^ ^  DatasetUtilities_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -9.01114009320736:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter', 'root -> End']
copynode -9.07117711007595:  root modified ^ member-member getDataset_ter ^ ^  calculatePieDatasetTotal_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -9.151038870215416:  root modified ^ qualifier-qualifier loc0 ^ ^  par2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par2', 'root -> End']
copynode -9.204195246100426:  root modified ^ qualifier-qualifier par2 ^ ^  par5 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par5', 'root -> End']
copynode -9.208231672644615:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  DatasetUtilities_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -9.45326779782772:  root modified ^ qualifier-qualifier loc0 ^ ^  loc3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc3', 'root -> End']
copynode -9.473855808377266:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -9.489636525511742:  root modified ^ member-member getDataset_ter ^ ^  size_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> size_ter', 'root -> End']
copynode -9.50409434735775:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter', 'root -> End']
copynode -9.509710416197777:  root modified ^ member-member getDataset_ter ^ ^  isEmpty_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> isEmpty_ter', 'root -> End']
copynode -9.580190882086754:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  toString_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> toString_ter', 'root -> End']
copynode -9.597913011908531:  root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter', 'root -> End']
copynode -9.628269895911217:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  LOG_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> LOG_ter', 'root -> End']
copynode -9.631877645850182:  root modified ^ qualifier-qualifier loc0 ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc1', 'root -> End']
copynode -2.8625147929415107:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -9.72518752515316:  root modified ^ qualifier-qualifier par2 ^ ^  Math_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> Math_ter', 'root -> End']
copynode -9.75077699124813:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  par2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par2', 'root -> End']
copynode -2.8625147929415107:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -9.892043337225914:  root modified ^ member-member setTotal_ter ^ ^  setPassesRequired_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -10.02138126641512:  root add ^ member-member calculatePieDatasetTotal_ter ^ ^  unknown ^ ^ ^ ; ['root -> add', 'copy-member', 'start -> unknown', 'root -> End']
copynode -10.086040243506432:  root modified ^ qualifier-qualifier loc0 ^ ^  par3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par3', 'root -> End']
copynode -9.188857212662697:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -2.4593161384109408:  root modified ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -9.868887917604297:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -9.188857212662697:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -10.533195242285728:  root modified ^ qualifier-qualifier loc0 ^ ^  LOG_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> LOG_ter', 'root -> End']
copynode -7.8671939224004745:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member setPassesRequired_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -10.592628225684166:  root modified ^ qualifier-qualifier loc0 ^ ^  loc2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc2', 'root -> End']
copynode -9.188857212662697:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -8.121882185339928:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getStartAngle_ter ^ ^ ^ ^ member setLatestAngle_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -10.659457430243492:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  Math_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> Math_ter', 'root -> End']
copynode -2.8625147929415107:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -10.687436327338219:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc1', 'root -> End']
copynode -10.687473997473717:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getStartAngle_ter ^ ^ ^ ^ member setLatestAngle_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -10.784486040472984:  root modified ^ qualifier-qualifier DatasetUtilities_ter ^ ^  par3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par3', 'root -> End']
copynode -10.961206935346127:  root add ^ member-member getDataset_ter ^ ^  unknown ^ ^ ^ ; ['root -> add', 'copy-member', 'start -> unknown', 'root -> End']
copynode -11.019042238593102:  root modified ^ member-member setTotal_ter ^ ^  setLatestAngle_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -10.977802753448486:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -11.05823777616024:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member setPassesRequired_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.4593161384109408:  root modified ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -9.868887917604297:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -5.0122593027190305:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -11.212772116065025:  root modified ^ member-member setTotal_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -2.4593161384109408:  root modified ^ StatementExpression expression ClassCreator ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> ClassCreator']
copynode -11.33765672147274:  root modified ^ member-member setTotal_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter', 'root -> End']
copynode -11.35866574360989:  root modified ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -5.0122593027190305:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -2.8625147929415107:  root add ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -11.566837549209595:  root add ^ LocalVariableDeclaration type ReferenceType name PiePlotState_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name PiePlotState_ter ^ ^ ^ ^ arguments MemberReference member par4 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -2.4593161384109408:  root modified ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -12.102534234523773:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -12.149035677313805:  root modified ^ member-member setTotal_ter ^ ^  e_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> e_ter', 'root -> End']
copynode -9.188857212662697:  root add ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -12.163355097174644:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -12.249270662665367:  root modified ^ member-member setTotal_ter ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> add_ter', 'root -> End']
copynode -12.341140719130635:  root member-member calculatePieDatasetTotal_ter ^ ^  unknown ^ ^ StatementExpression expression ^ ^ ^ ; ['copy-member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.8608935736119747:  root modified ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -2.1822667263331823:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -2.1822667263331823:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.3602977879345417:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.1822667263331823:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -4.214157357811928:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> long_ter']
copynode -3.3602977879345417:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -4.949371561408043:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter']
copynode -4.214157357811928:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> int_ter']
copynode -2.1822667263331823:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -3.3602977879345417:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -5.343819899484515:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -6.142800554633141:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  name double_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -3.3602977879345417:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -5.98729582130909:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -1.8608935736119747:  root modified ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -5.343819899484515:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -3.3602977879345417:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -7.1055900901556015:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  name double_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -7.204944813624024:  root modified ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -2.1822667263331823:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -7.472047738730907:  root add ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -7.476278781890869:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.826414868235588:  root modified ^ parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -2.1822667263331823:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.2719676095293835:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -7.793002128601074:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -5.98729582130909:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -3.3602977879345417:  root add ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -7.5831356551498175:  root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -6.826414868235588:  root modified ^ parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -5.343819899484515:  root modified ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -2.1822667263331823:  root add ^ IfStatement condition Cast ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast']
copynode -2.1822667263331823:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member hasNext_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -8.362873017787933:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -5.343819899484515:  root modified ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -1.8608935736119747:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'copy-type']
copynode -8.539633736014366:  root modified ^ parameters ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> End', 'root -> End']
copynode -8.025729835033417:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -9.011952385306358:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.2719676095293835:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -9.1585583537817:  root modified ^ LocalVariableDeclaration type ReferenceType name Comparable_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType name Comparable_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc1 ^ ^ member next_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -3.3602977879345417:  root add ^ StatementExpression expression SuperConstructorInvocation_ter ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation_ter']
copynode -9.35229729115963:  root modified ^ LocalVariableDeclaration type ReferenceType name Number_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Cast type ReferenceType name Number_ter ^ ^ ^ ^ expression This selectors MemberReference member explodePercentages_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -7.5831356551498175:  root add ^ WhileStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MethodInvocation']
copynode -5.98729582130909:  root add ^ ReturnStatement expression This_ter ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This_ter']
copynode -5.98729582130909:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -9.381671413779259:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators', 'modifiers -> final_ter']
copynode -5.343819899484515:  root modified ^ StatementExpression expression This_ter ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This_ter']
copynode -2.1822667263331823:  root add ^ IfStatement condition TernaryExpression ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> TernaryExpression']
copynode -7.2719676095293835:  root modified ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -7.5831356551498175:  root add ^ WhileStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MemberReference']
copynode -5.98729582130909:  root add ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -1.8608935736119747:  root modified ^ LocalVariableDeclaration type loc0 ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'copy-VariableDeclarator']
copynode -3.3602977879345417:  root add ^ StatementExpression expression SuperConstructorInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation']
copynode -9.094318315386772:  root add ^ parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -4.214157357811928:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  name boolean_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> boolean_ter']
copynode -8.025729835033417:  root add ^ AssertStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MemberReference']
copynode -9.094318315386772:  root add ^ parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -3.3602977879345417:  root add ^ StatementExpression expression ExplicitConstructorInvocation_ter ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> ExplicitConstructorInvocation_ter']
copynode -8.025729835033417:  root add ^ AssertStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MethodInvocation']
copynode -8.025729835033417:  root add ^ AssertStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> Literal']
copynode -2.1822667263331823:  root add ^ IfStatement condition ClassReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> ClassReference']
copynode -7.472047738730907:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -9.69655130803585:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  name long_ter ^ ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions', 'name -> long_ter']
copynode -7.2719676095293835:  root modified ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -5.98729582130909:  root add ^ ReturnStatement expression ArrayCreator ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator']
copynode -1.8608935736119747:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'copy-type']
copynode -10.034185411408544:  root modified ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -5.343819899484515:  root modified ^ StatementExpression expression Literal ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Literal']
copynode -6.826414868235588:  root modified ^ parameters FormalParameter annotations ^ type ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> annotations type name']
copynode -3.3602977879345417:  root add ^ StatementExpression expression ClassCreator ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> ClassCreator']
copynode -9.69655130803585:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  name int_ter ^ ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions', 'name -> int_ter']
copynode -4.214157357811928:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  name double_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name']
copynode -1.8608935736119747:  root modified ^ LocalVariableDeclaration type ReferenceType name Number_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'copy-type']
copynode -1.8608935736119747:  root modified ^ LocalVariableDeclaration type loc1 ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'copy-VariableDeclarator']
copynode -8.189630970358849:  root modified ^ LocalVariableDeclaration annotations Annotation ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators', 'annotations -> Annotation']
copynode -1.8608935736119747:  root modified ^ LocalVariableDeclaration type ReferenceType name Comparable_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'copy-type']
copynode -7.476278781890869:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -5.343819899484515:  root modified ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -10.918917641043663:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -1.8608935736119747:  root modified ^ LocalVariableDeclaration type ReferenceType name Number_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'copy-type']
copynode -10.947543673217297:  root ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.5831356551498175:  root add ^ WhileStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> Literal']
copynode -6.826414868235588:  root modified ^ parameters FormalParameter modifiers ^ annotations ^ type ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers annotations type name']
copynode -11.225972600281239:  root return_type BasicType name double_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'copy-BasicType', 'root -> End']
copynode -11.240259200334549:  root return_type ReferenceType name Iterator_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType', 'root -> End']
copynode -11.210047721862793:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter']
copynode -5.98729582130909:  root add ^ ReturnStatement expression ClassCreator ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator']
copynode -4.214157357811928:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  name Object_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> Object_ter']
copynode -4.214157357811928:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  name Iterator_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name']
copynode -1.8608935736119747:  root modified ^ LocalVariableDeclaration type ReferenceType name Comparable_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'copy-type']
copynode -4.214157357811928:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  name Comparable_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name']
copynode -10.034185411408544:  root modified ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -7.476278781890869:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
before@4 batch0 x: -12.342732714489102: root member-member calculatePieDatasetTotal_ter ^ ^  unknown ^ ^ StatementExpression expression ^ ^ ^  ; ['copy-member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
after@4 batch0 x: -12.342732714489102: root member-member calculatePieDatasetTotal_ter ^ ^  unknown ^ ^ StatementExpression expression ^ ^ ^  ; ['copy-member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
before@4 batch1 x: -11.560786247253418: root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
after@4 batch1 x: -11.560786247253418: root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -2.4659149369690567:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.873447717167437:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.751338480098639:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.4659149369690567:  root modified ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.873447717167437:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.4659149369690567:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.030784187896643:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.873447717167437:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.875364003761206:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -2.4659149369690567:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.030784187896643:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.6868270030245185:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -6.030784187896643:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -8.07159173884429:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -6.875364003761206:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -6.030784187896643:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -2.873447717167437:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.4659149369690567:  root modified ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.873447717167437:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -2.4659149369690567:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -6.875364003761206:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -8.821579341078177:  root modified ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -6.030784187896643:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.030784187896643:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.030784187896643:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -9.710748015902936:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -2.873447717167437:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -6.875364003761206:  root add ^ IfStatement condition MemberReference prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -9.81167536880821:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -6.030784187896643:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -6.030784187896643:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -10.19454611837864:  root add ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -2.4659149369690567:  root modified ^ StatementExpression expression MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.030784187896643:  root add ^ IfStatement condition MethodInvocation qualifier par2 ^ ^ member getStartAngle_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -10.199272517347708:  root modified ^ StatementExpression expression SuperMethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member']
copynode -10.387947455048561:  root add ^ ReturnStatement expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -9.47790339589119:  root add ^ LocalVariableDeclaration type ReferenceType name PiePlotState_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -10.597456231713295:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -2.4659149369690567:  root modified ^ StatementExpression expression MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -1.9180065132677555:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -2.71959300263552:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.5593127153697424:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -4.798658981919289:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> long_ter', 'root -> End']
copynode -4.957471240311861:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -3.5593127153697424:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.900754202157259:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.061254993081093:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> int_ter', 'root -> End']
copynode -5.003970667719841:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType']
copynode -3.900754202157259:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.5593127153697424:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.900754202157259:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.587049498397391:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -4.587049498397391:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -5.546189416199923:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -5.076936735946219:  root add ^ IfStatement condition This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors']
copynode -5.91259322874248:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -3.900754202157259:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.328715696930885:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -3.5593127153697424:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.5593127153697424:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -6.251296151429415:  root add ^ StatementExpression expression SuperMethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member']
copynode -5.076936735946219:  root add ^ IfStatement condition This prefix_operators ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors']
copynode -5.076936735946219:  root add ^ IfStatement condition This qualifier ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> qualifier selectors']
copynode -1.9180065132677555:  root modified ^ LocalVariableDeclaration type BasicType name ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name']
copynode -7.027943719178438:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -3.5593127153697424:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -4.587049498397391:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.482764091342688:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -6.251296151429415:  root add ^ StatementExpression expression SuperMethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member']
copynode -3.5593127153697424:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.5593127153697424:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -3.5593127153697424:  root add ^ IfStatement condition MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -7.610338315367699:  root modified ^ parameters FormalParameter modifiers final_ter ^ ^ type ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name', 'modifiers -> final_ter']
copynode -7.538986548781395:  root add ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -7.677065034513362:  root modified ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.5593127153697424:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -7.822583630681038:  root add ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -6.482764091342688:  root modified ^ LocalVariableDeclaration type ReferenceType name Number_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -8.048284878954291:  root add ^ WhileStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.900754202157259:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -7.445508971053641:  root add ^ IfStatement condition Literal selectors ^ value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal', 'Literal -> selectors value']
copynode -8.145576640963554:  root modified ^ parameters FormalParameter type BasicType ^ ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name', 'type -> BasicType']
copynode -7.619374289351981:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -8.210198922082782:  root modified ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -7.830655205994844:  root add ^ StatementExpression expression Cast type ^ expression ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast', 'Cast -> type expression']
copynode -4.587049498397391:  root add ^ IfStatement condition MemberReference prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -6.554795665666461:  root modified ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member hasNext_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.076936735946219:  root add ^ IfStatement condition This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'copy-This']
copynode -3.900754202157259:  root add ^ StatementExpression expression MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -8.554387509822845:  root add ^ AssertStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.554795665666461:  root modified ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member next_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.554795665666461:  root modified ^ StatementExpression expression MethodInvocation member getKeys_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.003970667719841:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType']
copynode -6.482764091342688:  root modified ^ LocalVariableDeclaration type ReferenceType name Comparable_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -8.241794600326102:  root add ^ IfStatement condition Cast type ^ expression ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast', 'Cast -> type expression']
copynode -8.430759277194738:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'copy-type', 'declarators -> VariableDeclarator']
copynode -8.31577779276995:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member hasNext_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.445508971053641:  root add ^ IfStatement condition Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal', 'Literal -> value']
copynode -2.71959300263552:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.554795665666461:  root modified ^ StatementExpression expression MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.076936735946219:  root add ^ IfStatement condition This selectors MemberReference member explodePercentages_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'copy-This']
copynode -7.619374289351981:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> ReturnStatement']
copynode -6.482764091342688:  root modified ^ LocalVariableDeclaration type ReferenceType name Comparable_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -6.482764091342688:  root modified ^ LocalVariableDeclaration type ReferenceType name Number_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -9.228001702576876:  root add ^ StatementExpression expression SuperConstructorInvocation_ter ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation_ter', 'root -> End']
copynode -8.392476363107562:  root modified ^ StatementExpression expression This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'copy-This']
copynode -6.554795665666461:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -9.375647976994514:  root add ^ ReturnStatement expression This_ter ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This_ter', 'root -> End']
copynode -6.554795665666461:  root modified ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.830655205994844:  root add ^ StatementExpression expression Cast type ReferenceType name Number_ter ^ ^ ^ ^ expression This selectors MemberReference member explodePercentages_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast', 'copy-Cast']
copynode -9.459201140329242:  root modified ^ StatementExpression expression This_ter ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This_ter', 'root -> End']
copynode -9.490788473922294:  root add ^ IfStatement condition TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -7.445508971053641:  root add ^ IfStatement condition Literal prefix_operators ^ selectors ^ value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal', 'Literal -> prefix_operators selectors value']
copynode -9.539267972111702:  root add ^ ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.830655205994844:  root add ^ StatementExpression expression Cast type ReferenceType name Comparable_ter ^ ^ ^ ^ expression MethodInvocation qualifier loc1 ^ ^ member next_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast', 'copy-Cast']
copynode -5.076936735946219:  root add ^ IfStatement condition This postfix_operators ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> postfix_operators selectors']
copynode -7.445508971053641:  root add ^ IfStatement condition Literal prefix_operators ^ value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal', 'Literal -> prefix_operators value']
copynode -9.751621827483177:  root add ^ parameters FormalParameter modifiers final_ter ^ ^ type ^ name ^ ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name', 'modifiers -> final_ter']
copynode -9.708029855042696:  root add ^ StatementExpression expression SuperConstructorInvocation arguments ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation', 'SuperConstructorInvocation -> arguments']
copynode -1.9180065132677555:  root modified ^ LocalVariableDeclaration type BasicType name ^ dimensions ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name dimensions']
copynode -9.547385063022375:  root modified ^ LocalVariableDeclaration type loc0 ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'copy-VariableDeclarator', 'declarators -> VariableDeclarator']
copynode -9.532333781942725:  root add ^ WhileStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -9.53064366162289:  root modified ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -7.619374289351981:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> StatementExpression']
copynode -9.928953900933266:  root modified ^ BasicType-BasicType name double_ter ^ ^ ^  name boolean_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> boolean_ter', 'root -> End']
copynode -7.219788406975567:  root modified ^ control EnhancedForControl var VariableDeclaration ^ ^ iterable ^ ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable', 'var -> VariableDeclaration']
copynode -6.554795665666461:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.554795665666461:  root modified ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
before@5 batch0 x: -11.021802391856909: root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
after@5 batch0 x: -11.021802391856909: root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
before@5 batch1 x: -10.007910890504718: root modified ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
after@5 batch1 x: -10.007910890504718: root modified ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -2.5099536313209683:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -2.922203895635903:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -5.76978546945611:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.523321927525103:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -6.519693585345522:  root modified ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -6.69568750471808:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -5.76978546945611:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -2.922203895635903:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -2.5099536313209683:  root modified ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -2.922203895635903:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -2.5099536313209683:  root modified ^ StatementExpression expression MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -7.687221902131569:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -7.580504628131166:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0']
copynode -2.922203895635903:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -7.991439519508276:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -7.477090416534338:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -2.5099536313209683:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -7.208536923862994:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -8.071803655810072:  root modified ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -8.227149544341955:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -7.208536923862994:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -8.413720665557776:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -6.519693585345522:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -8.497789205051959:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.052808342559729:  root add ^ IfStatement condition MethodInvocation qualifier par3 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3']
copynode -7.052808342559729:  root add ^ IfStatement condition MethodInvocation qualifier par2 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2']
copynode -8.61848852247931:  root modified ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.604110417945776:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -8.72392007918097:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'qualifier -> loc0']
copynode -8.664047063328326:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0']
copynode -5.76978546945611:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -2.5099536313209683:  root modified ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -7.052808342559729:  root add ^ IfStatement condition MethodInvocation qualifier DatasetUtilities_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -7.052808342559729:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -7.208536923862994:  root add ^ StatementExpression expression MethodInvocation arguments Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.76978546945611:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -8.908339862013236:  root modified ^ StatementExpression expression This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -7.604110417945776:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -2.922203895635903:  root add ^ StatementExpression expression MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -7.052808342559729:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -9.430198250396643:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -8.839400826080237:  root add ^ IfStatement condition MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -7.052808342559729:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -5.76978546945611:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -7.604110417945776:  root add ^ IfStatement condition MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.519693585345522:  root modified ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -9.783233464695513:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'qualifier -> loc0']
copynode -6.523321927525103:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -7.208536923862994:  root add ^ StatementExpression expression MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -9.929298101051245:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -7.477090416534338:  root add ^ IfStatement condition MemberReference member par4 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par4']
copynode -1.9261212022975087:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -2.722632028569933:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -2.722632028569933:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.790764465171378:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -4.9659047268214636:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.039839733392:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.121877551078796:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name double_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType']
copynode -4.957837399066193:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -2.722632028569933:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -5.314221932727378:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.475373878318351:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.143343914300203:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.26455007866025:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -2.722632028569933:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.221346511680167:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -5.602419867354911:  root add ^ IfStatement condition This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -2.722632028569933:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -2.722632028569933:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -1.9261212022975087:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0.0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -5.570945853367448:  root add ^ StatementExpression expression This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -2.722632028569933:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -5.9419389721006155:  root modified ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -5.570945853367448:  root add ^ StatementExpression expression This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -2.722632028569933:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter']
copynode -5.221346511680167:  root add ^ IfStatement condition MethodInvocation qualifier Math_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.539560928184073:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -6.674586910754442:  root add ^ StatementExpression expression SuperMethodInvocation member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member', 'member -> meth0']
copynode -6.356832332909107:  root add ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -5.143343914300203:  root add ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.754723563033622:  root add ^ IfStatement condition This prefix_operators !_ter ^ ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter']
copynode -6.491402282554191:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.26455007866025:  root add ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.142083156853914:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -4.957837399066193:  root add ^ StatementExpression expression Assignment expressionl This ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This']
copynode -2.722632028569933:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter']
copynode -4.957837399066193:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -7.168175353843253:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter']
copynode -6.978808417159598:  root add ^ IfStatement condition This qualifier unknown ^ ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> qualifier selectors', 'start -> unknown']
copynode -7.1878771923366:  root add ^ IfStatement condition MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -5.602419867354911:  root add ^ IfStatement condition This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -7.563053979713004:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -7.369943704456091:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0.0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -7.107346724718809:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -7.576115503150504:  root add ^ IfStatement condition MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -7.673515513539314:  root add ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -5.314221932727378:  root add ^ IfStatement condition MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.9419389721006155:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -7.652500592172146:  root modified ^ parameters FormalParameter modifiers final_ter ^ ^ type BasicType ^ ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name', 'modifiers -> final_ter', 'type -> BasicType']
copynode -6.142083156853914:  root add ^ StatementExpression expression MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -6.982260320335627:  root modified ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'name -> boolean_ter']
copynode -7.494613278657198:  root add ^ StatementExpression expression SuperMethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.491402282554191:  root add ^ IfStatement condition MethodInvocation qualifier Math_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.142083156853914:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -7.729761972266715:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown']
copynode -8.21676430106163:  root modified ^ parameters FormalParameter type BasicType name double_ter ^ ^ ^ ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name', 'type -> BasicType', 'copy-BasicType']
copynode -7.107346724718809:  root add ^ StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter']
copynode -8.052486386150122:  root modified ^ LocalVariableDeclaration type ReferenceType name Number_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0.0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -6.142083156853914:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.982260320335627:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'name -> int_ter']
copynode -6.982260320335627:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'copy-name']
copynode -8.17636801226763:  root add ^ IfStatement condition Literal selectors MethodInvocation ^ ^ value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal', 'Literal -> selectors value', 'selectors -> MethodInvocation']
copynode -8.348523630935233:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -5.143343914300203:  root add ^ StatementExpression expression MethodInvocation qualifier LOG_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> LOG_ter']
copynode -7.909960351884365:  root add ^ ReturnStatement expression MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.138191927224398:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown']
copynode -8.466887755319476:  root modified ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member hasNext_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -7.526615753013175:  root add ^ IfStatement condition MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -7.698990565841086:  root modified ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -8.558693159371614:  root add ^ StatementExpression expression MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -8.572584314271808:  root modified ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member next_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -8.576663179323077:  root modified ^ StatementExpression expression MethodInvocation member getKeys_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -8.285437231883407:  root modified ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -6.356832332909107:  root add ^ ReturnStatement expression Literal value 1_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -5.221346511680167:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -6.356832332909107:  root add ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -8.616485681384802:  root modified ^ LocalVariableDeclaration type ReferenceType name Comparable_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0.0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -8.6421926759067:  root add ^ IfStatement condition Cast type ReferenceType ^ ^ expression ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast', 'Cast -> type expression', 'type -> ReferenceType']
copynode -8.319275487214327:  root add ^ StatementExpression expression Cast type BasicType ^ ^ expression ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast', 'Cast -> type expression', 'type -> BasicType']
copynode -6.978808417159598:  root add ^ IfStatement condition This qualifier Math_ter ^ ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> qualifier selectors', 'copy-qualifier']
copynode -6.142083156853914:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.729761972266715:  root add ^ IfStatement condition MethodInvocation qualifier Math_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -7.526615753013175:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.356832332909107:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -9.065443439409137:  root modified ^ StatementExpression expression MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -8.654965844005346:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'copy-type', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -5.143343914300203:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -7.369943704456091:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -8.509620680648368:  root add ^ IfStatement condition This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'copy-This', 'root -> End']
before@6 batch0 x: -9.94127303181449: root add ^ IfStatement condition MemberReference member par4 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par4']
after@6 batch0 x: -9.94127303181449: root add ^ IfStatement condition MemberReference member par4 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par4']
before@6 batch1 x: -9.163300289947074: root add ^ IfStatement condition This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'copy-This', 'root -> End']
after@6 batch1 x: -9.163300289947074: root add ^ IfStatement condition This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'copy-This', 'root -> End']
copynode -2.5304896144662052:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -2.9580534221604466:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -2.9580534221604466:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
copynode -2.9580534221604466:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -2.5304896144662052:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -2.9580534221604466:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments']
copynode -2.5304896144662052:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments']
copynode -2.9580534221604466:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This_ter']
copynode -6.640621938742697:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -2.9580534221604466:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation']
copynode -6.294323271198664:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.776100205490366:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -2.9580534221604466:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This']
copynode -6.756433906266466:  root modified ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.294323271198664:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -7.38013137714006:  root modified ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation']
copynode -2.9580534221604466:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getStartAngle_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments']
copynode -7.096569484157953:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -7.565914286533371:  root modified ^ StatementExpression expression MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -7.706721650669351:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation']
copynode -7.701252336322796:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -7.096569484157953:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -8.05344229756156:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -8.107885443008854:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -7.3281477661803365:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation']
copynode -6.776100205490366:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -8.077318800846115:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -7.409620163030922:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -8.374095977284014:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.50092754070647:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -8.440256567904726:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.085628510452807:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.5304896144662052:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This']
copynode -8.614077506645117:  root add ^ IfStatement condition MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown']
copynode -8.61761945305625:  root add ^ IfStatement condition MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown']
copynode -8.67413648054935:  root modified ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -8.231108443404082:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.756433906266466:  root modified ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -8.749789128312841:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'qualifier -> loc0', 'selectors -> MethodInvocation']
copynode -7.409620163030922:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -8.789217160083354:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation']
copynode -7.3281477661803365:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -2.9580534221604466:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Cast ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Cast']
copynode -7.3281477661803365:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal']
copynode -2.5304896144662052:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Cast ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Cast']
copynode -7.818681594915688:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MethodInvocation']
copynode -2.9580534221604466:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments']
copynode -8.962442932708655:  root add ^ IfStatement condition MethodInvocation qualifier DatasetUtilities_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -2.5304896144662052:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
copynode -8.948849333683029:  root modified ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MethodInvocation']
copynode -7.409620163030922:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -9.164066136814654:  root add ^ StatementExpression expression MethodInvocation arguments Literal value 2_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -7.818681594915688:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MemberReference']
copynode -7.818681594915688:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> Literal']
copynode -2.5304896144662052:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation']
copynode -9.231617722893134:  root modified ^ StatementExpression expression This selectors MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.756433906266466:  root modified ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.756433906266466:  root modified ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -9.357865391357336:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -8.414610481821:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -1.9450556626543403:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -1.9450556626543403:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name']
copynode -3.5612501878640614:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -4.035577275266405:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -4.793353881395888:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -3.5612501878640614:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This']
copynode -5.055614188313484:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -5.12377376225777:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0.0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -5.2500392459041905:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -4.035577275266405:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This']
copynode -5.480144251778256:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.7703550003352575:  root add ^ IfStatement condition This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.002253069716971:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -5.269593812932726:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -5.598645545949694:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.002253069716971:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -3.5612501878640614:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -6.026147332973778:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0.0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -6.13585221208632:  root add ^ StatementExpression expression This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.153188263997436:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -5.774978258123156:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -5.813325502385851:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
copynode -5.503581155091524:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.449205800134223:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -5.449205800134223:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.1495011825463735:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -3.5612501878640614:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl Literal ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> Literal']
copynode -6.708369616419077:  root add ^ StatementExpression expression SuperMethodInvocation member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member', 'member -> meth0', 'root -> End']
copynode -6.762876935303211:  root add ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -6.505625142890494:  root add ^ IfStatement condition MethodInvocation qualifier Math_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -4.035577275266405:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -5.269593812932726:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This']
copynode -1.9450556626543403:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0.0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'copy-VariableDeclarator']
copynode -6.441344672814012:  root add ^ StatementExpression expression This selectors MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.858223307877779:  root add ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.9056241400539875:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.778355986985844:  root add ^ IfStatement condition This prefix_operators !_ter ^ ^ selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter', 'selectors -> MemberReference']
copynode -5.503581155091524:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -6.97451144081424:  root add ^ StatementExpression expression Assignment expressionl This selectors ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors']
copynode -6.542194746376481:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.498178102483507:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference']
copynode -5.269593812932726:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation']
copynode -5.813325502385851:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> This']
copynode -7.205703511077445:  root add ^ IfStatement condition This qualifier unknown ^ ^ selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> qualifier selectors', 'start -> unknown', 'selectors -> MemberReference']
copynode -4.035577275266405:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl Literal ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> Literal']
copynode -5.774978258123156:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> This']
copynode -5.774978258123156:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation']
copynode -5.449205800134223:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -5.002253069716971:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -7.567163925617933:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0.0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -7.023664094915148:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference']
copynode -5.002253069716971:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -5.598645545949694:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> This']
copynode -6.542194746376481:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier Math_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -5.813325502385851:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MethodInvocation']
copynode -6.498178102483507:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> This']
copynode -6.441344672814012:  root add ^ StatementExpression expression This selectors MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.5612501878640614:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -7.788617812097073:  root modified ^ parameters FormalParameter modifiers final_ter ^ ^ type BasicType name double_ter ^ ^ ^ ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType']
copynode -6.77727173641324:  root add ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.503581155091524:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -7.524600758391898:  root add ^ IfStatement condition This selectors MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.5612501878640614:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> BinaryOperation']
copynode -7.604244869202375:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter', 'start -> unknown']
copynode -5.449205800134223:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -5.480144251778256:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member dataset_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'copy-member']
copynode -7.960059870034456:  root add ^ StatementExpression expression MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -5.503581155091524:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> This_ter']
copynode -6.837104006845038:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -7.682740265503526:  root add ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -7.112276609957917:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal']
copynode -7.565773201349657:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -8.018501449376345:  root add ^ StatementExpression expression SuperMethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.170894814596977:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference']
copynode -6.1495011825463735:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> This']
copynode -5.598645545949694:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -8.246090710163116:  root modified ^ parameters FormalParameter type BasicType name double_ter ^ ^ ^ ^ name loc0 ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name', 'type -> BasicType', 'copy-BasicType', 'name -> loc0']
copynode -8.265692558139563:  root modified ^ LocalVariableDeclaration type ReferenceType name Number_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0.0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -7.982293341308832:  root modified ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0.0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'name -> boolean_ter', 'copy-declarators']
copynode -6.77727173641324:  root add ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -8.218147172767203:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -8.313446272164583:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -3.5612501878640614:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This_ter ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This_ter']
copynode -7.654362595814746:  root add ^ IfStatement condition MethodInvocation selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.170894814596977:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments']
copynode -7.112276609957917:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -3.5612501878640614:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl Cast ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> Cast']
copynode -7.7866809125989676:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference']
copynode -8.41130568832159:  root add ^ ReturnStatement expression MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -8.458238411694765:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -5.503581155091524:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> BinaryOperation']
before@7 batch0 x: -9.504111871276109: root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  debug_ter ^ ^ ^  ; ['root -> modified', 'copy-member', 'member -> debug_ter', 'root -> End']
after@7 batch0 x: -9.504111871276109: root modified ^ member-member calculatePieDatasetTotal_ter ^ ^  debug_ter ^ ^ ^  ; ['root -> modified', 'copy-member', 'member -> debug_ter', 'root -> End']
before@7 batch1 x: -8.475787747651339: root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> BinaryOperation']
after@7 batch1 x: -8.475787747651339: root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> BinaryOperation']
copynode -2.6490981637034565:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.6490981637034565:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.9805879117920995:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.427769732661545:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -4.431357455439866:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.431357455439866:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.368912768550217:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown']
copynode -2.6490981637034565:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.6490981637034565:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.191380432108417:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -2.6490981637034565:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.9805879117920995:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.6490981637034565:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -5.191380432108417:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.9805879117920995:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.224531581858173:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'copy-member']
copynode -6.495410037226975:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This_ter', 'arguments -> End']
copynode -6.669340920634568:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.6492688078433275:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -6.704949086590204:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.05383680970408:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -2.6490981637034565:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -2.6490981637034565:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.9805879117920995:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.326275658793747:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors']
copynode -2.6490981637034565:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -3.9805879117920995:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.535012078471482:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getStartAngle_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown']
copynode -7.341425838181749:  root modified ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -7.70777756778989:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.224531581858173:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown']
copynode -2.6490981637034565:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getStartAngle_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.9805879117920995:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.504875710466877:  root modified ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.9805879117920995:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getStartAngle_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.64857285306789:  root modified ^ StatementExpression expression MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.88807376724435:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.213075464649592:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.414468096802011:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'copy-member', 'root -> End']
copynode -7.486864632053766:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.486864632053766:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.54067022172967:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -8.467499372549355:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.427769732661545:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'copy-Literal']
copynode -8.609864881495014:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors']
copynode -8.322248217649758:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -8.751577853225172:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -8.703430549765471:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -8.821725484915078:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value']
copynode -3.9805879117920995:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -8.806432557292283:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Cast type ^ expression ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Cast', 'Cast -> type expression']
copynode -8.66581713227788:  root add ^ IfStatement condition MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'root -> End']
copynode -8.669185286446009:  root add ^ IfStatement condition MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'root -> End']
copynode -7.54067022172967:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -8.26722484115453:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.866065671900287:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Cast type ^ expression ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Cast', 'Cast -> type expression']
copynode -3.9805879117920995:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -8.981369805522263:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown']
copynode -8.989465406397358:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -8.457452370086685:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -8.790040102321655:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -9.168198344297707:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -2.357566802762449:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0']
copynode -3.0741175999864936:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name', 'name -> loc0']
copynode -4.169381775369402:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.522995151986834:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.13168032024987:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0.0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -4.857173540105578:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors']
copynode -5.2841376028663944:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.843104492581915:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement']
copynode -4.857173540105578:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This']
copynode -5.850903608312365:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.843104492581915:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -5.911531068792101:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.844893946486991:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.7730826492770575:  root add ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.399730898847338:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This']
copynode -5.399730898847338:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors']
copynode -6.175655022263527:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.332854129781481:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.376338936795946:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.1395118304062635:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.401193309575319:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.610557158186566:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.492600270023104:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.441177888948005:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.693185545911547:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl Literal value ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> Literal', 'Literal -> value']
copynode -5.610557158186566:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.022944905271288:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.904938398860395:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0.0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'copy-VariableDeclarator', 'root -> End']
copynode -5.2841376028663944:  root add ^ StatementExpression expression Assignment expressionl MemberReference member dataset_ter ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.984189258131664:  root add ^ IfStatement condition This prefix_operators !_ter ^ ^ selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.985868085175753:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -6.9646374844014645:  root add ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -7.008755601913435:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.955918962135911:  root add ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.7730826492770575:  root add ^ IfStatement condition This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.085709311475512:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.857173540105578:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member explodePercentages_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This']
copynode -4.843104492581915:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -6.785083010036033:  root add ^ IfStatement condition MethodInvocation qualifier Math_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> ReturnStatement']
copynode -7.4595431528869085:  root add ^ IfStatement condition This qualifier unknown ^ ^ selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> qualifier selectors', 'start -> unknown', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.844893946486991:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.489402987470385:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl Literal value ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> Literal', 'Literal -> value']
copynode -5.610557158186566:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -7.552083506423514:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -7.54054705722956:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -4.843104492581915:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression']
copynode -6.877040006627794:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This', 'This -> selectors']
copynode -7.586490489949938:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.851080157270189:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.591765894729178:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.9771646447479725:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.1395118304062635:  root add ^ StatementExpression expression This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.790419972152449:  root modified ^ parameters FormalParameter modifiers final_ter ^ ^ type BasicType name double_ter ^ ^ ^ ^ name loc0 ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType', 'name -> loc0']
copynode -5.399730898847338:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member explodePercentages_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This']
copynode -6.022944905271288:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.802984941750765:  root add ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.8845144949737005:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -6.877040006627794:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This', 'copy-This']
copynode -7.849393345823046:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.876178007572889:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter', 'start -> unknown', 'root -> End']
copynode -7.848891033965629:  root add ^ IfStatement condition This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.692679546715226:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier Math_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown']
copynode -7.085759379377123:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -8.015024241030915:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value']
copynode -7.9844561062636785:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.610557158186566:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression']
copynode -8.083615137205925:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.421424843778368:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> This', 'This -> selectors']
copynode -6.785083010036033:  root add ^ IfStatement condition MethodInvocation qualifier Math_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.441177888948005:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.528712131490465:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> This', 'This -> selectors']
copynode -8.27302360907197:  root modified ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0.0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'name -> boolean_ter', 'copy-declarators', 'root -> End']
copynode -7.973371136933565:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> This_ter', 'arguments -> End']
copynode -8.255068426951766:  root modified ^ parameters FormalParameter type BasicType name double_ter ^ ^ ^ ^ name loc0 ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name', 'type -> BasicType', 'copy-BasicType', 'name -> loc0', 'parameters -> End']
copynode -6.022944905271288:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc3 ^ ^ member doubleValue_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.996441865339875:  root add ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2']
copynode -8.317007768899202:  root add ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -4.169381775369402:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -8.340389067307115:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.9771646447479725:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member dataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.530848361959215:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -8.377451730833855:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown']
before@8 batch0 x: -9.180921261198819: root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
after@8 batch0 x: -9.180921261198819: root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
before@8 batch1 x: -8.467070519865956: root modified ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member hasNext_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
after@8 batch1 x: -8.467070519865956: root modified ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member hasNext_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -3.176226621726528:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.445503217168152:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -4.983388972468674:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.299484324641526:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -5.393769289366901:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -4.410010343650356:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2']
copynode -4.410010343650356:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.430004430003464:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2']
copynode -5.488734251121059:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.430004430003464:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3']
copynode -4.430004430003464:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -5.542267104843631:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.7986695824656636:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -3.176226621726528:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.410010343650356:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3']
copynode -4.445503217168152:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -4.410010343650356:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -6.480037531116977:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'copy-member', 'root -> End']
copynode -5.834335756488144:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.523737913230434:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -6.414310863474384:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -4.445503217168152:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -4.430004430003464:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -5.523737913230434:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.641680267639458:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This_ter', 'arguments -> End', 'start -> unknown']
copynode -4.445503217168152:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -3.176226621726528:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par2']
copynode -4.430004430003464:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -5.893623357871547:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -5.523737913230434:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.445503217168152:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -4.445503217168152:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -4.430004430003464:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -5.893623357871547:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2']
copynode -7.058363681891933:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier']
copynode -5.834335756488144:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.542267104843631:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -7.2789842607453465:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.67588716186583:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -7.426703220466152:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -4.410010343650356:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -3.176226621726528:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par3 ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par3']
copynode -7.581643202342093:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getStartAngle_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -7.365207199938595:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.463989687152207:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2']
copynode -5.488734251121059:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -7.462045622058213:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -7.241924053290859:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.738778835220728:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.78428845689632:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.893623357871547:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3']
copynode -4.983388972468674:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3']
copynode -4.445503217168152:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.983388972468674:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -4.983388972468674:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par4']
copynode -5.893623357871547:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par1']
copynode -7.884298091987148:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getStartAngle_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -7.603566380450502:  root modified ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -5.7986695824656636:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference']
copynode -6.463989687152207:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3']
copynode -5.542267104843631:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3']
copynode -4.410010343650356:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -7.7548786184052005:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -3.176226621726528:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1']
copynode -8.028310945490375:  root modified ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.463989687152207:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par1']
copynode -5.488734251121059:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -5.542267104843631:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -3.0779495839960873:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name', 'name -> loc0', 'root -> End']
copynode -2.361329681472853:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MemberReference']
copynode -2.361329681472853:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation']
copynode -2.361329681472853:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Literal']
copynode -4.185479026695248:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.185479026695248:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.531975815480109:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -2.361329681472853:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation']
copynode -4.531975815480109:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -2.361329681472853:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This']
copynode -5.537268914689776:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.6311478723655455:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -2.361329681472853:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast']
copynode -2.361329681472853:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ArrayInitializer ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> ArrayInitializer']
copynode -6.206840433587786:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr']
copynode -6.21627996157622:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.082660510379355:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.172741150425281:  root add ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -5.565543975651963:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal']
copynode -5.862925841880497:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.85482440184569:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr']
copynode -6.4694388278294355:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -5.934189867635723:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.565543975651963:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation']
copynode -6.741944227775093:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl Literal value null_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.661584495741408:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.3479190426296555:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.388322441314813:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.2317874282598495:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MemberReference']
copynode -6.747737486555707:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -2.361329681472853:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer TernaryExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> TernaryExpression']
copynode -7.01776898370008:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.862925841880497:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.038799615576863:  root add ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -5.934189867635723:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.514182845538016:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -7.18186415330274:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -5.85482440184569:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal']
copynode -4.185479026695248:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member explodePercentages_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.9951265854761004:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -6.868217625131365:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -6.987686290347483:  root add ^ IfStatement condition This prefix_operators !_ter ^ ^ selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.2317874282598495:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> Literal']
copynode -5.565543975651963:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference']
copynode -5.6311478723655455:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -2.361329681472853:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ArrayInitializer_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> ArrayInitializer_ter']
copynode -6.3479190426296555:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.531975815480109:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member explodePercentages_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -2.361329681472853:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> ClassCreator']
copynode -7.531789381697308:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -7.505189432937186:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.5155840967199765:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl Literal value null_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.388322441314813:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.578459154523443:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.088615929649677:  root add ^ IfStatement condition This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -7.363131775695365:  root add ^ IfStatement condition MethodInvocation qualifier Math_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.85482440184569:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference']
copynode -7.178373672475573:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member explodePercentages_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr']
copynode -7.581480481137987:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.172741150425281:  root add ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -7.717968232231215:  root add ^ StatementExpression expression This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -7.091242670954671:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.799659401760437:  root modified ^ parameters FormalParameter modifiers final_ter ^ ^ type BasicType name double_ter ^ ^ ^ ^ name loc0 ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType', 'name -> loc0', 'parameters -> End']
copynode -6.9842379055626225:  root add ^ StatementExpression expression Assignment expressionl MemberReference member dataset_ter ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'copy-member', 'value -> MethodInvocation']
copynode -7.803705193509813:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member explodePercentages_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr']
copynode -7.657470662146807:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -7.957058391708415:  root add ^ IfStatement condition This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -5.537268914689776:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MethodInvocation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -7.088615929649677:  root add ^ IfStatement condition This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -7.608894803037401:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -8.06768568296684:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.848970629682299:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.569913855928462:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.632887470710557:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.599176644755062:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.514182845538016:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
before@9 batch0 x: -8.223760863998905: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
after@9 batch0 x: -8.223760863998905: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
before@9 batch1 x: -8.224611475307029: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
after@9 batch1 x: -8.224611475307029: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -3.2848193182144314:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -3.2848193182144314:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.304551583714783:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -5.344595086760819:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -5.694837284274399:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown']
copynode -5.62056983099319:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.707727080443874:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
copynode -5.598604208091274:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown']
copynode -6.011907410807908:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown']
copynode -6.134109330363572:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -6.1354544966015965:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -6.272060018964112:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End']
copynode -6.146441793302074:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -6.227878576377407:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown']
copynode -3.2848193182144314:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -6.387620931724086:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -6.57078502792865:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End']
copynode -6.662964452989399:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.669909936375916:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -6.89107306022197:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -6.934337025741115:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation']
copynode -6.647395378211513:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.986609918065369:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -7.140002799220383:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -7.1518036185298115:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation']
copynode -7.161677642026916:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation']
copynode -6.219093090156093:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -7.180078765610233:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -7.05639408249408:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -6.219093090156093:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -6.527850395301357:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.30390805657953:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
copynode -3.2848193182144314:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -6.483150971122086:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -6.769492870429531:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par2', 'arguments -> MethodInvocation']
copynode -6.483150971122086:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.9411782084498554:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.219093090156093:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -7.61642933357507:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -7.658422541804612:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation']
copynode -6.9411782084498554:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -7.6963298378977925:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'arguments -> End']
copynode -7.703083974309266:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
copynode -6.647395378211513:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.454017091775313:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.782538300438318:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal']
copynode -6.146441793302074:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
copynode -7.86136961565353:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation']
copynode -5.598604208091274:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member']
copynode -7.921527391532436:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par1', 'selectors -> MethodInvocation']
copynode -7.861816477961838:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End']
copynode -7.913387608714402:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par4', 'arguments -> End']
copynode -7.8985323728993535:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -7.9014571430161595:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -7.993042183108628:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation']
copynode -7.1775754215195775:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.769492870429531:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par2', 'arguments -> MemberReference']
copynode -8.022720596054569:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End']
copynode -7.931788398185745:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getStartAngle_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -6.527850395301357:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.62056983099319:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -8.167165947146714:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par1', 'selectors -> MethodInvocation']
copynode -8.188324695685878:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'arguments -> End']
copynode -3.2848193182144314:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments This ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This']
copynode -3.4404649802017957:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MemberReference', 'MemberReference -> member']
copynode -4.096558696823195:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Literal', 'Literal -> value']
copynode -3.531018263893202:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.531018263893202:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.179134140198585:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -3.531018263893202:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.920164745708462:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -5.0096667822799645:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -5.413123256759718:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.4521680571488105:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -3.4404649802017957:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.648116462340113:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.601407177047804:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors']
copynode -5.842214550531935:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.158479816513136:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers']
copynode -6.091418153839186:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression']
copynode -3.531018263893202:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.352632888068911:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.360067709523719:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.440064098656876:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value']
copynode -3.531018263893202:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation member getKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.301738463749643:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> End']
copynode -4.920164745708462:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal']
copynode -3.531018263893202:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.0096667822799645:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal']
copynode -4.920164745708462:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference']
copynode -6.8930908582988195:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.951140388846397:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MemberReference', 'MemberReference -> member']
copynode -6.998598224716261:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -6.413676654861774:  root add ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'root -> ReturnStatement']
copynode -7.096546230837703:  root add ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -6.951280404522549:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -5.0096667822799645:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MemberReference']
copynode -3.531018263893202:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -7.206853129377123:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal', 'Literal -> value']
copynode -6.450960614194628:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> ReturnStatement']
copynode -7.021662298793672:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.642610025068279:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.3674552105076145:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> member']
copynode -7.402925144589972:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.440387322974857:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal']
copynode -7.481348163681105:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ArrayInitializer_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> ArrayInitializer_ter', 'root -> End']
copynode -6.450960614194628:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> End']
copynode -7.337089910113718:  root add ^ IfStatement condition This prefix_operators !_ter ^ ^ selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -6.524487498449162:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.531018263893202:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -6.440387322974857:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -7.502462217991706:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member explodePercentages_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -6.684784617245896:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.2393537577590905:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member explodePercentages_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -6.642610025068279:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This']
copynode -7.287615488283336:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -6.806458209117409:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl Literal value null_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MemberReference']
copynode -7.707349248637911:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.524487498449162:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.697839118947741:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.16432700533187:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.826803979114629:  root modified ^ parameters FormalParameter modifiers final_ter ^ ^ type BasicType name double_ter ^ ^ ^ ^ name loc0 ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType', 'name -> loc0', 'parameters -> End', 'root -> End']
copynode -6.440387322974857:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference']
copynode -7.1569418426952325:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.413676654861774:  root add ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -4.096558696823195:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal prefix_operators ^ value ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Literal', 'Literal -> prefix_operators value']
copynode -6.951037256454583:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -7.340964421629906:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> Literal', 'Literal -> value']
copynode -7.644896491605323:  root add ^ IfStatement condition MethodInvocation qualifier Math_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.935517247242387:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -7.758461534918752:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr ReferenceType ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> ReferenceType']
copynode -6.301738463749643:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> ReturnStatement']
copynode -6.935517247242387:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal']
copynode -7.1569418426952325:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This']
copynode -6.951037256454583:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal']
copynode -7.077861859870609:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal']
copynode -7.615232597745489:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
before@10 batch0 x: -8.230567647377029: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments This ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This']
after@10 batch0 x: -8.230567647377029: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments This ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This']
before@10 batch1 x: -8.142622839368414: root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
after@10 batch1 x: -8.142622839368414: root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -3.6963907016906887:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.714365674415603:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.6963907016906887:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.391640906222165:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'start -> unknown']
copynode -4.714365674415603:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.73313865903765:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> End']
copynode -5.772421350935474:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End']
copynode -5.814776441315189:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> End']
copynode -3.6963907016906887:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -5.78048268542625:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -3.6963907016906887:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.051558759994805:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End']
copynode -6.170740497298539:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End']
copynode -6.216556420782581:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.371131560066715:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.349047017283738:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'start -> unknown']
copynode -6.444729214766994:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End']
copynode -6.604695221642032:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End']
copynode -6.63664844352752:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'start -> unknown']
copynode -6.747266133315861:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown']
copynode -3.6963907016906887:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.926597182638943:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End']
copynode -7.0592128382995725:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'start -> unknown']
copynode -6.478397084632888:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -3.6963907016906887:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.162993269972503:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End']
copynode -7.207546574063599:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'start -> unknown']
copynode -6.478397084632888:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'start -> unknown']
copynode -6.945538745494559:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.1706219429615885:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.400385571876541:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -7.205398505786434:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member']
copynode -7.566510265925899:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'arguments -> End']
copynode -7.174069618107751:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation member ^ ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.736577755073085:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'arguments -> End']
copynode -7.741915252991021:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.62880465388298:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.610014086822048:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.826902246335521:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.193473940948024:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.739211263367906:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member getDataset_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.826462453289423:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value']
copynode -7.677462461404502:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.481659186072648:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.8898959218058735:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End']
copynode -7.7624146996531636:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -7.955931437201798:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'start -> unknown']
copynode -8.00456773955375:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'start -> unknown']
copynode -8.009305362589657:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'start -> unknown']
copynode -8.001619865186512:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par4 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par4', 'arguments -> End', 'start -> unknown']
copynode -7.538608801551163:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.046258663991466:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -8.098108871141449:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getStartAngle_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.880438024410978:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.945538745494559:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.502105122664943:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par2', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.940338731044903:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par1', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.817017752910033:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -8.012178334407508:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -8.153140431502834:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> End']
copynode -7.174069618107751:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.371431714156643:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MethodInvocation qualifier par2 ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2']
copynode -8.041609015548602:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'copy-member']
copynode -3.5834582664538175:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.5834582664538175:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.137244689511135:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -4.628509647445753:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -4.832643634872511:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.268446094589308:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.137244689511135:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -5.563331849174574:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -5.2368287243298255:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> End']
copynode -5.359500866790768:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement']
copynode -5.300982248445507:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement']
copynode -5.748700893716887:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.084157284058165:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -5.51988499838626:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement']
copynode -6.243057168321684:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type BasicType ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType']
copynode -5.420182655798271:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator -_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter']
copynode -5.652609345910605:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.652609345910605:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.137244689511135:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -5.300982248445507:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> End']
copynode -6.625059372978285:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation member getKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -3.5834582664538175:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MemberReference member explodePercentages_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.51988499838626:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -3.5834582664538175:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.370607154618483:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.8313429423142225:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -4.628509647445753:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier Math_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.816528957744595:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value']
copynode -6.839603048225399:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value']
copynode -5.2368287243298255:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement']
copynode -5.420182655798271:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -6.859917324443813:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.161213083658367:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> End']
copynode -6.310421235160902:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.420182655798271:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator *_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter']
copynode -6.357479025551584:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.359500866790768:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -7.153128687932622:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.357479025551584:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.832643634872511:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation member getKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -7.351264391298173:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -7.0493354554637335:  root add ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.196066147880629:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown']
copynode -7.371492576261517:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.268446094589308:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier Math_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.748700893716887:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -6.906549145642202:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.46874986027251:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -7.007877299794927:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer TernaryExpression condition BinaryOperation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation']
copynode -7.479451491904911:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value']
copynode -6.161213083658367:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ArrayInitializer initializers MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference']
copynode -7.297220804204699:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.180722814460751:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.300982248445507:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement_ter']
copynode -5.359500866790768:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression']
copynode -7.547719962196425:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -7.266637020220514:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.46874986027251:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -7.677016172965523:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl Literal value null_ter ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.420182655798271:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator /_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter']
copynode -5.51988499838626:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression']
copynode -5.300982248445507:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> StatementExpression']
copynode -6.310421235160902:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -7.795079330389854:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.2368287243298255:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> StatementExpression']
copynode -5.359500866790768:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement_ter']
copynode -7.8615911122760735:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.5834582664538175:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MemberReference member e_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MemberReference', 'MemberReference -> member', 'member -> e_ter']
copynode -6.161213083658367:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ArrayInitializer initializers Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal']
before@11 batch0 x: -8.292227354133502: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'copy-member']
after@11 batch0 x: -8.292227354133502: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'copy-member']
before@11 batch1 x: -7.905298276338726: root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ArrayInitializer initializers Literal ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal']
after@11 batch1 x: -7.905298276338726: root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ArrayInitializer initializers Literal ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal']
copynode -4.411868823925033:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2']
copynode -5.424244091846049:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -4.411868823925033:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3']
copynode -5.586910559097305:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -5.913564255693927:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.840962490299717:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -5.8431313338223845:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.345810478786007:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.382103105075657:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -4.411868823925033:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -5.25759924785234:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -5.379266573349014:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.25759924785234:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.4718404116574675:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.00125558511354:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.674612344242632:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.634732526028529:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.780320127494633:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.858287645736709:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2']
copynode -5.379266573349014:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.25759924785234:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3']
copynode -6.822748018661514:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.858287645736709:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3']
copynode -5.379266573349014:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par2']
copynode -7.0939108887687325:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.127551270881668:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'arguments -> End']
copynode -5.25759924785234:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.261003149906173:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'start -> unknown', 'arguments -> End']
copynode -7.251957261003554:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -4.411868823925033:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -7.462226664880291:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.00125558511354:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation']
copynode -4.411868823925033:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -5.379266573349014:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par3']
copynode -7.322743342490867:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.579213745193556:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -4.411868823925033:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par4 ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par4']
copynode -7.39684895821847:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.833620229968801:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member getDataset_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.591763948323205:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.759644894162193:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.852909816487227:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.858287645736709:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ selectors ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par1']
copynode -6.00125558511354:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference']
copynode -7.780349493026733:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -7.915973695227876:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member']
copynode -5.379266573349014:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1']
copynode -7.996888131834567:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -8.041778680868447:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -8.040479545481503:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -8.047542811371386:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par4 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par4', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.223690821090713:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -7.223690821090713:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -7.863330918364227:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -8.097995138028637:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -5.25759924785234:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -8.206674875924364:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ member getDataset_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> End', 'copy-member']
copynode -8.292227354133502:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.189375687623397:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -4.344955764012411:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -4.477462730603293:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -4.624714243458584:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -5.005346439080313:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -5.505787241505459:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Literal', 'Literal -> value', 'value -> 1_ter', 'root -> End']
copynode -6.083868778543547:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.898054343124386:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.023091566225048:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.300887334393337:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type BasicType name double_ter ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType']
copynode -5.4405590512324125:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.226931089942809:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.492265927838162:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Literal', 'Literal -> value', 'value -> 2_ter', 'root -> End']
copynode -6.474714276788291:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -6.0983254869352095:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.449217317102011:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -6.71361907501705:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MemberReference member explodePercentages_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.753156981663778:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -6.806204812775832:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -6.868162319471594:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.877473902364727:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.03147695818916:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> End', 'root -> End']
copynode -6.9001423515728675:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.108513600425795:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.802431515650824:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'member -> meth0']
copynode -6.842694885330275:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier Math_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -7.139401604363229:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -5.4405590512324125:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -7.296018726425245:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation member getKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'root -> End']
copynode -6.399972091661766:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator -_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference']
copynode -7.010280456801411:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.177165736386087:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -5.4405590512324125:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -5.898054343124386:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -5.4405590512324125:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> This_ter']
copynode -7.432419766846579:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -7.4646577629901:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter']
copynode -7.373819819884375:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -6.023091566225048:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.523353645810857:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer TernaryExpression condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.583182584901806:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement_ter', 'root -> End']
copynode -7.5387098113424145:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -4.802431515650824:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ member getKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'copy-member']
copynode -7.539676828775555:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ArrayInitializer initializers MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference', 'MemberReference -> member']
copynode -7.361847316788044:  root add ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -7.650015097518917:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.166063580370974:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.360053580458043:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference']
copynode -7.569339313020464:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -7.742001393780811:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> true_ter', 'type -> =_ter']
copynode -5.4405590512324125:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -7.789328271930572:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.831526261230465:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement_ter', 'root -> End']
copynode -6.399972091661766:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator -_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MethodInvocation']
copynode -7.79693723883247:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.823936144297477:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.890341124730185:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MemberReference member e_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MemberReference', 'MemberReference -> member', 'member -> e_ter', 'root -> End']
copynode -7.388933670183178:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.986031721578911:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference']
copynode -6.399972091661766:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator -_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> This']
copynode -7.40037230332382:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.118111799703911:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator *_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference']
copynode -6.449217317102011:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -6.226931089942809:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
before@12 batch0 x: -8.336990673327819: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
after@12 batch0 x: -8.336990673327819: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
before@12 batch1 x: -8.172042603080627: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
after@12 batch1 x: -8.172042603080627: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -5.359181655803695:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown']
copynode -5.606692565837875:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown']
copynode -5.920342197874561:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.981576875085011:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.454722417751327:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -6.611567214364186:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.451108230510727:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -6.595713747898117:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -6.771651175105944:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.835698319831863:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation']
copynode -6.626806570449844:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -6.94988919631578:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End']
copynode -6.989491997519508:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
copynode -7.023505283752456:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation']
copynode -7.152743615442887:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'arguments -> End', 'copy-member']
copynode -6.480720712104812:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -7.274518287042156:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.266667260089889:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -6.480720712104812:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.359181655803695:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member']
copynode -7.663862995104864:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.48497129813768:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -7.583068357082084:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -5.606692565837875:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'copy-member']
copynode -7.850470697740093:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.926588727394119:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -7.681370986858383:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par4 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par4', 'start -> unknown']
copynode -7.8021430189255625:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -7.034731580177322:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par2', 'arguments -> MemberReference']
copynode -6.926588727394119:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -7.886574281437788:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.843185519101098:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -7.94627101556398:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par1', 'selectors -> MethodInvocation']
copynode -8.006950343260542:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.483383490005508:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.034731580177322:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par2', 'arguments -> MethodInvocation']
copynode -7.997157424688339:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End']
copynode -6.626806570449844:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
copynode -8.104666429571807:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -8.183363808551803:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -8.275917412946:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ member getDataset_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.508107019821182:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par3', 'arguments -> MemberReference']
copynode -8.08307750360109:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.508107019821182:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par3', 'arguments -> MethodInvocation']
copynode -6.157379877229687:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.35938551207073:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.29466895427322:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.391262764518615:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.580951925076079:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -6.088529021246359:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.325447661103681:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type BasicType name double_ter ^ ^ ^ ^ expression MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MethodInvocation']
copynode -6.569375937280711:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr']
copynode -6.666410160658415:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr']
copynode -6.088529021246359:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.149816206889227:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'member -> meth0', 'root -> End']
copynode -7.1980465420056134:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier Math_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -7.074975857918616:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -7.241391693183687:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr']
copynode -7.337644170271233:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator -_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.35789998335531:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr']
copynode -7.285517714219168:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -7.438176375289913:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.471787577000214:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter', 'root -> End']
copynode -7.513775717874523:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.973769452830311:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -7.618802241282538:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ member getKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'copy-member', 'root -> End']
copynode -7.467068574624136:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> This_ter', 'arguments -> End']
copynode -7.69794115977129:  root add ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.735526058531832:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -7.744288750400301:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.924567316134926:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -7.743592005426763:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member']
copynode -7.74983273629914:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> true_ter', 'type -> =_ter', 'root -> End']
copynode -7.143468766706064:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.354415651818272:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.924567316134926:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.971848379122093:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.325447661103681:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type BasicType name double_ter ^ ^ ^ ^ expression MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MemberReference']
copynode -7.507679335074499:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -8.14101083134301:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator *_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.631788982544094:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ArrayInitializer initializers MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.953803193231579:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -8.172042603080627:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.143468766706064:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MemberReference member dataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -8.14005336840637:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.59827295265859:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -6.325447661103681:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type BasicType name double_ter ^ ^ ^ ^ expression This ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> This']
copynode -6.569375937280711:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'operandr -> MemberReference']
copynode -6.666410160658415:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference']
copynode -7.711164288630243:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -6.157379877229687:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -6.973769452830311:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
before@13 batch0 x: -8.50944514409639: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par3', 'arguments -> MethodInvocation']
after@13 batch0 x: -8.50944514409639: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par3', 'arguments -> MethodInvocation']
before@13 batch1 x: -8.603228357096668: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
after@13 batch1 x: -8.603228357096668: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.553649274865165:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> End']
copynode -5.807970298686996:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End']
copynode -6.530947773018852:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member']
copynode -6.64134661690332:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End']
copynode -6.649832288036123:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.897564126411453:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -6.882919831434265:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.0181768296752125:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'copy-member']
copynode -7.066752305487171:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.196505539352074:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.0713953173253685:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.317948175827041:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.355317501584068:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member']
copynode -7.6025715006981045:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End']
copynode -7.677570162573829:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End']
copynode -7.204149319091812:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.8072576655540615:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'copy-member', 'arguments -> End']
copynode -7.889327911892906:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par4 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par4', 'start -> unknown', 'arguments -> End']
copynode -7.455301417270675:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -8.11050863401033:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'arguments -> End']
copynode -7.993588702986017:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par1', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.455301417270675:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.94588358537294:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.253333477536216:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member']
copynode -7.944803012767807:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par2', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.7410722088534385:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -7.986600359203294:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-arguments']
copynode -7.879627896705642:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -8.034858538070694:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par2', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.933907043421641:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -6.530947773018852:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'start -> unknown']
copynode -8.426399065414444:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par3', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.882919831434265:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.553649274865165:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -7.944803012767807:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.3848388161859475:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.4406260218820535:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.597581575100776:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.65150234173052:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -7.2214201189926825:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.406503304140642:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member dataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.930415963230189:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement']
copynode -7.091761261923239:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -7.003727299568709:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement']
copynode -6.880852383794263:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type BasicType name double_ter ^ ^ ^ ^ expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.65150234173052:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -7.581095483561512:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.479521147208288:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.3624135565478355:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator -_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.865529625909403:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -7.77304634306347:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.311671187111642:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement']
copynode -7.091761261923239:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member unknown ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -7.425839421281125:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> End']
copynode -8.040861708344892:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type BasicType name double_ter ^ ^ ^ ^ expression MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MemberReference', 'MemberReference -> member']
copynode -7.003727299568709:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> End']
copynode -7.78525868471479:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.714326107816305:  root add ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.900434848328587:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.3624135565478355:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator -_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.880852383794263:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type BasicType name double_ter ^ ^ ^ ^ expression MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -8.36855689366348:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -8.207923841138836:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation']
copynode -7.311671187111642:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> End']
copynode -8.5563693572185:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -7.425839421281125:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement']
copynode -6.930415963230189:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> End']
copynode -7.997487650485709:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -8.303243308560923:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MemberReference member dataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -8.565378915925976:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
before@14 batch0 x: -8.999850763240829: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par2', 'arguments -> MemberReference', 'MemberReference -> member']
after@14 batch0 x: -8.999850763240829: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par2', 'arguments -> MemberReference', 'MemberReference -> member']
before@14 batch1 x: -8.697681647201534: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
after@14 batch1 x: -8.697681647201534: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -5.5993459618184716:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -5.852590812603012:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.65558028803207:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -6.719321610638872:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -6.689998535672203:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.910971125820652:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.141887305537239:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -7.181840336183086:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -7.04241812066175:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.465280695119873:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -7.226616988191381:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.66017427877523:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.731290312716737:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.864782156655565:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.933051789412275:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par4 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par4', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.122998740756884:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.113709463039413:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -8.342197111109272:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -8.410429270239547:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End']
copynode -8.15771353454329:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par1', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -8.378352595726028:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par2', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -8.711783837759867:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End']
copynode -8.752462951699272:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'start -> unknown', 'arguments -> End']
copynode -8.41794486832805:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-arguments', 'copy-member']
copynode -7.762822045246139:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2']
copynode -8.863518757978454:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par3', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -8.269473238149658:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -8.42690415517427:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2']
copynode -8.190777791896835:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -7.762822045246139:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -7.762822045246139:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3']
copynode -8.946637956658378:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -8.190777791896835:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3']
copynode -6.4015059065422975:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.4571019191644154:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.615750832890626:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.240079144423362:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.635364860994741:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -7.456720932619646:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member dataset_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -7.556688641605433:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.88852045009844:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'root -> End']
copynode -6.615750832890626:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.02107350382721:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -7.815750104782637:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.897051480074879:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -7.934845081763342:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -7.132416874868795:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.867147130193189:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type BasicType name double_ter ^ ^ ^ ^ expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -8.178477669076528:  root add ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -8.027265955635812:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -8.12930474098539:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -8.29322783392854:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type BasicType name double_ter ^ ^ ^ ^ expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -8.19595202471828:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -8.480652406113222:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -8.492385249992367:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.132416874868795:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.132416874868795:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.4015059065422975:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.240079144423362:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.567011353501584:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.4571019191644154:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.083071739645675:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type BasicType name double_ter ^ ^ ^ ^ expression MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.132416874868795:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.556688641605433:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
before@15 batch0 x: -9.589585913578048: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3']
after@15 batch0 x: -9.589585913578048: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3']
before@15 batch1 x: -9.026740645465907: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
after@15 batch1 x: -9.026740645465907: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -5.701875658938661:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -5.955118580022827:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -6.669854231411591:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -6.733166188234463:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -6.793233132222667:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -6.933272699126974:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.155541771324351:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.19478199002333:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.348360447445884:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -7.480695291655138:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.538876990089193:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -7.760702846804634:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -7.834298508474603:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -7.964549312600866:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -8.036473753163591:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par4 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par4', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -8.154815308982506:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.3584374433849:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -8.435596372233704:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -8.454165758797899:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par1', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -8.734526839340106:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -8.774125476600602:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-arguments', 'copy-member', 'arguments -> End']
copynode -8.767351132119074:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.850086463848129:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown']
copynode -9.199740989366546:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -9.331834329525009:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -9.364866508403793:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -9.370044959941879:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown']
copynode -9.589585913578048:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End']
copynode -7.348360447445884:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -7.538876990089193:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -5.701875658938661:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> MethodInvocation']
copynode -9.496922282734886:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2']
copynode -5.955118580022827:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> MethodInvocation']
copynode -6.665275860985275:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -6.692673631419893:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -7.006935550307389:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -7.603590140526649:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -8.01064722094452:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -8.088522997160908:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.832606141862925:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -8.046300230023917:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -8.260589275916573:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -8.124044806463644:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -8.383065191330388:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type BasicType name double_ter ^ ^ ^ ^ expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -8.389608394762035:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -8.232993771263864:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -8.54645446012728:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'copy-MethodInvocation', 'selectors -> End']
copynode -8.668442208727356:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -8.69120619673049:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -8.64643755625002:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'copy-MethodInvocation', 'selectors -> End']
copynode -8.804087497701403:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -8.82183209178038:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type BasicType name double_ter ^ ^ ^ ^ expression MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -8.736286965140607:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -9.026740645465907:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -8.514967533235904:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -7.832606141862925:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -8.514967533235904:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -9.006595999700949:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -8.232993771263864:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
before@16 batch0 x: -10.455542965093628: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> MethodInvocation']
after@16 batch0 x: -10.455542965093628: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> MethodInvocation']
before@16 batch1 x: -10.375242878624704: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
after@16 batch1 x: -10.375242878624704: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -5.715317272813991:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -5.968587622279301:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -6.68969625630416:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.753927307436243:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.806696614483371:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.176260964246467:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.216043585212901:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.499947737203911:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.7738393091131:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.847946327412501:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.977675387868658:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -8.049951371969655:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par4 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par4', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.42822895036079:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -7.619814539561048:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -8.378061708295718:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.471846065716818:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.78494766377844:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.799171265447512:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.78993481141515:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-arguments', 'copy-member', 'arguments -> End', 'copy-member']
copynode -9.070870651165023:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> End']
copynode -8.532835709163919:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par1', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -9.578658802667633:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End']
copynode -9.601086540380493:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End']
copynode -9.42994192079641:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member']
copynode -9.675170114496723:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'copy-member']
copynode -9.938538221875206:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -10.116297463187948:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.42822895036079:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -7.619814539561048:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -9.329323394456878:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member']
copynode -9.42994192079641:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'start -> unknown']
copynode -8.221037392911967:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -8.23813426255947:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -8.097806944919284:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.33817018638365:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -8.579813619086053:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -8.271174501103815:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.69087587366812:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member getKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'copy-MethodInvocation', 'selectors -> End', 'root -> End']
copynode -8.765659690601751:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'copy-MethodInvocation', 'selectors -> End', 'root -> End']
copynode -8.401152601873036:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.93810318125179:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -9.165484996919986:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -9.781193201837596:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -9.933890552027151:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.33817018638365:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -9.165484996919986:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This']
before@17 batch0 x: -10.949678329983726: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'start -> unknown']
after@17 batch0 x: -10.949678329983726: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'start -> unknown']
before@17 batch1 x: -10.371823044901248: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This']
after@17 batch1 x: -10.371823044901248: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This']
copynode -5.7343127217609435:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.988048993283883:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.825526116648689:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.790912789525464:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.866877204040065:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.99503630050458:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.07013478060253:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par4 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par4', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.085025167325512:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End']
copynode -8.269913161406294:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End']
copynode -8.816679540323094:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-arguments', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.194375263759866:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par1', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End']
copynode -9.129306892165914:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -9.718595860758796:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -9.951261749723926:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -9.639246436068788:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -9.658859806368127:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -10.36158142075874:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End']
copynode -8.085025167325512:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation']
copynode -10.53081955970265:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End']
copynode -10.674886686960235:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -8.269913161406294:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation']
copynode -10.949678329983726:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'start -> unknown', 'arguments -> End']
copynode -8.429031714273151:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -8.527679593069479:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -8.23961577512091:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.258139118028339:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.6098008560366:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -8.788592270051595:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -8.598725846910384:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.958961247408297:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -9.91376170743024:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.598725846910384:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -10.011589013738558:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.23961577512091:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 1_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -8.258139118028339:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 1_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 1_ter']
before@18 batch0 x: -10.989793537417427: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'start -> unknown', 'arguments -> End']
after@18 batch0 x: -10.989793537417427: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'start -> unknown', 'arguments -> End']
before@18 batch1 x: -10.736926540208515: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 1_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 1_ter']
after@18 batch1 x: -10.736926540208515: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 1_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -8.211259102681652:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -8.395166019210592:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -9.324465858051553:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par1', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -9.653897622833028:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -9.760337518760934:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -9.992572395363823:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.171548934886232:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -10.176239269087091:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -10.472803874174133:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.64069906086661:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.733460003742948:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.989793537417427:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -10.561238622525707:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -10.752599204191938:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -8.578515484405216:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -8.566818274033722:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -8.905708840989973:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -9.252059488499071:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -9.93696231622016:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -10.611124566697981:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -10.672660685551818:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 1_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 1_ter', 'root -> End']
copynode -10.736926540208515:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 1_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 1_ter', 'root -> End']
copynode -10.633383177919313:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
before@19 batch0 x: -11.498563969740644: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
after@19 batch0 x: -11.498563969740644: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
before@19 batch1 x: -10.764889859361574: root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
after@19 batch1 x: -10.764889859361574: root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member dataset_ter ^ ^ ^ MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -8.281726805726066:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -8.465233171591535:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -9.396347673842683:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par1', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -9.690500596771017:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -9.807764759520069:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -10.04168980405666:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -10.207977073499933:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.213019827613607:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.562758734682575:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -10.729993717977777:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -10.800606342265382:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -11.04861348704435:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -11.308290099957958:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2']
copynode -11.498563969740644:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2']
copynode -10.377586016838904:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -10.377586016838904:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference']
before@20 batch0 x: -12.327861869940534: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2']
after@20 batch0 x: -12.327861869940534: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2']
before@20 batch1 x: -11.92699385661399: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference']
after@20 batch1 x: -11.92699385661399: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference']
copynode -8.294772321591154:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -8.478350007208064:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -9.409340653801337:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par1', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -9.740448935190216:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -9.820577811682597:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.05435199313797:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.258362608263269:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -10.263119431445375:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -10.5759081824217:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.743211774388328:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.813760802382603:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -11.060723196016625:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.133386349538341:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member']
copynode -12.327861869940534:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member']
copynode -11.008194635098334:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement']
copynode -11.92699385661399:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member']
before@21 batch0 x: -13.631827200064436: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member']
after@21 batch0 x: -13.631827200064436: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member']
before@21 batch1 x: -12.05817774910247: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member']
after@21 batch1 x: -12.05817774910247: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.320192875573412:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.503871322842315:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.434792511397973:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par1', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.751432719873264:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -9.838526034960523:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -10.072966687614098:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par3 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -10.269362665014341:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.274123827228323:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.600909346947446:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -10.76830809772946:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -10.834028205135837:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -11.079245231347159:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -13.427257990697399:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End']
copynode -13.631827200064436:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End']
copynode -11.659692475979682:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -12.05817774910247:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member']
before@22 batch0 x: -13.676247043767944: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End']
after@22 batch0 x: -13.676247043767944: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End']
before@22 batch1 x: -12.744561413710471: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member']
after@22 batch1 x: -12.744561413710471: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -9.772291819797829:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -10.290318235056475:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -10.295160049805418:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ member unknown ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par3', 'start -> unknown', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -13.471255948999897:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member']
copynode -13.676247043767944:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member']
copynode -11.877624879067298:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -12.744561413710471:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> ReturnStatement']
before@23 batch0 x: -13.775067469337955: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member']
after@23 batch0 x: -13.775067469337955: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member']
before@23 batch1 x: -13.354408720915671: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> ReturnStatement']
after@23 batch1 x: -13.354408720915671: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> ReturnStatement']
copynode -13.57070110575296:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -13.775067469337955:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End']
copynode -12.10019951540744:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -13.354408720915671:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> ReturnStatement', 'ReturnStatement -> expression']
before@24 batch0 x: -13.789287240477279: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End']
after@24 batch0 x: -13.789287240477279: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End']
before@24 batch1 x: -13.574874395912047: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> ReturnStatement', 'ReturnStatement -> expression']
after@24 batch1 x: -13.574874395912047: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -13.584906609961763:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -13.789287240477279:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.116451902722474:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -13.574874395912047:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
before@25 batch0 x: -13.812616328941658: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
after@25 batch0 x: -13.812616328941658: root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member']
before@25 batch1 x: -13.78715481836116: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
after@25 batch1 x: -13.78715481836116: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -13.608301716158167:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par2 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par2', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -13.812616328941658:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier DatasetUtilities_ter ^ ^ arguments MethodInvocation qualifier par3 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getDataset_ter ^ ^ ^ MethodInvocation qualifier par2 ^ ^ member getDataset_ter ^ ^ ^ ^ member calculatePieDatasetTotal_ter ^ ^ ^ ^ member setTotal_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par3', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par2', 'copy-member', 'arguments -> End', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.695263071393128:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -13.78715481836116:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
before@26 batch1 x: -13.800059399043676: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
after@26 batch1 x: -13.800059399043676: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -13.800059399043676:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
before@27 batch1 x: -14.437946340476628: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
after@27 batch1 x: -14.437946340476628: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -14.437946340476628:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member dataset_ter ^ ^ ^ ^ operandr MemberReference member dataset_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
method
DatasetUtilities_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
DatasetUtilities_ter serialVersionUID
DatasetUtilities_ter DEFAULT_INTERIOR_GAP
DatasetUtilities_ter MAX_INTERIOR_GAP
DatasetUtilities_ter DEFAULT_START_ANGLE
DatasetUtilities_ter DEFAULT_LABEL_FONT
DatasetUtilities_ter DEFAULT_LABEL_PAINT
DatasetUtilities_ter DEFAULT_LABEL_BACKGROUND_PAINT
DatasetUtilities_ter DEFAULT_LABEL_OUTLINE_PAINT
DatasetUtilities_ter DEFAULT_LABEL_OUTLINE_STROKE
DatasetUtilities_ter DEFAULT_LABEL_SHADOW_PAINT
DatasetUtilities_ter DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW
DatasetUtilities_ter dataset
DatasetUtilities_ter pieIndex
DatasetUtilities_ter interiorGap
DatasetUtilities_ter circular
DatasetUtilities_ter startAngle
DatasetUtilities_ter direction
DatasetUtilities_ter sectionPaintMap
DatasetUtilities_ter baseSectionPaint
DatasetUtilities_ter sectionOutlinesVisible
DatasetUtilities_ter sectionOutlinePaintMap
DatasetUtilities_ter baseSectionOutlinePaint
DatasetUtilities_ter sectionOutlineStrokeMap
DatasetUtilities_ter baseSectionOutlineStroke
DatasetUtilities_ter shadowPaint
DatasetUtilities_ter shadowXOffset
DatasetUtilities_ter shadowYOffset
DatasetUtilities_ter explodePercentages
DatasetUtilities_ter labelGenerator
DatasetUtilities_ter labelFont
DatasetUtilities_ter labelPaint
DatasetUtilities_ter labelBackgroundPaint
DatasetUtilities_ter labelOutlinePaint
DatasetUtilities_ter labelOutlineStroke
DatasetUtilities_ter labelShadowPaint
DatasetUtilities_ter simpleLabels
DatasetUtilities_ter labelPadding
DatasetUtilities_ter simpleLabelOffset
DatasetUtilities_ter maximumLabelWidth
DatasetUtilities_ter labelGap
DatasetUtilities_ter labelLinksVisible
DatasetUtilities_ter labelLinkMargin
DatasetUtilities_ter labelLinkPaint
DatasetUtilities_ter labelLinkStroke
DatasetUtilities_ter labelDistributor
DatasetUtilities_ter toolTipGenerator
DatasetUtilities_ter urlGenerator
DatasetUtilities_ter legendLabelGenerator
DatasetUtilities_ter legendLabelToolTipGenerator
DatasetUtilities_ter legendLabelURLGenerator
DatasetUtilities_ter ignoreNullValues
DatasetUtilities_ter ignoreZeroValues
DatasetUtilities_ter legendItemShape
DatasetUtilities_ter minimumArcAngleToDraw
DatasetUtilities_ter localizationResources
DatasetUtilities_ter DEBUG_DRAW_INTERIOR
DatasetUtilities_ter DEBUG_DRAW_LINK_AREA
DatasetUtilities_ter DEBUG_DRAW_PIE_AREA
except
method
plot_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
7 PiePlot
PieDataset PieDataset getDataset getDataset_ter
None PieDataset setDataset getDataset_ter
int PieDataset getPieIndex getDataset_ter
None PieDataset setPieIndex getDataset_ter
double PieDataset getStartAngle getDataset_ter
None PieDataset setStartAngle getDataset_ter
Rotation PieDataset getDirection getDataset_ter
None PieDataset setDirection getDataset_ter
double PieDataset getInteriorGap getDataset_ter
None PieDataset setInteriorGap getDataset_ter
boolean PieDataset isCircular getDataset_ter
None PieDataset setCircular getDataset_ter
None PieDataset setCircular getDataset_ter
boolean PieDataset getIgnoreNullValues getDataset_ter
None PieDataset setIgnoreNullValues getDataset_ter
boolean PieDataset getIgnoreZeroValues getDataset_ter
None PieDataset setIgnoreZeroValues getDataset_ter
Paint PieDataset lookupSectionPaint getDataset_ter
Paint PieDataset lookupSectionPaint getDataset_ter
Comparable PieDataset getSectionKey getDataset_ter
Paint PieDataset getSectionPaint getDataset_ter
None PieDataset setSectionPaint getDataset_ter
Paint PieDataset getBaseSectionPaint getDataset_ter
None PieDataset setBaseSectionPaint getDataset_ter
boolean PieDataset getSectionOutlinesVisible getDataset_ter
None PieDataset setSectionOutlinesVisible getDataset_ter
Paint PieDataset lookupSectionOutlinePaint getDataset_ter
Paint PieDataset lookupSectionOutlinePaint getDataset_ter
Paint PieDataset getSectionOutlinePaint getDataset_ter
None PieDataset setSectionOutlinePaint getDataset_ter
Paint PieDataset getBaseSectionOutlinePaint getDataset_ter
None PieDataset setBaseSectionOutlinePaint getDataset_ter
Stroke PieDataset lookupSectionOutlineStroke getDataset_ter
Stroke PieDataset lookupSectionOutlineStroke getDataset_ter
Stroke PieDataset getSectionOutlineStroke getDataset_ter
None PieDataset setSectionOutlineStroke getDataset_ter
Stroke PieDataset getBaseSectionOutlineStroke getDataset_ter
None PieDataset setBaseSectionOutlineStroke getDataset_ter
Paint PieDataset getShadowPaint getDataset_ter
None PieDataset setShadowPaint getDataset_ter
double PieDataset getShadowXOffset getDataset_ter
None PieDataset setShadowXOffset getDataset_ter
double PieDataset getShadowYOffset getDataset_ter
None PieDataset setShadowYOffset getDataset_ter
double PieDataset getExplodePercent getDataset_ter
None PieDataset setExplodePercent getDataset_ter
double PieDataset getMaximumExplodePercent getDataset_ter
PieSectionLabelGenerator PieDataset getLabelGenerator getDataset_ter
None PieDataset setLabelGenerator getDataset_ter
double PieDataset getLabelGap getDataset_ter
None PieDataset setLabelGap getDataset_ter
double PieDataset getMaximumLabelWidth getDataset_ter
None PieDataset setMaximumLabelWidth getDataset_ter
boolean PieDataset getLabelLinksVisible getDataset_ter
None PieDataset setLabelLinksVisible getDataset_ter
double PieDataset getLabelLinkMargin getDataset_ter
None PieDataset setLabelLinkMargin getDataset_ter
Paint PieDataset getLabelLinkPaint getDataset_ter
None PieDataset setLabelLinkPaint getDataset_ter
Stroke PieDataset getLabelLinkStroke getDataset_ter
None PieDataset setLabelLinkStroke getDataset_ter
Font PieDataset getLabelFont getDataset_ter
None PieDataset setLabelFont getDataset_ter
Paint PieDataset getLabelPaint getDataset_ter
None PieDataset setLabelPaint getDataset_ter
Paint PieDataset getLabelBackgroundPaint getDataset_ter
None PieDataset setLabelBackgroundPaint getDataset_ter
Paint PieDataset getLabelOutlinePaint getDataset_ter
None PieDataset setLabelOutlinePaint getDataset_ter
Stroke PieDataset getLabelOutlineStroke getDataset_ter
None PieDataset setLabelOutlineStroke getDataset_ter
Paint PieDataset getLabelShadowPaint getDataset_ter
None PieDataset setLabelShadowPaint getDataset_ter
RectangleInsets PieDataset getLabelPadding getDataset_ter
None PieDataset setLabelPadding getDataset_ter
boolean PieDataset getSimpleLabels getDataset_ter
None PieDataset setSimpleLabels getDataset_ter
RectangleInsets PieDataset getSimpleLabelOffset getDataset_ter
None PieDataset setSimpleLabelOffset getDataset_ter
AbstractPieLabelDistributor PieDataset getLabelDistributor getDataset_ter
None PieDataset setLabelDistributor getDataset_ter
PieToolTipGenerator PieDataset getToolTipGenerator getDataset_ter
None PieDataset setToolTipGenerator getDataset_ter
PieURLGenerator PieDataset getURLGenerator getDataset_ter
None PieDataset setURLGenerator getDataset_ter
double PieDataset getMinimumArcAngleToDraw getDataset_ter
None PieDataset setMinimumArcAngleToDraw getDataset_ter
Shape PieDataset getLegendItemShape getDataset_ter
None PieDataset setLegendItemShape getDataset_ter
PieSectionLabelGenerator PieDataset getLegendLabelGenerator getDataset_ter
None PieDataset setLegendLabelGenerator getDataset_ter
PieSectionLabelGenerator PieDataset getLegendLabelToolTipGenerator getDataset_ter
None PieDataset setLegendLabelToolTipGenerator getDataset_ter
PieURLGenerator PieDataset getLegendLabelURLGenerator getDataset_ter
None PieDataset setLegendLabelURLGenerator getDataset_ter
PiePlotState PieDataset initialise getDataset_ter
None PieDataset draw getDataset_ter
None PieDataset drawPie getDataset_ter
None PieDataset drawItem getDataset_ter
None PieDataset drawSimpleLabels getDataset_ter
None PieDataset drawLabels getDataset_ter
None PieDataset drawLeftLabels getDataset_ter
None PieDataset drawRightLabels getDataset_ter
LegendItemCollection PieDataset getLegendItems getDataset_ter
String PieDataset getPlotType getDataset_ter
Rectangle2D PieDataset getArcBounds getDataset_ter
None PieDataset drawLeftLabel getDataset_ter
None PieDataset drawRightLabel getDataset_ter
boolean PieDataset equals getDataset_ter
Object PieDataset clone getDataset_ter
None PieDataset writeObject getDataset_ter
None PieDataset readObject getDataset_ter
method
7 
method
state_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
except
method
7 
method
state_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
7 PiePlotState
int  getPassesRequired 
None  setPassesRequired 
double  getTotal 
None  setTotal 
double  getLatestAngle 
None  setLatestAngle 
Rectangle2D  getPieArea 
None  setPieArea 
Rectangle2D  getExplodedPieArea 
None  setExplodedPieArea 
double  getPieCenterX 
None  setPieCenterX 
double  getPieCenterY 
None  setPieCenterY 
Rectangle2D  getLinkArea 
None  setLinkArea 
double  getPieHRadius 
None  setPieHRadius 
double  getPieWRadius 
None  setPieWRadius 
method
state_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
7 PiePlotState
int  getPassesRequired 
None  setPassesRequired 
double  getTotal 
None  setTotal 
double  getLatestAngle 
None  setLatestAngle 
Rectangle2D  getPieArea 
None  setPieArea 
Rectangle2D  getExplodedPieArea 
None  setExplodedPieArea 
double  getPieCenterX 
None  setPieCenterX 
double  getPieCenterY 
None  setPieCenterY 
Rectangle2D  getLinkArea 
None  setLinkArea 
double  getPieHRadius 
None  setPieHRadius 
double  getPieWRadius 
None  setPieWRadius 
method
plot_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
7 PiePlot
method
7 
method
DatasetUtilities_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
DatasetUtilities_ter serialVersionUID
DatasetUtilities_ter DEFAULT_INTERIOR_GAP
DatasetUtilities_ter MAX_INTERIOR_GAP
DatasetUtilities_ter DEFAULT_START_ANGLE
DatasetUtilities_ter DEFAULT_LABEL_FONT
DatasetUtilities_ter DEFAULT_LABEL_PAINT
DatasetUtilities_ter DEFAULT_LABEL_BACKGROUND_PAINT
DatasetUtilities_ter DEFAULT_LABEL_OUTLINE_PAINT
DatasetUtilities_ter DEFAULT_LABEL_OUTLINE_STROKE
DatasetUtilities_ter DEFAULT_LABEL_SHADOW_PAINT
DatasetUtilities_ter DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW
DatasetUtilities_ter dataset
DatasetUtilities_ter pieIndex
DatasetUtilities_ter interiorGap
DatasetUtilities_ter circular
DatasetUtilities_ter startAngle
DatasetUtilities_ter direction
DatasetUtilities_ter sectionPaintMap
DatasetUtilities_ter baseSectionPaint
DatasetUtilities_ter sectionOutlinesVisible
DatasetUtilities_ter sectionOutlinePaintMap
DatasetUtilities_ter baseSectionOutlinePaint
DatasetUtilities_ter sectionOutlineStrokeMap
DatasetUtilities_ter baseSectionOutlineStroke
DatasetUtilities_ter shadowPaint
DatasetUtilities_ter shadowXOffset
DatasetUtilities_ter shadowYOffset
DatasetUtilities_ter explodePercentages
DatasetUtilities_ter labelGenerator
DatasetUtilities_ter labelFont
DatasetUtilities_ter labelPaint
DatasetUtilities_ter labelBackgroundPaint
DatasetUtilities_ter labelOutlinePaint
DatasetUtilities_ter labelOutlineStroke
DatasetUtilities_ter labelShadowPaint
DatasetUtilities_ter simpleLabels
DatasetUtilities_ter labelPadding
DatasetUtilities_ter simpleLabelOffset
DatasetUtilities_ter maximumLabelWidth
DatasetUtilities_ter labelGap
DatasetUtilities_ter labelLinksVisible
DatasetUtilities_ter labelLinkMargin
DatasetUtilities_ter labelLinkPaint
DatasetUtilities_ter labelLinkStroke
DatasetUtilities_ter labelDistributor
DatasetUtilities_ter toolTipGenerator
DatasetUtilities_ter urlGenerator
DatasetUtilities_ter legendLabelGenerator
DatasetUtilities_ter legendLabelToolTipGenerator
DatasetUtilities_ter legendLabelURLGenerator
DatasetUtilities_ter ignoreNullValues
DatasetUtilities_ter ignoreZeroValues
DatasetUtilities_ter legendItemShape
DatasetUtilities_ter minimumArcAngleToDraw
DatasetUtilities_ter localizationResources
DatasetUtilities_ter DEBUG_DRAW_INTERIOR
DatasetUtilities_ter DEBUG_DRAW_LINK_AREA
DatasetUtilities_ter DEBUG_DRAW_PIE_AREA
7 
method
plot_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
7 PiePlot
method
index_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
7 Integer
method
state_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
7 PiePlotState
int  getPassesRequired 
None  setPassesRequired 
double  getTotal 
None  setTotal 
double  getLatestAngle 
None  setLatestAngle 
Rectangle2D  getPieArea 
None  setPieArea 
Rectangle2D  getExplodedPieArea 
None  setExplodedPieArea 
double  getPieCenterX 
None  setPieCenterX 
double  getPieCenterY 
None  setPieCenterY 
Rectangle2D  getLinkArea 
None  setLinkArea 
double  getPieHRadius 
None  setPieHRadius 
double  getPieWRadius 
None  setPieWRadius 
method
index_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
7 Integer
method
state_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
7 PiePlotState
int  getPassesRequired 
None  setPassesRequired 
double  getTotal 
None  setTotal 
double  getLatestAngle 
None  setLatestAngle 
Rectangle2D  getPieArea 
None  setPieArea 
Rectangle2D  getExplodedPieArea 
None  setExplodedPieArea 
double  getPieCenterX 
None  setPieCenterX 
double  getPieCenterY 
None  setPieCenterY 
Rectangle2D  getLinkArea 
None  setLinkArea 
double  getPieHRadius 
None  setPieHRadius 
double  getPieWRadius 
None  setPieWRadius 
method
state_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
except
method
plotArea_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
7 Rectangle2D
method
state_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
7 PiePlotState
int  getPassesRequired 
None  setPassesRequired 
double  getTotal 
None  setTotal 
double  getLatestAngle 
None  setLatestAngle 
Rectangle2D  getPieArea 
None  setPieArea 
Rectangle2D  getExplodedPieArea 
None  setExplodedPieArea 
double  getPieCenterX 
None  setPieCenterX 
double  getPieCenterY 
None  setPieCenterY 
Rectangle2D  getLinkArea 
None  setLinkArea 
double  getPieHRadius 
None  setPieHRadius 
double  getPieWRadius 
None  setPieWRadius 
method
plotArea_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
7 Rectangle2D
method
7 
method
state_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
7 PiePlotState
method
state_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
7 PiePlotState
int  getPassesRequired 
None  setPassesRequired 
double  getTotal 
None  setTotal 
double  getLatestAngle 
None  setLatestAngle 
Rectangle2D  getPieArea 
None  setPieArea 
Rectangle2D  getExplodedPieArea 
None  setExplodedPieArea 
double  getPieCenterX 
None  setPieCenterX 
double  getPieCenterY 
None  setPieCenterY 
Rectangle2D  getLinkArea 
None  setLinkArea 
double  getPieHRadius 
None  setPieHRadius 
double  getPieWRadius 
None  setPieWRadius 
method
7 
method
state_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
7 PiePlotState
int  getPassesRequired 
None  setPassesRequired 
double  getTotal 
None  setTotal 
double  getLatestAngle 
None  setLatestAngle 
Rectangle2D  getPieArea 
None  setPieArea 
Rectangle2D  getExplodedPieArea 
None  setExplodedPieArea 
double  getPieCenterX 
None  setPieCenterX 
double  getPieCenterY 
None  setPieCenterY 
Rectangle2D  getLinkArea 
None  setLinkArea 
double  getPieHRadius 
None  setPieHRadius 
double  getPieWRadius 
None  setPieWRadius 
method
DatasetUtilities_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
DatasetUtilities_ter serialVersionUID
DatasetUtilities_ter DEFAULT_INTERIOR_GAP
DatasetUtilities_ter MAX_INTERIOR_GAP
DatasetUtilities_ter DEFAULT_START_ANGLE
DatasetUtilities_ter DEFAULT_LABEL_FONT
DatasetUtilities_ter DEFAULT_LABEL_PAINT
DatasetUtilities_ter DEFAULT_LABEL_BACKGROUND_PAINT
DatasetUtilities_ter DEFAULT_LABEL_OUTLINE_PAINT
DatasetUtilities_ter DEFAULT_LABEL_OUTLINE_STROKE
DatasetUtilities_ter DEFAULT_LABEL_SHADOW_PAINT
DatasetUtilities_ter DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW
DatasetUtilities_ter dataset
DatasetUtilities_ter pieIndex
DatasetUtilities_ter interiorGap
DatasetUtilities_ter circular
DatasetUtilities_ter startAngle
DatasetUtilities_ter direction
DatasetUtilities_ter sectionPaintMap
DatasetUtilities_ter baseSectionPaint
DatasetUtilities_ter sectionOutlinesVisible
DatasetUtilities_ter sectionOutlinePaintMap
DatasetUtilities_ter baseSectionOutlinePaint
DatasetUtilities_ter sectionOutlineStrokeMap
DatasetUtilities_ter baseSectionOutlineStroke
DatasetUtilities_ter shadowPaint
DatasetUtilities_ter shadowXOffset
DatasetUtilities_ter shadowYOffset
DatasetUtilities_ter explodePercentages
DatasetUtilities_ter labelGenerator
DatasetUtilities_ter labelFont
DatasetUtilities_ter labelPaint
DatasetUtilities_ter labelBackgroundPaint
DatasetUtilities_ter labelOutlinePaint
DatasetUtilities_ter labelOutlineStroke
DatasetUtilities_ter labelShadowPaint
DatasetUtilities_ter simpleLabels
DatasetUtilities_ter labelPadding
DatasetUtilities_ter simpleLabelOffset
DatasetUtilities_ter maximumLabelWidth
DatasetUtilities_ter labelGap
DatasetUtilities_ter labelLinksVisible
DatasetUtilities_ter labelLinkMargin
DatasetUtilities_ter labelLinkPaint
DatasetUtilities_ter labelLinkStroke
DatasetUtilities_ter labelDistributor
DatasetUtilities_ter toolTipGenerator
DatasetUtilities_ter urlGenerator
DatasetUtilities_ter legendLabelGenerator
DatasetUtilities_ter legendLabelToolTipGenerator
DatasetUtilities_ter legendLabelURLGenerator
DatasetUtilities_ter ignoreNullValues
DatasetUtilities_ter ignoreZeroValues
DatasetUtilities_ter legendItemShape
DatasetUtilities_ter minimumArcAngleToDraw
DatasetUtilities_ter localizationResources
DatasetUtilities_ter DEBUG_DRAW_INTERIOR
DatasetUtilities_ter DEBUG_DRAW_LINK_AREA
DatasetUtilities_ter DEBUG_DRAW_PIE_AREA
except
method
state_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
except
method
except
method
state_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
except
method
state_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
except
method
g2_ter {'g2_ter': 'Graphics2D', 'plotArea_ter': 'Rectangle2D', 'plot_ter': 'PiePlot', 'index_ter': 'Integer', 'info_ter': 'PlotRenderingInfo', 'state_ter': 'PiePlotState'}
7 Graphics2D
method
7 
method
7 
PieDataset  getDataset 
None  setDataset 
int  getPieIndex 
None  setPieIndex 
double  getStartAngle 
None  setStartAngle 
Rotation  getDirection 
None  setDirection 
double  getInteriorGap 
None  setInteriorGap 
boolean  isCircular 
None  setCircular 
None  setCircular 
boolean  getIgnoreNullValues 
None  setIgnoreNullValues 
boolean  getIgnoreZeroValues 
None  setIgnoreZeroValues 
Paint  lookupSectionPaint 
Paint  lookupSectionPaint 
Comparable  getSectionKey 
Paint  getSectionPaint 
None  setSectionPaint 
Paint  getBaseSectionPaint 
None  setBaseSectionPaint 
boolean  getSectionOutlinesVisible 
None  setSectionOutlinesVisible 
Paint  lookupSectionOutlinePaint 
Paint  lookupSectionOutlinePaint 
Paint  getSectionOutlinePaint 
None  setSectionOutlinePaint 
Paint  getBaseSectionOutlinePaint 
None  setBaseSectionOutlinePaint 
Stroke  lookupSectionOutlineStroke 
Stroke  lookupSectionOutlineStroke 
Stroke  getSectionOutlineStroke 
None  setSectionOutlineStroke 
Stroke  getBaseSectionOutlineStroke 
None  setBaseSectionOutlineStroke 
Paint  getShadowPaint 
None  setShadowPaint 
double  getShadowXOffset 
None  setShadowXOffset 
double  getShadowYOffset 
None  setShadowYOffset 
double  getExplodePercent 
None  setExplodePercent 
double  getMaximumExplodePercent 
PieSectionLabelGenerator  getLabelGenerator 
None  setLabelGenerator 
double  getLabelGap 
None  setLabelGap 
double  getMaximumLabelWidth 
None  setMaximumLabelWidth 
boolean  getLabelLinksVisible 
None  setLabelLinksVisible 
double  getLabelLinkMargin 
None  setLabelLinkMargin 
Paint  getLabelLinkPaint 
None  setLabelLinkPaint 
Stroke  getLabelLinkStroke 
None  setLabelLinkStroke 
Font  getLabelFont 
None  setLabelFont 
Paint  getLabelPaint 
None  setLabelPaint 
Paint  getLabelBackgroundPaint 
None  setLabelBackgroundPaint 
Paint  getLabelOutlinePaint 
None  setLabelOutlinePaint 
Stroke  getLabelOutlineStroke 
None  setLabelOutlineStroke 
Paint  getLabelShadowPaint 
None  setLabelShadowPaint 
RectangleInsets  getLabelPadding 
None  setLabelPadding 
boolean  getSimpleLabels 
None  setSimpleLabels 
RectangleInsets  getSimpleLabelOffset 
None  setSimpleLabelOffset 
AbstractPieLabelDistributor  getLabelDistributor 
None  setLabelDistributor 
PieToolTipGenerator  getToolTipGenerator 
None  setToolTipGenerator 
PieURLGenerator  getURLGenerator 
None  setURLGenerator 
double  getMinimumArcAngleToDraw 
None  setMinimumArcAngleToDraw 
Shape  getLegendItemShape 
None  setLegendItemShape 
PieSectionLabelGenerator  getLegendLabelGenerator 
None  setLegendLabelGenerator 
PieSectionLabelGenerator  getLegendLabelToolTipGenerator 
None  setLegendLabelToolTipGenerator 
PieURLGenerator  getLegendLabelURLGenerator 
None  setLegendLabelURLGenerator 
PiePlotState  initialise 
None  draw 
None  drawPie 
None  drawItem 
None  drawSimpleLabels 
None  drawLabels 
None  drawLeftLabels 
None  drawRightLabels 
LegendItemCollection  getLegendItems 
String  getPlotType 
Rectangle2D  getArcBounds 
None  drawLeftLabel 
None  drawRightLabel 
boolean  equals 
Object  clone 
None  writeObject 
None  readObject 
method
7 
method
7 
method
7 
method
7 
method
Math_ter {'result_ter': 'double', 'iterator_ter': 'Iterator', 'key_ter': 'Comparable', 'explode_ter': 'Number'}
Math_ter serialVersionUID
Math_ter DEFAULT_INTERIOR_GAP
Math_ter MAX_INTERIOR_GAP
Math_ter DEFAULT_START_ANGLE
Math_ter DEFAULT_LABEL_FONT
Math_ter DEFAULT_LABEL_PAINT
Math_ter DEFAULT_LABEL_BACKGROUND_PAINT
Math_ter DEFAULT_LABEL_OUTLINE_PAINT
Math_ter DEFAULT_LABEL_OUTLINE_STROKE
Math_ter DEFAULT_LABEL_SHADOW_PAINT
Math_ter DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW
Math_ter dataset
Math_ter pieIndex
Math_ter interiorGap
Math_ter circular
Math_ter startAngle
Math_ter direction
Math_ter sectionPaintMap
Math_ter baseSectionPaint
Math_ter sectionOutlinesVisible
Math_ter sectionOutlinePaintMap
Math_ter baseSectionOutlinePaint
Math_ter sectionOutlineStrokeMap
Math_ter baseSectionOutlineStroke
Math_ter shadowPaint
Math_ter shadowXOffset
Math_ter shadowYOffset
Math_ter explodePercentages
Math_ter labelGenerator
Math_ter labelFont
Math_ter labelPaint
Math_ter labelBackgroundPaint
Math_ter labelOutlinePaint
Math_ter labelOutlineStroke
Math_ter labelShadowPaint
Math_ter simpleLabels
Math_ter labelPadding
Math_ter simpleLabelOffset
Math_ter maximumLabelWidth
Math_ter labelGap
Math_ter labelLinksVisible
Math_ter labelLinkMargin
Math_ter labelLinkPaint
Math_ter labelLinkStroke
Math_ter labelDistributor
Math_ter toolTipGenerator
Math_ter urlGenerator
Math_ter legendLabelGenerator
Math_ter legendLabelToolTipGenerator
Math_ter legendLabelURLGenerator
Math_ter ignoreNullValues
Math_ter ignoreZeroValues
Math_ter legendItemShape
Math_ter minimumArcAngleToDraw
Math_ter localizationResources
Math_ter DEBUG_DRAW_INTERIOR
Math_ter DEBUG_DRAW_LINK_AREA
Math_ter DEBUG_DRAW_PIE_AREA
7 
PieDataset  getDataset 
None  setDataset 
int  getPieIndex 
None  setPieIndex 
double  getStartAngle 
None  setStartAngle 
Rotation  getDirection 
None  setDirection 
double  getInteriorGap 
None  setInteriorGap 
boolean  isCircular 
None  setCircular 
None  setCircular 
boolean  getIgnoreNullValues 
None  setIgnoreNullValues 
boolean  getIgnoreZeroValues 
None  setIgnoreZeroValues 
Paint  lookupSectionPaint 
Paint  lookupSectionPaint 
Comparable  getSectionKey 
Paint  getSectionPaint 
None  setSectionPaint 
Paint  getBaseSectionPaint 
None  setBaseSectionPaint 
boolean  getSectionOutlinesVisible 
None  setSectionOutlinesVisible 
Paint  lookupSectionOutlinePaint 
Paint  lookupSectionOutlinePaint 
Paint  getSectionOutlinePaint 
None  setSectionOutlinePaint 
Paint  getBaseSectionOutlinePaint 
None  setBaseSectionOutlinePaint 
Stroke  lookupSectionOutlineStroke 
Stroke  lookupSectionOutlineStroke 
Stroke  getSectionOutlineStroke 
None  setSectionOutlineStroke 
Stroke  getBaseSectionOutlineStroke 
None  setBaseSectionOutlineStroke 
Paint  getShadowPaint 
None  setShadowPaint 
double  getShadowXOffset 
None  setShadowXOffset 
double  getShadowYOffset 
None  setShadowYOffset 
double  getExplodePercent 
None  setExplodePercent 
double  getMaximumExplodePercent 
PieSectionLabelGenerator  getLabelGenerator 
None  setLabelGenerator 
double  getLabelGap 
None  setLabelGap 
double  getMaximumLabelWidth 
None  setMaximumLabelWidth 
boolean  getLabelLinksVisible 
None  setLabelLinksVisible 
double  getLabelLinkMargin 
None  setLabelLinkMargin 
Paint  getLabelLinkPaint 
None  setLabelLinkPaint 
Stroke  getLabelLinkStroke 
None  setLabelLinkStroke 
Font  getLabelFont 
None  setLabelFont 
Paint  getLabelPaint 
None  setLabelPaint 
Paint  getLabelBackgroundPaint 
None  setLabelBackgroundPaint 
Paint  getLabelOutlinePaint 
None  setLabelOutlinePaint 
Stroke  getLabelOutlineStroke 
None  setLabelOutlineStroke 
Paint  getLabelShadowPaint 
None  setLabelShadowPaint 
RectangleInsets  getLabelPadding 
None  setLabelPadding 
boolean  getSimpleLabels 
None  setSimpleLabels 
RectangleInsets  getSimpleLabelOffset 
None  setSimpleLabelOffset 
AbstractPieLabelDistributor  getLabelDistributor 
None  setLabelDistributor 
PieToolTipGenerator  getToolTipGenerator 
None  setToolTipGenerator 
PieURLGenerator  getURLGenerator 
None  setURLGenerator 
double  getMinimumArcAngleToDraw 
None  setMinimumArcAngleToDraw 
Shape  getLegendItemShape 
None  setLegendItemShape 
PieSectionLabelGenerator  getLegendLabelGenerator 
None  setLegendLabelGenerator 
PieSectionLabelGenerator  getLegendLabelToolTipGenerator 
None  setLegendLabelToolTipGenerator 
PieURLGenerator  getLegendLabelURLGenerator 
None  setLegendLabelURLGenerator 
PiePlotState  initialise 
None  draw 
None  drawPie 
None  drawItem 
None  drawSimpleLabels 
None  drawLabels 
None  drawLeftLabels 
None  drawRightLabels 
LegendItemCollection  getLegendItems 
String  getPlotType 
Rectangle2D  getArcBounds 
None  drawLeftLabel 
None  drawRightLabel 
boolean  equals 
Object  clone 
None  writeObject 
None  readObject 
method
7 
PieDataset  getDataset 
None  setDataset 
int  getPieIndex 
None  setPieIndex 
double  getStartAngle 
None  setStartAngle 
Rotation  getDirection 
None  setDirection 
double  getInteriorGap 
None  setInteriorGap 
boolean  isCircular 
None  setCircular 
None  setCircular 
boolean  getIgnoreNullValues 
None  setIgnoreNullValues 
boolean  getIgnoreZeroValues 
None  setIgnoreZeroValues 
Paint  lookupSectionPaint 
Paint  lookupSectionPaint 
Comparable  getSectionKey 
Paint  getSectionPaint 
None  setSectionPaint 
Paint  getBaseSectionPaint 
None  setBaseSectionPaint 
boolean  getSectionOutlinesVisible 
None  setSectionOutlinesVisible 
Paint  lookupSectionOutlinePaint 
Paint  lookupSectionOutlinePaint 
Paint  getSectionOutlinePaint 
None  setSectionOutlinePaint 
Paint  getBaseSectionOutlinePaint 
None  setBaseSectionOutlinePaint 
Stroke  lookupSectionOutlineStroke 
Stroke  lookupSectionOutlineStroke 
Stroke  getSectionOutlineStroke 
None  setSectionOutlineStroke 
Stroke  getBaseSectionOutlineStroke 
None  setBaseSectionOutlineStroke 
Paint  getShadowPaint 
None  setShadowPaint 
double  getShadowXOffset 
None  setShadowXOffset 
double  getShadowYOffset 
None  setShadowYOffset 
double  getExplodePercent 
None  setExplodePercent 
double  getMaximumExplodePercent 
PieSectionLabelGenerator  getLabelGenerator 
None  setLabelGenerator 
double  getLabelGap 
None  setLabelGap 
double  getMaximumLabelWidth 
None  setMaximumLabelWidth 
boolean  getLabelLinksVisible 
None  setLabelLinksVisible 
double  getLabelLinkMargin 
None  setLabelLinkMargin 
Paint  getLabelLinkPaint 
None  setLabelLinkPaint 
Stroke  getLabelLinkStroke 
None  setLabelLinkStroke 
Font  getLabelFont 
None  setLabelFont 
Paint  getLabelPaint 
None  setLabelPaint 
Paint  getLabelBackgroundPaint 
None  setLabelBackgroundPaint 
Paint  getLabelOutlinePaint 
None  setLabelOutlinePaint 
Stroke  getLabelOutlineStroke 
None  setLabelOutlineStroke 
Paint  getLabelShadowPaint 
None  setLabelShadowPaint 
RectangleInsets  getLabelPadding 
None  setLabelPadding 
boolean  getSimpleLabels 
None  setSimpleLabels 
RectangleInsets  getSimpleLabelOffset 
None  setSimpleLabelOffset 
AbstractPieLabelDistributor  getLabelDistributor 
None  setLabelDistributor 
PieToolTipGenerator  getToolTipGenerator 
None  setToolTipGenerator 
PieURLGenerator  getURLGenerator 
None  setURLGenerator 
double  getMinimumArcAngleToDraw 
None  setMinimumArcAngleToDraw 
Shape  getLegendItemShape 
None  setLegendItemShape 
PieSectionLabelGenerator  getLegendLabelGenerator 
None  setLegendLabelGenerator 
PieSectionLabelGenerator  getLegendLabelToolTipGenerator 
None  setLegendLabelToolTipGenerator 
PieURLGenerator  getLegendLabelURLGenerator 
None  setLegendLabelURLGenerator 
PiePlotState  initialise 
None  draw 
None  drawPie 
None  drawItem 
None  drawSimpleLabels 
None  drawLabels 
None  drawLeftLabels 
None  drawRightLabels 
LegendItemCollection  getLegendItems 
String  getPlotType 
Rectangle2D  getArcBounds 
None  drawLeftLabel 
None  drawRightLabel 
boolean  equals 
Object  clone 
None  writeObject 
None  readObject 
method
7 
method
7 
method
Math_ter {'result_ter': 'double', 'iterator_ter': 'Iterator', 'key_ter': 'Comparable', 'explode_ter': 'Number'}
Math_ter serialVersionUID
Math_ter DEFAULT_INTERIOR_GAP
Math_ter MAX_INTERIOR_GAP
Math_ter DEFAULT_START_ANGLE
Math_ter DEFAULT_LABEL_FONT
Math_ter DEFAULT_LABEL_PAINT
Math_ter DEFAULT_LABEL_BACKGROUND_PAINT
Math_ter DEFAULT_LABEL_OUTLINE_PAINT
Math_ter DEFAULT_LABEL_OUTLINE_STROKE
Math_ter DEFAULT_LABEL_SHADOW_PAINT
Math_ter DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW
Math_ter dataset
Math_ter pieIndex
Math_ter interiorGap
Math_ter circular
Math_ter startAngle
Math_ter direction
Math_ter sectionPaintMap
Math_ter baseSectionPaint
Math_ter sectionOutlinesVisible
Math_ter sectionOutlinePaintMap
Math_ter baseSectionOutlinePaint
Math_ter sectionOutlineStrokeMap
Math_ter baseSectionOutlineStroke
Math_ter shadowPaint
Math_ter shadowXOffset
Math_ter shadowYOffset
Math_ter explodePercentages
Math_ter labelGenerator
Math_ter labelFont
Math_ter labelPaint
Math_ter labelBackgroundPaint
Math_ter labelOutlinePaint
Math_ter labelOutlineStroke
Math_ter labelShadowPaint
Math_ter simpleLabels
Math_ter labelPadding
Math_ter simpleLabelOffset
Math_ter maximumLabelWidth
Math_ter labelGap
Math_ter labelLinksVisible
Math_ter labelLinkMargin
Math_ter labelLinkPaint
Math_ter labelLinkStroke
Math_ter labelDistributor
Math_ter toolTipGenerator
Math_ter urlGenerator
Math_ter legendLabelGenerator
Math_ter legendLabelToolTipGenerator
Math_ter legendLabelURLGenerator
Math_ter ignoreNullValues
Math_ter ignoreZeroValues
Math_ter legendItemShape
Math_ter minimumArcAngleToDraw
Math_ter localizationResources
Math_ter DEBUG_DRAW_INTERIOR
Math_ter DEBUG_DRAW_LINK_AREA
Math_ter DEBUG_DRAW_PIE_AREA
7 
method
7 
method
7 
method
7 
method
7 
stderr: Check out program version: Chart-15b....................................... OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:42<00:00, 42.16s/it]100%|██████████| 1/1 [00:42<00:00, 42.16s/it]
