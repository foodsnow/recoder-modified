stdout: else_statement -> BlockStatement
using GPU
p
path com.google.javascript.jscomp.TypeInference
inferTemplatedTypesForCall
Position(line=1183, column=11)
FOUND IT!
[{'bugid': 'Closure-112', 'treeroot': <Searchnode.Node object at 0x7f73e48c1790>, 'troot': <Searchnode.Node object at 0x7f73e48c1790>, 'oldcode': '    Map<TemplateType, JSType> inferred = \n        inferTemplateTypesFromParameters(fnType, n);', 'filepath': 'buggy/Closure-112/src/com/google/javascript/jscomp/TypeInference.java', 'subroot': <Searchnode.Node object at 0x7f73e48c88d0>, 'vardic': {'inferTemplatedTypesForCall_ter': 'meth0', 'n_ter': 'par0', 'fnType_ter': 'par1', 'keys_ter': 'loc0', 'inferred_ter': 'loc1', 'replacer_ter': 'loc2', 'callTarget_ter': 'loc3', 'replacementFnType_ter': 'loc4'}, 'typedic': {'n_ter': 'Node', 'fnType_ter': 'FunctionType', 'keys_ter': 'ImmutableList', 'inferred_ter': 'Map', 'replacer_ter': 'TemplateTypeReplacer', 'callTarget_ter': 'Node', 'replacementFnType_ter': 'FunctionType'}, 'idss': 'Closure-112', 'classname': 'com.google.javascript.jscomp.TypeInference', 'precode': '/*\n * Copyright 2008 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.javascript.jscomp;\n\nimport static com.google.javascript.rhino.jstype.JSTypeNative.ARRAY_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.BOOLEAN_OBJECT_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.BOOLEAN_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.CHECKED_UNKNOWN_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.NULL_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.NUMBER_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.NUMBER_VALUE_OR_OBJECT_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.STRING_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.UNKNOWN_TYPE;\nimport static com.google.javascript.rhino.jstype.JSTypeNative.VOID_TYPE;\n\nimport com.google.common.base.Preconditions;\nimport com.google.common.base.Predicate;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.Lists;\nimport com.google.common.collect.Maps;\nimport com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec;\nimport com.google.javascript.jscomp.ControlFlowGraph.Branch;\nimport com.google.javascript.jscomp.Scope.Var;\nimport com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge;\nimport com.google.javascript.jscomp.type.FlowScope;\nimport com.google.javascript.jscomp.type.ReverseAbstractInterpreter;\nimport com.google.javascript.rhino.JSDocInfo;\nimport com.google.javascript.rhino.Node;\nimport com.google.javascript.rhino.Token;\nimport com.google.javascript.rhino.jstype.BooleanLiteralSet;\nimport com.google.javascript.rhino.jstype.FunctionType;\nimport com.google.javascript.rhino.jstype.JSType;\nimport com.google.javascript.rhino.jstype.JSTypeNative;\nimport com.google.javascript.rhino.jstype.JSTypeRegistry;\nimport com.google.javascript.rhino.jstype.ModificationVisitor;\nimport com.google.javascript.rhino.jstype.ObjectType;\nimport com.google.javascript.rhino.jstype.StaticSlot;\nimport com.google.javascript.rhino.jstype.TemplateType;\nimport com.google.javascript.rhino.jstype.TemplateTypeMap;\nimport com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;\nimport com.google.javascript.rhino.jstype.UnionType;\n\nimport java.util.Collections;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * Type inference within a script node or a function body, using the data-flow\n * analysis framework.\n *\n */\nclass TypeInference\n    extends DataFlowAnalysis.BranchedForwardDataFlowAnalysis<Node, FlowScope> {\n\n  // TODO(johnlenz): We no longer make this check, but we should.\n  static final DiagnosticType FUNCTION_LITERAL_UNDEFINED_THIS =\n    DiagnosticType.warning(\n        "JSC_FUNCTION_LITERAL_UNDEFINED_THIS",\n        "Function literal argument refers to undefined this argument");\n\n  private final AbstractCompiler compiler;\n  private final JSTypeRegistry registry;\n  private final ReverseAbstractInterpreter reverseInterpreter;\n  private final Scope syntacticScope;\n  private final FlowScope functionScope;\n  private final FlowScope bottomScope;\n  private final Map<String, AssertionFunctionSpec> assertionFunctionsMap;\n\n  // For convenience\n  private final ObjectType unknownType;\n\n  TypeInference(AbstractCompiler compiler, ControlFlowGraph<Node> cfg,\n                ReverseAbstractInterpreter reverseInterpreter,\n                Scope functionScope,\n                Map<String, AssertionFunctionSpec> assertionFunctionsMap) {\n    super(cfg, new LinkedFlowScope.FlowScopeJoinOp());\n    this.compiler = compiler;\n    this.registry = compiler.getTypeRegistry();\n    this.reverseInterpreter = reverseInterpreter;\n    this.unknownType = registry.getNativeObjectType(UNKNOWN_TYPE);\n\n    this.syntacticScope = functionScope;\n    inferArguments(functionScope);\n\n    this.functionScope = LinkedFlowScope.createEntryLattice(functionScope);\n    this.assertionFunctionsMap = assertionFunctionsMap;\n\n    // For each local variable declared with the VAR keyword, the entry\n    // type is VOID.\n    Iterator<Var> varIt =\n        functionScope.getDeclarativelyUnboundVarsWithoutTypes();\n    while (varIt.hasNext()) {\n      Var var = varIt.next();\n      if (isUnflowable(var)) {\n        continue;\n      }\n\n      this.functionScope.inferSlotType(\n          var.getName(), getNativeType(VOID_TYPE));\n    }\n\n    this.bottomScope = LinkedFlowScope.createEntryLattice(\n        Scope.createLatticeBottom(functionScope.getRootNode()));\n  }\n\n  /**\n   * Infers all of a function\'s arguments if their types aren\'t declared.\n   */\n  private void inferArguments(Scope functionScope) {\n    Node functionNode = functionScope.getRootNode();\n    Node astParameters = functionNode.getFirstChild().getNext();\n    Node iifeArgumentNode = null;\n\n    if (NodeUtil.isCallOrNewTarget(functionNode)) {\n      iifeArgumentNode = functionNode.getNext();\n    }\n\n    FunctionType functionType =\n        JSType.toMaybeFunctionType(functionNode.getJSType());\n    if (functionType != null) {\n      Node parameterTypes = functionType.getParametersNode();\n      if (parameterTypes != null) {\n        Node parameterTypeNode = parameterTypes.getFirstChild();\n        for (Node astParameter : astParameters.children()) {\n          Var var = functionScope.getVar(astParameter.getString());\n          Preconditions.checkNotNull(var);\n          if (var.isTypeInferred() &&\n              var.getType() == unknownType) {\n            JSType newType = null;\n\n            if (iifeArgumentNode != null) {\n              newType = iifeArgumentNode.getJSType();\n            } else if (parameterTypeNode != null) {\n              newType = parameterTypeNode.getJSType();\n            }\n\n            if (newType != null) {\n              var.setType(newType);\n              astParameter.setJSType(newType);\n            }\n          }\n\n          if (parameterTypeNode != null) {\n            parameterTypeNode = parameterTypeNode.getNext();\n          }\n          if (iifeArgumentNode != null) {\n            iifeArgumentNode = iifeArgumentNode.getNext();\n          }\n        }\n      }\n    }\n  }\n\n  @Override\n  FlowScope createInitialEstimateLattice() {\n    return bottomScope;\n  }\n\n  @Override\n  FlowScope createEntryLattice() {\n    return functionScope;\n  }\n\n  @Override\n  FlowScope flowThrough(Node n, FlowScope input) {\n    // If we have not walked a path from <entry> to <n>, then we don\'t\n    // want to infer anything about this scope.\n    if (input == bottomScope) {\n      return input;\n    }\n\n    FlowScope output = input.createChildFlowScope();\n    output = traverse(n, output);\n    return output;\n  }\n\n  @Override\n  @SuppressWarnings({"fallthrough", "incomplete-switch"})\n  List<FlowScope> branchedFlowThrough(Node source, FlowScope input) {\n    // NOTE(nicksantos): Right now, we just treat ON_EX edges like UNCOND\n    // edges. If we wanted to be perfect, we\'d actually JOIN all the out\n    // lattices of this flow with the in lattice, and then make that the out\n    // lattice for the ON_EX edge. But it\'s probably too expensive to be\n    // worthwhile.\n    FlowScope output = flowThrough(source, input);\n    Node condition = null;\n    FlowScope conditionFlowScope = null;\n    BooleanOutcomePair conditionOutcomes = null;\n\n    List<DiGraphEdge<Node, Branch>> branchEdges = getCfg().getOutEdges(source);\n    List<FlowScope> result = Lists.newArrayListWithCapacity(branchEdges.size());\n    for (DiGraphEdge<Node, Branch> branchEdge : branchEdges) {\n      Branch branch = branchEdge.getValue();\n      FlowScope newScope = output;\n\n      switch (branch) {\n        case ON_TRUE:\n          if (NodeUtil.isForIn(source)) {\n            // item is assigned a property name, so its type should be string.\n            Node item = source.getFirstChild();\n            Node obj = item.getNext();\n\n            FlowScope informed = traverse(obj, output.createChildFlowScope());\n\n            if (item.isVar()) {\n              item = item.getFirstChild();\n            }\n            if (item.isName()) {\n              JSType iterKeyType = getNativeType(STRING_TYPE);\n              ObjectType objType = getJSType(obj).dereference();\n              JSType objIndexType = objType == null ?\n                  null : objType.getTemplateTypeMap().getTemplateType(\n                      registry.getObjectIndexKey());\n              if (objIndexType != null && !objIndexType.isUnknownType()) {\n                JSType narrowedKeyType =\n                    iterKeyType.getGreatestSubtype(objIndexType);\n                if (!narrowedKeyType.isEmptyType()) {\n                  iterKeyType = narrowedKeyType;\n                }\n              }\n              redeclareSimpleVar(informed, item, iterKeyType);\n            }\n            newScope = informed;\n            break;\n          }\n\n          // FALL THROUGH\n\n        case ON_FALSE:\n          if (condition == null) {\n            condition = NodeUtil.getConditionExpression(source);\n            if (condition == null && source.isCase()) {\n              condition = source;\n\n              // conditionFlowScope is cached from previous iterations\n              // of the loop.\n              if (conditionFlowScope == null) {\n                conditionFlowScope = traverse(\n                    condition.getFirstChild(), output.createChildFlowScope());\n              }\n            }\n          }\n\n          if (condition != null) {\n            if (condition.isAnd() ||\n                condition.isOr()) {\n              // When handling the short-circuiting binary operators,\n              // the outcome scope on true can be different than the outcome\n              // scope on false.\n              //\n              // TODO(nicksantos): The "right" way to do this is to\n              // carry the known outcome all the way through the\n              // recursive traversal, so that we can construct a\n              // different flow scope based on the outcome. However,\n              // this would require a bunch of code and a bunch of\n              // extra computation for an edge case. This seems to be\n              // a "good enough" approximation.\n\n              // conditionOutcomes is cached from previous iterations\n              // of the loop.\n              if (conditionOutcomes == null) {\n                conditionOutcomes = condition.isAnd() ?\n                    traverseAnd(condition, output.createChildFlowScope()) :\n                    traverseOr(condition, output.createChildFlowScope());\n              }\n              newScope =\n                  reverseInterpreter.getPreciserScopeKnowingConditionOutcome(\n                      condition,\n                      conditionOutcomes.getOutcomeFlowScope(\n                          condition.getType(), branch == Branch.ON_TRUE),\n                      branch == Branch.ON_TRUE);\n            } else {\n              // conditionFlowScope is cached from previous iterations\n              // of the loop.\n              if (conditionFlowScope == null) {\n                conditionFlowScope =\n                    traverse(condition, output.createChildFlowScope());\n              }\n              newScope =\n                  reverseInterpreter.getPreciserScopeKnowingConditionOutcome(\n                      condition, conditionFlowScope, branch == Branch.ON_TRUE);\n            }\n          }\n          break;\n      }\n\n      result.add(newScope.optimize());\n    }\n    return result;\n  }\n\n  private FlowScope traverse(Node n, FlowScope scope) {\n    switch (n.getType()) {\n      case Token.ASSIGN:\n        scope = traverseAssign(n, scope);\n        break;\n\n      case Token.NAME:\n        scope = traverseName(n, scope);\n        break;\n\n      case Token.GETPROP:\n        scope = traverseGetProp(n, scope);\n        break;\n\n      case Token.AND:\n        scope = traverseAnd(n, scope).getJoinedFlowScope()\n            .createChildFlowScope();\n        break;\n\n      case Token.OR:\n        scope = traverseOr(n, scope).getJoinedFlowScope()\n            .createChildFlowScope();\n        break;\n\n      case Token.HOOK:\n        scope = traverseHook(n, scope);\n        break;\n\n      case Token.OBJECTLIT:\n        scope = traverseObjectLiteral(n, scope);\n        break;\n\n      case Token.CALL:\n        scope = traverseCall(n, scope);\n        break;\n\n      case Token.NEW:\n        scope = traverseNew(n, scope);\n        break;\n\n      case Token.ASSIGN_ADD:\n      case Token.ADD:\n        scope = traverseAdd(n, scope);\n        break;\n\n      case Token.POS:\n      case Token.NEG:\n        scope = traverse(n.getFirstChild(), scope);  // Find types.\n        n.setJSType(getNativeType(NUMBER_TYPE));\n        break;\n\n      case Token.ARRAYLIT:\n        scope = traverseArrayLiteral(n, scope);\n        break;\n\n      case Token.THIS:\n        n.setJSType(scope.getTypeOfThis());\n        break;\n\n      case Token.ASSIGN_LSH:\n      case Token.ASSIGN_RSH:\n      case Token.LSH:\n      case Token.RSH:\n      case Token.ASSIGN_URSH:\n      case Token.URSH:\n      case Token.ASSIGN_DIV:\n      case Token.ASSIGN_MOD:\n      case Token.ASSIGN_BITAND:\n      case Token.ASSIGN_BITXOR:\n      case Token.ASSIGN_BITOR:\n      case Token.ASSIGN_MUL:\n      case Token.ASSIGN_SUB:\n      case Token.DIV:\n      case Token.MOD:\n      case Token.BITAND:\n      case Token.BITXOR:\n      case Token.BITOR:\n      case Token.MUL:\n      case Token.SUB:\n      case Token.DEC:\n      case Token.INC:\n      case Token.BITNOT:\n        scope = traverseChildren(n, scope);\n        n.setJSType(getNativeType(NUMBER_TYPE));\n        break;\n\n      case Token.PARAM_LIST:\n        scope = traverse(n.getFirstChild(), scope);\n        n.setJSType(getJSType(n.getFirstChild()));\n        break;\n\n      case Token.COMMA:\n        scope = traverseChildren(n, scope);\n        n.setJSType(getJSType(n.getLastChild()));\n        break;\n\n      case Token.TYPEOF:\n        scope = traverseChildren(n, scope);\n        n.setJSType(getNativeType(STRING_TYPE));\n        break;\n\n      case Token.DELPROP:\n      case Token.LT:\n      case Token.LE:\n      case Token.GT:\n      case Token.GE:\n      case Token.NOT:\n      case Token.EQ:\n      case Token.NE:\n      case Token.SHEQ:\n      case Token.SHNE:\n      case Token.INSTANCEOF:\n      case Token.IN:\n        scope = traverseChildren(n, scope);\n        n.setJSType(getNativeType(BOOLEAN_TYPE));\n        break;\n\n      case Token.GETELEM:\n        scope = traverseGetElem(n, scope);\n        break;\n\n      case Token.EXPR_RESULT:\n        scope = traverseChildren(n, scope);\n        if (n.getFirstChild().isGetProp()) {\n          ensurePropertyDeclared(n.getFirstChild());\n        }\n        break;\n\n      case Token.SWITCH:\n        scope = traverse(n.getFirstChild(), scope);\n        break;\n\n      case Token.RETURN:\n        scope = traverseReturn(n, scope);\n        break;\n\n      case Token.VAR:\n      case Token.THROW:\n        scope = traverseChildren(n, scope);\n        break;\n\n      case Token.CATCH:\n        scope = traverseCatch(n, scope);\n        break;\n\n      case Token.CAST:\n        scope = traverseChildren(n, scope);\n        JSDocInfo info = n.getJSDocInfo();\n        if (info != null && info.hasType()) {\n          n.setJSType(info.getType().evaluate(syntacticScope, registry));\n        }\n        break;\n    }\n\n    return scope;\n  }\n\n  /**\n   * Traverse a return value.\n   */\n  private FlowScope traverseReturn(Node n, FlowScope scope) {\n    scope = traverseChildren(n, scope);\n\n    Node retValue = n.getFirstChild();\n    if (retValue != null) {\n      JSType type = functionScope.getRootNode().getJSType();\n      if (type != null) {\n        FunctionType fnType = type.toMaybeFunctionType();\n        if (fnType != null) {\n          inferPropertyTypesToMatchConstraint(\n              retValue.getJSType(), fnType.getReturnType());\n        }\n      }\n    }\n    return scope;\n  }\n\n  /**\n   * Any value can be thrown, so it\'s really impossible to determine the type\n   * of a CATCH param. Treat it as the UNKNOWN type.\n   */\n  private FlowScope traverseCatch(Node catchNode, FlowScope scope) {\n    Node name = catchNode.getFirstChild();\n    JSType type;\n    // If the catch expression name was declared in the catch use that type,\n    // otherwise use "unknown".\n    JSDocInfo info = name.getJSDocInfo();\n    if (info != null && info.hasType()) {\n      type = info.getType().evaluate(syntacticScope, registry);\n    } else {\n      type = getNativeType(JSTypeNative.UNKNOWN_TYPE);\n    }\n    redeclareSimpleVar(scope, name, type);\n    name.setJSType(type);\n    return scope;\n  }\n\n  private FlowScope traverseAssign(Node n, FlowScope scope) {\n    Node left = n.getFirstChild();\n    Node right = n.getLastChild();\n    scope = traverseChildren(n, scope);\n\n    JSType leftType = left.getJSType();\n    JSType rightType = getJSType(right);\n    n.setJSType(rightType);\n\n    updateScopeForTypeChange(scope, left, leftType, rightType);\n    return scope;\n  }\n\n  /**\n   * Updates the scope according to the result of a type change, like\n   * an assignment or a type cast.\n   */\n  private void updateScopeForTypeChange(\n      FlowScope scope, Node left, JSType leftType, JSType resultType) {\n    Preconditions.checkNotNull(resultType);\n    switch (left.getType()) {\n      case Token.NAME:\n        String varName = left.getString();\n        Var var = syntacticScope.getVar(varName);\n\n        // When looking at VAR initializers for declared VARs, we trust\n        // the declared type over the type it\'s being initialized to.\n        // This has two purposes:\n        // 1) We avoid re-declaring declared variables so that built-in\n        //    types defined in externs are not redeclared.\n        // 2) When there\'s a lexical closure like\n        //    /** @type {?string} */ var x = null;\n        //    function f() { x = \'xyz\'; }\n        //    the inference will ignore the lexical closure,\n        //    which is just wrong. This bug needs to be fixed eventually.\n        boolean isVarDeclaration = left.hasChildren();\n        if (!isVarDeclaration || var == null || var.isTypeInferred()) {\n          redeclareSimpleVar(scope, left, resultType);\n        }\n        left.setJSType(isVarDeclaration || leftType == null ?\n            resultType : null);\n\n        if (var != null && var.isTypeInferred()) {\n          JSType oldType = var.getType();\n          var.setType(oldType == null ?\n              resultType : oldType.getLeastSupertype(resultType));\n        }\n        break;\n      case Token.GETPROP:\n        String qualifiedName = left.getQualifiedName();\n        if (qualifiedName != null) {\n          scope.inferQualifiedSlot(left, qualifiedName,\n              leftType == null ? unknownType : leftType,\n              resultType);\n        }\n\n        left.setJSType(resultType);\n        ensurePropertyDefined(left, resultType);\n        break;\n    }\n  }\n\n  /**\n   * Defines a property if the property has not been defined yet.\n   */\n  private void ensurePropertyDefined(Node getprop, JSType rightType) {\n    String propName = getprop.getLastChild().getString();\n    Node obj = getprop.getFirstChild();\n    JSType nodeType = getJSType(obj);\n    ObjectType objectType = ObjectType.cast(\n        nodeType.restrictByNotNullOrUndefined());\n    boolean propCreationInConstructor = obj.isThis() &&\n        getJSType(syntacticScope.getRootNode()).isConstructor();\n\n    if (objectType == null) {\n      registry.registerPropertyOnType(propName, nodeType);\n    } else {\n      if (nodeType.isStruct() && !objectType.hasProperty(propName)) {\n        // In general, we don\'t want to define a property on a struct object,\n        // b/c TypeCheck will later check for improper property creation on\n        // structs. There are two exceptions.\n        // 1) If it\'s a property created inside the constructor, on the newly\n        //    created instance, allow it.\n        // 2) If it\'s a prototype property, allow it. For example:\n        //    Foo.prototype.bar = baz;\n        //    where Foo.prototype is a struct and the assignment happens at the\n        //    top level and the constructor Foo is defined in the same file.\n        boolean staticPropCreation = false;\n        Node maybeAssignStm = getprop.getParent().getParent();\n        if (syntacticScope.isGlobal() &&\n            NodeUtil.isPrototypePropertyDeclaration(maybeAssignStm)) {\n          String propCreationFilename = maybeAssignStm.getSourceFileName();\n          Node ctor = objectType.getOwnerFunction().getSource();\n          if (ctor != null &&\n              ctor.getSourceFileName().equals(propCreationFilename)) {\n            staticPropCreation = true;\n          }\n        }\n        if (!propCreationInConstructor && !staticPropCreation) {\n          return; // Early return to avoid creating the property below.\n        }\n      }\n\n      if (ensurePropertyDeclaredHelper(getprop, objectType)) {\n        return;\n      }\n\n      if (!objectType.isPropertyTypeDeclared(propName)) {\n        // We do not want a "stray" assign to define an inferred property\n        // for every object of this type in the program. So we use a heuristic\n        // approach to determine whether to infer the property.\n        //\n        // 1) If the property is already defined, join it with the previously\n        //    inferred type.\n        // 2) If this isn\'t an instance object, define it.\n        // 3) If the property of an object is being assigned in the constructor,\n        //    define it.\n        // 4) If this is a stub, define it.\n        // 5) Otherwise, do not define the type, but declare it in the registry\n        //    so that we can use it for missing property checks.\n        if (objectType.hasProperty(propName) || !objectType.isInstanceType()) {\n          if ("prototype".equals(propName)) {\n            objectType.defineDeclaredProperty(propName, rightType, getprop);\n          } else {\n            objectType.defineInferredProperty(propName, rightType, getprop);\n          }\n        } else if (propCreationInConstructor) {\n          objectType.defineInferredProperty(propName, rightType, getprop);\n        } else {\n          registry.registerPropertyOnType(propName, objectType);\n        }\n      }\n    }\n  }\n\n  /**\n   * Defines a declared property if it has not been defined yet.\n   *\n   * This handles the case where a property is declared on an object where\n   * the object type is inferred, and so the object type will not\n   * be known in {@code TypedScopeCreator}.\n   */\n  private void ensurePropertyDeclared(Node getprop) {\n    ObjectType ownerType = ObjectType.cast(\n        getJSType(getprop.getFirstChild()).restrictByNotNullOrUndefined());\n    if (ownerType != null) {\n      ensurePropertyDeclaredHelper(getprop, ownerType);\n    }\n  }\n\n  /**\n   * Declares a property on its owner, if necessary.\n   * @return True if a property was declared.\n   */\n  private boolean ensurePropertyDeclaredHelper(\n      Node getprop, ObjectType objectType) {\n    String propName = getprop.getLastChild().getString();\n    String qName = getprop.getQualifiedName();\n    if (qName != null) {\n      Var var = syntacticScope.getVar(qName);\n      if (var != null && !var.isTypeInferred()) {\n        // Handle normal declarations that could not be addressed earlier.\n        if (propName.equals("prototype") ||\n        // Handle prototype declarations that could not be addressed earlier.\n            (!objectType.hasOwnProperty(propName) &&\n             (!objectType.isInstanceType() ||\n                 (var.isExtern() && !objectType.isNativeObjectType())))) {\n          return objectType.defineDeclaredProperty(\n              propName, var.getType(), getprop);\n        }\n      }\n    }\n    return false;\n  }\n\n  private FlowScope traverseName(Node n, FlowScope scope) {\n    String varName = n.getString();\n    Node value = n.getFirstChild();\n    JSType type = n.getJSType();\n    if (value != null) {\n      scope = traverse(value, scope);\n      updateScopeForTypeChange(scope, n, n.getJSType() /* could be null */,\n          getJSType(value));\n      return scope;\n    } else {\n      StaticSlot<JSType> var = scope.getSlot(varName);\n      if (var != null) {\n        // There are two situations where we don\'t want to use type information\n        // from the scope, even if we have it.\n\n        // 1) The var is escaped and assigned in an inner scope, e.g.,\n        // function f() { var x = 3; function g() { x = null } (x); }\n        boolean isInferred = var.isTypeInferred();\n        boolean unflowable = isInferred &&\n            isUnflowable(syntacticScope.getVar(varName));\n\n        // 2) We\'re reading type information from another scope for an\n        // inferred variable. That variable is assigned more than once,\n        // and we can\'t know which type we\'re getting.\n        //\n        // var t = null; function f() { (t); } doStuff(); t = {};\n        //\n        // Notice that this heuristic isn\'t perfect. For example, you might\n        // have:\n        //\n        // function f() { (t); } f(); var t = 3;\n        //\n        // In this case, we would infer the first reference to t as\n        // type {number}, even though it\'s undefined.\n        boolean nonLocalInferredSlot = false;\n        if (isInferred && syntacticScope.isLocal()) {\n          Var maybeOuterVar = syntacticScope.getParent().getVar(varName);\n          if (var == maybeOuterVar &&\n              !maybeOuterVar.isMarkedAssignedExactlyOnce()) {\n            nonLocalInferredSlot = true;\n          }\n        }\n\n        if (!unflowable && !nonLocalInferredSlot) {\n          type = var.getType();\n          if (type == null) {\n            type = unknownType;\n          }\n        }\n      }\n    }\n    n.setJSType(type);\n    return scope;\n  }\n\n  /** Traverse each element of the array. */\n  private FlowScope traverseArrayLiteral(Node n, FlowScope scope) {\n    scope = traverseChildren(n, scope);\n    n.setJSType(getNativeType(ARRAY_TYPE));\n    return scope;\n  }\n\n  private FlowScope traverseObjectLiteral(Node n, FlowScope scope) {\n    JSType type = n.getJSType();\n    Preconditions.checkNotNull(type);\n\n    for (Node name = n.getFirstChild(); name != null; name = name.getNext()) {\n      scope = traverse(name.getFirstChild(), scope);\n    }\n\n    // Object literals can be reflected on other types.\n    // See CodingConvention#getObjectLiteralCast and goog.reflect.object\n    // Ignore these types of literals.\n    ObjectType objectType = ObjectType.cast(type);\n    if (objectType == null\n        || n.getBooleanProp(Node.REFLECTED_OBJECT)\n        || objectType.isEnumType()) {\n      return scope;\n    }\n\n    String qObjName = NodeUtil.getBestLValueName(\n        NodeUtil.getBestLValue(n));\n    for (Node name = n.getFirstChild(); name != null;\n         name = name.getNext()) {\n      String memberName = NodeUtil.getObjectLitKeyName(name);\n      if (memberName != null) {\n        JSType rawValueType =  name.getFirstChild().getJSType();\n        JSType valueType = NodeUtil.getObjectLitKeyTypeFromValueType(\n            name, rawValueType);\n        if (valueType == null) {\n          valueType = unknownType;\n        }\n        objectType.defineInferredProperty(memberName, valueType, name);\n\n        // Do normal flow inference if this is a direct property assignment.\n        if (qObjName != null && name.isStringKey()) {\n          String qKeyName = qObjName + "." + memberName;\n          Var var = syntacticScope.getVar(qKeyName);\n          JSType oldType = var == null ? null : var.getType();\n          if (var != null && var.isTypeInferred()) {\n            var.setType(oldType == null ?\n                valueType : oldType.getLeastSupertype(oldType));\n          }\n\n          scope.inferQualifiedSlot(name, qKeyName,\n              oldType == null ? unknownType : oldType,\n              valueType);\n        }\n      } else {\n        n.setJSType(unknownType);\n      }\n    }\n    return scope;\n  }\n\n  private FlowScope traverseAdd(Node n, FlowScope scope) {\n    Node left = n.getFirstChild();\n    Node right = left.getNext();\n    scope = traverseChildren(n, scope);\n\n    JSType leftType = left.getJSType();\n    JSType rightType = right.getJSType();\n\n    JSType type = unknownType;\n    if (leftType != null && rightType != null) {\n      boolean leftIsUnknown = leftType.isUnknownType();\n      boolean rightIsUnknown = rightType.isUnknownType();\n      if (leftIsUnknown && rightIsUnknown) {\n        type = unknownType;\n      } else if ((!leftIsUnknown && leftType.isString()) ||\n                 (!rightIsUnknown && rightType.isString())) {\n        type = getNativeType(STRING_TYPE);\n      } else if (leftIsUnknown || rightIsUnknown) {\n        type = unknownType;\n      } else if (isAddedAsNumber(leftType) && isAddedAsNumber(rightType)) {\n        type = getNativeType(NUMBER_TYPE);\n      } else {\n        type = registry.createUnionType(STRING_TYPE, NUMBER_TYPE);\n      }\n    }\n    n.setJSType(type);\n\n    if (n.isAssignAdd()) {\n      updateScopeForTypeChange(scope, left, leftType, type);\n    }\n\n    return scope;\n  }\n\n  private boolean isAddedAsNumber(JSType type) {\n    return type.isSubtype(registry.createUnionType(VOID_TYPE, NULL_TYPE,\n        NUMBER_VALUE_OR_OBJECT_TYPE, BOOLEAN_TYPE, BOOLEAN_OBJECT_TYPE));\n  }\n\n  private FlowScope traverseHook(Node n, FlowScope scope) {\n    Node condition = n.getFirstChild();\n    Node trueNode = condition.getNext();\n    Node falseNode = n.getLastChild();\n\n    // verify the condition\n    scope = traverse(condition, scope);\n\n    // reverse abstract interpret the condition to produce two new scopes\n    FlowScope trueScope = reverseInterpreter.\n        getPreciserScopeKnowingConditionOutcome(\n            condition, scope, true);\n    FlowScope falseScope = reverseInterpreter.\n        getPreciserScopeKnowingConditionOutcome(\n            condition, scope, false);\n\n    // traverse the true node with the trueScope\n    traverse(trueNode, trueScope.createChildFlowScope());\n\n    // traverse the false node with the falseScope\n    traverse(falseNode, falseScope.createChildFlowScope());\n\n    // meet true and false nodes\' types and assign\n    JSType trueType = trueNode.getJSType();\n    JSType falseType = falseNode.getJSType();\n    if (trueType != null && falseType != null) {\n      n.setJSType(trueType.getLeastSupertype(falseType));\n    } else {\n      n.setJSType(null);\n    }\n\n    return scope.createChildFlowScope();\n  }\n\n  private FlowScope traverseCall(Node n, FlowScope scope) {\n    scope = traverseChildren(n, scope);\n\n    Node left = n.getFirstChild();\n    JSType functionType = getJSType(left).restrictByNotNullOrUndefined();\n    if (functionType.isFunctionType()) {\n      FunctionType fnType = functionType.toMaybeFunctionType();\n      n.setJSType(fnType.getReturnType());\n      backwardsInferenceFromCallSite(n, fnType);\n    } else if (functionType.isEquivalentTo(\n        getNativeType(CHECKED_UNKNOWN_TYPE))) {\n      n.setJSType(getNativeType(CHECKED_UNKNOWN_TYPE));\n    }\n\n    scope = tightenTypesAfterAssertions(scope, n);\n    return scope;\n  }\n\n  private FlowScope tightenTypesAfterAssertions(FlowScope scope,\n      Node callNode) {\n    Node left = callNode.getFirstChild();\n    Node firstParam = left.getNext();\n    AssertionFunctionSpec assertionFunctionSpec =\n        assertionFunctionsMap.get(left.getQualifiedName());\n    if (assertionFunctionSpec == null || firstParam == null) {\n      return scope;\n    }\n    Node assertedNode = assertionFunctionSpec.getAssertedParam(firstParam);\n    if (assertedNode == null) {\n      return scope;\n    }\n    JSType assertedType = assertionFunctionSpec.getAssertedType(\n        callNode, registry);\n    String assertedNodeName = assertedNode.getQualifiedName();\n\n    JSType narrowed;\n    // Handle assertions that enforce expressions evaluate to true.\n    if (assertedType == null) {\n      // Handle arbitrary expressions within the assert.\n      scope = reverseInterpreter.getPreciserScopeKnowingConditionOutcome(\n          assertedNode, scope, true);\n      // Build the result of the assertExpression\n      narrowed = getJSType(assertedNode).restrictByNotNullOrUndefined();\n    } else {\n      // Handle assertions that enforce expressions are of a certain type.\n      JSType type = getJSType(assertedNode);\n      narrowed = type.getGreatestSubtype(assertedType);\n      if (assertedNodeName != null && type.differsFrom(narrowed)) {\n        scope = narrowScope(scope, assertedNode, narrowed);\n      }\n    }\n\n    callNode.setJSType(narrowed);\n    return scope;\n  }\n\n  private FlowScope narrowScope(FlowScope scope, Node node, JSType narrowed) {\n    if (node.isThis()) {\n      // "this" references don\'t need to be modeled in the control flow graph.\n      return scope;\n    }\n\n    scope = scope.createChildFlowScope();\n    if (node.isGetProp()) {\n      scope.inferQualifiedSlot(\n          node, node.getQualifiedName(), getJSType(node), narrowed);\n    } else {\n      redeclareSimpleVar(scope, node, narrowed);\n    }\n    return scope;\n  }\n\n  /**\n   * We only do forward type inference. We do not do full backwards\n   * type inference.\n   *\n   * In other words, if we have,\n   * <code>\n   * var x = f();\n   * g(x);\n   * </code>\n   * a forward type-inference engine would try to figure out the type\n   * of "x" from the return type of "f". A backwards type-inference engine\n   * would try to figure out the type of "x" from the parameter type of "g".\n   *\n   * However, there are a few special syntactic forms where we do some\n   * some half-assed backwards type-inference, because programmers\n   * expect it in this day and age. To take an example from Java,\n   * <code>\n   * List<String> x = Lists.newArrayList();\n   * </code>\n   * The Java compiler will be able to infer the generic type of the List\n   * returned by newArrayList().\n   *\n   * In much the same way, we do some special-case backwards inference for\n   * JS. Those cases are enumerated here.\n   */\n  private void backwardsInferenceFromCallSite(Node n, FunctionType fnType) {\n    boolean updatedFnType = inferTemplatedTypesForCall(n, fnType);\n    if (updatedFnType) {\n      fnType = n.getFirstChild().getJSType().toMaybeFunctionType();\n    }\n    updateTypeOfParameters(n, fnType);\n    updateBind(n);\n  }\n\n  /**\n   * When "bind" is called on a function, we infer the type of the returned\n   * "bound" function by looking at the number of parameters in the call site.\n   */\n  private void updateBind(Node n) {\n    CodingConvention.Bind bind =\n        compiler.getCodingConvention().describeFunctionBind(n, true);\n    if (bind == null) {\n      return;\n    }\n\n    FunctionType callTargetFn = getJSType(bind.target)\n        .restrictByNotNullOrUndefined().toMaybeFunctionType();\n    if (callTargetFn == null) {\n      return;\n    }\n\n    n.setJSType(\n        callTargetFn.getBindReturnType(\n            // getBindReturnType expects the \'this\' argument to be included.\n            bind.getBoundParameterCount() + 1));\n  }\n\n  /**\n   * For functions with function parameters, type inference will set the type of\n   * a function literal argument from the function parameter type.\n   */\n  private void updateTypeOfParameters(Node n, FunctionType fnType) {\n    int i = 0;\n    int childCount = n.getChildCount();\n    for (Node iParameter : fnType.getParameters()) {\n      if (i + 1 >= childCount) {\n        // TypeCheck#visitParametersList will warn so we bail.\n        return;\n      }\n\n      JSType iParameterType = getJSType(iParameter);\n      Node iArgument = n.getChildAtIndex(i + 1);\n      JSType iArgumentType = getJSType(iArgument);\n      inferPropertyTypesToMatchConstraint(iArgumentType, iParameterType);\n\n      // TODO(johnlenz): Filter out non-function types\n      // (such as null and undefined) as\n      // we only care about FUNCTION subtypes here.\n      JSType restrictedParameter = iParameterType\n          .restrictByNotNullOrUndefined()\n          .toMaybeFunctionType();\n      if (restrictedParameter != null) {\n        if (iArgument.isFunction() &&\n            iArgumentType.isFunctionType() &&\n            iArgument.getJSDocInfo() == null) {\n          iArgument.setJSType(restrictedParameter);\n        }\n      }\n      i++;\n    }\n  }\n\n  private Map<TemplateType, JSType> inferTemplateTypesFromParameters(\n      FunctionType fnType, Node call) {\n    if (fnType.getTemplateTypeMap().getTemplateKeys().isEmpty()) {\n      return Collections.emptyMap();\n    }\n\n    Map<TemplateType, JSType> resolvedTypes = Maps.newIdentityHashMap();\n\n    Node callTarget = call.getFirstChild();\n    if (NodeUtil.isGet(callTarget)) {\n      Node obj = callTarget.getFirstChild();\n      maybeResolveTemplatedType(\n          fnType.getTypeOfThis(),\n          getJSType(obj),\n          resolvedTypes);\n    }\n\n    if (call.hasMoreThanOneChild()) {\n      maybeResolveTemplateTypeFromNodes(\n          fnType.getParameters(),\n          call.getChildAtIndex(1).siblings(),\n          resolvedTypes);\n    }\n    return resolvedTypes;\n  }\n\n  private void maybeResolveTemplatedType(\n      JSType paramType,\n      JSType argType,\n      Map<TemplateType, JSType> resolvedTypes) {\n    if (paramType.isTemplateType()) {\n      // @param {T}\n      resolvedTemplateType(\n          resolvedTypes, paramType.toMaybeTemplateType(), argType);\n    } else if (paramType.isUnionType()) {\n      // @param {Array.<T>|NodeList|Arguments|{length:number}}\n      UnionType unionType = paramType.toMaybeUnionType();\n      for (JSType alernative : unionType.getAlternates()) {\n        maybeResolveTemplatedType(alernative, argType, resolvedTypes);\n      }\n    } else if (paramType.isFunctionType()) {\n      FunctionType paramFunctionType = paramType.toMaybeFunctionType();\n      FunctionType argFunctionType = argType\n          .restrictByNotNullOrUndefined()\n          .collapseUnion()\n          .toMaybeFunctionType();\n      if (argFunctionType != null && argFunctionType.isSubtype(paramType)) {\n        // infer from return type of the function type\n        maybeResolveTemplatedType(\n            paramFunctionType.getTypeOfThis(),\n            argFunctionType.getTypeOfThis(), resolvedTypes);\n        // infer from return type of the function type\n        maybeResolveTemplatedType(\n            paramFunctionType.getReturnType(),\n            argFunctionType.getReturnType(), resolvedTypes);\n        // infer from parameter types of the function type\n        maybeResolveTemplateTypeFromNodes(\n            paramFunctionType.getParameters(),\n            argFunctionType.getParameters(), resolvedTypes);\n      }\n    } else if (paramType.isTemplatizedType()) {\n      // @param {Array.<T>}\n      ObjectType referencedParamType = paramType\n          .toMaybeTemplatizedType()\n          .getReferencedType();\n      JSType argObjectType = argType\n          .restrictByNotNullOrUndefined()\n          .collapseUnion();\n\n      if (argObjectType.isSubtype(referencedParamType)) {\n        // If the argument type is a subtype of the parameter type, resolve any\n        // template types amongst their templatized types.\n        TemplateTypeMap paramTypeMap = paramType.getTemplateTypeMap();\n        TemplateTypeMap argTypeMap = argObjectType.getTemplateTypeMap();\n        for (TemplateType key : paramTypeMap.getTemplateKeys()) {\n          maybeResolveTemplatedType(\n              paramTypeMap.getTemplateType(key),\n              argTypeMap.getTemplateType(key),\n              resolvedTypes);\n        }\n      }\n    }\n  }\n\n  private void maybeResolveTemplateTypeFromNodes(\n      Iterable<Node> declParams,\n      Iterable<Node> callParams,\n      Map<TemplateType, JSType> resolvedTypes) {\n    maybeResolveTemplateTypeFromNodes(\n        declParams.iterator(), callParams.iterator(), resolvedTypes);\n  }\n\n  private void maybeResolveTemplateTypeFromNodes(\n      Iterator<Node> declParams,\n      Iterator<Node> callParams,\n      Map<TemplateType, JSType> resolvedTypes) {\n    while (declParams.hasNext() && callParams.hasNext()) {\n      Node declParam = declParams.next();\n      maybeResolveTemplatedType(\n          getJSType(declParam),\n          getJSType(callParams.next()),\n          resolvedTypes);\n      if (declParam.isVarArgs()) {\n        while (callParams.hasNext()) {\n          maybeResolveTemplatedType(\n              getJSType(declParam),\n              getJSType(callParams.next()),\n              resolvedTypes);\n        }\n      }\n    }\n  }\n\n  private static void resolvedTemplateType(\n      Map<TemplateType, JSType> map, TemplateType template, JSType resolved) {\n    JSType previous = map.get(template);\n    if (!resolved.isUnknownType()) {\n      if (previous == null) {\n        map.put(template, resolved);\n      } else {\n        JSType join = previous.getLeastSupertype(resolved);\n        map.put(template, join);\n      }\n    }\n  }\n\n  private static class TemplateTypeReplacer extends ModificationVisitor {\n    private final Map<TemplateType, JSType> replacements;\n    private final JSTypeRegistry registry;\n    boolean madeChanges = false;\n\n    TemplateTypeReplacer(\n        JSTypeRegistry registry, Map<TemplateType, JSType> replacements) {\n      super(registry);\n      this.registry = registry;\n      this.replacements = replacements;\n    }\n\n    @Override\n    public JSType caseTemplateType(TemplateType type) {\n      madeChanges = true;\n      JSType replacement = replacements.get(type);\n      return replacement != null ?\n          replacement : registry.getNativeType(UNKNOWN_TYPE);\n    }\n  }\n\n  /**\n   * For functions with function(this: T, ...) and T as parameters, type\n   * inference will set the type of this on a function literal argument to the\n   * the actual type of T.\n   */\n  private boolean inferTemplatedTypesForCall(\n      Node n, FunctionType fnType) {\n    final ImmutableList<TemplateType> keys = fnType.getTemplateTypeMap()\n        .getTemplateKeys();\n    if (keys.isEmpty()) {\n      return false;\n    }\n\n    // Try to infer the template types', 'aftercode': "\n\n    // Replace all template types. If we couldn't find a replacement, we\n    // replace it with UNKNOWN.\n    TemplateTypeReplacer replacer = new TemplateTypeReplacer(\n        registry, inferred);\n    Node callTarget = n.getFirstChild();\n\n    FunctionType replacementFnType = fnType.visit(replacer)\n        .toMaybeFunctionType();\n    Preconditions.checkNotNull(replacementFnType);\n\n    callTarget.setJSType(replacementFnType);\n    n.setJSType(replacementFnType.getReturnType());\n\n    return replacer.madeChanges;\n  }\n\n  private FlowScope traverseNew(Node n, FlowScope scope) {\n    scope = traverseChildren(n, scope);\n\n    Node constructor = n.getFirstChild();\n    JSType constructorType = constructor.getJSType();\n    JSType type = null;\n    if (constructorType != null) {\n      constructorType = constructorType.restrictByNotNullOrUndefined();\n      if (constructorType.isUnknownType()) {\n        type = unknownType;\n      } else {\n        FunctionType ct = constructorType.toMaybeFunctionType();\n        if (ct == null && constructorType instanceof FunctionType) {\n          // If constructorType is a NoObjectType, then toMaybeFunctionType will\n          // return null. But NoObjectType implements the FunctionType\n          // interface, precisely because it can validly construct objects.\n          ct = (FunctionType) constructorType;\n        }\n        if (ct != null && ct.isConstructor()) {\n          backwardsInferenceFromCallSite(n, ct);\n\n          // If necessary, create a TemplatizedType wrapper around the instance\n          // type, based on the types of the constructor parameters.\n          ObjectType instanceType = ct.getInstanceType();\n          Map<TemplateType, JSType> inferredTypes =\n              inferTemplateTypesFromParameters(ct, n);\n          if (inferredTypes.isEmpty()) {\n            type = instanceType;\n          } else {\n            type = registry.createTemplatizedType(instanceType, inferredTypes);\n          }\n        }\n      }\n    }\n    n.setJSType(type);\n    return scope;\n  }\n\n  private BooleanOutcomePair traverseAnd(Node n, FlowScope scope) {\n    return traverseShortCircuitingBinOp(n, scope, true);\n  }\n\n  private FlowScope traverseChildren(Node n, FlowScope scope) {\n    for (Node el = n.getFirstChild(); el != null; el = el.getNext()) {\n      scope = traverse(el, scope);\n    }\n    return scope;\n  }\n\n  private FlowScope traverseGetElem(Node n, FlowScope scope) {\n    scope = traverseChildren(n, scope);\n    JSType type = getJSType(n.getFirstChild()).restrictByNotNullOrUndefined();\n    TemplateTypeMap typeMap = type.getTemplateTypeMap();\n    if (typeMap.hasTemplateType(registry.getObjectElementKey())) {\n      n.setJSType(typeMap.getTemplateType(registry.getObjectElementKey()));\n    }\n    return dereferencePointer(n.getFirstChild(), scope);\n  }\n\n  private FlowScope traverseGetProp(Node n, FlowScope scope) {\n    Node objNode = n.getFirstChild();\n    Node property = n.getLastChild();\n    scope = traverseChildren(n, scope);\n\n    n.setJSType(\n        getPropertyType(\n            objNode.getJSType(), property.getString(), n, scope));\n    return dereferencePointer(n.getFirstChild(), scope);\n  }\n\n  /**\n   * Suppose X is an object with inferred properties.\n   * Suppose also that X is used in a way where it would only type-check\n   * correctly if some of those properties are widened.\n   * Then we should be polite and automatically widen X's properties for him.\n   *\n   * For a concrete example, consider:\n   * param x {{prop: (number|undefined)}}\n   * function f(x) {}\n   * f({});\n   *\n   * If we give the anonymous object an inferred property of (number|undefined),\n   * then this code will type-check appropriately.\n   */\n  private static void inferPropertyTypesToMatchConstraint(\n      JSType type, JSType constraint) {\n    if (type == null || constraint == null) {\n      return;\n    }\n\n    type.matchConstraint(constraint);\n  }\n\n  /**\n   * If we access a property of a symbol, then that symbol is not\n   * null or undefined.\n   */\n  private FlowScope dereferencePointer(Node n, FlowScope scope) {\n    if (n.isQualifiedName()) {\n      JSType type = getJSType(n);\n      JSType narrowed = type.restrictByNotNullOrUndefined();\n      if (type != narrowed) {\n        scope = narrowScope(scope, n, narrowed);\n      }\n    }\n    return scope;\n  }\n\n  private JSType getPropertyType(JSType objType, String propName,\n      Node n, FlowScope scope) {\n    // We often have a couple of different types to choose from for the\n    // property. Ordered by accuracy, we have\n    // 1) A locally inferred qualified name (which is in the FlowScope)\n    // 2) A globally declared qualified name (which is in the FlowScope)\n    // 3) A property on the owner type (which is on objType)\n    // 4) A name in the type registry (as a last resort)\n    JSType propertyType = null;\n    boolean isLocallyInferred = false;\n\n    // Scopes sometimes contain inferred type info about qualified names.\n    String qualifiedName = n.getQualifiedName();\n    StaticSlot<JSType> var = scope.getSlot(qualifiedName);\n    if (var != null) {\n      JSType varType = var.getType();\n      if (varType != null) {\n        boolean isDeclared = !var.isTypeInferred();\n        isLocallyInferred = (var != syntacticScope.getSlot(qualifiedName));\n        if (isDeclared || isLocallyInferred) {\n          propertyType = varType;\n        }\n      }\n    }\n\n    if (propertyType == null && objType != null) {\n      JSType foundType = objType.findPropertyType(propName);\n      if (foundType != null) {\n        propertyType = foundType;\n      }\n    }\n\n    if (propertyType != null && objType != null) {\n      JSType restrictedObjType = objType.restrictByNotNullOrUndefined();\n      if (!restrictedObjType.getTemplateTypeMap().isEmpty()\n          && propertyType.hasAnyTemplateTypes()) {\n        TemplateTypeMap typeMap = restrictedObjType.getTemplateTypeMap();\n        TemplateTypeMapReplacer replacer = new TemplateTypeMapReplacer(\n            registry, typeMap);\n        propertyType = propertyType.visit(replacer);\n      }\n    }\n\n    if ((propertyType == null || propertyType.isUnknownType())\n        && qualifiedName != null) {\n      // If we find this node in the registry, then we can infer its type.\n      ObjectType regType = ObjectType.cast(registry.getType(qualifiedName));\n      if (regType != null) {\n        propertyType = regType.getConstructor();\n      }\n    }\n\n    if (propertyType == null) {\n      return unknownType;\n    } else if (propertyType.isEquivalentTo(unknownType) && isLocallyInferred) {\n      // If the type has been checked in this scope,\n      // then use CHECKED_UNKNOWN_TYPE instead to indicate that.\n      return getNativeType(CHECKED_UNKNOWN_TYPE);\n    } else {\n      return propertyType;\n    }\n  }\n\n  private BooleanOutcomePair traverseOr(Node n, FlowScope scope) {\n    return traverseShortCircuitingBinOp(n, scope, false);\n  }\n\n  private BooleanOutcomePair traverseShortCircuitingBinOp(\n      Node n, FlowScope scope, boolean condition) {\n    Node left = n.getFirstChild();\n    Node right = n.getLastChild();\n\n    // type the left node\n    BooleanOutcomePair leftLiterals =\n        traverseWithinShortCircuitingBinOp(left,\n            scope.createChildFlowScope());\n    JSType leftType = left.getJSType();\n\n    // reverse abstract interpret the left node to produce the correct\n    // scope in which to verify the right node\n    FlowScope rightScope = reverseInterpreter.\n        getPreciserScopeKnowingConditionOutcome(\n            left, leftLiterals.getOutcomeFlowScope(left.getType(), condition),\n            condition);\n\n    // type the right node\n    BooleanOutcomePair rightLiterals =\n        traverseWithinShortCircuitingBinOp(\n            right, rightScope.createChildFlowScope());\n    JSType rightType = right.getJSType();\n\n    JSType type;\n    BooleanOutcomePair literals;\n    if (leftType != null && rightType != null) {\n      leftType = leftType.getRestrictedTypeGivenToBooleanOutcome(!condition);\n      if (leftLiterals.toBooleanOutcomes ==\n          BooleanLiteralSet.get(!condition)) {\n        // Use the restricted left type, since the right side never gets\n        // evaluated.\n        type = leftType;\n        literals = leftLiterals;\n      } else {\n        // Use the join of the restricted left type knowing the outcome of the\n        // ToBoolean predicate and of the right type.\n        type = leftType.getLeastSupertype(rightType);\n        literals =\n            getBooleanOutcomePair(leftLiterals, rightLiterals, condition);\n      }\n\n      // Exclude the boolean type if the literal set is empty because a boolean\n      // can never actually be returned.\n      if (literals.booleanValues == BooleanLiteralSet.EMPTY &&\n          getNativeType(BOOLEAN_TYPE).isSubtype(type)) {\n        // Exclusion only make sense for a union type.\n        if (type.isUnionType()) {\n          type = type.toMaybeUnionType().getRestrictedUnion(\n              getNativeType(BOOLEAN_TYPE));\n        }\n      }\n    } else {\n      type = null;\n      literals = new BooleanOutcomePair(\n          BooleanLiteralSet.BOTH, BooleanLiteralSet.BOTH,\n          leftLiterals.getJoinedFlowScope(),\n          rightLiterals.getJoinedFlowScope());\n    }\n    n.setJSType(type);\n\n    return literals;\n  }\n\n  private BooleanOutcomePair traverseWithinShortCircuitingBinOp(Node n,\n      FlowScope scope) {\n    switch (n.getType()) {\n      case Token.AND:\n        return traverseAnd(n, scope);\n\n      case Token.OR:\n        return traverseOr(n, scope);\n\n      default:\n        scope = traverse(n, scope);\n        return newBooleanOutcomePair(n.getJSType(), scope);\n    }\n  }\n\n  /**\n   * Infers the boolean outcome pair that can be taken by a\n   * short-circuiting binary operation ({@code &&} or {@code ||}).\n   * @see #getBooleanOutcomes(BooleanLiteralSet, BooleanLiteralSet, boolean)\n   */\n  BooleanOutcomePair getBooleanOutcomePair(BooleanOutcomePair left,\n      BooleanOutcomePair right, boolean condition) {\n    return new BooleanOutcomePair(\n        getBooleanOutcomes(left.toBooleanOutcomes, right.toBooleanOutcomes,\n                           condition),\n        getBooleanOutcomes(left.booleanValues, right.booleanValues, condition),\n        left.getJoinedFlowScope(), right.getJoinedFlowScope());\n  }\n\n  /**\n   * Infers the boolean literal set that can be taken by a\n   * short-circuiting binary operation ({@code &&} or {@code ||}).\n   * @param left the set of possible {@code ToBoolean} predicate results for\n   *    the expression on the left side of the operator\n   * @param right the set of possible {@code ToBoolean} predicate results for\n   *    the expression on the right side of the operator\n   * @param condition the left side {@code ToBoolean} predicate result that\n   *    causes the right side to get evaluated (i.e. not short-circuited)\n   * @return a set of possible {@code ToBoolean} predicate results for the\n   *    entire expression\n   */\n  static BooleanLiteralSet getBooleanOutcomes(BooleanLiteralSet left,\n      BooleanLiteralSet right, boolean condition) {\n    return right.union(left.intersection(BooleanLiteralSet.get(!condition)));\n  }\n\n  /**\n   * When traversing short-circuiting binary operations, we need to keep track\n   * of two sets of boolean literals:\n   * 1. {@code toBooleanOutcomes}: boolean literals as converted from any types,\n   * 2. {@code booleanValues}: boolean literals from just boolean types.\n   */\n  private final class BooleanOutcomePair {\n    final BooleanLiteralSet toBooleanOutcomes;\n    final BooleanLiteralSet booleanValues;\n\n    // The scope if only half of the expression executed, when applicable.\n    final FlowScope leftScope;\n\n    // The scope when the whole expression executed.\n    final FlowScope rightScope;\n\n    // The scope when we don't know how much of the expression is executed.\n    FlowScope joinedScope = null;\n\n    BooleanOutcomePair(\n        BooleanLiteralSet toBooleanOutcomes, BooleanLiteralSet booleanValues,\n        FlowScope leftScope, FlowScope rightScope) {\n      this.toBooleanOutcomes = toBooleanOutcomes;\n      this.booleanValues = booleanValues;\n      this.leftScope = leftScope;\n      this.rightScope = rightScope;\n    }\n\n    /**\n     * Gets the safe estimated scope without knowing if all of the\n     * subexpressions will be evaluated.\n     */\n    FlowScope getJoinedFlowScope() {\n      if (joinedScope == null) {\n        if (leftScope == rightScope) {\n          joinedScope = rightScope;\n        } else {\n          joinedScope = join(leftScope, rightScope);\n        }\n      }\n      return joinedScope;\n    }\n\n    /**\n     * Gets the outcome scope if we do know the outcome of the entire\n     * expression.\n     */\n    FlowScope getOutcomeFlowScope(int nodeType, boolean outcome) {\n      if (nodeType == Token.AND && outcome ||\n          nodeType == Token.OR && !outcome) {\n        // We know that the whole expression must have executed.\n        return rightScope;\n      } else {\n        return getJoinedFlowScope();\n      }\n    }\n  }\n\n  private BooleanOutcomePair newBooleanOutcomePair(\n      JSType jsType, FlowScope flowScope) {\n    if (jsType == null) {\n      return new BooleanOutcomePair(\n          BooleanLiteralSet.BOTH, BooleanLiteralSet.BOTH, flowScope, flowScope);\n    }\n    return new BooleanOutcomePair(jsType.getPossibleToBooleanOutcomes(),\n        registry.getNativeType(BOOLEAN_TYPE).isSubtype(jsType) ?\n            BooleanLiteralSet.BOTH : BooleanLiteralSet.EMPTY,\n        flowScope, flowScope);\n  }\n\n  private void redeclareSimpleVar(\n      FlowScope scope, Node nameNode, JSType varType) {\n    Preconditions.checkState(nameNode.isName());\n    String varName = nameNode.getString();\n    if (varType == null) {\n      varType = getNativeType(JSTypeNative.UNKNOWN_TYPE);\n    }\n    if (isUnflowable(syntacticScope.getVar(varName))) {\n      return;\n    }\n    scope.inferSlotType(varName, varType);\n  }\n\n  private boolean isUnflowable(Var v) {\n    return v != null && v.isLocal() && v.isMarkedEscaped() &&\n        // It's OK to flow a variable in the scope where it's escaped.\n        v.getScope() == syntacticScope;\n  }\n\n  /**\n   * This method gets the JSType from the Node argument and verifies that it is\n   * present.\n   */\n  private JSType getJSType(Node n) {\n    JSType jsType = n.getJSType();\n    if (jsType == null) {\n      // TODO(nicksantos): This branch indicates a compiler bug, not worthy of\n      // halting the compilation but we should log this and analyze to track\n      // down why it happens. This is not critical and will be resolved over\n      // time as the type checker is extended.\n      return unknownType;\n    } else {\n      return jsType;\n    }\n  }\n\n  private JSType getNativeType(JSTypeNative typeId) {\n    return registry.getNativeType(typeId);\n  }\n}", 'tree': 'MethodDeclaration modifiers private_ter ^ ^ return_type BasicType name boolean_ter ^ ^ ^ ^ name meth0 ^ ^ parameters FormalParameter type ReferenceType name Node_ter ^ ^ ^ ^ name par0 ^ ^ ^ FormalParameter type ReferenceType name FunctionType_ter ^ ^ ^ ^ name par1 ^ ^ ^ ^ body LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name ImmutableList_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member getTemplateKeys_ter ^ ^ ^ ^ member getTemplateTypeMap_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member isEmpty_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name TemplateTypeReplacer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ClassCreator type ReferenceType name TemplateTypeReplacer_ter ^ ^ ^ ^ arguments MemberReference member registry_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name FunctionType_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member toMaybeFunctionType_ter ^ ^ ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member visit_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member checkNotNull_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member setJSType_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc4 ^ ^ member getReturnType_ter ^ ^ ^ ^ member setJSType_ter ^ ^ ^ ^ ^ ReturnStatement expression MemberReference qualifier loc2 ^ ^ member madeChanges_ter ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 1192, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root member-member inferTemplateTypesFromParameters_ter ^ ^  ^ ^ ; ['copy-member']
copynode 0:  root LocalVariableDeclaration ^ ^ ; ['root -> LocalVariableDeclaration']
before@1 batch0 x: -12.748931884765625: root LocalVariableDeclaration ^ ^  ; ['root -> LocalVariableDeclaration']
after@1 batch0 x: -12.748931884765625: root LocalVariableDeclaration ^ ^  ; ['root -> LocalVariableDeclaration']
copynode -0.24295039474964142:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.24295039474964142:  root modified ^ LocalVariableDeclaration ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration']
copynode -0.24295039474964142:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.24295039474964142:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -1.5379488468170166:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -1.5379488468170166:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -1.5379488468170166:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -0.24295039474964142:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -1.5379488468170166:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -1.5379488468170166:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -1.5379488468170166:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -1.5379488468170166:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -1.5379488468170166:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -1.5379488468170166:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -1.5379488468170166:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter']
copynode -0.24295039474964142:  root modified ^ member-member par0 ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.24295039474964142:  root modified ^ member-member par1 ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -8.570718765258789:  root ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -0.24295039474964142:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -0.24295039474964142:  root modified ^ control ^ ^ ; ['root -> modified', 'root -> control']
copynode -9.110788345336914:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -0.24295039474964142:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -9.649320602416992:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -8.570718765258789:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -10.74134635925293:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -10.874116897583008:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -9.110788345336914:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -12.451349258422852:  root member-member inferTemplateTypesFromParameters_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -8.570718765258789:  root ReturnStatement expression MemberReference qualifier loc2 ^ ^ member madeChanges_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -10.874116897583008:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -12.748931884765625:  root LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -12.748931884765625:  root LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -10.74134635925293:  root StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc4 ^ ^ member getReturnType_ter ^ ^ ^ ^ member setJSType_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.74134635925293:  root StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member checkNotNull_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.74134635925293:  root StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member setJSType_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.748931884765625:  root LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -12.451349258422852:  root member-member inferTemplateTypesFromParameters_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -9.110788345336914:  root return_type BasicType name boolean_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'copy-return_type']
copynode -10.874116897583008:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -12.451349258422852:  root member-member inferTemplateTypesFromParameters_ter ^ ^  checkNotNull_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.451349258422852:  root member-member inferTemplateTypesFromParameters_ter ^ ^  setJSType_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.451349258422852:  root member-member inferTemplateTypesFromParameters_ter ^ ^  setJSType_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.451349258422852:  root member-member inferTemplateTypesFromParameters_ter ^ ^  debug_ter ^ ^ ^ ; ['copy-member', 'member -> debug_ter']
copynode -12.748931884765625:  root LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name ImmutableList_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member getTemplateKeys_ter ^ ^ ^ ^ member getTemplateTypeMap_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -12.451349258422852:  root member-member inferTemplateTypesFromParameters_ter ^ ^  add_ter ^ ^ ^ ; ['copy-member', 'member -> add_ter']
copynode -12.748931884765625:  root LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.110788345336914:  root return_type par0 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -10.874116897583008:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -12.748931884765625:  root LocalVariableDeclaration type ReferenceType name FunctionType_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member toMaybeFunctionType_ter ^ ^ ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member visit_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -10.874116897583008:  root parameters FormalParameter type ReferenceType name Node_ter ^ ^ ^ ^ name par0 ^ ^ ^ FormalParameter type ReferenceType name FunctionType_ter ^ ^ ^ ^ name par1 ^ ^ ^ ^ ^ ; ['root -> parameters', 'copy-parameters']
copynode -12.451349258422852:  root member-member inferTemplateTypesFromParameters_ter ^ ^  get_ter ^ ^ ^ ; ['copy-member', 'member -> get_ter']
copynode -12.748931884765625:  root LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -9.110788345336914:  root return_type par1 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -12.451349258422852:  root member-member inferTemplateTypesFromParameters_ter ^ ^  e_ter ^ ^ ^ ; ['copy-member', 'member -> e_ter']
copynode -12.748931884765625:  root LocalVariableDeclaration type ReferenceType name TemplateTypeReplacer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ClassCreator type ReferenceType name TemplateTypeReplacer_ter ^ ^ ^ ^ arguments MemberReference member registry_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -12.451349258422852:  root member-member inferTemplateTypesFromParameters_ter ^ ^  inferTemplateTypesFromParameters_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -9.649320602416992:  root IfStatement condition MethodInvocation qualifier loc0 ^ ^ member isEmpty_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.874116897583008:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -12.748931884765625:  root LocalVariableDeclaration par0 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -12.748931884765625:  root LocalVariableDeclaration par1 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -8.570718765258789:  root ReturnStatement par1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -8.570718765258789:  root ReturnStatement par0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -10.874116897583008:  root parameters loc0 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -10.74134635925293:  root StatementExpression par0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -10.74134635925293:  root StatementExpression par1 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -9.110788345336914:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.110788345336914:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -9.649320602416992:  root IfStatement par1 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -10.874116897583008:  root parameters loc3 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.649320602416992:  root IfStatement par0 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -10.874116897583008:  root parameters loc4 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.110788345336914:  root return_type loc2 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.874116897583008:  root parameters loc2 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.110788345336914:  root return_type loc3 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.110788345336914:  root return_type loc4 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.74134635925293:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -9.649320602416992:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -9.649320602416992:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -8.570718765258789:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -9.649320602416992:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -10.74134635925293:  root StatementExpression loc1 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -10.74134635925293:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -10.74134635925293:  root StatementExpression loc2 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -8.570718765258789:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.570718765258789:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.570718765258789:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.570718765258789:  root ReturnStatement loc4 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -9.649320602416992:  root IfStatement loc0 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -9.649320602416992:  root IfStatement loc2 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -9.649320602416992:  root IfStatement loc4 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch0 x: -30.737903594970703: root IfStatement loc4 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch0 x: -30.737903594970703: root IfStatement loc4 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -1.3579117804765701:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -1.4128053933382034:  root modified ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -1.8210389167070389:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -2.194326639175415:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.1544892340898514:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -1.4128053933382034:  root modified ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -2.5938055515289307:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -4.1070215702056885:  root add ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -1.8210389167070389:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -2.1544892340898514:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -5.6735419780015945:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.889305353164673:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -2.5938055515289307:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc4 ^ ^ member getReturnType_ter ^ ^ ^ ^ member setJSType_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.5938055515289307:  root add ^ StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member checkNotNull_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.5938055515289307:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member setJSType_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.3579117804765701:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  setJSType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -4.1070215702056885:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -1.4128053933382034:  root modified ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -1.3579117804765701:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  checkNotNull_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.3579117804765701:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  setJSType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -5.9547388553619385:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -1.3579117804765701:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -6.004078149795532:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -6.004078149795532:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -6.928953409194946:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -1.3579117804765701:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter']
copynode -6.756637811660767:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -7.703003168106079:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> End']
copynode -7.606153726577759:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -1.8210389167070389:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -1.3579117804765701:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  e_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> e_ter']
copynode -2.1544892340898514:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -1.8210389167070389:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -4.1070215702056885:  root add ^ ReturnStatement expression MemberReference qualifier loc2 ^ ^ member madeChanges_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -1.8210389167070389:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -2.1544892340898514:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -1.3579117804765701:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  inferTemplateTypesFromParameters_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.1544892340898514:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -5.9547388553619385:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -1.3579117804765701:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> add_ter']
copynode -6.004078149795532:  root add ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -1.4128053933382034:  root modified ^ LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -5.9547388553619385:  root add ^ control par1 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -8.456962540745735:  root modified ^ member-member par0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -1.3579117804765701:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter']
copynode -8.99028891324997:  root ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -9.15072150528431:  root modified ^ control EnhancedForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl']
copynode -8.924089387059212:  root modified ^ member-member par1 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -1.4128053933382034:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name ImmutableList_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member getTemplateKeys_ter ^ ^ ^ ^ member getTemplateTypeMap_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.607361748814583:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -5.6735419780015945:  root modified ^ StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member checkNotNull_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.6735419780015945:  root modified ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc4 ^ ^ member getReturnType_ter ^ ^ ^ ^ member setJSType_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.6735419780015945:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member setJSType_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.4128053933382034:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -5.9547388553619385:  root add ^ control ForControl_ter ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl_ter']
copynode -9.689101457595825:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -6.004078149795532:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name ImmutableList_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member getTemplateKeys_ter ^ ^ ^ ^ member getTemplateTypeMap_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -1.4128053933382034:  root modified ^ LocalVariableDeclaration type ReferenceType name FunctionType_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member toMaybeFunctionType_ter ^ ^ ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member visit_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.004078149795532:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.649987204466015:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -5.9547388553619385:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -9.319263964891434:  root return_type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -9.319263964891434:  root return_type ReferenceType name ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -6.004078149795532:  root add ^ LocalVariableDeclaration type ReferenceType name FunctionType_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member toMaybeFunctionType_ter ^ ^ ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member visit_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.649987204466015:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -5.889305353164673:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -5.889305353164673:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -10.848192296922207:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -8.456962540745735:  root modified ^ member-member par0 ^ ^  getTemplateKeys_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -9.649987204466015:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -5.889305353164673:  root add ^ ReturnStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement']
copynode -1.4128053933382034:  root modified ^ LocalVariableDeclaration type ReferenceType name TemplateTypeReplacer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ClassCreator type ReferenceType name TemplateTypeReplacer_ter ^ ^ ^ ^ arguments MemberReference member registry_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -8.456962540745735:  root modified ^ member-member par0 ^ ^  getReturnType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -9.319263964891434:  root return_type ReferenceType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name']
copynode -6.928953409194946:  root add ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -8.924089387059212:  root modified ^ member-member par1 ^ ^  getTemplateKeys_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -11.239078044891357:  root return_type BasicType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'BasicType -> name']
copynode -8.456962540745735:  root modified ^ member-member par0 ^ ^  toMaybeFunctionType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -8.456962540745735:  root modified ^ member-member par0 ^ ^  getTemplateTypeMap_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -8.456962540745735:  root modified ^ member-member par0 ^ ^  getFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -6.928953409194946:  root add ^ BreakStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> IfStatement']
copynode -6.004078149795532:  root add ^ LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -8.924089387059212:  root modified ^ member-member par1 ^ ^  getReturnType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -6.004078149795532:  root add ^ LocalVariableDeclaration type ReferenceType name TemplateTypeReplacer_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ClassCreator type ReferenceType name TemplateTypeReplacer_ter ^ ^ ^ ^ arguments MemberReference member registry_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.689101457595825:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -9.319263964891434:  root return_type ReferenceType name ImmutableList_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -9.319263964891434:  root return_type ReferenceType name TemplateTypeReplacer_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -9.689101457595825:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -11.006988570094109:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -9.689101457595825:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -8.924089387059212:  root modified ^ member-member par1 ^ ^  toMaybeFunctionType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.8210389167070389:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -6.928953409194946:  root add ^ BreakStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ReturnStatement']
copynode -2.194326639175415:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member isEmpty_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -11.006988570094109:  root parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -8.924089387059212:  root modified ^ member-member par1 ^ ^  getTemplateTypeMap_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -8.924089387059212:  root modified ^ member-member par1 ^ ^  getFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.1544892340898514:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
before@3 batch0 x: -12.300018027424812: root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
after@3 batch0 x: -12.300018027424812: root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -1.3885846994817257:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -1.7587098628282547:  root modified ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -2.6730948239564896:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers']
copynode -2.68158395588398:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.1948442606371827:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -2.1948442606371827:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -1.8796656988561153:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member registry_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -1.8796656988561153:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -2.21504969894886:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member registry_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -1.8796656988561153:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -2.1948442606371827:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -2.21504969894886:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -1.8796656988561153:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -1.8796656988561153:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -1.8796656988561153:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -4.225479945540428:  root add ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -2.21504969894886:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -2.21504969894886:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -2.21504969894886:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -1.8796656988561153:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -2.21504969894886:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -2.21504969894886:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -2.68158395588398:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -1.8796656988561153:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -2.6730948239564896:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter']
copynode -4.799539998173714:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -2.21504969894886:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.731233596801758:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -5.1314792186021805:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -1.8796656988561153:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -1.8796656988561153:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -2.21504969894886:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -2.21504969894886:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -2.1948442606371827:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -6.371196940541267:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  setJSType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.176188230514526:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc4 ^ ^ member getReturnType_ter ^ ^ ^ ^ member setJSType_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.245983839035034:  root add ^ StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member checkNotNull_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.68158395588398:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -6.356066465377808:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member setJSType_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.684994414448738:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  checkNotNull_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.717102721333504:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  setJSType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.785044386982918:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -6.756695985794067:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -6.819560348987579:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -6.815266907215118:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers']
copynode -6.452396631240845:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -4.799539998173714:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier par1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.186737731099129:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter', 'root -> End']
copynode -5.1314792186021805:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier par1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -4.799539998173714:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -4.799539998173714:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier loc2 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc2']
copynode -2.68158395588398:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -2.68158395588398:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -5.1314792186021805:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier loc2 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc2']
copynode -2.1948442606371827:  root add ^ IfStatement condition Cast ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast']
copynode -5.1314792186021805:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -4.799539998173714:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -7.839445784687996:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  e_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> e_ter', 'root -> End']
copynode -2.1948442606371827:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -4.799539998173714:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier loc1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1']
copynode -5.1314792186021805:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -7.314894914627075:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -4.799539998173714:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier loc3 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -5.1314792186021805:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier loc1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1']
copynode -2.1948442606371827:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member isEmpty_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -6.452396631240845:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -8.33788700401783:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  inferTemplateTypesFromParameters_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -8.30503535270691:  root add ^ ReturnStatement expression MemberReference qualifier loc2 ^ ^ member madeChanges_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -5.1314792186021805:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier loc3 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -7.816715434193611:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -6.176188230514526:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc4 ^ ^ member getReturnType_ter ^ ^ ^ ^ member setJSType_ter ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement']
copynode -7.847698405385017:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -8.166929438710213:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -6.452396631240845:  root add ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -6.245983839035034:  root add ^ StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member checkNotNull_ter ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement']
copynode -6.452396631240845:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -8.623076155781746:  root modified ^ member-member inferTemplateTypesFromParameters_ter ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> add_ter', 'root -> End']
copynode -4.799539998173714:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier Preconditions_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -8.329473689198494:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -6.356066465377808:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member setJSType_ter ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement']
copynode -2.68158395588398:  root add ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -7.74633315205574:  root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -6.467091396450996:  root modified ^ LocalVariableDeclaration annotations Annotation ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators', 'annotations -> Annotation']
copynode -5.731233596801758:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -7.314894914627075:  root add ^ AssertStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MethodInvocation']
copynode -8.325208857655525:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -8.786582216620445:  root modified ^ member-member par0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -7.74633315205574:  root add ^ WhileStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MethodInvocation']
copynode -7.314894914627075:  root add ^ AssertStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MemberReference']
copynode -8.75168688595295:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators', 'copy-modifiers']
copynode -8.380544856190681:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -6.815266907215118:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter']
copynode -5.1314792186021805:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier Preconditions_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -4.225479945540428:  root add ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> IfStatement']
copynode -8.511663913726807:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter', 'root -> End']
copynode -7.816715434193611:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
before@4 batch0 x: -9.004320695996284: root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
after@4 batch0 x: -9.004320695996284: root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -1.7589839029242285:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -2.761869803071022:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> ReferenceType']
copynode -3.167792096559424:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.3836007975041866:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member registry_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -3.6691411398351192:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -3.7733519822359085:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member registry_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -1.7589839029242285:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ arguments ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -2.8304237574338913:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.9666226767003536:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -4.001731231808662:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -2.8304237574338913:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.100634898990393:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -4.14944776520133:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -4.171244945377111:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3', 'root -> End']
copynode -4.299649432301521:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -4.334290936589241:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -4.3935312777757645:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3', 'root -> End']
copynode -4.458514537662268:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -2.8304237574338913:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.0558020619791932:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.612571194767952:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -2.8304237574338913:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.978796735231299:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -3.0558020619791932:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.811351016163826:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -3.978796735231299:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -1.7589839029242285:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name']
copynode -5.02188141644001:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -3.0558020619791932:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.162928905338049:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -5.218572452664375:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType']
copynode -3.0558020619791932:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -5.487307980656624:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -3.0558020619791932:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.0558020619791932:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -3.0558020619791932:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -5.783686980605125:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.0558020619791932:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -5.880414333194494:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2', 'root -> End']
copynode -5.990735378116369:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4', 'root -> End']
copynode -6.227696850895882:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4', 'root -> End']
copynode -6.247054532170296:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2', 'root -> End']
copynode -3.0558020619791932:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.57342965900898:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -3.978796735231299:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.249567523424048:  root add ^ IfStatement condition This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors']
copynode -6.958184540271759:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> ReferenceType']
copynode -7.032720267772675:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -3.0558020619791932:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation member getTemplateKeys_ter ^ ^ ^ ^ member getTemplateTypeMap_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -2.8304237574338913:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.824755970388651:  root add ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -7.457178667187691:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -6.249567523424048:  root add ^ IfStatement condition This prefix_operators ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors']
copynode -2.8304237574338913:  root add ^ StatementExpression expression MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -1.7589839029242285:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ sub_type ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name sub_type']
copynode -7.607925906602759:  root add ^ IfStatement condition Cast type ^ expression ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast', 'Cast -> type expression']
copynode -1.7589839029242285:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ dimensions ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name dimensions']
copynode -7.4300504475831985:  root add ^ StatementExpression expression SuperMethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member']
copynode -3.978796735231299:  root add ^ IfStatement condition MemberReference prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -6.249567523424048:  root add ^ IfStatement condition This qualifier ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> qualifier selectors']
copynode -5.370979979634285:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier unknown ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'member -> par0']
copynode -8.049765467643738:  root add ^ AssertStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.370979979634285:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier unknown ^ ^ member registry_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'copy-member']
copynode -1.7589839029242285:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ dimensions ^ arguments ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name dimensions arguments']
copynode -7.136896803975105:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -7.136896803975105:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier par1 ^ ^ member registry_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.786034056916833:  root add ^ control EnhancedForControl var VariableDeclaration ^ ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable', 'var -> VariableDeclaration']
copynode -5.80717708170414:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier unknown ^ ^ member registry_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'copy-member']
copynode -7.319248870015144:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier par1 ^ ^ member registry_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -7.319248870015144:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -7.372379973530769:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -7.429108336567879:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
copynode -1.7589839029242285:  root modified ^ LocalVariableDeclaration type ReferenceType name ImmutableList_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -7.372379973530769:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier par0 ^ ^ member registry_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -7.429108336567879:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier loc2 ^ ^ member registry_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc2', 'copy-member']
copynode -5.370979979634285:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier unknown ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'member -> par1']
copynode -7.56180639564991:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
copynode -5.80717708170414:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier unknown ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'member -> par0']
copynode -8.447845458984375:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc4 ^ ^ member getReturnType_ter ^ ^ ^ ^ member setJSType_ter ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -8.496370077133179:  root add ^ ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.783686980605125:  root modified ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.56180639564991:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier loc2 ^ ^ member registry_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc2', 'copy-member']
copynode -2.8304237574338913:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
before@5 batch0 x: -8.608416005969048: root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
after@5 batch0 x: -8.608416005969048: root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -1.9612880873610266:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -2.7623304742446635:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -3.1752018740517087:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -3.786087565415073:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name']
copynode -3.1752018740517087:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.683140203356743:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -3.957521840929985:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -4.852537527505774:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.022172627504915:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -4.690866723482031:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.012148671143223:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name']
copynode -5.109877779905219:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -3.957521840929985:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.011652395129204:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.731847122136969:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -5.2188829814549536:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.411038592283148:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -4.58046646398725:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -1.9612880873610266:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -4.011652395129204:  root add ^ StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.841424181882758:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -3.1752018740517087:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.872285641729832:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -5.871714785520453:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter']
copynode -5.872582629148383:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -4.520351693034172:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -4.520351693034172:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -4.011652395129204:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1']
copynode -4.011652395129204:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -3.1752018740517087:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -4.58046646398725:  root add ^ IfStatement condition MethodInvocation qualifier Preconditions_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.957521840929985:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -5.61012954992475:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.520351693034172:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -3.1752018740517087:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -4.731847122136969:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -4.520351693034172:  root add ^ StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -3.957521840929985:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.011652395129204:  root add ^ StatementExpression expression MethodInvocation qualifier par2 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par2']
copynode -5.61012954992475:  root add ^ IfStatement condition MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -4.011652395129204:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -3.1752018740517087:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -4.58046646398725:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -4.011652395129204:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -4.731847122136969:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -3.957521840929985:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.566781475965399:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par1']
copynode -4.58046646398725:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1']
copynode -6.896421566430945:  root add ^ IfStatement condition This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -4.011652395129204:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -4.520351693034172:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -3.957521840929985:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.959011777595151:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -3.957521840929985:  root add ^ StatementExpression expression MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -4.011652395129204:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2']
copynode -6.701186835765839:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -4.731847122136969:  root add ^ IfStatement condition MethodInvocation qualifier Preconditions_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.858253732149024:  root add ^ IfStatement condition MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -4.58046646398725:  root add ^ IfStatement condition MethodInvocation qualifier par2 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par2']
copynode -7.460108760744333:  root add ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -3.786087565415073:  root modified ^ LocalVariableDeclaration type ReferenceType name List_ter ^ ^ arguments ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'name -> List_ter']
copynode -4.520351693034172:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -4.690866723482031:  root add ^ IfStatement condition MemberReference member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -7.56178309005918:  root add ^ IfStatement condition This prefix_operators !_ter ^ ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter']
copynode -6.701186835765839:  root add ^ StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter']
copynode -4.690866723482031:  root add ^ IfStatement condition MemberReference member registry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.659803792834282:  root add ^ StatementExpression expression MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -3.957521840929985:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member registry_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
before@6 batch0 x: -7.710156127810478: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member registry_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
after@6 batch0 x: -7.710156127810478: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member registry_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -1.9907004295964725:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -2.774321700358996:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -3.786618333135266:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -3.8520205023814924:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument']
copynode -4.517672639165539:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -4.703965771943331:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -4.838377580046654:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.864190153602976:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.0490859667770565:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -5.25371615588665:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.135198712639976:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'copy-declarators']
copynode -5.298505279934034:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -5.413470077386592:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.289722636167426:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -5.579988114826847:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -5.145794898096938:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -5.056828424159903:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -3.786618333135266:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -5.954275891184807:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -5.852172117505688:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.289543554186821:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.4691519884509034:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.843823880946729:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par1']
copynode -3.8520205023814924:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'copy-arguments']
copynode -6.422880485479254:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.474312588572502:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -5.056828424159903:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -6.253554563794751:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -3.8520205023814924:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'copy-arguments']
copynode -5.056828424159903:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -5.8742844218504615:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments']
copynode -5.145794898096938:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.539829298853874:  root add ^ StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.5211852340144105:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -5.874928317556623:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.314640685915947:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.4691519884509034:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -6.816955998365302:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.659715101122856:  root add ^ StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.518898945127148:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -6.8088366240262985:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.8742844218504615:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference']
copynode -5.0490859667770565:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier ^ member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.135198712639976:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'declarators -> VariableDeclarator']
copynode -5.145794898096938:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -7.142400935117621:  root add ^ IfStatement condition This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -7.067101165652275:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -4.517672639165539:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -6.107166692614555:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1', 'arguments -> MemberReference']
copynode -7.102234497491736:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par1', 'selectors -> MethodInvocation']
copynode -6.227447912096977:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -6.873648863111157:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -7.25040702521801:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -5.289543554186821:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -7.330824300646782:  root add ^ StatementExpression expression MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -7.28586833178997:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -7.294897034124006:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -5.289543554186821:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -4.838377580046654:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.874928317556623:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier Preconditions_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -7.515576168894768:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
copynode -6.3021752385539:  root add ^ IfStatement condition MethodInvocation qualifier Preconditions_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.659715101122856:  root add ^ StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -5.4691519884509034:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -5.289722636167426:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ member isEmpty_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'member -> isEmpty_ter']
copynode -7.41592629236402:  root add ^ IfStatement condition MethodInvocation qualifier Preconditions_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.107166692614555:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1', 'arguments -> Literal']
before@7 batch0 x: -7.731348916888237: root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1', 'arguments -> Literal']
after@7 batch0 x: -7.731348916888237: root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1', 'arguments -> Literal']
copynode -1.9945831536897458:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1']
copynode -2.8008429379260633:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -3.953547801647801:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.624958079133648:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.301341966085602:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'copy-declarators', 'root -> End']
copynode -5.309296182123944:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -5.294968783855438:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -4.054735377721954:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument pattern_type ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type']
copynode -4.054735377721954:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument']
copynode -4.054735377721954:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> type']
copynode -4.054735377721954:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument']
copynode -5.719089716498274:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -5.792143031780142:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -4.911481961607933:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.504228412930388:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.007084742188454:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'root -> End']
copynode -5.1951208634418435:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.158502917562146:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.054735377721954:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ^ pattern_type ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> type pattern_type']
copynode -5.493859785667155:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement']
copynode -4.911481961607933:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.16913740336895:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.1951208634418435:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement']
copynode -5.207485623192042:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.4255843309802:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.523658972233534:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -6.563473563466687:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.493859785667155:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.558025643054862:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.494710207276512:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'copy-arguments', 'copy-declarators']
copynode -6.609965563111473:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'copy-arguments', 'copy-declarators']
copynode -6.468493730819318:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par1', 'start -> unknown']
copynode -6.710968524217606:  root add ^ StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.659917032171506:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown']
copynode -5.951506715093274:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.904607605014462:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.908923976123333:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.8763343542814255:  root add ^ StatementExpression expression MethodInvocation qualifier Preconditions_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.207485623192042:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par1 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.963903700758237:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.517274908546824:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> ReturnStatement']
copynode -7.020928502373863:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -3.953547801647801:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -4.911481961607933:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -5.1951208634418435:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression']
copynode -5.207485623192042:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.838650390505791:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -4.911481961607933:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.162042573094368:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.719377666537184:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement']
copynode -7.140310555521864:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.504228412930388:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'root -> End']
copynode -7.30141169577837:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'root -> End']
copynode -7.278290908609051:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.504228412930388:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'root -> StatementExpression']
copynode -7.3906072825193405:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -7.2168988436460495:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.277051016688347:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.36225663870573:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.207485623192042:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.911481961607933:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member registry_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.365198782936204:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -6.872838645998854:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
before@8 batch0 x: -7.583588093344588: root add ^ IfStatement condition MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
after@8 batch0 x: -7.583588093344588: root add ^ IfStatement condition MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -1.9995164410793222:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation']
copynode -3.9973634107154794:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.383263185911346:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument pattern_type ?_ter ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type', 'pattern_type -> ?_ter']
copynode -4.6413656285149045:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -1.9995164410793222:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast']
copynode -3.9973634107154794:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.718916371755768:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> type', 'type -> ReferenceType']
copynode -5.832373492245097:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -5.647269442968536:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> TypeArgument']
copynode -5.951110333029646:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -3.9973634107154794:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.730439499311615:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ TypeArgument ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> TypeArgument']
copynode -6.016537964169402:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.191872075491119:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType ^ ^ pattern_type ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> type pattern_type', 'type -> ReferenceType']
copynode -4.6413656285149045:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.9973634107154794:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member registry_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.246710258594248:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.36809819174232:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.014027699828148:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -6.69177797465818:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'copy-arguments', 'copy-declarators', 'root -> End']
copynode -6.705473542504478:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'copy-arguments', 'copy-declarators', 'root -> End']
copynode -4.6413656285149045:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member registry_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -3.9973634107154794:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -6.677676766936202:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -5.647269442968536:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> End']
copynode -4.6413656285149045:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.250975713133812:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -7.029734889336396:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1']
copynode -6.185895934526343:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.730439499311615:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> End']
copynode -6.996042675804347:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par1 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'value -> MethodInvocation']
copynode -6.413460202049464:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation']
copynode -6.185895934526343:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -7.027407102112193:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -1.9995164410793222:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This']
copynode -6.588606681500096:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.815551858220715:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -1.9995164410793222:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression']
copynode -6.54627042991342:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.189471177582163:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.212643093895167:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation']
copynode -7.244824081484694:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.279491826717276:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.250975713133812:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -1.9995164410793222:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ClassCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> ClassCreator']
copynode -3.9973634107154794:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.726020158326719:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par1', 'start -> unknown', 'root -> ReturnStatement']
copynode -4.6413656285149045:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -6.014027699828148:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
before@9 batch0 x: -7.475176438689232: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
after@9 batch0 x: -7.475176438689232: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
copynode -2.0548268133425154:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.83501376939239:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal']
copynode -2.0548268133425154:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.0548268133425154:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.485864203248639:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal']
copynode -5.641668512078468:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression']
copynode -5.472805321507622:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument pattern_type ?_ter ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type', 'pattern_type -> ?_ter', 'arguments -> End']
copynode -5.696856938127894:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -6.144681736652274:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.234098058019299:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -6.059064231638331:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal']
copynode -6.368457454314921:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.501383296970744:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -4.83501376939239:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference']
copynode -6.261552892450709:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member registry_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal']
copynode -6.574780091643333:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'start -> unknown']
copynode -6.79344521072926:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member registry_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal']
copynode -6.935725406103302:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> End', 'copy-declarators']
copynode -5.719609933439642:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> type', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -6.820491157297511:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par2 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par2', 'operandr -> Literal']
copynode -7.05599959223764:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> End', 'copy-declarators']
copynode -5.472805321507622:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument pattern_type ?_ter ^ ^ ^ TypeArgument ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type', 'pattern_type -> ?_ter', 'arguments -> TypeArgument']
copynode -7.024376079440117:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -7.036407910112757:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation']
copynode -6.984696965490002:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal']
copynode -5.719609933439642:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> type', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -7.1443333326024:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.15122122928733:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors']
copynode -7.048388495866675:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.105210438196082:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -7.255764915200416:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -2.0548268133425154:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -5.696856938127894:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -7.198636855755467:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -6.010918841056991:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> TypeArgument', 'copy-TypeArgument']
copynode -7.371223032299895:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -2.0548268133425154:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.079953894310165:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> TypeArgument', 'copy-TypeArgument']
copynode -6.010918841056991:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> TypeArgument', 'copy-TypeArgument']
copynode -6.059064231638331:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MemberReference']
copynode -6.192552515189163:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ pattern_type ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> type pattern_type', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -6.010918841056991:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument pattern_type ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type']
copynode -7.41505454480648:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -2.0548268133425154:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.276400148693938:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
before@10 batch0 x: -7.503994941536803: root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
after@10 batch0 x: -7.503994941536803: root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -2.1690541380667128:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -2.1690541380667128:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -5.061295576218981:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value']
copynode -2.1690541380667128:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.556472550902981:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value']
copynode -5.061950998904649:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.647173223143909:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType']
copynode -5.3925441080355085:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -5.733758062415291:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument pattern_type ?_ter ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type', 'pattern_type -> ?_ter', 'arguments -> End', 'copy-declarators']
copynode -5.952007137064356:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -6.326811071310658:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -6.384372822765727:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value']
copynode -2.1690541380667128:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -6.578841142181773:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member registry_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value']
copynode -2.1690541380667128:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.647363662719727:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.3925441080355085:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.061950998904649:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier Preconditions_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -2.1690541380667128:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member registry_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.918017107818741:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member registry_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value']
copynode -6.954879176162649:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> End', 'copy-declarators', 'root -> End']
copynode -7.043042249802966:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par2 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par2', 'operandr -> Literal', 'Literal -> value']
copynode -7.07479404687183:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> End', 'copy-declarators', 'root -> End']
copynode -6.5577937586349435:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.061950998904649:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -7.041817145887762:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> type', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> End']
copynode -7.09567254781723:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.134710859332699:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value']
copynode -7.111883632664103:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.212326079432387:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.233638688747305:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.186403589788824:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> type', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> End']
copynode -7.346715237770695:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.314072685840074:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -7.440538960101549:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.5577937586349435:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.374160275154281:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> End']
copynode -2.1690541380667128:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.443131789856125:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> End']
copynode -7.446206555061508:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> End']
before@11 batch0 x: -7.571620196395088: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> End']
after@11 batch0 x: -7.571620196395088: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> End']
copynode -2.3883034014725126:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.078278658736963:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.267382251622621:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -4.44661103427643:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.567511719476897:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.702139722707216:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'root -> End']
copynode -5.5744734579348005:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -5.771023854904342:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument pattern_type ?_ter ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type', 'pattern_type -> ?_ter', 'arguments -> End', 'copy-declarators', 'root -> End']
copynode -5.96854296309175:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.648600998276379:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -4.44661103427643:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.337633183982689:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.44661103427643:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.401330321852583:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.44661103427643:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.44661103427643:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.593903171422426:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -6.596910558466334:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member registry_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.608786212804262:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -6.738024550082628:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.930505825963337:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member registry_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.87885914981598:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member registry_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -6.81969698012108:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier Preconditions_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -5.267382251622621:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -7.0608793662977405:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.145516401913483:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.129567178431898:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> type', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> End', 'copy-declarators']
copynode -7.275984386447817:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> type', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> End', 'copy-declarators']
copynode -2.3883034014725126:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.103022652270738:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -7.4964046332170255:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> End', 'copy-declarators']
copynode -7.567879773967434:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> End', 'copy-declarators']
copynode -7.571620196395088:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> End', 'copy-declarators']
copynode -7.251815013412852:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.550644504430238:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
before@12 batch0 x: -7.608201565744821: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
after@12 batch0 x: -7.608201565744821: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -2.394965861516539:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -2.394965861516539:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.442802029254381:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'root -> End']
copynode -5.117753775615711:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -5.59021271095844:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.072982790821698:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ expression MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation']
copynode -5.771079229714815:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'copy-member']
copynode -5.581941234471742:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -6.201657759549562:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.010523844335694:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -5.581941234471742:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.6745008552097715:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'root -> End']
copynode -6.454124080541078:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.361775521945674:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -2.394965861516539:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.9739380204700865:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member registry_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'root -> End']
copynode -5.117753775615711:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.4601045696181245:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -6.640367962245364:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member registry_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -7.105316984059755:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.59021271095844:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -7.1782668442465365:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> type', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> End', 'copy-declarators', 'root -> End']
copynode -6.473519908788148:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.953146272164304:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member registry_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -2.394965861516539:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member registry_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.324497273657471:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> type', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> End', 'copy-declarators', 'root -> End']
copynode -2.394965861516539:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -6.9799808883690275:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier Preconditions_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -6.496817457082216:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -5.117753775615711:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression']
copynode -7.114726951171178:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -7.518435996316839:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> End', 'copy-declarators', 'root -> End']
before@13 batch0 x: -7.519162781361956: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> End', 'copy-declarators', 'root -> End']
after@13 batch0 x: -7.519162781361956: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> TypeArgument', 'copy-TypeArgument', 'arguments -> End', 'copy-declarators', 'root -> End']
copynode -2.597194720583502:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -2.597194720583502:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -4.320075963216368:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
copynode -2.597194720583502:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal']
copynode -2.597194720583502:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation']
copynode -5.501885058183689:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.141166674497072:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'copy-member', 'root -> End']
copynode -4.320075963216368:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -4.320075963216368:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal']
copynode -6.190464662911836:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -6.426599610422272:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.324112298490945:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.717675256135408:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.510657059552614:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -4.320075963216368:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation']
copynode -6.113413481914904:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.032881475810427:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member registry_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.970085356908385:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference']
copynode -7.0307639090460725:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.125340946775395:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.392687382700387:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier Preconditions_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'root -> End']
copynode -6.113413481914904:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation']
before@14 batch0 x: -7.441683195531368: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
after@14 batch0 x: -7.441683195531368: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -2.9139024806790985:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.736191083269659:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member']
copynode -4.762783084588591:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.154838849382941:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value']
copynode -5.657825039525051:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -5.35109357960755:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.331957076268736:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member']
copynode -6.422167037206236:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value']
copynode -6.585191402409691:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.7113919878029265:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -2.9139024806790985:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.45163564622635:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.35109357960755:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.85439333220711:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.725259067548905:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.175286505895201:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.1652927322429605:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member registry_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.1814165113610215:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.7526054853224196:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> MemberReference']
copynode -7.338577129703481:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.399635462963488:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -5.35109357960755:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
before@15 batch0 x: -7.416014890943188: root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
after@15 batch0 x: -7.416014890943188: root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -2.9339468018733896:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -4.775821842777077:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -2.9339468018733896:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -5.160348175151739:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -2.9339468018733896:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.797287636029068:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.160348175151739:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -2.9339468018733896:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.380059291201178:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member', 'root -> End']
copynode -4.797287636029068:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.1354029072099365:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -6.8848709655576386:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -6.996784197690431:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.797287636029068:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.716591143573169:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.0512289692997:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -2.9339468018733896:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member registry_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.797287636029068:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.797287636029068:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -5.160348175151739:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.039598633127753:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.237437414529268:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.797287636029068:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -2.9339468018733896:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
before@16 batch0 x: -7.299544049950782: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
after@16 batch0 x: -7.299544049950782: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -3.177943079324905:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
copynode -3.177943079324905:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -3.177943079324905:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal']
copynode -3.177943079324905:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation']
copynode -5.473612739297096:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -6.156747274624649:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -6.075000045879278:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -6.172524688823614:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -5.473612739297096:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference']
copynode -6.444860034214798:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -6.518212903814856:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -6.102883292885963:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -6.191067649575416:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.191067649575416:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -7.015294513257686:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.204144750314299:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
copynode -5.473612739297096:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal']
copynode -7.027366094815079:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -6.075000045879278:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value false_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference']
copynode -7.24831508245552:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.102883292885963:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -7.295173101651017:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
before@17 batch0 x: -7.478877507674042: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
after@17 batch0 x: -7.478877507674042: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -4.112777500005905:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.205140917154495:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member']
copynode -4.935495226236526:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value']
copynode -6.194055511208717:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member']
copynode -6.460602365958039:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member']
copynode -6.566069720371161:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -6.627656666620169:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member']
copynode -6.640485717507545:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.68834302626783:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -5.959710924478713:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.808032883855049:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.786862988548819:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End']
copynode -6.906610323640052:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.019315554352943:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -4.112777500005905:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.396818234177772:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value']
copynode -7.389413077908102:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.399590609653387:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value false_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.396824949013535:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -7.462390853615943:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member']
copynode -7.478877507674042:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member']
copynode -4.205140917154495:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'start -> unknown']
before@18 batch0 x: -7.547151653619949: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'start -> unknown']
after@18 batch0 x: -7.547151653619949: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'start -> unknown']
copynode -4.242936494352762:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member', 'root -> End']
copynode -4.168051904591266:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.941584521031473:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -4.941584521031473:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -4.168051904591266:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -4.168051904591266:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.2340918616973795:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member', 'root -> End']
copynode -4.168051904591266:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member registry_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.4951646631234325:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member', 'root -> End']
copynode -4.168051904591266:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.592600079311524:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.655353883339558:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.704089083301369:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -4.941584521031473:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.906377342122141:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -4.168051904591266:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.036685379745904:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -4.168051904591266:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -6.706879227014724:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -4.168051904591266:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.929669717850629:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.086461334081832:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
before@19 batch0 x: -7.242290899157524: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
after@19 batch0 x: -7.242290899157524: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.48154873267049:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -5.923455112671945:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -5.9820278222323395:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -6.13285488501424:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -6.144317931088153:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -6.274021333607379:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member registry_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -6.585245555790607:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End']
copynode -6.823237233853433:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -6.9211102338158526:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.005651897343341:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -7.052252239140216:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -7.062128490360919:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -7.11167169600958:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -7.05821588501567:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -5.48154873267049:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference']
before@20 batch0 x: -8.012658304127399: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference']
after@20 batch0 x: -8.012658304127399: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.58981624111766:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -5.99402853945503:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -6.0501649240613915:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member']
copynode -6.208474858256523:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -6.220838388951961:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member']
copynode -6.389144463988487:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member registry_ter ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -6.664998760970775:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End', 'copy-member']
copynode -6.903473221755121:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member']
copynode -7.094899101706687:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member']
copynode -7.121802708657924:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member']
copynode -7.148136785777751:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member']
copynode -7.236749927105848:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member']
copynode -7.331343530269805:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End']
copynode -8.012658304127399:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
before@21 batch0 x: -8.085724665375892: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
after@21 batch0 x: -8.085724665375892: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.601403681153897:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.01333767833421:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.0705631105811335:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.2329524146043696:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.2443646272295155:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.403357766161207:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member registry_ter ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.689255778270308:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.9227381842792965:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.115034461545292:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.146336706879083:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.171550317259971:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.260356231185142:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.37951842189068:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.085724665375892:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
before@22 batch0 x: -9.108185722085182: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
after@22 batch0 x: -9.108185722085182: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.391197461227421:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.108185722085182:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
before@23 batch0 x: -9.21833868935937: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
after@23 batch0 x: -9.21833868935937: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -9.21833868935937:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member']
before@24 batch0 x: -9.23937515594298: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member']
after@24 batch0 x: -9.23937515594298: root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member']
copynode -9.23937515594298:  root modified ^ LocalVariableDeclaration type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name TemplateType_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name JSType_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member inferTemplateTypesFromParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member', 'root -> End']
method
7 
None Map inferArguments inferTemplateTypesFromParameters_ter
FlowScope Map createInitialEstimateLattice inferTemplateTypesFromParameters_ter
FlowScope Map createEntryLattice inferTemplateTypesFromParameters_ter
FlowScope Map flowThrough inferTemplateTypesFromParameters_ter
List Map branchedFlowThrough inferTemplateTypesFromParameters_ter
FlowScope Map traverse inferTemplateTypesFromParameters_ter
FlowScope Map traverseReturn inferTemplateTypesFromParameters_ter
FlowScope Map traverseCatch inferTemplateTypesFromParameters_ter
FlowScope Map traverseAssign inferTemplateTypesFromParameters_ter
None Map updateScopeForTypeChange inferTemplateTypesFromParameters_ter
None Map ensurePropertyDefined inferTemplateTypesFromParameters_ter
None Map ensurePropertyDeclared inferTemplateTypesFromParameters_ter
boolean Map ensurePropertyDeclaredHelper inferTemplateTypesFromParameters_ter
FlowScope Map traverseName inferTemplateTypesFromParameters_ter
FlowScope Map traverseArrayLiteral inferTemplateTypesFromParameters_ter
FlowScope Map traverseObjectLiteral inferTemplateTypesFromParameters_ter
FlowScope Map traverseAdd inferTemplateTypesFromParameters_ter
boolean Map isAddedAsNumber inferTemplateTypesFromParameters_ter
FlowScope Map traverseHook inferTemplateTypesFromParameters_ter
FlowScope Map traverseCall inferTemplateTypesFromParameters_ter
FlowScope Map tightenTypesAfterAssertions inferTemplateTypesFromParameters_ter
FlowScope Map narrowScope inferTemplateTypesFromParameters_ter
None Map backwardsInferenceFromCallSite inferTemplateTypesFromParameters_ter
None Map updateBind inferTemplateTypesFromParameters_ter
None Map updateTypeOfParameters inferTemplateTypesFromParameters_ter
Map Map inferTemplateTypesFromParameters inferTemplateTypesFromParameters_ter
None Map maybeResolveTemplatedType inferTemplateTypesFromParameters_ter
None Map maybeResolveTemplateTypeFromNodes inferTemplateTypesFromParameters_ter
None Map maybeResolveTemplateTypeFromNodes inferTemplateTypesFromParameters_ter
None Map resolvedTemplateType inferTemplateTypesFromParameters_ter
boolean Map inferTemplatedTypesForCall inferTemplateTypesFromParameters_ter
FlowScope Map traverseNew inferTemplateTypesFromParameters_ter
BooleanOutcomePair Map traverseAnd inferTemplateTypesFromParameters_ter
FlowScope Map traverseChildren inferTemplateTypesFromParameters_ter
FlowScope Map traverseGetElem inferTemplateTypesFromParameters_ter
FlowScope Map traverseGetProp inferTemplateTypesFromParameters_ter
None Map inferPropertyTypesToMatchConstraint inferTemplateTypesFromParameters_ter
FlowScope Map dereferencePointer inferTemplateTypesFromParameters_ter
JSType Map getPropertyType inferTemplateTypesFromParameters_ter
BooleanOutcomePair Map traverseOr inferTemplateTypesFromParameters_ter
BooleanOutcomePair Map traverseShortCircuitingBinOp inferTemplateTypesFromParameters_ter
BooleanOutcomePair Map traverseWithinShortCircuitingBinOp inferTemplateTypesFromParameters_ter
BooleanOutcomePair Map getBooleanOutcomePair inferTemplateTypesFromParameters_ter
BooleanLiteralSet Map getBooleanOutcomes inferTemplateTypesFromParameters_ter
BooleanOutcomePair Map newBooleanOutcomePair inferTemplateTypesFromParameters_ter
None Map redeclareSimpleVar inferTemplateTypesFromParameters_ter
boolean Map isUnflowable inferTemplateTypesFromParameters_ter
JSType Map getJSType inferTemplateTypesFromParameters_ter
JSType Map getNativeType inferTemplateTypesFromParameters_ter
6 n_ter
6 n_ter
6 fnType_ter
6 n_ter
6 fnType_ter
6 n_ter
6 n_ter
6 n_ter
6 fnType_ter
6 fnType_ter
6 fnType_ter
6 n_ter
6 fnType_ter
method
7 
None  inferArguments 
FlowScope  createInitialEstimateLattice 
FlowScope  createEntryLattice 
FlowScope  flowThrough 
List  branchedFlowThrough 
FlowScope  traverse 
FlowScope  traverseReturn 
FlowScope  traverseCatch 
FlowScope  traverseAssign 
None  updateScopeForTypeChange 
None  ensurePropertyDefined 
None  ensurePropertyDeclared 
boolean  ensurePropertyDeclaredHelper 
FlowScope  traverseName 
FlowScope  traverseArrayLiteral 
FlowScope  traverseObjectLiteral 
FlowScope  traverseAdd 
boolean  isAddedAsNumber 
FlowScope  traverseHook 
FlowScope  traverseCall 
FlowScope  tightenTypesAfterAssertions 
FlowScope  narrowScope 
None  backwardsInferenceFromCallSite 
None  updateBind 
None  updateTypeOfParameters 
Map  inferTemplateTypesFromParameters 
None  maybeResolveTemplatedType 
None  maybeResolveTemplateTypeFromNodes 
None  maybeResolveTemplateTypeFromNodes 
None  resolvedTemplateType 
boolean  inferTemplatedTypesForCall 
FlowScope  traverseNew 
BooleanOutcomePair  traverseAnd 
FlowScope  traverseChildren 
FlowScope  traverseGetElem 
FlowScope  traverseGetProp 
None  inferPropertyTypesToMatchConstraint 
FlowScope  dereferencePointer 
JSType  getPropertyType 
BooleanOutcomePair  traverseOr 
BooleanOutcomePair  traverseShortCircuitingBinOp 
BooleanOutcomePair  traverseWithinShortCircuitingBinOp 
BooleanOutcomePair  getBooleanOutcomePair 
BooleanLiteralSet  getBooleanOutcomes 
BooleanOutcomePair  newBooleanOutcomePair 
None  redeclareSimpleVar 
boolean  isUnflowable 
JSType  getJSType 
JSType  getNativeType 
6 fnType_ter
6 n_ter
method
7 
None  inferArguments 
FlowScope  createInitialEstimateLattice 
FlowScope  createEntryLattice 
FlowScope  flowThrough 
List  branchedFlowThrough 
FlowScope  traverse 
FlowScope  traverseReturn 
FlowScope  traverseCatch 
FlowScope  traverseAssign 
None  updateScopeForTypeChange 
None  ensurePropertyDefined 
None  ensurePropertyDeclared 
boolean  ensurePropertyDeclaredHelper 
FlowScope  traverseName 
FlowScope  traverseArrayLiteral 
FlowScope  traverseObjectLiteral 
FlowScope  traverseAdd 
boolean  isAddedAsNumber 
FlowScope  traverseHook 
FlowScope  traverseCall 
FlowScope  tightenTypesAfterAssertions 
FlowScope  narrowScope 
None  backwardsInferenceFromCallSite 
None  updateBind 
None  updateTypeOfParameters 
Map  inferTemplateTypesFromParameters 
None  maybeResolveTemplatedType 
None  maybeResolveTemplateTypeFromNodes 
None  maybeResolveTemplateTypeFromNodes 
None  resolvedTemplateType 
boolean  inferTemplatedTypesForCall 
FlowScope  traverseNew 
BooleanOutcomePair  traverseAnd 
FlowScope  traverseChildren 
FlowScope  traverseGetElem 
FlowScope  traverseGetProp 
None  inferPropertyTypesToMatchConstraint 
FlowScope  dereferencePointer 
JSType  getPropertyType 
BooleanOutcomePair  traverseOr 
BooleanOutcomePair  traverseShortCircuitingBinOp 
BooleanOutcomePair  traverseWithinShortCircuitingBinOp 
BooleanOutcomePair  getBooleanOutcomePair 
BooleanLiteralSet  getBooleanOutcomes 
BooleanOutcomePair  newBooleanOutcomePair 
None  redeclareSimpleVar 
boolean  isUnflowable 
JSType  getJSType 
JSType  getNativeType 
6 fnType_ter
method
7 
6 n_ter
6 n_ter
method
fnType_ter {'n_ter': 'Node', 'fnType_ter': 'FunctionType', 'keys_ter': 'ImmutableList', 'inferred_ter': 'Map', 'replacer_ter': 'TemplateTypeReplacer', 'callTarget_ter': 'Node', 'replacementFnType_ter': 'FunctionType'}
7 FunctionType
FunctionType  forInterface 
boolean  isInstanceType 
boolean  isConstructor 
boolean  isInterface 
boolean  isOrdinaryFunction 
boolean  makesStructs 
boolean  makesDicts 
None  setStruct 
None  setDict 
FunctionType  toMaybeFunctionType 
boolean  canBeCalled 
boolean  hasImplementedInterfaces 
Iterable  getParameters 
Node  getParametersNode 
int  getMinArguments 
int  getMaxArguments 
JSType  getReturnType 
boolean  isReturnTypeInferred 
ArrowType  getInternalArrowType 
Property  getSlot 
Set  getOwnPropertyNames 
ObjectType  getPrototype 
None  setPrototypeBasedOn 
None  setPrototypeBasedOn 
None  extendTemplateTypeMapBasedOn 
boolean  setPrototype 
boolean  setPrototypeNoCheck 
Iterable  getAllImplementedInterfaces 
None  addRelatedInterfaces 
Iterable  getImplementedInterfaces 
Iterable  getOwnImplementedInterfaces 
None  setImplementedInterfaces 
Iterable  getAllExtendedInterfaces 
None  addRelatedExtendedInterfaces 
Iterable  getExtendedInterfaces 
int  getExtendedInterfacesCount 
None  setExtendedInterfaces 
JSType  getPropertyType 
FunctionType  getBindReturnType 
FunctionType  getCallOrBindSignature 
boolean  defineProperty 
FunctionType  supAndInfHelper 
FunctionType  tryMergeFunctionPiecewise 
FunctionType  getSuperClassConstructor 
ObjectType  getTopDefiningInterface 
ObjectType  getTopMostDefiningType 
boolean  checkFunctionEquivalenceHelper 
int  hashCode 
boolean  hasEqualCallType 
String  toStringHelper 
None  appendArgString 
None  appendVarArgsString 
None  appendOptionalArgString 
boolean  isSubtype 
T  visit 
T  visit 
ObjectType  getInstanceType 
None  setInstanceType 
boolean  hasInstanceType 
JSType  getTypeOfThis 
Node  getSource 
None  setSource 
None  addSubType 
None  clearCachedValues 
List  getSubTypes 
boolean  hasCachedValues 
JSType  resolveInternal 
String  toDebugHashCodeString 
String  getDebugHashCodeStringOf 
FunctionType  cloneWithoutArrowType 
boolean  hasAnyTemplateTypesInternal 
method
7 
method
fnType_ter {'n_ter': 'Node', 'fnType_ter': 'FunctionType', 'keys_ter': 'ImmutableList', 'inferred_ter': 'Map', 'replacer_ter': 'TemplateTypeReplacer', 'callTarget_ter': 'Node', 'replacementFnType_ter': 'FunctionType'}
7 FunctionType
6 fnType_ter
6 fnType_ter
method
7 
method
n_ter {'n_ter': 'Node', 'fnType_ter': 'FunctionType', 'keys_ter': 'ImmutableList', 'inferred_ter': 'Map', 'replacer_ter': 'TemplateTypeReplacer', 'callTarget_ter': 'Node', 'replacementFnType_ter': 'FunctionType'}
7 Node
String  propToString 
Node  newNumber 
Node  newNumber 
Node  newString 
Node  newString 
Node  newString 
Node  newString 
int  getType 
None  setType 
boolean  hasChildren 
Node  getFirstChild 
Node  getLastChild 
Node  getNext 
Node  getChildBefore 
Node  getChildAtIndex 
int  getIndexOfChild 
Node  getLastSibling 
None  addChildToFront 
None  addChildToBack 
None  addChildrenToFront 
None  addChildrenToBack 
None  addChildBefore 
None  addChildAfter 
None  addChildrenAfter 
None  removeChild 
None  replaceChild 
None  replaceChildAfter 
PropListItem  lookupProperty 
Node  clonePropsFrom 
None  removeProp 
PropListItem  removeProp 
Object  getProp 
boolean  getBooleanProp 
int  getIntProp 
int  getExistingIntProp 
None  putProp 
None  putBooleanProp 
None  putIntProp 
PropListItem  createProp 
PropListItem  createProp 
int  getSortedPropTypes 
double  getDouble 
None  setDouble 
String  getString 
None  setString 
String  toString 
String  toString 
None  toString 
String  toStringTree 
String  toStringTreeImpl 
None  appendStringTree 
None  toStringTreeHelper 
None  setStaticSourceFile 
None  setSourceFileForTesting 
String  getSourceFileName 
StaticSourceFile  getStaticSourceFile 
None  setInputId 
InputId  getInputId 
boolean  isFromExterns 
int  getLength 
None  setLength 
int  getLineno 
int  getCharno 
int  getSourceOffset 
int  getSourcePosition 
None  setLineno 
None  setCharno 
None  setSourceEncodedPosition 
None  setSourceEncodedPositionForTree 
int  mergeLineCharNo 
int  extractLineno 
int  extractCharno 
Iterable  children 
Iterable  siblings 
PropListItem  getPropListHeadForTesting 
Node  getParent 
Node  getAncestor 
AncestorIterable  getAncestors 
boolean  hasOneChild 
boolean  hasMoreThanOneChild 
int  getChildCount 
boolean  hasChild 
String  checkTreeEquals 
NodeMismatch  checkTreeEqualsImpl 
NodeMismatch  checkTreeTypeAwareEqualsImpl 
boolean  isEquivalentTo 
boolean  isEquivalentToShallow 
boolean  isEquivalentToTyped 
boolean  isEquivalentTo 
String  getQualifiedName 
boolean  isQualifiedName 
boolean  isUnscopedQualifiedName 
Node  detachFromParent 
Node  removeFirstChild 
Node  removeChildren 
None  detachChildren 
Node  removeChildAfter 
Node  cloneNode 
Node  cloneTree 
Node  copyInformationFrom 
Node  copyInformationFromForTree 
Node  useSourceInfoFrom 
Node  srcref 
Node  useSourceInfoFromForTree 
Node  srcrefTree 
Node  useSourceInfoIfMissingFrom 
Node  useSourceInfoIfMissingFromForTree 
JSType  getJSType 
None  setJSType 
FileLevelJsDocBuilder  getJsDocBuilderForNode 
JSDocInfo  getJSDocInfo 
Node  setJSDocInfo 
None  setChangeTime 
int  getChangeTime 
None  setVarArgs 
boolean  isVarArgs 
None  setOptionalArg 
boolean  isOptionalArg 
None  setIsSyntheticBlock 
boolean  isSyntheticBlock 
None  setDirectives 
Set  getDirectives 
None  addSuppression 
None  setWasEmptyNode 
boolean  wasEmptyNode 
None  setSideEffectFlags 
None  setSideEffectFlags 
int  getSideEffectFlags 
boolean  isOnlyModifiesThisCall 
boolean  isOnlyModifiesArgumentsCall 
boolean  isNoSideEffectsCall 
boolean  isLocalResultCall 
boolean  mayMutateArguments 
boolean  mayMutateGlobalStateOrThrow 
boolean  areBitFlagsSet 
boolean  isQuotedString 
None  setQuotedString 
boolean  isAdd 
boolean  isAnd 
boolean  isArrayLit 
boolean  isAssign 
boolean  isAssignAdd 
boolean  isBlock 
boolean  isBreak 
boolean  isCall 
boolean  isCase 
boolean  isCast 
boolean  isCatch 
boolean  isComma 
boolean  isContinue 
boolean  isDebugger 
boolean  isDec 
boolean  isDefaultCase 
boolean  isDelProp 
boolean  isDo 
boolean  isEmpty 
boolean  isExprResult 
boolean  isFalse 
boolean  isFor 
boolean  isFunction 
boolean  isGetterDef 
boolean  isGetElem 
boolean  isGetProp 
boolean  isHook 
boolean  isIf 
boolean  isIn 
boolean  isInc 
boolean  isInstanceOf 
boolean  isLabel 
boolean  isLabelName 
boolean  isName 
boolean  isNE 
boolean  isNew 
boolean  isNot 
boolean  isNull 
boolean  isNumber 
boolean  isObjectLit 
boolean  isOr 
boolean  isParamList 
boolean  isRegExp 
boolean  isReturn 
boolean  isScript 
boolean  isSetterDef 
boolean  isString 
boolean  isStringKey 
boolean  isSwitch 
boolean  isThis 
boolean  isThrow 
boolean  isTrue 
boolean  isTry 
boolean  isTypeOf 
boolean  isVar 
boolean  isVoid 
boolean  isWhile 
boolean  isWith 
method
7 
stderr: Check out program version: Closure-112b.................................... OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:18<00:00, 18.62s/it]100%|██████████| 1/1 [00:18<00:00, 18.62s/it]
