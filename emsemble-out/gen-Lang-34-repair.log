stdout: ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ ^ ^ 
return ((REGISTRY.get() != null))?REGISTRY.get():Collections();
ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ ^ ^ 
return ((REGISTRY.get() == null))?REGISTRY.get():Collections();
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ if_false MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ ^ ^ 
return ((REGISTRY.get() != null))?Collections():Collections();
ReturnStatement expression Cast type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ ^ ^ expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
arg Object, Object
arg 
arg 
arg Object, Object
return (Map<Object, Object>)((REGISTRY.get() != null))?REGISTRY.get():Collections();
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member getRegistry_ter ^ ^ ^ ^ ^ ^ ^ 
return ((REGISTRY.get() != null))?REGISTRY.get():getRegistry();
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((REGISTRY.get() != null))?REGISTRY.get():(REGISTRY.get() != null);
ReturnStatement expression MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ ^ 
return REGISTRY.get();
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
return ((REGISTRY.get() != null))?REGISTRY.get():REGISTRY.get();
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Literal value null_ter ^ ^ ^ ^ if_false MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ ^ ^ 
return ((REGISTRY.get() != null))?null:Collections();
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((REGISTRY.get() != null))?REGISTRY.get():((REGISTRY.get() != null))?REGISTRY.get():Collections();
ReturnStatement expression MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ 
return Collections();
ReturnStatement expression TernaryExpression condition MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ ^ ^ 
return (REGISTRY.get())?REGISTRY.get():Collections();
ReturnStatement expression TernaryExpression condition MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ ^ ^ 
return (Collections())?REGISTRY.get():Collections();
ReturnStatement expression Cast type ReferenceType name Object_ter ^ ^ ^ ^ expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return (Object)((REGISTRY.get() != null))?REGISTRY.get():Collections();
ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ 
return null;
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation member get_ter ^ ^ ^ ^ if_false MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ ^ ^ 
return ((REGISTRY.get() != null))?get():Collections();
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ if_false MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
return ((REGISTRY.get() != null))?Collections():REGISTRY.get();
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ if_false MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((REGISTRY.get() != null))?REGISTRY.get():((REGISTRY.get() != null))?Collections():Collections();
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
return ((REGISTRY.get() != null))?Collections():null;
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ ^ ^ expression MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ ^ if_false MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
arg Object, Object
arg 
arg 
arg Object, Object
return ((REGISTRY.get() != null))?(Map<Object, Object>)Collections():Collections();
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member getRegistry_ter ^ ^ ^ ^ if_false MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ ^ ^ 
return ((REGISTRY.get() != null))?REGISTRY.getRegistry():Collections();
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true Cast type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ ^ ^ expression MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ ^ ^ if_false MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
arg Object, Object
arg 
arg 
arg Object, Object
return ((REGISTRY.get() != null))?(Map<Object, Object>)REGISTRY.get():Collections();
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((REGISTRY.get() != null))?REGISTRY.get():((REGISTRY.get() != null))?REGISTRY.get():REGISTRY.get();
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ 
return ((REGISTRY.get() != null))?REGISTRY.get():getName();
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false This selectors MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((REGISTRY.get() != null))?REGISTRY.get():this.Collections();
ReturnStatement expression TernaryExpression condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ ^ ^ 
return ((REGISTRY.get() && null))?REGISTRY.get():Collections();
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false Cast type ReferenceType name Map_ter ^ ^ arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ ^ ^ expression MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member Collections_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
arg Object, Object
arg 
arg 
arg Object, Object
return ((REGISTRY.get() != null))?REGISTRY.get():(Map<Object, Object>)Collections();
ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true MethodInvocation qualifier REGISTRY_ter ^ ^ member get_ter ^ ^ ^ ^ if_false MethodInvocation type_arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
return ((REGISTRY.get() != null))?REGISTRY.get():get();
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ ^ member isRegistered_ter ^ ^ ^ ^ ^ 
return m.isRegistered(value);
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member m_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(m);
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(value, false);
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ 
return m.add(value);
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(value, true);
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ MemberReference member value_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(value, value);
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ MemberReference member m_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(value, m);
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(value, );

ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ ^ member debug_ter ^ ^ ^ ^ ^ 
return m.debug(value);
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(false);
IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member m_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ 
if((m == null)){
return false;}
ReturnStatement expression MethodInvocation arguments MemberReference member value_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return containsKey(value);
IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member m_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((m != null)){

ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(value);
ReturnStatement expression MemberReference member m_ter ^ ^ ^ ^ ^ 
return m;
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(value, null);
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ ^ member e_ter ^ ^ ^ ^ ^ 
return m.e(value);
ReturnStatement expression MethodInvocation arguments MemberReference member value_ter ^ ^ ^ ^ member register_ter ^ ^ ^ ^ ^ 
return register(value);
ReturnStatement expression MethodInvocation arguments MemberReference member value_ter ^ ^ ^ ^ member unregister_ter ^ ^ ^ ^ ^ 
return unregister(value);
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(true);
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member value_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ ^ ^ 
return ((value != null) && m.containsKey(value));
IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member m_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((m == null)){

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member m_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
ReturnStatement expression Literal value true_ter ^ ^ ^ ^ ^ 
if((m == null)){
return true;}
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member value_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ ^ ^ 
return ((value == null) && m.containsKey(value));
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ selectors MethodInvocation arguments MemberReference member value_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ arguments MemberReference member value_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(value).containsKey(value);
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ operandr MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ ^ ^ 
return (m.containsKey(value) && m.containsKey(value));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member m_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ ^ ^ 
return ((m == null) && m.containsKey(value));
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments Literal value null_ter ^ ^ ^ MemberReference member value_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(null, value);
StatementExpression expression MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
m.containsKey(value);

ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ 
return m.get(value);
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ ^ member put_ter ^ ^ ^ ^ ^ 
return m.put(value);
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ operandr MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ ^ ^ 
return (m.containsKey(value) || m.containsKey(value));
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ This_ter ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(value, this);
IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member value_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((value != null)){

ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MethodInvocation arguments MemberReference member value_ter ^ ^ ^ ^ member register_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(register(value));
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MethodInvocation arguments MemberReference member value_ter ^ ^ ^ ^ member unregister_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(unregister(value));
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(value, "null");
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments Literal value false_ter ^ ^ ^ MemberReference member value_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(false, value);
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member value_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ ^ ^ 
return ((value == null) || m.containsKey(value));
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments MemberReference member value_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ 
return m.max(value);
IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member value_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ 
if((value == null)){
return false;}
ReturnStatement expression BinaryOperation operator !=_ter ^ ^ operandl MemberReference member value_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
return (value != null);
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments This_ter ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(this);
ReturnStatement expression MethodInvocation qualifier m_ter ^ ^ arguments This_ter ^ MemberReference member value_ter ^ ^ ^ ^ member containsKey_ter ^ ^ ^ ^ ^ 
return m.containsKey(this, value);
stderr: 