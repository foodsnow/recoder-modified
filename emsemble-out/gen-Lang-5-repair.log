stdout: LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final long ch0 = str.charAt(0);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final int ch0 = str.charAt(0);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch0 = str.charAt(0);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch0 = str.charAt(1);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member toLocale_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch0 = str.toLocale(0);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final boolean ch0 = str.charAt(0);

StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ 
str.charAt(0);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch0 = str.charAt(2);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch0 = str.getName(0);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch0 = str.get(0);


LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch0 = str.toString(0);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member e_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch0 = str.charAt(e);

StatementExpression expression Assignment expressionl MemberReference member ch0_ter ^ ^ ^ ^ value MethodInvocation qualifier str_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
ch0 = str.charAt(0);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch0 = str.charAt(str);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member ch0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch0 = str.charAt(ch0);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name Object_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final Object ch0 = str.charAt(0);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments MethodInvocation qualifier str_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch0 = str.charAt(str.charAt(0));

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch0 = str.charAt(0, 0);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member debug_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch0 = str.charAt(debug);

ReturnStatement_ter ^ 
if (true) { return;
 }

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final String ch0 = str.charAt(0);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name par0 ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final  ch0 = str.charAt(0);


LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch0 = str.charAt(str, 0);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch0 = str.charAt(1, 0);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch1_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch1 = str.charAt(1);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch0 = str.charAt(0, 1);


BreakStatement_ter ^ 
break;

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member str_ter ^ ^ ^ ^ operandr MemberReference member str_ter ^ ^ ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch0 = str.charAt((str - str));

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ch0_ter ^ ^ initializer MethodInvocation qualifier str_ter ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference member str_ter ^ ^ ^ ^ operandr MemberReference member str_ter ^ ^ ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ ^ ^ 
final char ch0 = str.charAt((str + str));

stderr: 