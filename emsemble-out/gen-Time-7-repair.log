stdout: LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member millisOfSecond_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.millisOfSecond().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member millisOfDay_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.millisOfDay().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member secondOfMinute_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.secondOfMinute().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member secondOfDay_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.secondOfDay().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member minuteOfHour_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.minuteOfHour().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member minuteOfDay_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.minuteOfDay().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member hourOfDay_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.hourOfDay().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member clockhourOfDay_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.clockhourOfDay().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member hourOfHalfday_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.hourOfHalfday().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member clockhourOfHalfday_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.clockhourOfHalfday().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member halfdayOfDay_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.halfdayOfDay().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member dayOfWeek_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.dayOfWeek().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member dayOfMonth_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.dayOfMonth().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member dayOfYear_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.dayOfYear().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member weekOfWeekyear_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.weekOfWeekyear().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member weekyear_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.weekyear().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member weekyearOfCentury_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.weekyearOfCentury().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member monthOfYear_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.monthOfYear().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.year().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member yearOfEra_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.yearOfEra().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member yearOfCentury_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.yearOfCentury().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member centuryOfEra_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.centuryOfEra().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member era_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.era().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member chrono_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.year().get(chrono);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.year();

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantMillis_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.year().get(instantMillis);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member text_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.year().get(text);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier instantLocal_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = instantLocal.year().get(instantLocal);

ReturnStatement expression MemberReference member newPos_ter ^ ^ ^ ^ ^ 
if (true) { return newPos; }

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member parseInto_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.year().parseInto(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier text_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = text.year().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier instantMillis_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = instantMillis.year().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member parser_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.year().get(parser);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member iLocale_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.year().get(iLocale);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer Cast type BasicType name int_ter ^ ^ ^ ^ expression MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = (int)chrono.year().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member iPivotYear_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.year().get(iPivotYear);

ReturnStatement_ter ^ 
if (true) { return;
 }

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier instant_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = instant.year().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instant_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.year().get(instant);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member position_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.year().get(position);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier parser_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = parser.year().get(instantLocal);

StatementExpression expression MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ 
chrono.year().get(instantLocal);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member instantLocal_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((instantLocal != null)){

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.get();

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
final int defaultYear = chrono.year().get(instantLocal);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member parseInto_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.parseInto().get(instantLocal);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member chrono_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((chrono != null)){

StatementExpression expression Assignment expressionl MemberReference member chrono_ter ^ ^ ^ ^ value MethodInvocation arguments MemberReference member chrono_ter ^ ^ ^ ^ member selectChronology_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
chrono = selectChronology(chrono);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MemberReference member instantLocal_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = instantLocal;

BreakStatement_ter ^ 
break;

StatementExpression expression Assignment expressionl MemberReference member chrono_ter ^ ^ ^ ^ value MethodInvocation qualifier chrono_ter ^ ^ arguments MemberReference member parsedZone_ter ^ ^ ^ ^ member withZone_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
chrono = chrono.withZone(parsedZone);

StatementExpression expression Assignment expressionl MemberReference member chrono_ter ^ ^ ^ ^ value MethodInvocation qualifier chrono_ter ^ ^ arguments MethodInvocation qualifier bucket_ter ^ ^ member getZone_ter ^ ^ ^ ^ member withZone_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
chrono = chrono.withZone(bucket.getZone());

StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member chrono_ter ^ ^ ^ ^ ^ 
chrono++;

ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ 
if (true) { return 0; }

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier chrono_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = chrono.year().add(instantLocal);

StatementExpression expression MethodInvocation qualifier instant_ter ^ ^ arguments MemberReference member iZone_ter ^ ^ ^ ^ member setZone_ter ^ ^ ^ ^ ^ 
instant.setZone(iZone);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = year();

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name defaultYear_ter ^ ^ initializer MethodInvocation qualifier position_ter ^ ^ selectors MethodInvocation arguments MemberReference member instantLocal_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member year_ter ^ ^ ^ ^ ^ ^ ^ 
int defaultYear = position.year().get(instantLocal);

stderr: 