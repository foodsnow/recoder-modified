stdout: else_statement -> BlockStatement
using GPU
p
path org.jfree.data.category.DefaultIntervalCategoryDataset
setCategoryKeys
Position(line=334, column=12)
FOUND IT!
path org.jfree.data.category.DefaultIntervalCategoryDataset
DefaultIntervalCategoryDataset
Position(line=142, column=12)
FOUND IT!
[{'bugid': 'Chart-16', 'treeroot': <Searchnode.Node object at 0x7f52657d36d0>, 'troot': <Searchnode.Node object at 0x7f52657d36d0>, 'oldcode': '        if (categoryKeys.length != this.startData[0].length) {', 'filepath': 'buggy/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java', 'subroot': <Searchnode.Node object at 0x7f52657ce210>, 'vardic': {'setCategoryKeys_ter': 'meth0', 'categoryKeys_ter': 'par0', 'i_ter': 'loc0'}, 'typedic': {'categoryKeys_ter': 'Comparable', 'i_ter': 'int'}, 'idss': 'Chart-16', 'classname': 'org.jfree.data.category.DefaultIntervalCategoryDataset', 'precode': '/* ===========================================================\n * JFreeChart : a free chart library for the Java(tm) platform\n * ===========================================================\n *\n * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors.\n *\n * Project Info:  http://www.jfree.org/jfreechart/index.html\n *\n * This library is free software; you can redistribute it and/or modify it \n * under the terms of the GNU Lesser General Public License as published by \n * the Free Software Foundation; either version 2.1 of the License, or \n * (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful, but \n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public \n * License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, \n * USA.  \n *\n * [Java is a trademark or registered trademark of Sun Microsystems, Inc. \n * in the United States and other countries.]\n *\n * -----------------------------------\n * DefaultIntervalCategoryDataset.java\n * -----------------------------------\n * (C) Copyright 2002-2008, by Jeremy Bowman and Contributors.\n *\n * Original Author:  Jeremy Bowman;\n * Contributor(s):   David Gilbert (for Object Refinery Limited);\n *\n * Changes\n * -------\n * 29-Apr-2002 : Version 1, contributed by Jeremy Bowman (DG);\n * 24-Oct-2002 : Amendments for changes made to the dataset interface (DG);\n * ------------- JFREECHART 1.0.x ---------------------------------------------\n * 08-Mar-2007 : Added equals() and clone() overrides (DG);\n * 20-Jun-2007 : Removed deprecated code (DG);\n * 25-Feb-2008 : Fix for the special case where the dataset is empty, see bug \n *               1897580 (DG)\n *\n */\n\npackage org.jfree.data.category;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.ResourceBundle;\n\nimport org.jfree.data.DataUtilities;\nimport org.jfree.data.UnknownKeyException;\nimport org.jfree.data.general.AbstractSeriesDataset;\n\n/**\n * A convenience class that provides a default implementation of the\n * {@link IntervalCategoryDataset} interface.\n * <p>\n * The standard constructor accepts data in a two dimensional array where the\n * first dimension is the series, and the second dimension is the category.\n */\npublic class DefaultIntervalCategoryDataset extends AbstractSeriesDataset\n        implements IntervalCategoryDataset {\n\n    /** The series keys. */\n    private Comparable[] seriesKeys;\n\n    /** The category keys. */\n    private Comparable[] categoryKeys;\n\n    /** Storage for the start value data. */\n    private Number[][] startData;\n\n    /** Storage for the end value data. */\n    private Number[][] endData;\n\n    /**\n     * Creates a new dataset using the specified data values and automatically\n     * generated series and category keys.\n     *\n     * @param starts  the starting values for the intervals (<code>null</code>\n     *                not permitted).\n     * @param ends  the ending values for the intervals (<code>null</code> not\n     *                permitted).\n     */\n    public DefaultIntervalCategoryDataset(double[][] starts, double[][] ends) {\n        this(DataUtilities.createNumberArray2D(starts),\n                DataUtilities.createNumberArray2D(ends));\n    }\n\n    /**\n     * Constructs a dataset and populates it with data from the array.\n     * <p>\n     * The arrays are indexed as data[series][category].  Series and category\n     * names are automatically generated - you can change them using the\n     * {@link #setSeriesKeys(Comparable[])} and \n     * {@link #setCategoryKeys(Comparable[])} methods.\n     *\n     * @param starts  the start values data.\n     * @param ends  the end values data.\n     */\n    public DefaultIntervalCategoryDataset(Number[][] starts, Number[][] ends) {\n        this(null, null, starts, ends);\n    }\n\n    /**\n     * Constructs a DefaultIntervalCategoryDataset, populates it with data\n     * from the arrays, and uses the supplied names for the series.\n     * <p>\n     * Category names are generated automatically ("Category 1", "Category 2",\n     * etc).\n     *\n     * @param seriesNames  the series names (if <code>null</code>, series names\n     *         will be generated automatically).\n     * @param starts  the start values data, indexed as data[series][category].\n     * @param ends  the end values data, indexed as data[series][category].\n     */\n    public DefaultIntervalCategoryDataset(String[] seriesNames,\n                                          Number[][] starts,\n                                          Number[][] ends) {\n\n        this(seriesNames, null, starts, ends);\n\n    }\n\n    /**\n     * Constructs a DefaultIntervalCategoryDataset, populates it with data\n     * from the arrays, and uses the supplied names for the series and the\n     * supplied objects for the categories.\n     *\n     * @param seriesKeys  the series keys (if <code>null</code>, series keys\n     *         will be generated automatically).\n     * @param categoryKeys  the category keys (if <code>null</code>, category \n     *         keys will be generated automatically).\n     * @param starts  the start values data, indexed as data[series][category].\n     * @param ends  the end values data, indexed as data[series][category].\n     */\n    public DefaultIntervalCategoryDataset(Comparable[] seriesKeys,\n                                          Comparable[] categoryKeys,\n                                          Number[][] starts,\n                                          Number[][] ends) {\n\n        this.startData = starts;\n        this.endData = ends;\n\n        if (starts != null && ends != null) {\n\n            String baseName = "org.jfree.data.resources.DataPackageResources";\n            ResourceBundle resources = ResourceBundle.getBundle(baseName);\n\n            int seriesCount = starts.length;\n            if (seriesCount != ends.length) {\n                String errMsg = "DefaultIntervalCategoryDataset: the number "\n                    + "of series in the start value dataset does "\n                    + "not match the number of series in the end "\n                    + "value dataset.";\n                throw new IllegalArgumentException(errMsg);\n            }\n            if (seriesCount > 0) {\n\n                // set up the series names...\n                if (seriesKeys != null) {\n\n                    if (seriesKeys.length != seriesCount) {\n                        throw new IllegalArgumentException(\n                                "The number of series keys does not "\n                                + "match the number of series in the data.");\n                    }\n\n                    this.seriesKeys = seriesKeys;\n                }\n                else {\n                    String prefix = resources.getString(\n                            "series.default-prefix") + " ";\n                    this.seriesKeys = generateKeys(seriesCount, prefix);\n                }\n\n                // set up the category names...\n                int categoryCount = starts[0].length;\n                if (categoryCount != ends[0].length) {\n                    String errMsg = "DefaultIntervalCategoryDataset: the "\n                                + "number of categories in the start value "\n                                + "dataset does not match the number of "\n                                + "categories in the end value dataset.";\n                    throw new IllegalArgumentException(errMsg);\n                }\n                if (categoryKeys != null) {\n                    if (categoryKeys.length != categoryCount) {\n                        throw new IllegalArgumentException(\n                                "The number of category keys does not match "\n                                + "the number of categories in the data.");\n                    }\n                    this.categoryKeys = categoryKeys;\n                }\n                else {\n                    String prefix = resources.getString(\n                            "categories.default-prefix") + " ";\n                    this.categoryKeys = generateKeys(categoryCount, prefix);\n                }\n\n            }\n            else {\n                this.seriesKeys = null;\n                this.categoryKeys = null;\n            }\n        }\n\n    }\n\n    /**\n     * Returns the number of series in the dataset (possibly zero).\n     *\n     * @return The number of series in the dataset.\n     * \n     * @see #getRowCount()\n     * @see #getCategoryCount()\n     */\n    public int getSeriesCount() {\n        int result = 0;\n        if (this.startData != null) {\n            result = this.startData.length;\n        }\n        return result;\n    }\n\n    /**\n     * Returns a series index.\n     *\n     * @param seriesKey  the series key.\n     *\n     * @return The series index.\n     * \n     * @see #getRowIndex(Comparable)\n     * @see #getSeriesKey(int)\n     */\n    public int getSeriesIndex(Comparable seriesKey) {\n        int result = -1;\n        for (int i = 0; i < this.seriesKeys.length; i++) {\n            if (seriesKey.equals(this.seriesKeys[i])) {\n                result = i;\n                break;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Returns the name of the specified series.\n     *\n     * @param series  the index of the required series (zero-based).\n     *\n     * @return The name of the specified series.\n     * \n     * @see #getSeriesIndex(Comparable)\n     */\n    public Comparable getSeriesKey(int series) {\n        if ((series >= getSeriesCount()) || (series < 0)) {\n            throw new IllegalArgumentException("No such series : " + series);\n        }\n        return this.seriesKeys[series];\n    }\n\n    /**\n     * Sets the names of the series in the dataset.\n     *\n     * @param seriesKeys  the new keys (<code>null</code> not permitted, the \n     *         length of the array must match the number of series in the \n     *         dataset).\n     *         \n     * @see #setCategoryKeys(Comparable[])\n     */\n    public void setSeriesKeys(Comparable[] seriesKeys) {\n        if (seriesKeys == null) {\n            throw new IllegalArgumentException("Null \'seriesKeys\' argument.");\n        }\n        if (seriesKeys.length != getSeriesCount()) {\n            throw new IllegalArgumentException(\n                    "The number of series keys does not match the data.");\n        }\n        this.seriesKeys = seriesKeys;\n        fireDatasetChanged();\n    }\n\n    /**\n     * Returns the number of categories in the dataset.\n     *\n     * @return The number of categories in the dataset.\n     * \n     * @see #getColumnCount()\n     */\n    public int getCategoryCount() {\n        int result = 0;\n        if (this.startData != null) {\n            if (getSeriesCount() > 0) {\n                result = this.startData[0].length;\n            }\n        }\n        return result;\n    }\n    \n    /**\n     * Returns a list of the categories in the dataset.  This method supports \n     * the {@link CategoryDataset} interface.\n     *\n     * @return A list of the categories in the dataset.\n     * \n     * @see #getRowKeys()\n     */\n    public List getColumnKeys() {\n        // the CategoryDataset interface expects a list of categories, but\n        // we\'ve stored them in an array...\n        if (this.categoryKeys == null) {\n            return new ArrayList();\n        }\n        else {\n            return Collections.unmodifiableList(Arrays.asList(\n                    this.categoryKeys));\n        }\n    }\n\n    /**\n     * Sets the categories for the dataset.\n     *\n     * @param categoryKeys  an array of objects representing the categories in \n     *                      the dataset.\n     *                      \n     * @see #getRowKeys()\n     * @see #setSeriesKeys(Comparable[])\n     */\n    public void setCategoryKeys(Comparable[] categoryKeys) {\n        if (categoryKeys == null) {\n            throw new IllegalArgumentException("Null \'categoryKeys\' argument.");\n        }', 'aftercode': '            throw new IllegalArgumentException(\n                    "The number of categories does not match the data.");\n        }\n        for (int i = 0; i < categoryKeys.length; i++) {\n            if (categoryKeys[i] == null) {\n                throw new IllegalArgumentException(\n                    "DefaultIntervalCategoryDataset.setCategoryKeys(): "\n                    + "null category not permitted.");\n            }\n        }\n        this.categoryKeys = categoryKeys;\n        fireDatasetChanged();\n    }\n\n    /**\n     * Returns the data value for one category in a series.\n     * <P>\n     * This method is part of the CategoryDataset interface.  Not particularly\n     * meaningful for this class...returns the end value.\n     * \n     * @param series    The required series (zero based index).\n     * @param category  The required category.\n     * \n     * @return The data value for one category in a series (null possible).\n     * \n     * @see #getEndValue(Comparable, Comparable)\n     */\n    public Number getValue(Comparable series, Comparable category) {\n        int seriesIndex = getSeriesIndex(series);\n        if (seriesIndex < 0) {\n            throw new UnknownKeyException("Unknown \'series\' key.");\n        }\n        int itemIndex = getColumnIndex(category);\n        if (itemIndex < 0) {\n            throw new UnknownKeyException("Unknown \'category\' key.");\n        }\n        return getValue(seriesIndex, itemIndex);\n    }\n\n    /**\n     * Returns the data value for one category in a series.\n     * <P>\n     * This method is part of the CategoryDataset interface.  Not particularly\n     * meaningful for this class...returns the end value.\n     *\n     * @param series  the required series (zero based index).\n     * @param category  the required category.\n     *\n     * @return The data value for one category in a series (null possible).\n     * \n     * @see #getEndValue(int, int)\n     */\n    public Number getValue(int series, int category) {\n        return getEndValue(series, category);\n    }\n\n    /**\n     * Returns the start data value for one category in a series.\n     *\n     * @param series  the required series.\n     * @param category  the required category.\n     *\n     * @return The start data value for one category in a series \n     *         (possibly <code>null</code>).\n     *         \n     * @see #getStartValue(int, int)\n     */\n    public Number getStartValue(Comparable series, Comparable category) {\n        int seriesIndex = getSeriesIndex(series);\n        if (seriesIndex < 0) {\n            throw new UnknownKeyException("Unknown \'series\' key.");\n        }\n        int itemIndex = getColumnIndex(category);\n        if (itemIndex < 0) {\n            throw new UnknownKeyException("Unknown \'category\' key.");\n        }\n        return getStartValue(seriesIndex, itemIndex);\n    }\n\n    /**\n     * Returns the start data value for one category in a series.\n     *\n     * @param series  the required series (zero based index).\n     * @param category  the required category.\n     *\n     * @return The start data value for one category in a series \n     *         (possibly <code>null</code>).\n     *         \n     * @see #getStartValue(Comparable, Comparable)\n     */\n    public Number getStartValue(int series, int category) {\n\n        // check arguments...\n        if ((series < 0) || (series >= getSeriesCount())) {\n            throw new IllegalArgumentException(\n                "DefaultIntervalCategoryDataset.getValue(): "\n                + "series index out of range.");\n        }\n\n        if ((category < 0) || (category >= getCategoryCount())) {\n            throw new IllegalArgumentException(\n                "DefaultIntervalCategoryDataset.getValue(): "\n                + "category index out of range.");\n        }\n\n        // fetch the value...\n        return this.startData[series][category];\n\n    }\n\n    /**\n     * Returns the end data value for one category in a series.\n     *\n     * @param series  the required series.\n     * @param category  the required category.\n     *\n     * @return The end data value for one category in a series (null possible).\n     * \n     * @see #getEndValue(int, int)\n     */\n    public Number getEndValue(Comparable series, Comparable category) {\n        int seriesIndex = getSeriesIndex(series);\n        if (seriesIndex < 0) {\n            throw new UnknownKeyException("Unknown \'series\' key.");\n        }\n        int itemIndex = getColumnIndex(category);\n        if (itemIndex < 0) {\n            throw new UnknownKeyException("Unknown \'category\' key.");\n        }\n        return getEndValue(seriesIndex, itemIndex);\n    }\n\n    /**\n     * Returns the end data value for one category in a series.\n     *\n     * @param series  the required series (zero based index).\n     * @param category  the required category.\n     *\n     * @return The end data value for one category in a series (null possible).\n     * \n     * @see #getEndValue(Comparable, Comparable)\n     */\n    public Number getEndValue(int series, int category) {\n        if ((series < 0) || (series >= getSeriesCount())) {\n            throw new IllegalArgumentException(\n                "DefaultIntervalCategoryDataset.getValue(): "\n                + "series index out of range.");\n        }\n\n        if ((category < 0) || (category >= getCategoryCount())) {\n            throw new IllegalArgumentException(\n                "DefaultIntervalCategoryDataset.getValue(): "\n                + "category index out of range.");\n        }\n\n        return this.endData[series][category];\n    }\n\n    /**\n     * Sets the start data value for one category in a series.\n     * \n     * @param series  the series (zero-based index).\n     * @param category  the category.\n     * \n     * @param value The value.\n     * \n     * @see #setEndValue(int, Comparable, Number)\n     */\n    public void setStartValue(int series, Comparable category, Number value) {\n\n        // does the series exist?\n        if ((series < 0) || (series > getSeriesCount() - 1)) {\n            throw new IllegalArgumentException(\n                "DefaultIntervalCategoryDataset.setValue: "\n                + "series outside valid range.");\n        }\n\n        // is the category valid?\n        int categoryIndex = getCategoryIndex(category);\n        if (categoryIndex < 0) {\n            throw new IllegalArgumentException(\n                "DefaultIntervalCategoryDataset.setValue: "\n                + "unrecognised category.");\n        }\n\n        // update the data...\n        this.startData[series][categoryIndex] = value;\n        fireDatasetChanged();\n\n    }\n\n    /**\n     * Sets the end data value for one category in a series.\n     *\n     * @param series  the series (zero-based index).\n     * @param category  the category.\n     *\n     * @param value the value.\n     * \n     * @see #setStartValue(int, Comparable, Number)\n     */\n    public void setEndValue(int series, Comparable category, Number value) {\n\n        // does the series exist?\n        if ((series < 0) || (series > getSeriesCount() - 1)) {\n            throw new IllegalArgumentException(\n                "DefaultIntervalCategoryDataset.setValue: "\n                + "series outside valid range.");\n        }\n\n        // is the category valid?\n        int categoryIndex = getCategoryIndex(category);\n        if (categoryIndex < 0) {\n            throw new IllegalArgumentException(\n                "DefaultIntervalCategoryDataset.setValue: "\n                + "unrecognised category.");\n        }\n\n        // update the data...\n        this.endData[series][categoryIndex] = value;\n        fireDatasetChanged();\n\n    }\n\n    /**\n     * Returns the index for the given category.\n     *\n     * @param category  the category (<code>null</code> not permitted).\n     *\n     * @return The index.\n     * \n     * @see #getColumnIndex(Comparable)\n     */\n    public int getCategoryIndex(Comparable category) {\n        int result = -1;\n        for (int i = 0; i < this.categoryKeys.length; i++) {\n            if (category.equals(this.categoryKeys[i])) {\n                result = i;\n                break;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Generates an array of keys, by appending a space plus an integer\n     * (starting with 1) to the supplied prefix string.\n     *\n     * @param count  the number of keys required.\n     * @param prefix  the name prefix.\n     *\n     * @return An array of <i>prefixN</i> with N = { 1 .. count}.\n     */\n    private Comparable[] generateKeys(int count, String prefix) {\n        Comparable[] result = new Comparable[count];\n        String name;\n        for (int i = 0; i < count; i++) {\n            name = prefix + (i + 1);\n            result[i] = name;\n        }\n        return result;\n    }\n\n    /**\n     * Returns a column key.\n     *\n     * @param column  the column index.\n     *\n     * @return The column key.\n     * \n     * @see #getRowKey(int)\n     */\n    public Comparable getColumnKey(int column) {\n        return this.categoryKeys[column];\n    }\n\n    /**\n     * Returns a column index.\n     *\n     * @param columnKey  the column key (<code>null</code> not permitted).\n     *\n     * @return The column index.\n     * \n     * @see #getCategoryIndex(Comparable)\n     */\n    public int getColumnIndex(Comparable columnKey) {\n        if (columnKey == null) {\n            throw new IllegalArgumentException("Null \'columnKey\' argument.");\n        }\n        return getCategoryIndex(columnKey);\n    }\n\n    /**\n     * Returns a row index.\n     *\n     * @param rowKey  the row key.\n     *\n     * @return The row index.\n     * \n     * @see #getSeriesIndex(Comparable)\n     */\n    public int getRowIndex(Comparable rowKey) {\n        return getSeriesIndex(rowKey);\n    }\n\n    /**\n     * Returns a list of the series in the dataset.  This method supports the \n     * {@link CategoryDataset} interface.\n     *\n     * @return A list of the series in the dataset.\n     * \n     * @see #getColumnKeys()\n     */\n    public List getRowKeys() {\n        // the CategoryDataset interface expects a list of series, but\n        // we\'ve stored them in an array...\n        if (this.seriesKeys == null) {\n            return new java.util.ArrayList();\n        }\n        else {\n            return Collections.unmodifiableList(Arrays.asList(this.seriesKeys));\n        }\n    }\n\n    /**\n     * Returns the name of the specified series.\n     *\n     * @param row  the index of the required row/series (zero-based).\n     *\n     * @return The name of the specified series.\n     * \n     * @see #getColumnKey(int)\n     */\n    public Comparable getRowKey(int row) {\n        if ((row >= getRowCount()) || (row < 0)) {\n            throw new IllegalArgumentException(\n                    "The \'row\' argument is out of bounds.");\n        }\n        return this.seriesKeys[row];\n    }\n\n    /**\n     * Returns the number of categories in the dataset.  This method is part of \n     * the {@link CategoryDataset} interface.\n     *\n     * @return The number of categories in the dataset.\n     * \n     * @see #getCategoryCount()\n     * @see #getRowCount()\n     */\n    public int getColumnCount() {\n        return this.categoryKeys.length;\n    }\n\n    /**\n     * Returns the number of series in the dataset (possibly zero).\n     *\n     * @return The number of series in the dataset.\n     * \n     * @see #getSeriesCount()\n     * @see #getColumnCount()\n     */\n    public int getRowCount() {\n        return this.seriesKeys.length;\n    }\n    \n    /**\n     * Tests this dataset for equality with an arbitrary object.\n     * \n     * @param obj  the object (<code>null</code> permitted).\n     * \n     * @return A boolean.\n     */\n    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof DefaultIntervalCategoryDataset)) {\n            return false;\n        }\n        DefaultIntervalCategoryDataset that \n                = (DefaultIntervalCategoryDataset) obj;\n        if (!Arrays.equals(this.seriesKeys, that.seriesKeys)) {\n            return false;\n        }\n        if (!Arrays.equals(this.categoryKeys, that.categoryKeys)) {\n            return false;\n        }\n        if (!equal(this.startData, that.startData)) {\n            return false;\n        }\n        if (!equal(this.endData, that.endData)) {\n            return false;\n        }\n        // seem to be the same...\n        return true;\n    }\n\n    /**\n     * Returns a clone of this dataset.\n     * \n     * @return A clone.\n     * \n     * @throws CloneNotSupportedException if there is a problem cloning the\n     *         dataset.\n     */\n    public Object clone() throws CloneNotSupportedException {\n        DefaultIntervalCategoryDataset clone \n                = (DefaultIntervalCategoryDataset) super.clone();\n        clone.categoryKeys = (Comparable[]) this.categoryKeys.clone();\n        clone.seriesKeys = (Comparable[]) this.seriesKeys.clone();\n        clone.startData = clone(this.startData);\n        clone.endData = clone(this.endData);\n        return clone;\n    }\n    \n    /**\n     * Tests two double[][] arrays for equality.\n     * \n     * @param array1  the first array (<code>null</code> permitted).\n     * @param array2  the second arrray (<code>null</code> permitted).\n     * \n     * @return A boolean.\n     */\n    private static boolean equal(Number[][] array1, Number[][] array2) {\n        if (array1 == null) {\n            return (array2 == null);\n        }\n        if (array2 == null) {\n            return false;\n        }\n        if (array1.length != array2.length) {\n            return false;\n        }\n        for (int i = 0; i < array1.length; i++) {\n            if (!Arrays.equals(array1[i], array2[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    \n    /**\n     * Clones a two dimensional array of <code>Number</code> objects.\n     * \n     * @param array  the array (<code>null</code> not permitted).\n     * \n     * @return A clone of the array.\n     */\n    private static Number[][] clone(Number[][] array) {\n        if (array == null) {\n            throw new IllegalArgumentException("Null \'array\' argument.");\n        }\n        Number[][] result = new Number[array.length][];\n        for (int i = 0; i < array.length; i++) {\n            Number[] child = array[i];\n            Number[] copychild = new Number[child.length];\n            System.arraycopy(child, 0, copychild, 0, child.length);\n            result[i] = copychild;\n        }\n        return result;\n    }\n\n}', 'tree': 'MethodDeclaration modifiers public_ter ^ ^ name meth0 ^ ^ parameters FormalParameter type ReferenceType name Comparable_ter ^ ^ dimensions None_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ body IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ForStatement control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ body BlockStatement statements IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference selectors ArraySelector index MemberReference member loc0 ^ ^ ^ ^ ^ ^ member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ value MemberReference member par0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation member fireDatasetChanged_ter ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 338, 'isa': False, 'fl_score': 1}, {'bugid': 'Chart-16', 'treeroot': <Searchnode.Node object at 0x7f5265868b90>, 'troot': <Searchnode.Node object at 0x7f52769cead0>, 'oldcode': '                this.seriesKeys = null;', 'filepath': 'buggy/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java', 'subroot': <Searchnode.Node object at 0x7f526586e990>, 'vardic': {'DefaultIntervalCategoryDataset_ter': 'meth0', 'baseName_ter': 'loc0', 'resources_ter': 'loc1', 'seriesCount_ter': 'loc2', 'errMsg_ter': 'loc6', 'prefix_ter': 'loc7', 'categoryCount_ter': 'loc5'}, 'typedic': {'baseName_ter': 'String', 'resources_ter': 'ResourceBundle', 'seriesCount_ter': 'int', 'errMsg_ter': 'String', 'prefix_ter': 'String', 'categoryCount_ter': 'int'}, 'idss': 'Chart-16', 'classname': 'org.jfree.data.category.DefaultIntervalCategoryDataset', 'precode': '/* ===========================================================\n * JFreeChart : a free chart library for the Java(tm) platform\n * ===========================================================\n *\n * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors.\n *\n * Project Info:  http://www.jfree.org/jfreechart/index.html\n *\n * This library is free software; you can redistribute it and/or modify it \n * under the terms of the GNU Lesser General Public License as published by \n * the Free Software Foundation; either version 2.1 of the License, or \n * (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful, but \n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public \n * License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, \n * USA.  \n *\n * [Java is a trademark or registered trademark of Sun Microsystems, Inc. \n * in the United States and other countries.]\n *\n * -----------------------------------\n * DefaultIntervalCategoryDataset.java\n * -----------------------------------\n * (C) Copyright 2002-2008, by Jeremy Bowman and Contributors.\n *\n * Original Author:  Jeremy Bowman;\n * Contributor(s):   David Gilbert (for Object Refinery Limited);\n *\n * Changes\n * -------\n * 29-Apr-2002 : Version 1, contributed by Jeremy Bowman (DG);\n * 24-Oct-2002 : Amendments for changes made to the dataset interface (DG);\n * ------------- JFREECHART 1.0.x ---------------------------------------------\n * 08-Mar-2007 : Added equals() and clone() overrides (DG);\n * 20-Jun-2007 : Removed deprecated code (DG);\n * 25-Feb-2008 : Fix for the special case where the dataset is empty, see bug \n *               1897580 (DG)\n *\n */\n\npackage org.jfree.data.category;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.ResourceBundle;\n\nimport org.jfree.data.DataUtilities;\nimport org.jfree.data.UnknownKeyException;\nimport org.jfree.data.general.AbstractSeriesDataset;\n\n/**\n * A convenience class that provides a default implementation of the\n * {@link IntervalCategoryDataset} interface.\n * <p>\n * The standard constructor accepts data in a two dimensional array where the\n * first dimension is the series, and the second dimension is the category.\n */\npublic class DefaultIntervalCategoryDataset extends AbstractSeriesDataset\n        implements IntervalCategoryDataset {\n\n    /** The series keys. */\n    private Comparable[] seriesKeys;\n\n    /** The category keys. */\n    private Comparable[] categoryKeys;\n\n    /** Storage for the start value data. */\n    private Number[][] startData;\n\n    /** Storage for the end value data. */\n    private Number[][] endData;\n\n    /**\n     * Creates a new dataset using the specified data values and automatically\n     * generated series and category keys.\n     *\n     * @param starts  the starting values for the intervals (<code>null</code>\n     *                not permitted).\n     * @param ends  the ending values for the intervals (<code>null</code> not\n     *                permitted).\n     */\n    public DefaultIntervalCategoryDataset(double[][] starts, double[][] ends) {\n        this(DataUtilities.createNumberArray2D(starts),\n                DataUtilities.createNumberArray2D(ends));\n    }\n\n    /**\n     * Constructs a dataset and populates it with data from the array.\n     * <p>\n     * The arrays are indexed as data[series][category].  Series and category\n     * names are automatically generated - you can change them using the\n     * {@link #setSeriesKeys(Comparable[])} and \n     * {@link #setCategoryKeys(Comparable[])} methods.\n     *\n     * @param starts  the start values data.\n     * @param ends  the end values data.\n     */\n    public DefaultIntervalCategoryDataset(Number[][] starts, Number[][] ends) {\n        this(null, null, starts, ends);\n    }\n\n    /**\n     * Constructs a DefaultIntervalCategoryDataset, populates it with data\n     * from the arrays, and uses the supplied names for the series.\n     * <p>\n     * Category names are generated automatically ("Category 1", "Category 2",\n     * etc).\n     *\n     * @param seriesNames  the series names (if <code>null</code>, series names\n     *         will be generated automatically).\n     * @param starts  the start values data, indexed as data[series][category].\n     * @param ends  the end values data, indexed as data[series][category].\n     */\n    public DefaultIntervalCategoryDataset(String[] seriesNames,\n                                          Number[][] starts,\n                                          Number[][] ends) {\n\n        this(seriesNames, null, starts, ends);\n\n    }\n\n    /**\n     * Constructs a DefaultIntervalCategoryDataset, populates it with data\n     * from the arrays, and uses the supplied names for the series and the\n     * supplied objects for the categories.\n     *\n     * @param seriesKeys  the series keys (if <code>null</code>, series keys\n     *         will be generated automatically).\n     * @param categoryKeys  the category keys (if <code>null</code>, category \n     *         keys will be generated automatically).\n     * @param starts  the start values data, indexed as data[series][category].\n     * @param ends  the end values data, indexed as data[series][category].\n     */\n    public DefaultIntervalCategoryDataset(Comparable[] seriesKeys,\n                                          Comparable[] categoryKeys,\n                                          Number[][] starts,\n                                          Number[][] ends) {\n\n        this.startData = starts;\n        this.endData = ends;\n\n        if (starts != null && ends != null) {\n\n            String baseName = "org.jfree.data.resources.DataPackageResources";\n            ResourceBundle resources = ResourceBundle.getBundle(baseName);\n\n            int seriesCount = starts.length;\n            if (seriesCount != ends.length) {\n                String errMsg = "DefaultIntervalCategoryDataset: the number "\n                    + "of series in the start value dataset does "\n                    + "not match the number of series in the end "\n                    + "value dataset.";\n                throw new IllegalArgumentException(errMsg);\n            }\n            if (seriesCount > 0) {\n\n                // set up the series names...\n                if (seriesKeys != null) {\n\n                    if (seriesKeys.length != seriesCount) {\n                        throw new IllegalArgumentException(\n                                "The number of series keys does not "\n                                + "match the number of series in the data.");\n                    }\n\n                    this.seriesKeys = seriesKeys;\n                }\n                else {\n                    String prefix = resources.getString(\n                            "series.default-prefix") + " ";\n                    this.seriesKeys = generateKeys(seriesCount, prefix);\n                }\n\n                // set up the category names...\n                int categoryCount = starts[0].length;\n                if (categoryCount != ends[0].length) {\n                    String errMsg = "DefaultIntervalCategoryDataset: the "\n                                + "number of categories in the start value "\n                                + "dataset does not match the number of "\n                                + "categories in the end value dataset.";\n                    throw new IllegalArgumentException(errMsg);\n                }\n                if (categoryKeys != null) {\n                    if (categoryKeys.length != categoryCount) {\n                        throw new IllegalArgumentException(\n                                "The number of category keys does not match "\n                                + "the number of categories in the data.");\n                    }\n                    this.categoryKeys = categoryKeys;\n                }\n                else {\n                    String prefix = resources.getString(\n                            "categories.default-prefix") + " ";\n                    this.categoryKeys = generateKeys(categoryCount, prefix);\n                }\n\n            }\n            else {', 'aftercode': '                this.categoryKeys = null;\n            }\n        }\n\n    }\n\n    /**\n     * Returns the number of series in the dataset (possibly zero).\n     *\n     * @return The number of series in the dataset.\n     * \n     * @see #getRowCount()\n     * @see #getCategoryCount()\n     */\n    public int getSeriesCount() {\n        int result = 0;\n        if (this.startData != null) {\n            result = this.startData.length;\n        }\n        return result;\n    }\n\n    /**\n     * Returns a series index.\n     *\n     * @param seriesKey  the series key.\n     *\n     * @return The series index.\n     * \n     * @see #getRowIndex(Comparable)\n     * @see #getSeriesKey(int)\n     */\n    public int getSeriesIndex(Comparable seriesKey) {\n        int result = -1;\n        for (int i = 0; i < this.seriesKeys.length; i++) {\n            if (seriesKey.equals(this.seriesKeys[i])) {\n                result = i;\n                break;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Returns the name of the specified series.\n     *\n     * @param series  the index of the required series (zero-based).\n     *\n     * @return The name of the specified series.\n     * \n     * @see #getSeriesIndex(Comparable)\n     */\n    public Comparable getSeriesKey(int series) {\n        if ((series >= getSeriesCount()) || (series < 0)) {\n            throw new IllegalArgumentException("No such series : " + series);\n        }\n        return this.seriesKeys[series];\n    }\n\n    /**\n     * Sets the names of the series in the dataset.\n     *\n     * @param seriesKeys  the new keys (<code>null</code> not permitted, the \n     *         length of the array must match the number of series in the \n     *         dataset).\n     *         \n     * @see #setCategoryKeys(Comparable[])\n     */\n    public void setSeriesKeys(Comparable[] seriesKeys) {\n        if (seriesKeys == null) {\n            throw new IllegalArgumentException("Null \'seriesKeys\' argument.");\n        }\n        if (seriesKeys.length != getSeriesCount()) {\n            throw new IllegalArgumentException(\n                    "The number of series keys does not match the data.");\n        }\n        this.seriesKeys = seriesKeys;\n        fireDatasetChanged();\n    }\n\n    /**\n     * Returns the number of categories in the dataset.\n     *\n     * @return The number of categories in the dataset.\n     * \n     * @see #getColumnCount()\n     */\n    public int getCategoryCount() {\n        int result = 0;\n        if (this.startData != null) {\n            if (getSeriesCount() > 0) {\n                result = this.startData[0].length;\n            }\n        }\n        return result;\n    }\n    \n    /**\n     * Returns a list of the categories in the dataset.  This method supports \n     * the {@link CategoryDataset} interface.\n     *\n     * @return A list of the categories in the dataset.\n     * \n     * @see #getRowKeys()\n     */\n    public List getColumnKeys() {\n        // the CategoryDataset interface expects a list of categories, but\n        // we\'ve stored them in an array...\n        if (this.categoryKeys == null) {\n            return new ArrayList();\n        }\n        else {\n            return Collections.unmodifiableList(Arrays.asList(\n                    this.categoryKeys));\n        }\n    }\n\n    /**\n     * Sets the categories for the dataset.\n     *\n     * @param categoryKeys  an array of objects representing the categories in \n     *                      the dataset.\n     *                      \n     * @see #getRowKeys()\n     * @see #setSeriesKeys(Comparable[])\n     */\n    public void setCategoryKeys(Comparable[] categoryKeys) {\n        if (categoryKeys == null) {\n            throw new IllegalArgumentException("Null \'categoryKeys\' argument.");\n        }\n        if (categoryKeys.length != this.startData[0].length) {\n            throw new IllegalArgumentException(\n                    "The number of categories does not match the data.");\n        }\n        for (int i = 0; i < categoryKeys.length; i++) {\n            if (categoryKeys[i] == null) {\n                throw new IllegalArgumentException(\n                    "DefaultIntervalCategoryDataset.setCategoryKeys(): "\n                    + "null category not permitted.");\n            }\n        }\n        this.categoryKeys = categoryKeys;\n        fireDatasetChanged();\n    }\n\n    /**\n     * Returns the data value for one category in a series.\n     * <P>\n     * This method is part of the CategoryDataset interface.  Not particularly\n     * meaningful for this class...returns the end value.\n     * \n     * @param series    The required series (zero based index).\n     * @param category  The required category.\n     * \n     * @return The data value for one category in a series (null possible).\n     * \n     * @see #getEndValue(Comparable, Comparable)\n     */\n    public Number getValue(Comparable series, Comparable category) {\n        int seriesIndex = getSeriesIndex(series);\n        if (seriesIndex < 0) {\n            throw new UnknownKeyException("Unknown \'series\' key.");\n        }\n        int itemIndex = getColumnIndex(category);\n        if (itemIndex < 0) {\n            throw new UnknownKeyException("Unknown \'category\' key.");\n        }\n        return getValue(seriesIndex, itemIndex);\n    }\n\n    /**\n     * Returns the data value for one category in a series.\n     * <P>\n     * This method is part of the CategoryDataset interface.  Not particularly\n     * meaningful for this class...returns the end value.\n     *\n     * @param series  the required series (zero based index).\n     * @param category  the required category.\n     *\n     * @return The data value for one category in a series (null possible).\n     * \n     * @see #getEndValue(int, int)\n     */\n    public Number getValue(int series, int category) {\n        return getEndValue(series, category);\n    }\n\n    /**\n     * Returns the start data value for one category in a series.\n     *\n     * @param series  the required series.\n     * @param category  the required category.\n     *\n     * @return The start data value for one category in a series \n     *         (possibly <code>null</code>).\n     *         \n     * @see #getStartValue(int, int)\n     */\n    public Number getStartValue(Comparable series, Comparable category) {\n        int seriesIndex = getSeriesIndex(series);\n        if (seriesIndex < 0) {\n            throw new UnknownKeyException("Unknown \'series\' key.");\n        }\n        int itemIndex = getColumnIndex(category);\n        if (itemIndex < 0) {\n            throw new UnknownKeyException("Unknown \'category\' key.");\n        }\n        return getStartValue(seriesIndex, itemIndex);\n    }\n\n    /**\n     * Returns the start data value for one category in a series.\n     *\n     * @param series  the required series (zero based index).\n     * @param category  the required category.\n     *\n     * @return The start data value for one category in a series \n     *         (possibly <code>null</code>).\n     *         \n     * @see #getStartValue(Comparable, Comparable)\n     */\n    public Number getStartValue(int series, int category) {\n\n        // check arguments...\n        if ((series < 0) || (series >= getSeriesCount())) {\n            throw new IllegalArgumentException(\n                "DefaultIntervalCategoryDataset.getValue(): "\n                + "series index out of range.");\n        }\n\n        if ((category < 0) || (category >= getCategoryCount())) {\n            throw new IllegalArgumentException(\n                "DefaultIntervalCategoryDataset.getValue(): "\n                + "category index out of range.");\n        }\n\n        // fetch the value...\n        return this.startData[series][category];\n\n    }\n\n    /**\n     * Returns the end data value for one category in a series.\n     *\n     * @param series  the required series.\n     * @param category  the required category.\n     *\n     * @return The end data value for one category in a series (null possible).\n     * \n     * @see #getEndValue(int, int)\n     */\n    public Number getEndValue(Comparable series, Comparable category) {\n        int seriesIndex = getSeriesIndex(series);\n        if (seriesIndex < 0) {\n            throw new UnknownKeyException("Unknown \'series\' key.");\n        }\n        int itemIndex = getColumnIndex(category);\n        if (itemIndex < 0) {\n            throw new UnknownKeyException("Unknown \'category\' key.");\n        }\n        return getEndValue(seriesIndex, itemIndex);\n    }\n\n    /**\n     * Returns the end data value for one category in a series.\n     *\n     * @param series  the required series (zero based index).\n     * @param category  the required category.\n     *\n     * @return The end data value for one category in a series (null possible).\n     * \n     * @see #getEndValue(Comparable, Comparable)\n     */\n    public Number getEndValue(int series, int category) {\n        if ((series < 0) || (series >= getSeriesCount())) {\n            throw new IllegalArgumentException(\n                "DefaultIntervalCategoryDataset.getValue(): "\n                + "series index out of range.");\n        }\n\n        if ((category < 0) || (category >= getCategoryCount())) {\n            throw new IllegalArgumentException(\n                "DefaultIntervalCategoryDataset.getValue(): "\n                + "category index out of range.");\n        }\n\n        return this.endData[series][category];\n    }\n\n    /**\n     * Sets the start data value for one category in a series.\n     * \n     * @param series  the series (zero-based index).\n     * @param category  the category.\n     * \n     * @param value The value.\n     * \n     * @see #setEndValue(int, Comparable, Number)\n     */\n    public void setStartValue(int series, Comparable category, Number value) {\n\n        // does the series exist?\n        if ((series < 0) || (series > getSeriesCount() - 1)) {\n            throw new IllegalArgumentException(\n                "DefaultIntervalCategoryDataset.setValue: "\n                + "series outside valid range.");\n        }\n\n        // is the category valid?\n        int categoryIndex = getCategoryIndex(category);\n        if (categoryIndex < 0) {\n            throw new IllegalArgumentException(\n                "DefaultIntervalCategoryDataset.setValue: "\n                + "unrecognised category.");\n        }\n\n        // update the data...\n        this.startData[series][categoryIndex] = value;\n        fireDatasetChanged();\n\n    }\n\n    /**\n     * Sets the end data value for one category in a series.\n     *\n     * @param series  the series (zero-based index).\n     * @param category  the category.\n     *\n     * @param value the value.\n     * \n     * @see #setStartValue(int, Comparable, Number)\n     */\n    public void setEndValue(int series, Comparable category, Number value) {\n\n        // does the series exist?\n        if ((series < 0) || (series > getSeriesCount() - 1)) {\n            throw new IllegalArgumentException(\n                "DefaultIntervalCategoryDataset.setValue: "\n                + "series outside valid range.");\n        }\n\n        // is the category valid?\n        int categoryIndex = getCategoryIndex(category);\n        if (categoryIndex < 0) {\n            throw new IllegalArgumentException(\n                "DefaultIntervalCategoryDataset.setValue: "\n                + "unrecognised category.");\n        }\n\n        // update the data...\n        this.endData[series][categoryIndex] = value;\n        fireDatasetChanged();\n\n    }\n\n    /**\n     * Returns the index for the given category.\n     *\n     * @param category  the category (<code>null</code> not permitted).\n     *\n     * @return The index.\n     * \n     * @see #getColumnIndex(Comparable)\n     */\n    public int getCategoryIndex(Comparable category) {\n        int result = -1;\n        for (int i = 0; i < this.categoryKeys.length; i++) {\n            if (category.equals(this.categoryKeys[i])) {\n                result = i;\n                break;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Generates an array of keys, by appending a space plus an integer\n     * (starting with 1) to the supplied prefix string.\n     *\n     * @param count  the number of keys required.\n     * @param prefix  the name prefix.\n     *\n     * @return An array of <i>prefixN</i> with N = { 1 .. count}.\n     */\n    private Comparable[] generateKeys(int count, String prefix) {\n        Comparable[] result = new Comparable[count];\n        String name;\n        for (int i = 0; i < count; i++) {\n            name = prefix + (i + 1);\n            result[i] = name;\n        }\n        return result;\n    }\n\n    /**\n     * Returns a column key.\n     *\n     * @param column  the column index.\n     *\n     * @return The column key.\n     * \n     * @see #getRowKey(int)\n     */\n    public Comparable getColumnKey(int column) {\n        return this.categoryKeys[column];\n    }\n\n    /**\n     * Returns a column index.\n     *\n     * @param columnKey  the column key (<code>null</code> not permitted).\n     *\n     * @return The column index.\n     * \n     * @see #getCategoryIndex(Comparable)\n     */\n    public int getColumnIndex(Comparable columnKey) {\n        if (columnKey == null) {\n            throw new IllegalArgumentException("Null \'columnKey\' argument.");\n        }\n        return getCategoryIndex(columnKey);\n    }\n\n    /**\n     * Returns a row index.\n     *\n     * @param rowKey  the row key.\n     *\n     * @return The row index.\n     * \n     * @see #getSeriesIndex(Comparable)\n     */\n    public int getRowIndex(Comparable rowKey) {\n        return getSeriesIndex(rowKey);\n    }\n\n    /**\n     * Returns a list of the series in the dataset.  This method supports the \n     * {@link CategoryDataset} interface.\n     *\n     * @return A list of the series in the dataset.\n     * \n     * @see #getColumnKeys()\n     */\n    public List getRowKeys() {\n        // the CategoryDataset interface expects a list of series, but\n        // we\'ve stored them in an array...\n        if (this.seriesKeys == null) {\n            return new java.util.ArrayList();\n        }\n        else {\n            return Collections.unmodifiableList(Arrays.asList(this.seriesKeys));\n        }\n    }\n\n    /**\n     * Returns the name of the specified series.\n     *\n     * @param row  the index of the required row/series (zero-based).\n     *\n     * @return The name of the specified series.\n     * \n     * @see #getColumnKey(int)\n     */\n    public Comparable getRowKey(int row) {\n        if ((row >= getRowCount()) || (row < 0)) {\n            throw new IllegalArgumentException(\n                    "The \'row\' argument is out of bounds.");\n        }\n        return this.seriesKeys[row];\n    }\n\n    /**\n     * Returns the number of categories in the dataset.  This method is part of \n     * the {@link CategoryDataset} interface.\n     *\n     * @return The number of categories in the dataset.\n     * \n     * @see #getCategoryCount()\n     * @see #getRowCount()\n     */\n    public int getColumnCount() {\n        return this.categoryKeys.length;\n    }\n\n    /**\n     * Returns the number of series in the dataset (possibly zero).\n     *\n     * @return The number of series in the dataset.\n     * \n     * @see #getSeriesCount()\n     * @see #getColumnCount()\n     */\n    public int getRowCount() {\n        return this.seriesKeys.length;\n    }\n    \n    /**\n     * Tests this dataset for equality with an arbitrary object.\n     * \n     * @param obj  the object (<code>null</code> permitted).\n     * \n     * @return A boolean.\n     */\n    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof DefaultIntervalCategoryDataset)) {\n            return false;\n        }\n        DefaultIntervalCategoryDataset that \n                = (DefaultIntervalCategoryDataset) obj;\n        if (!Arrays.equals(this.seriesKeys, that.seriesKeys)) {\n            return false;\n        }\n        if (!Arrays.equals(this.categoryKeys, that.categoryKeys)) {\n            return false;\n        }\n        if (!equal(this.startData, that.startData)) {\n            return false;\n        }\n        if (!equal(this.endData, that.endData)) {\n            return false;\n        }\n        // seem to be the same...\n        return true;\n    }\n\n    /**\n     * Returns a clone of this dataset.\n     * \n     * @return A clone.\n     * \n     * @throws CloneNotSupportedException if there is a problem cloning the\n     *         dataset.\n     */\n    public Object clone() throws CloneNotSupportedException {\n        DefaultIntervalCategoryDataset clone \n                = (DefaultIntervalCategoryDataset) super.clone();\n        clone.categoryKeys = (Comparable[]) this.categoryKeys.clone();\n        clone.seriesKeys = (Comparable[]) this.seriesKeys.clone();\n        clone.startData = clone(this.startData);\n        clone.endData = clone(this.endData);\n        return clone;\n    }\n    \n    /**\n     * Tests two double[][] arrays for equality.\n     * \n     * @param array1  the first array (<code>null</code> permitted).\n     * @param array2  the second arrray (<code>null</code> permitted).\n     * \n     * @return A boolean.\n     */\n    private static boolean equal(Number[][] array1, Number[][] array2) {\n        if (array1 == null) {\n            return (array2 == null);\n        }\n        if (array2 == null) {\n            return false;\n        }\n        if (array1.length != array2.length) {\n            return false;\n        }\n        for (int i = 0; i < array1.length; i++) {\n            if (!Arrays.equals(array1[i], array2[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    \n    /**\n     * Clones a two dimensional array of <code>Number</code> objects.\n     * \n     * @param array  the array (<code>null</code> not permitted).\n     * \n     * @return A clone of the array.\n     */\n    private static Number[][] clone(Number[][] array) {\n        if (array == null) {\n            throw new IllegalArgumentException("Null \'array\' argument.");\n        }\n        Number[][] result = new Number[array.length][];\n        for (int i = 0; i < array.length; i++) {\n            Number[] child = array[i];\n            Number[] copychild = new Number[child.length];\n            System.arraycopy(child, 0, copychild, 0, child.length);\n            result[i] = copychild;\n        }\n        return result;\n    }\n\n}', 'tree': 'then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name ResourceBundle_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member getBundle_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MemberReference qualifier starts_ter ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference qualifier ends_ter ^ ^ member length_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member seriesKeys_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier seriesKeys_ter ^ ^ member length_ter ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member seriesKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member starts_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member ends_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member categoryKeys_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier categoryKeys_ter ^ ^ member length_ter ^ ^ ^ ^ operandr MemberReference member loc5 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ', 'prob': [0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], 'mode': 0, 'line': 207, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
before@0 batch1 x: 0: root ^  ; []
after@0 batch1 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root operator-operator !=_ter ^ ^  ^ ^ ; ['copy-operator']
copynode 0:  root MemberReference-MemberReference member startData_ter ^ ^ ^  ^ ^ ; ['copy-MemberReference']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  ^ ^ ; ['copy-MemberReference']
copynode 0:  root LocalVariableDeclaration ^ ^ ; ['root -> LocalVariableDeclaration']
before@1 batch0 x: -11.020162582397461: root MemberReference-MemberReference member startData_ter ^ ^ ^  ^ ^  ; ['copy-MemberReference']
after@1 batch0 x: -11.020162582397461: root MemberReference-MemberReference member startData_ter ^ ^ ^  ^ ^  ; ['copy-MemberReference']
before@1 batch1 x: -11.720952033996582: root LocalVariableDeclaration ^ ^  ; ['root -> LocalVariableDeclaration']
after@1 batch1 x: -11.720952033996582: root LocalVariableDeclaration ^ ^  ; ['root -> LocalVariableDeclaration']
copynode -0.209684357047081:  root modified ^ operator-operator !=_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-operator']
copynode -0.209684357047081:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -0.209684357047081:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -1.6781578063964844:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -1.6781578063964844:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -1.6781578063964844:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -0.209684357047081:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.209684357047081:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -0.209684357047081:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -1.6781578063964844:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -1.6781578063964844:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -1.6781578063964844:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -1.6781578063964844:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -1.6781578063964844:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -1.6781578063964844:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter']
copynode -1.6781578063964844:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -7.38563346862793:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -8.042903900146484:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -8.589460372924805:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -0.209684357047081:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter']
copynode -8.782411575317383:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -8.863786697387695:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -0.209684357047081:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-Literal']
copynode -7.38563346862793:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -0.209684357047081:  root modified ^ control ^ ^ ; ['root -> modified', 'root -> control']
copynode -0.209684357047081:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -11.020162582397461:  root MemberReference-MemberReference member startData_ter ^ ^ ^  member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member']
copynode -8.863786697387695:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -10.291910171508789:  root operator-operator !=_ter ^ ^  >_ter ^ ^ ^ ; ['copy-operator', 'operator -> >_ter']
copynode -10.291910171508789:  root operator-operator !=_ter ^ ^  ==_ter ^ ^ ^ ; ['copy-operator', 'operator -> ==_ter']
copynode -11.020162582397461:  root MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> selectors member']
copynode -10.291910171508789:  root operator-operator !=_ter ^ ^  >=_ter ^ ^ ^ ; ['copy-operator', 'operator -> >=_ter']
copynode -10.291910171508789:  root operator-operator !=_ter ^ ^  !=_ter ^ ^ ^ ; ['copy-operator', 'operator -> !=_ter']
copynode -10.291910171508789:  root operator-operator !=_ter ^ ^  <_ter ^ ^ ^ ; ['copy-operator', 'operator -> <_ter']
copynode -10.291910171508789:  root operator-operator !=_ter ^ ^  &&_ter ^ ^ ^ ; ['copy-operator', 'operator -> &&_ter']
copynode -8.782411575317383:  root StatementExpression expression Assignment expressionl This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ value MemberReference member par0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -8.782411575317383:  root StatementExpression expression MethodInvocation member fireDatasetChanged_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.291910171508789:  root operator-operator !=_ter ^ ^  <=_ter ^ ^ ^ ; ['copy-operator', 'operator -> <=_ter']
copynode -10.291910171508789:  root operator-operator !=_ter ^ ^  ||_ter ^ ^ ^ ; ['copy-operator', 'operator -> ||_ter']
copynode -8.863786697387695:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -11.020162582397461:  root MemberReference-MemberReference member startData_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member']
copynode -10.291910171508789:  root operator-operator !=_ter ^ ^  +_ter ^ ^ ^ ; ['copy-operator', 'operator -> +_ter']
copynode -8.863786697387695:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -10.291910171508789:  root operator-operator !=_ter ^ ^  -_ter ^ ^ ^ ; ['copy-operator', 'operator -> -_ter']
copynode -11.020162582397461:  root MemberReference-MemberReference member startData_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -11.020162582397461:  root MemberReference-MemberReference member startData_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -8.863786697387695:  root parameters FormalParameter type ReferenceType name Comparable_ter ^ ^ dimensions None_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ ^ ; ['root -> parameters', 'copy-parameters']
copynode -11.020162582397461:  root MemberReference-MemberReference member startData_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -7.38563346862793:  root return_type par0 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -11.020162582397461:  root MemberReference-MemberReference member startData_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -8.042903900146484:  root ReturnStatement par0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -8.863786697387695:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -11.020162582397461:  root MemberReference-MemberReference member startData_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -8.589460372924805:  root IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -8.589460372924805:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -8.589460372924805:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference selectors ArraySelector index MemberReference member loc0 ^ ^ ^ ^ ^ ^ member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.020162582397461:  root MemberReference-MemberReference member startData_ter ^ ^ ^  postfix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators selectors member']
copynode -8.863786697387695:  root parameters par0 ^ ^ ^ ; ['root -> parameters', 'copy-FormalParameter']
copynode -8.863786697387695:  root parameters loc0 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -7.38563346862793:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -8.782411575317383:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -8.589460372924805:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -11.020162582397461:  root MemberReference-MemberReference member startData_ter ^ ^ ^  prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier selectors member']
copynode -8.782411575317383:  root StatementExpression par0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -8.589460372924805:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -8.042903900146484:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.589460372924805:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -8.589460372924805:  root IfStatement par0 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -8.042903900146484:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -7.38563346862793:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -8.782411575317383:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -8.782411575317383:  root StatementExpression loc0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -8.863786697387695:  root parameters unknown ^ ^ ^ ; ['root -> parameters', 'start -> unknown']
copynode -8.589460372924805:  root IfStatement loc0 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -0.6011569499969482:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.798117458820343:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -0.798117458820343:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -0.6011569499969482:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -0.6011569499969482:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -0.798117458820343:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.6011569499969482:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -0.798117458820343:  root modified ^ Literal-Literal value null_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-Literal']
copynode -0.6011569499969482:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -0.6011569499969482:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -0.6011569499969482:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter']
copynode -0.6011569499969482:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -0.798117458820343:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -0.6011569499969482:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -0.798117458820343:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter']
copynode -7.005179405212402:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -0.6011569499969482:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -0.798117458820343:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -0.798117458820343:  root modified ^ BreakStatement_ter ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter']
copynode -0.798117458820343:  root modified ^ ContinueStatement_ter ^ ^ ; ['root -> modified', 'root -> ContinueStatement_ter']
copynode -9.143290519714355:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -0.798117458820343:  root modified ^ LocalVariableDeclaration ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration']
copynode -9.559483528137207:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -9.64148998260498:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -9.769841194152832:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -11.418940544128418:  root MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member']
copynode -9.769841194152832:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -9.143290519714355:  root StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -9.143290519714355:  root StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.720952033996582:  root LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -9.143290519714355:  root StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member seriesKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -9.64148998260498:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -9.143290519714355:  root StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -9.143290519714355:  root StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -9.769841194152832:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -11.720952033996582:  root LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member starts_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.418940544128418:  root MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member']
copynode -11.720952033996582:  root LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.720952033996582:  root LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.720952033996582:  root LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.720952033996582:  root LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.143290519714355:  root StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -9.769841194152832:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -11.720952033996582:  root LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -11.720952033996582:  root LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MemberReference qualifier starts_ter ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.418940544128418:  root MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -11.720952033996582:  root LocalVariableDeclaration type ReferenceType name ResourceBundle_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member getBundle_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.720952033996582:  root LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.418940544128418:  root MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> selectors member']
copynode -11.418940544128418:  root MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -9.769841194152832:  root parameters loc1 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.769841194152832:  root parameters loc6 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.769841194152832:  root parameters loc2 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.769841194152832:  root parameters loc7 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.769841194152832:  root parameters loc6 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.769841194152832:  root parameters loc5 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.559483528137207:  root IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier seriesKeys_ter ^ ^ member length_ter ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.559483528137207:  root IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier categoryKeys_ter ^ ^ member length_ter ^ ^ ^ ^ operandr MemberReference member loc5 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.559483528137207:  root IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member ends_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.559483528137207:  root IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member categoryKeys_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier categoryKeys_ter ^ ^ member length_ter ^ ^ ^ ^ operandr MemberReference member loc5 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.418940544128418:  root MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -9.559483528137207:  root IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member seriesKeys_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier seriesKeys_ter ^ ^ member length_ter ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member seriesKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.418940544128418:  root MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -11.418940544128418:  root MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -9.559483528137207:  root IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference qualifier ends_ter ^ ^ member length_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.559483528137207:  root IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member seriesKeys_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier seriesKeys_ter ^ ^ member length_ter ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member seriesKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member starts_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member ends_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member categoryKeys_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier categoryKeys_ter ^ ^ member length_ter ^ ^ ^ ^ operandr MemberReference member loc5 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.143290519714355:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -7.005179405212402:  root ReturnStatement loc7 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -7.005179405212402:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -7.005179405212402:  root ReturnStatement loc6 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -7.005179405212402:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -7.005179405212402:  root ReturnStatement loc7 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -9.559483528137207:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -7.005179405212402:  root ReturnStatement loc5 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -7.005179405212402:  root ReturnStatement loc6 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -7.005179405212402:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -9.559483528137207:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -9.64148998260498:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -7.005179405212402:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.418940544128418:  root MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier selectors member']
copynode -11.418940544128418:  root MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  postfix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators selectors member']
copynode -9.64148998260498:  root return_type loc7 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.64148998260498:  root return_type loc6 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.64148998260498:  root return_type loc5 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.64148998260498:  root return_type loc2 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.64148998260498:  root return_type loc6 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.64148998260498:  root return_type loc7 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.64148998260498:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.143290519714355:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -9.143290519714355:  root StatementExpression loc7 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
before@2 batch0 x: -32.71040916442871: root IfStatement loc0 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch0 x: -32.71040916442871: root IfStatement loc0 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch1 x: -29.627835273742676: root StatementExpression loc7 ^ ^ ^  ; ['root -> StatementExpression', 'copy-VariableDeclarator']
after@2 batch1 x: -29.627835273742676: root StatementExpression loc7 ^ ^ ^  ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -1.3139284700155258:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -1.6661774963140488:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -2.323887288570404:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -1.175810620188713:  root modified ^ operator-operator !=_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter']
copynode -1.175810620188713:  root modified ^ operator-operator !=_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter']
copynode -2.864096164703369:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.175810620188713:  root modified ^ operator-operator !=_ter ^ ^  &&_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &&_ter']
copynode -1.175810620188713:  root modified ^ operator-operator !=_ter ^ ^  >_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >_ter']
copynode -1.6661774963140488:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -1.175810620188713:  root modified ^ operator-operator !=_ter ^ ^  ||_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ||_ter']
copynode -3.9742493629455566:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -4.327600464224815:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.175810620188713:  root modified ^ operator-operator !=_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter']
copynode -4.025481685996056:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -1.175810620188713:  root modified ^ operator-operator !=_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter']
copynode -4.361936077475548:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -4.025481685996056:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -1.6661774963140488:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -4.361936077475548:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -1.175810620188713:  root modified ^ operator-operator !=_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter']
copynode -5.926872730255127:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -6.041050434112549:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -1.175810620188713:  root modified ^ operator-operator !=_ter ^ ^  instanceof_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> instanceof_ter']
copynode -1.6661774963140488:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -6.690290927886963:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -6.765665531158447:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -6.056290149688721:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -6.889923572540283:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> End']
copynode -6.056290149688721:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-control']
copynode -7.142296314239502:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -2.864096164703369:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ value MemberReference member par0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.864096164703369:  root add ^ StatementExpression expression MethodInvocation member fireDatasetChanged_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.361936077475548:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -1.6661774963140488:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -4.025481685996056:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -4.361936077475548:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -4.025481685996056:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -1.6661774963140488:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -4.025481685996056:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -7.5593820214271545:  root return_type ReferenceType name Comparable_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -8.76514433324337:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter', 'root -> End']
copynode -8.052494292147458:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -4.361936077475548:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -8.589791293052258:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -6.056290149688721:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -3.9742493629455566:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -4.327600464224815:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ value MemberReference member par0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.327600464224815:  root modified ^ StatementExpression expression MethodInvocation member fireDatasetChanged_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.9742493629455566:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -9.144604668021202:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value']
copynode -8.052494292147458:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -8.810577437281609:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.5593820214271545:  root return_type ReferenceType name ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -8.952915884554386:  root parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -7.5593820214271545:  root return_type ReferenceType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name']
copynode -1.6661774963140488:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -7.5593820214271545:  root return_type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -9.849235519766808:  root modified ^ control EnhancedForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl']
copynode -8.952915884554386:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -4.361936077475548:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -7.5593820214271545:  root return_type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -6.690290927886963:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -1.175810620188713:  root modified ^ operator-operator !=_ter ^ ^  |_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> |_ter']
copynode -8.052494292147458:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -9.683584928512573:  root return_type BasicType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'BasicType -> name']
copynode -8.810577437281609:  root StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -7.5593820214271545:  root return_type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -8.589791293052258:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.9742493629455566:  root add ^ ReturnStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> BreakStatement_ter']
copynode -3.9742493629455566:  root add ^ ReturnStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ContinueStatement_ter']
copynode -6.056290149688721:  root add ^ control ForControl_ter ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl_ter']
copynode -3.9742493629455566:  root add ^ ReturnStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement_ter']
copynode -4.025481685996056:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -9.683584928512573:  root return_type BasicType name int_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'copy-BasicType']
copynode -7.5593820214271545:  root return_type ReferenceType name ^ dimensions ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name dimensions']
copynode -8.810577437281609:  root StatementExpression expression This ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -6.690290927886963:  root add ^ LocalVariableDeclaration par0 ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -6.056290149688721:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -5.926872730255127:  root add ^ BreakStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> IfStatement']
copynode -8.052494292147458:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -8.589791293052258:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -5.926872730255127:  root add ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -4.025481685996056:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -1.6661774963140488:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  postfix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators selectors member']
copynode -8.952915884554386:  root parameters FormalParameter annotations ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> annotations type name']
copynode -7.5593820214271545:  root return_type ReferenceType name ^ dimensions ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name dimensions arguments']
copynode -4.361936077475548:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -1.6661774963140488:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -9.144604668021202:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value']
copynode -8.589791293052258:  root IfStatement condition This ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -5.926872730255127:  root add ^ BreakStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> BreakStatement_ter']
copynode -8.052494292147458:  root ReturnStatement expression TernaryExpression ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression']
copynode -8.810577437281609:  root StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -5.926872730255127:  root add ^ BreakStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ContinueStatement_ter']
copynode -9.144604668021202:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> selectors value']
copynode -3.9742493629455566:  root add ^ ReturnStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement']
copynode -6.889923572540283:  root add ^ ContinueStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> IfStatement']
copynode -11.558283567428589:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End', 'root -> End']
copynode -1.0630897879600525:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.922586739063263:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -2.284233570098877:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.714846134185791:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -2.877221643924713:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -1.0630897879600525:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.0630897879600525:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.0630897879600525:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member seriesKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.0630897879600525:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.0630897879600525:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.230213642120361:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -4.593102037906647:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value']
copynode -1.922586739063263:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.922586739063263:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.2236902713775635:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -1.922586739063263:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member seriesKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.900828123092651:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> End']
copynode -1.922586739063263:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.922586739063263:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.352655649185181:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -6.376207649707794:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.877221643924713:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -6.612654030323029:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter', 'root -> End']
copynode -5.384243726730347:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -7.1232593059539795:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -6.401325464248657:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -1.0630897879600525:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.714846134185791:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -7.091127552092075:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -7.091127552092075:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -4.593102037906647:  root modified ^ Literal-Literal value null_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value']
copynode -6.401325464248657:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.401325464248657:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member starts_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -8.33739024400711:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -2.714846134185791:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -6.401325464248657:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.401325464248657:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -2.877221643924713:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -8.695987045764923:  root modified ^ BreakStatement_ter ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> End']
copynode -6.401325464248657:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -4.230213642120361:  root add ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -2.714846134185791:  root add ^ ReturnStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> BreakStatement_ter']
copynode -2.877221643924713:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -9.146194279193878:  root modified ^ ContinueStatement_ter ^ ^ ; ['root -> modified', 'root -> ContinueStatement_ter', 'root -> End']
copynode -1.922586739063263:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.593102037906647:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -2.714846134185791:  root add ^ ReturnStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ContinueStatement_ter']
copynode -2.877221643924713:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -5.384243726730347:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -9.54214459657669:  root modified ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -4.230213642120361:  root add ^ BreakStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> IfStatement']
copynode -4.230213642120361:  root add ^ BreakStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> BreakStatement_ter']
copynode -2.714846134185791:  root add ^ ReturnStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement_ter']
copynode -9.559727996645961:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -9.449534893035889:  root StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -6.401325464248657:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MemberReference qualifier starts_ter ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.449534893035889:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -4.593102037906647:  root modified ^ Literal-Literal value null_ter ^ ^ ^  selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> selectors value']
copynode -4.230213642120361:  root add ^ BreakStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ContinueStatement_ter']
copynode -7.091127552092075:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -9.965376645326614:  root parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -6.401325464248657:  root add ^ LocalVariableDeclaration type ReferenceType name ResourceBundle_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member getBundle_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.091127552092075:  root ReturnStatement expression This_ter ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This_ter']
copynode -2.714846134185791:  root add ^ ReturnStatement_ter ^ control ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> control']
copynode -7.091127552092075:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -5.900828123092651:  root add ^ ContinueStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> StatementExpression']
copynode -6.401325464248657:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.965376645326614:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -2.714846134185791:  root add ^ ReturnStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement']
copynode -9.783391624689102:  root return_type ReferenceType name String_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -2.714846134185791:  root add ^ ReturnStatement_ter ^ WhileStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> WhileStatement']
copynode -5.900828123092651:  root add ^ ContinueStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> IfStatement']
copynode -4.230213642120361:  root add ^ BreakStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ReturnStatement_ter']
copynode -9.559727996645961:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -9.783391624689102:  root return_type ReferenceType name ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -4.593102037906647:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -7.091127552092075:  root ReturnStatement expression ArrayCreator ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator']
copynode -9.783391624689102:  root return_type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -6.401325464248657:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -9.783391624689102:  root return_type ReferenceType name IllegalArgumentException_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -9.783391624689102:  root return_type ReferenceType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name']
copynode -5.900828123092651:  root add ^ ContinueStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> BreakStatement_ter']
copynode -4.593102037906647:  root modified ^ Literal-Literal value null_ter ^ ^ ^  prefix_operators ^ selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators selectors value']
copynode -9.559727996645961:  root IfStatement condition This ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -11.904008150100708:  root StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.091127552092075:  root ReturnStatement expression ClassCreator ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator']
copynode -4.230213642120361:  root add ^ BreakStatement_ter ^ WhileStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> WhileStatement']
copynode -11.949933290481567:  root StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -11.79259181022644:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End', 'root -> End']
copynode -9.559727996645961:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -4.230213642120361:  root add ^ BreakStatement_ter ^ control ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> control']
copynode -12.040968269109726:  root LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -4.593102037906647:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -12.090344667434692:  root StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member seriesKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -9.449534893035889:  root StatementExpression expression This ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -9.783391624689102:  root return_type ReferenceType name String_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -4.593102037906647:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -7.091127552092075:  root ReturnStatement expression This ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This']
before@3 batch0 x: -11.897333025932312: root parameters ^ ^  ; ['root -> parameters', 'parameters -> End', 'root -> End']
after@3 batch0 x: -11.897333025932312: root parameters ^ ^  ; ['root -> parameters', 'parameters -> End', 'root -> End']
before@3 batch1 x: -12.263712085783482: root ReturnStatement expression This ^ ^ ^ ^  ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This']
after@3 batch1 x: -12.263712085783482: root ReturnStatement expression This ^ ^ ^ ^  ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This']
copynode -1.3142110955668613:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -2.3538904637098312:  root modified ^ operator-operator !=_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter', 'root -> End']
copynode -1.9186353236436844:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -2.324159063078696:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -2.88254277408123:  root modified ^ operator-operator !=_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter', 'root -> End']
copynode -2.94534794986248:  root modified ^ operator-operator !=_ter ^ ^  &&_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &&_ter', 'root -> End']
copynode -2.9919578284025192:  root modified ^ operator-operator !=_ter ^ ^  >_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >_ter', 'root -> End']
copynode -1.9186353236436844:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -2.8879677951335907:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -3.589215561747551:  root modified ^ operator-operator !=_ter ^ ^  ||_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ||_ter', 'root -> End']
copynode -1.3142110955668613:  root modified ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -2.324159063078696:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.3232356160879135:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -3.3232356160879135:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors']
copynode -2.8879677951335907:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -1.3142110955668613:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -4.423331305384636:  root modified ^ operator-operator !=_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter', 'root -> End']
copynode -4.56480698287487:  root modified ^ operator-operator !=_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter', 'root -> End']
copynode -2.324159063078696:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -2.8879677951335907:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -1.9186353236436844:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.344051335006952:  root modified ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -3.3232356160879135:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index MemberReference member loc0 ^ ^ ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors']
copynode -4.344051335006952:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -4.464836940169334:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -1.9186353236436844:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -2.324159063078696:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -2.8879677951335907:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -5.572730049490929:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -5.190468654036522:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors']
copynode -5.904330536723137:  root modified ^ operator-operator !=_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter', 'root -> End']
copynode -1.3142110955668613:  root modified ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -4.766506597399712:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.464836940169334:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.464836940169334:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.7332615703344345:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors']
copynode -4.766506597399712:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member startData_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.3519967049360275:  root modified ^ operator-operator !=_ter ^ ^  instanceof_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> instanceof_ter', 'root -> End']
copynode -5.190468654036522:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -1.9186353236436844:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.766506597399712:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.07019579410553:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -4.344051335006952:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -4.766506597399712:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -1.9186353236436844:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member startData_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.819925367832184:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -6.764906667172909:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -2.8879677951335907:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -5.190468654036522:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors ArraySelector index MemberReference member loc0 ^ ^ ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors']
copynode -4.766506597399712:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.572730049490929:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -6.600342497229576:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -2.324159063078696:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -3.3232356160879135:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors']
copynode -5.7332615703344345:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -6.92647397518158:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ update MemberReference postfix_operators ++_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-control', 'root -> End']
copynode -1.9186353236436844:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.07019579410553:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -6.812373220920563:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -2.324159063078696:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference selectors ArraySelector index MemberReference member loc0 ^ ^ ^ ^ ^ ^ member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.301574230194092:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ value MemberReference member par0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.3305888175964355:  root add ^ StatementExpression expression MethodInvocation member fireDatasetChanged_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.477108463644981:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -4.464836940169334:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -2.8879677951335907:  root add ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -1.9186353236436844:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -7.147363725118339:  root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -2.324159063078696:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -7.4792449325323105:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'copy-postfix_operators']
copynode -4.464836940169334:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.600342497229576:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -2.324159063078696:  root add ^ IfStatement condition Cast ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast']
copynode -2.8879677951335907:  root add ^ StatementExpression expression SuperConstructorInvocation_ter ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation_ter']
copynode -5.7332615703344345:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  selectors ArraySelector index MemberReference member loc0 ^ ^ ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors']
copynode -1.9186353236436844:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member meth0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> meth0']
copynode -1.9186353236436844:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.464836940169334:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.464836940169334:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member startData_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -1.3142110955668613:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference selectors ArraySelector index MemberReference member loc0 ^ ^ ^ ^ ^ ^ member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -1.3142110955668613:  root modified ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -4.344051335006952:  root modified ^ StatementExpression expression BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> BinaryOperation']
copynode -8.215291008353233:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -4.344051335006952:  root modified ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -4.766506597399712:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -8.448021873831749:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'copy-postfix_operators']
copynode -2.8879677951335907:  root add ^ StatementExpression expression SuperConstructorInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation']
copynode -8.651170790195465:  root return_type ReferenceType name Comparable_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType', 'root -> End']
copynode -8.418609842658043:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  qualifier unknown ^ ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member', 'start -> unknown']
copynode -6.812373220920563:  root add ^ AssertStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MemberReference']
copynode -4.766506597399712:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.766506597399712:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -2.324159063078696:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -5.190468654036522:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors']
copynode -8.811172847636044:  root ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.812373220920563:  root add ^ AssertStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> Literal']
copynode -1.3878787755966187:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -1.3878787755966187:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.284458483714843:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -2.051051914691925:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.051051914691925:  root modified ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -2.051051914691925:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -3.7607688307762146:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -3.819786012172699:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -1.3878787755966187:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -3.9751893877983093:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member seriesKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -4.115436494350433:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -4.224243104457855:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.284458483714843:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -2.9100076779723167:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -2.284458483714843:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -2.284458483714843:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -2.9100076779723167:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member categoryKeys_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -2.9100076779723167:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member loc5 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -4.633501820266247:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.417196333408356:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.453002989292145:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.9100076779723167:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member loc6 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -2.9100076779723167:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -2.9100076779723167:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member categoryKeys_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.639322340488434:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member seriesKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.9100076779723167:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -1.3878787755966187:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -4.633501820266247:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -5.922523558139801:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.577654004096985:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -5.9986212849617:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.284458483714843:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier categoryKeys_ter ^ ^ member length_ter ^ ^ ^ ^ operandr MemberReference member loc5 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -2.284458483714843:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member categoryKeys_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -2.9100076779723167:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member categoryKeys_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -2.9100076779723167:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member loc7 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc7']
copynode -2.9100076779723167:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -2.284458483714843:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member ends_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -1.3878787755966187:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -3.819786012172699:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -3.7607688307762146:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -2.051051914691925:  root modified ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -6.375394321978092:  root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -3.9751893877983093:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member seriesKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -6.376567011058796:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -4.633501820266247:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter']
copynode -2.284458483714843:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier seriesKeys_ter ^ ^ member length_ter ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.070302724838257:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -4.224243104457855:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -5.577654004096985:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -2.284458483714843:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member seriesKeys_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -2.284458483714843:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.369982123374939:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -7.398160874843597:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -4.115436494350433:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -2.051051914691925:  root modified ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -7.649755038321018:  root ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.251444682478905:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -6.575300514698029:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -4.633501820266247:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value true_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> true_ter']
copynode -6.575300514698029:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  qualifier categoryKeys_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -6.376567011058796:  root modified ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -4.633501820266247:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> false_ter']
copynode -7.419504642486572:  root add ^ ReturnStatement_ter ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.3878787755966187:  root add ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -8.243810214102268:  root ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -3.819786012172699:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -6.375394321978092:  root add ^ WhileStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MethodInvocation']
copynode -8.363196194171906:  root modified ^ Literal-Literal value null_ter ^ ^ ^  prefix_operators -_ter ^ ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter']
copynode -3.7607688307762146:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -4.633501820266247:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter']
copynode -8.528761386871338:  root add ^ ReturnStatement_ter ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement', 'IfStatement -> condition']
copynode -1.3878787755966187:  root add ^ StatementExpression expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> BinaryOperation']
copynode -2.051051914691925:  root modified ^ StatementExpression expression BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> BinaryOperation']
copynode -5.577654004096985:  root add ^ ReturnStatement expression This_ter ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This_ter']
copynode -6.375394321978092:  root add ^ WhileStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MemberReference']
copynode -3.9751893877983093:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member seriesKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -6.575300514698029:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  qualifier seriesKeys_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -6.575300514698029:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  qualifier starts_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -4.224243104457855:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -6.376567011058796:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -1.3878787755966187:  root add ^ StatementExpression expression SuperConstructorInvocation_ter ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation_ter']
copynode -8.64229017496109:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -2.051051914691925:  root modified ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -8.432156324386597:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member starts_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -4.115436494350433:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -8.99076509475708:  root add ^ ReturnStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> BreakStatement_ter', 'root -> End']
copynode -8.372183442115784:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -8.639900922775269:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -8.630934476852417:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -7.251444682478905:  root add ^ AssertStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MemberReference']
copynode -6.575300514698029:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  qualifier ends_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -5.577654004096985:  root add ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
before@4 batch0 x: -8.889526188373566: root add ^ AssertStatement condition Literal ^ ^ ^ ^  ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> Literal']
after@4 batch0 x: -8.889526188373566: root add ^ AssertStatement condition Literal ^ ^ ^ ^  ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> Literal']
before@4 batch1 x: -9.224815487861633: root add ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
after@4 batch1 x: -9.224815487861633: root add ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -1.4590735685778782:  root modified ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.425653949379921:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -2.728224642254645:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.178154543042183:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -3.9150366437388584:  root modified ^ IfStatement condition This selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors']
copynode -4.33558115363121:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -3.4841255247592926:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.1869388073682785:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'copy-ArraySelector']
copynode -3.4841255247592926:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.085794880986214:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -5.0690939128398895:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -3.4841255247592926:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.1869388073682785:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index']
copynode -5.161898348480463:  root modified ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -4.727723039366538:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -5.290765270590782:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -4.265582665801048:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member startData_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member']
copynode -4.265582665801048:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'start -> unknown']
copynode -3.4841255247592926:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.077925599791342:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.50949926674366:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -4.423608506913297:  root modified ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.423608506913297:  root modified ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.077925599791342:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.1711935847997665:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index MemberReference member loc0 ^ ^ ^ ^ ^ ^ member startData_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member']
copynode -4.077925599791342:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -5.197504673153162:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.57670298931771:  root add ^ IfStatement condition This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors']
copynode -6.032496020197868:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -6.0339159816503525:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -4.077925599791342:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.114840969443321:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -6.226739093661308:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member startData_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -4.727723039366538:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -4.265582665801048:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member']
copynode -4.423608506913297:  root modified ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.795042246580124:  root add ^ StatementExpression expression SuperMethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member']
copynode -3.9150366437388584:  root modified ^ IfStatement condition This prefix_operators ^ selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors']
copynode -5.9399344575358555:  root modified ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -1.4590735685778782:  root modified ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.565882161259651:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -6.57356695830822:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -4.265582665801048:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'member -> par0']
copynode -5.1711935847997665:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index MemberReference member loc0 ^ ^ ^ ^ ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member']
copynode -3.9150366437388584:  root modified ^ IfStatement condition This qualifier ^ selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> qualifier selectors']
copynode -3.9150366437388584:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'copy-This']
copynode -6.68361634016037:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.695694658905268:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -6.7156993597745895:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.720589593052864:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member startData_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -5.795042246580124:  root add ^ StatementExpression expression SuperMethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member']
copynode -5.846932604908943:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  qualifier unknown ^ ^ member startData_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'copy-member']
copynode -5.197504673153162:  root modified ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.077925599791342:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -6.423088893294334:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'copy-ArraySelector']
copynode -4.727723039366538:  root add ^ IfStatement condition MemberReference selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> selectors member']
copynode -5.878194496035576:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member startData_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member']
copynode -7.002503082156181:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -6.190575942397118:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member startData_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member']
copynode -2.728224642254645:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.846932604908943:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  qualifier unknown ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'copy-member']
copynode -7.268094018101692:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.869498930871487:  root add ^ LocalVariableDeclaration type ReferenceType name Comparable_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.878194496035576:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'start -> unknown']
copynode -5.197504673153162:  root modified ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.197504673153162:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.131529248930747:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -4.423608506913297:  root modified ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.341709017753601:  root add ^ AssertStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.1869388073682785:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index MemberReference member loc0 ^ ^ ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'copy-ArraySelector']
copynode -5.878194496035576:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'member -> par0']
copynode -4.265582665801048:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member']
copynode -5.9399344575358555:  root modified ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -5.57670298931771:  root add ^ IfStatement condition This prefix_operators ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors']
copynode -5.846932604908943:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  qualifier unknown ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'copy-member']
copynode -4.077925599791342:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -4.423608506913297:  root modified ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -6.960214480757713:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors ArraySelector index MemberReference member loc0 ^ ^ ^ ^ ^ ^ member startData_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member']
copynode -7.550168380141258:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -7.554449513554573:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2', 'root -> End']
copynode -6.423088893294334:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors ArraySelector index ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index']
copynode -7.308454275131226:  root add ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -7.56990051548928:  root add ^ WhileStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.9399344575358555:  root modified ^ IfStatement condition MemberReference selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> selectors member']
copynode -2.13718718290329:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -2.7425645544717554:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.244681477546692:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.3753092885017395:  root modified ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -3.4322550892829895:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -2.244681477546692:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.244681477546692:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.244681477546692:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.8181002736091614:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.9861708879470825:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -2.8181002736091614:  root modified ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.8181002736091614:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.319585286080837:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -2.8181002736091614:  root modified ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.8849042310903315:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -5.297383986413479:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member categoryKeys_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -5.359950505197048:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member loc5 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc5', 'root -> End']
copynode -5.38130759447813:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -4.3102372541616205:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.517648182809353:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member loc6 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc6', 'root -> End']
copynode -5.5240113362669945:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3', 'root -> End']
copynode -5.065169657726074:  root add ^ IfStatement condition This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors']
copynode -5.550367079675198:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member categoryKeys_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -5.668166600167751:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4', 'root -> End']
copynode -4.3102372541616205:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.76383214443922:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> <string>_ter', 'root -> End']
copynode -2.7425645544717554:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.961527049541473:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -2.7425645544717554:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.7425645544717554:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.09800311177969:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member categoryKeys_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.105010710656643:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member loc7 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc7', 'root -> End']
copynode -6.170957051217556:  root modified ^ MemberReference-MemberReference member seriesKeys_ter ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -5.742318511009216:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -2.7425645544717554:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.002236689586425:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier categoryKeys_ter ^ ^ member length_ter ^ ^ ^ ^ operandr MemberReference member loc5 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -6.02126249219873:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member categoryKeys_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -4.8849042310903315:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -4.3102372541616205:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -6.341332758922363:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member ends_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -4.3102372541616205:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.065169657726074:  root add ^ IfStatement condition This prefix_operators ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors']
copynode -6.484933257102966:  root add ^ StatementExpression expression SuperMethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member']
copynode -5.742318511009216:  root add ^ StatementExpression expression MemberReference selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> selectors member']
copynode -2.244681477546692:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.680310904979706:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.9956930205225945:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -6.69687682390213:  root modified ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -4.3102372541616205:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -6.873672999441624:  root add ^ WhileStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.676539123058319:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.256218075752258:  root add ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -7.034888590831542:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier seriesKeys_ter ^ ^ member length_ter ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -6.986349468410481:  root modified ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.002236689586425:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier categoryKeys_ter ^ ^ member length_ter ^ ^ ^ ^ operandr MemberReference member loc5 ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> StatementExpression']
copynode -6.02126249219873:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member categoryKeys_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> StatementExpression']
copynode -4.3102372541616205:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -5.065169657726074:  root add ^ IfStatement condition This qualifier ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> qualifier selectors']
copynode -4.3102372541616205:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -7.356154765147949:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member seriesKeys_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.390302027721191:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.657035960815847:  root ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.3102372541616205:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.244681477546692:  root add ^ StatementExpression expression MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -6.341332758922363:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member ends_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> StatementExpression']
copynode -2.7425645544717554:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.8849042310903315:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -2.7425645544717554:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.818195156753063:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value true_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> true_ter', 'root -> End']
copynode -3.3753092885017395:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'copy-This']
copynode -7.642423927783966:  root modified ^ StatementExpression expression SuperMethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member']
copynode -6.484933257102966:  root add ^ StatementExpression expression SuperMethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member']
copynode -7.908447317779064:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> false_ter', 'root -> End']
copynode -7.458010137081146:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.948663890361786:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member seriesKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.8181002736091614:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -2.7425645544717554:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.676539123058319:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.719209298491478:  root add ^ AssertStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.7425645544717554:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.201025664806366:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.69687682390213:  root modified ^ StatementExpression expression MemberReference selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> selectors member']
copynode -2.244681477546692:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -8.367157876491547:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement', 'IfStatement -> condition']
before@5 batch0 x: -7.627257670159452: root modified ^ IfStatement condition MemberReference selectors ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> selectors member']
after@5 batch0 x: -7.627257670159452: root modified ^ IfStatement condition MemberReference selectors ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> selectors member']
before@5 batch1 x: -8.367466378113022: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement condition ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement', 'IfStatement -> condition']
after@5 batch1 x: -8.367466378113022: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement condition ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement', 'IfStatement -> condition']
copynode -1.4724849777994677:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -1.4724849777994677:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -2.743410762079293:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -2.743410762079293:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.14306325733196:  root modified ^ IfStatement condition This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -1.4724849777994677:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -1.4724849777994677:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.730654627084732:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.335924714221619:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -4.541994959115982:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.685794696211815:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> MethodInvocation']
copynode -5.292166814208031:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member startData_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member', 'root -> End']
copynode -2.743410762079293:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -5.31384502351284:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'start -> unknown', 'root -> End']
copynode -4.335924714221619:  root add ^ StatementExpression expression Assignment expressionl This ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This']
copynode -1.4724849777994677:  root modified ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -2.743410762079293:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.089601177722216:  root add ^ StatementExpression expression This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.235839020460844:  root modified ^ StatementExpression expression This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.2850528728740755:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -2.743410762079293:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -5.679732486605644:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index MemberReference member loc0 ^ ^ ^ ^ ^ ^ member startData_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member', 'root -> End']
copynode -5.235726520419121:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index BinaryOperation ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index', 'index -> BinaryOperation']
copynode -5.6702754866855685:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -1.4724849777994677:  root modified ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -5.544888223404996:  root modified ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -5.744248188711936:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.548115457291715:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.395161546446616:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -4.541994959115982:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -5.343792825937271:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -5.10283949971199:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.767852935940027:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -2.743410762079293:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -5.885045326926047:  root add ^ IfStatement condition This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -2.743410762079293:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -6.244973815657431:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.275879964232445:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member', 'root -> End']
copynode -5.089601177722216:  root add ^ StatementExpression expression This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -4.685794696211815:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> End']
copynode -6.070191301085288:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.3293082368327305:  root modified ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.14306325733196:  root modified ^ IfStatement condition This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -5.343792825937271:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.5539698851061985:  root modified ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.525457109208219:  root modified ^ IfStatement condition This prefix_operators !_ter ^ ^ selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter']
copynode -6.589758262038231:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'member -> par0', 'root -> End']
copynode -1.4724849777994677:  root modified ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter']
copynode -6.614039644598961:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index MemberReference member loc0 ^ ^ ^ ^ ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member', 'root -> End']
copynode -5.395161546446616:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -6.688120330567472:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'copy-This', 'root -> End']
copynode -5.235839020460844:  root modified ^ StatementExpression expression This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -5.10283949971199:  root add ^ StatementExpression expression MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -6.736204996705055:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  qualifier unknown ^ ^ member startData_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'copy-member', 'root -> End']
copynode -6.689973131753504:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.793888963438803:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -6.514873057603836:  root add ^ StatementExpression expression SuperMethodInvocation member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member', 'member -> meth0']
copynode -4.685794696211815:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> ArraySelector']
copynode -2.743410762079293:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter']
copynode -5.235726520419121:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index MethodInvocation ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index', 'index -> MethodInvocation']
copynode -2.743410762079293:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter']
copynode -6.671904290909879:  root modified ^ IfStatement condition This qualifier par0 ^ ^ selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> qualifier selectors', 'qualifier -> par0']
copynode -6.550034846062772:  root modified ^ IfStatement condition MemberReference member startData_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.2850528728740755:  root add ^ IfStatement condition MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.98481921851635:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member startData_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member', 'root -> End']
copynode -6.697288325871341:  root modified ^ StatementExpression expression Assignment expressionl This ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This']
copynode -7.056660816073418:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member startData_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member', 'root -> End']
copynode -6.730043023824692:  root add ^ StatementExpression expression SuperMethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.8782176822423935:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> MethodInvocation']
copynode -7.243134334683418:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  qualifier unknown ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'copy-member', 'root -> End']
copynode -7.269425146281719:  root add ^ LocalVariableDeclaration type ReferenceType name Comparable_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -2.1383153003407642:  root add ^ StatementExpression expression Assignment expressionl This ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This']
copynode -3.434506624471396:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -2.9469142511079554:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.417562711983919:  root modified ^ StatementExpression expression This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -3.916988968849182:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -2.1383153003407642:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -4.034070670604706:  root modified ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -3.388088822364807:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -2.1383153003407642:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -2.9469142511079554:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -3.53195059299469:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -3.9378029704093933:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -3.417562711983919:  root modified ^ StatementExpression expression This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -4.01436317525804:  root add ^ StatementExpression expression This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -4.215194404125214:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -4.01436317525804:  root add ^ StatementExpression expression This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -3.388088822364807:  root add ^ StatementExpression expression MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.8857392072677612:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -2.1383153003407642:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -3.53195059299469:  root add ^ StatementExpression expression MethodInvocation qualifier ResourceBundle_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -2.9469142511079554:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -3.9378029704093933:  root modified ^ StatementExpression expression MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -2.1383153003407642:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -5.209565754194045:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.532627369422698:  root add ^ IfStatement condition This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -3.8857392072677612:  root add ^ StatementExpression expression MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -2.9469142511079554:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.215194404125214:  root modified ^ StatementExpression expression MethodInvocation qualifier ResourceBundle_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -3.8857392072677612:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.803706999082351:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -3.434506624471396:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -3.53195059299469:  root add ^ StatementExpression expression MethodInvocation qualifier loc5 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc5']
copynode -5.971401587128639:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.973235905170441:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -2.9469142511079554:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -3.388088822364807:  root add ^ StatementExpression expression MethodInvocation qualifier loc5 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc5']
copynode -6.029767866391921:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.039861555356765:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -5.710780347842956:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -2.1383153003407642:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -3.53195059299469:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -3.388088822364807:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -5.477841581363464:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -3.53195059299469:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -3.388088822364807:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2']
copynode -6.462691868800903:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.322543974180007:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.973235905170441:  root modified ^ StatementExpression expression MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -6.595486964244628:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -2.1383153003407642:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -3.8857392072677612:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -3.8857392072677612:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -6.73480328466394:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -3.8857392072677612:  root add ^ StatementExpression expression MethodInvocation arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> BinaryOperation']
copynode -6.767824496288085:  root add ^ IfStatement condition This prefix_operators !_ter ^ ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter']
copynode -3.388088822364807:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -2.9469142511079554:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -3.53195059299469:  root add ^ StatementExpression expression MethodInvocation qualifier loc4 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4']
copynode -2.9469142511079554:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -3.417562711983919:  root modified ^ StatementExpression expression This selectors ArraySelector ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> ArraySelector']
copynode -3.8857392072677612:  root add ^ StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -3.8857392072677612:  root add ^ StatementExpression expression MethodInvocation arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This_ter']
copynode -3.388088822364807:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -4.973235905170441:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -3.53195059299469:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -6.84519237279892:  root add ^ StatementExpression expression SuperMethodInvocation member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member', 'member -> meth0']
copynode -6.282325088977814:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -2.1383153003407642:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -6.8928262591362:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
before@6 batch0 x: -7.290376152843237: root add ^ LocalVariableDeclaration type ReferenceType name Comparable_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^  ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
after@6 batch0 x: -7.290376152843237: root add ^ LocalVariableDeclaration type ReferenceType name Comparable_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^  ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
before@6 batch1 x: -7.067563220858574: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
after@6 batch1 x: -7.067563220858574: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -1.8918289857683703:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -3.077009709435515:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -4.262030313606374:  root modified ^ IfStatement condition This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -3.5710969526844565:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -3.5710969526844565:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This']
copynode -4.743093375116587:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -4.126291688211495:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This']
copynode -4.874693303718232:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -4.4729773121653125:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This']
copynode -4.5710186081705615:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This']
copynode -4.126291688211495:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.096016421914101:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.335312336101197:  root add ^ StatementExpression expression Assignment expressionl This selectors ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors']
copynode -1.8918289857683703:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -5.493452865630388:  root add ^ StatementExpression expression This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -1.8918289857683703:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> This']
copynode -5.5282358936965466:  root modified ^ StatementExpression expression This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.37974804235273:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.746412389358738:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.692859873175621:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index', 'index -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.361754091340117:  root modified ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This']
copynode -5.729293743963353:  root modified ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -5.803108073450858:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -5.087046951055527:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.912808150053024:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.042483545519644:  root add ^ IfStatement condition This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.312422450311715:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -5.720781715470366:  root modified ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> This']
copynode -6.060270961053902:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -3.077009709435515:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -5.769909868831746:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments This ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> This']
copynode -5.63673275304609:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -5.577186084963614:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.419186997110955:  root modified ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -5.312422450311715:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This']
copynode -3.077009709435515:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> This']
copynode -3.5710969526844565:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> BinaryOperation']
copynode -4.4729773121653125:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -6.505065947771072:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -5.096016421914101:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MethodInvocation member ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.69766188567155:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -5.577186084963614:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -1.8918289857683703:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -5.69766188567155:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -5.087046951055527:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -6.254403543338412:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -4.5710186081705615:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'copy-operandl']
copynode -4.4729773121653125:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> BinaryOperation']
copynode -6.720099240541458:  root add ^ StatementExpression expression MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -6.35437248647213:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member startData_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> End', 'copy-member']
copynode -6.0037504990177695:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
copynode -6.792335622943938:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -3.5710969526844565:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -6.829418450593948:  root add ^ StatementExpression expression SuperMethodInvocation member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member', 'member -> meth0', 'root -> End']
copynode -6.556858423049562:  root modified ^ IfStatement condition This prefix_operators !_ter ^ ^ selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter', 'selectors -> MemberReference']
copynode -5.63673275304609:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> This']
copynode -4.4729773121653125:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -6.962984855170362:  root modified ^ IfStatement condition MemberReference member startData_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.3378495164215565:  root add ^ StatementExpression expression This selectors MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.490490625496022:  root modified ^ IfStatement condition This selectors MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.593645485001616:  root modified ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> This']
copynode -6.718474756926298:  root modified ^ StatementExpression expression This selectors MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.86963215470314:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -2.638003121013753:  root add ^ StatementExpression expression Assignment expressionl This selectors ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors']
copynode -3.8380197174847126:  root modified ^ StatementExpression expression This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -3.922811318654567:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -4.047178749926388:  root modified ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -4.040295342798345:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -3.6212542607972864:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This']
copynode -3.6212542607972864:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -3.6176978345029056:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal']
copynode -4.623469298705459:  root add ^ StatementExpression expression This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -3.6176978345029056:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference']
copynode -5.050536274909973:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.588927615433931:  root modified ^ StatementExpression expression This selectors MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.3458827092836145:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -3.6176978345029056:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -5.306193232536316:  root add ^ StatementExpression expression MethodInvocation qualifier ResourceBundle_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -4.3458827092836145:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This']
copynode -4.588927615433931:  root modified ^ StatementExpression expression This selectors MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.261572003364563:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -4.278380493517034:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference']
copynode -4.861683851107955:  root add ^ StatementExpression expression This selectors MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.278380493517034:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -4.278380493517034:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal']
copynode -4.861683851107955:  root add ^ StatementExpression expression This selectors MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.748066808242584:  root add ^ IfStatement condition This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.772643208503723:  root add ^ StatementExpression expression MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -2.638003121013753:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'copy-This']
copynode -5.824500739574432:  root modified ^ StatementExpression expression MethodInvocation qualifier ResourceBundle_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.554178084392333:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -5.970567584037781:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -4.402835845947266:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.777223880548263:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.261572003364563:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -6.0646586418151855:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.055226445198059:  root add ^ StatementExpression expression MethodInvocation qualifier loc5 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc5', 'start -> unknown']
copynode -4.402835845947266:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -6.106670916080475:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.0586768192006275:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference']
copynode -5.4603446080873255:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -5.0586768192006275:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal']
copynode -5.018543362617493:  root add ^ StatementExpression expression MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.0586768192006275:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -6.334847569465637:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -4.402835845947266:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments This ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> This']
copynode -6.395720601081848:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
copynode -4.402835845947266:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> This_ter']
copynode -3.6212542607972864:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -6.4886594414711:  root modified ^ StatementExpression expression MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -5.493319610948674:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference']
copynode -5.468072593212128:  root modified ^ StatementExpression expression MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.493319610948674:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal']
copynode -5.018543362617493:  root add ^ StatementExpression expression MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -6.723821520805359:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc6 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -3.6176978345029056:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value BinaryOperation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation']
copynode -4.261572003364563:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> This_ter']
copynode -2.638003121013753:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'copy-This']
copynode -4.261572003364563:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -5.554178084392333:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -5.4603446080873255:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This']
copynode -6.4786780971626285:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.835433125495911:  root add ^ StatementExpression expression MethodInvocation qualifier loc4 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4', 'start -> unknown']
copynode -5.493319610948674:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -4.402835845947266:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -4.278380493517034:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value BinaryOperation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation']
copynode -6.135479266900802:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -5.018543362617493:  root add ^ StatementExpression expression MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -6.912856936454773:  root add ^ StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
before@7 batch0 x: -7.0573531848494895: root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member startData_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member', 'root -> End']
after@7 batch0 x: -7.0573531848494895: root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member startData_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member', 'root -> End']
before@7 batch1 x: -6.949890252202749: root add ^ StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
after@7 batch1 x: -6.949890252202749: root add ^ StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -1.9983731153188273:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -1.9983731153188273:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.202726052957587:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.267718618153594:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.423213954694802:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.202726052957587:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.5024395544605795:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This']
copynode -4.969369890051894:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This']
copynode -4.954352887230925:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This']
copynode -4.820772822626168:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This']
copynode -5.171228941209847:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.402160398080014:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.405764790135436:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -5.541860510595143:  root modified ^ StatementExpression expression This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.5024395544605795:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors']
copynode -4.925299137248658:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.925299137248658:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.925992096657865:  root modified ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -5.63981884313398:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.9842996299266815:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.820772822626168:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors']
copynode -6.000851698219776:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.517349453526549:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> This', 'copy-This']
copynode -5.496706068282947:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.125134881265694:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.39688666164875:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MethodInvocation arguments This ^ ^ member ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This']
copynode -5.91036394413095:  root modified ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This', 'copy-This']
copynode -4.954352887230925:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors']
copynode -6.3975184065056965:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> This', 'copy-This']
copynode -4.267718618153594:  root modified ^ IfStatement condition This selectors MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.969369890051894:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors']
copynode -5.517349453526549:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> This', 'This -> selectors']
copynode -6.401570137270028:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.5024395544605795:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This']
copynode -6.561605669237906:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -6.5470614321529865:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -6.312983806856209:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.899846404790878:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index', 'index -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -5.778548971196869:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.313685925561003:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -6.553922548890114:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.665362447500229:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -6.652223596029216:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -6.045056647533784:  root add ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.304232569294982:  root modified ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> This', 'copy-This']
copynode -6.754527613520622:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member startData_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> End', 'copy-member', 'root -> End']
copynode -5.778548971196869:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -5.496706068282947:  root add ^ StatementExpression expression This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.487989218789153:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> This', 'copy-This']
copynode -6.877115520532243:  root modified ^ IfStatement condition This prefix_operators !_ter ^ ^ selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.955106682755286:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -4.423213954694802:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference selectors ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> selectors member']
copynode -5.955106682755286:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -4.267718618153594:  root modified ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.50938421083265:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.820772822626168:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This']
copynode -6.783915515668923:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.457343514688546:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This', 'copy-This']
copynode -2.7393373277736828:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -3.842595708090812:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.061111842165701:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.561282570619369:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.604724049102515:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value']
copynode -4.688401340972632:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member']
copynode -5.246068771142745:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.415942664403701:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This']
copynode -5.340372812002897:  root add ^ StatementExpression expression MethodInvocation qualifier ResourceBundle_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -4.627014122903347:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.392846751958132:  root modified ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.48774516582489:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.504983047838323:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member']
copynode -5.576781372423284:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value']
copynode -5.626072173938155:  root add ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.415942664403701:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors']
copynode -5.904104135930538:  root modified ^ StatementExpression expression MethodInvocation qualifier ResourceBundle_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -5.980503523722291:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.024147272109985:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.842595708090812:  root modified ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.089610934257507:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -6.096682585775852:  root add ^ StatementExpression expression MethodInvocation qualifier loc5 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc5', 'start -> unknown', 'root -> End']
copynode -6.10868501663208:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -5.751513478957349:  root add ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.263179063331336:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.415942664403701:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This']
copynode -6.208721379633062:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member']
copynode -6.263661797303939:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.285847048158757:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value']
copynode -5.212966609746218:  root modified ^ StatementExpression expression This selectors MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.307019472122192:  root add ^ StatementExpression expression MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.077812309522415:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.369359705597162:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'root -> End']
copynode -6.4276433773338795:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> End']
copynode -5.341451461572433:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This']
copynode -4.415942664403701:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This']
copynode -5.263179063331336:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.341451461572433:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors']
copynode -5.507087891921401:  root add ^ StatementExpression expression This selectors MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.419830560684204:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> This', 'copy-This']
copynode -6.147844038903713:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member seriesKeys_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.637364606256597:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value']
copynode -6.5764380496693775:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member']
copynode -6.618241965770721:  root modified ^ StatementExpression expression MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.439032077789307:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> This_ter', 'arguments -> End']
copynode -4.627014122903347:  root add ^ StatementExpression expression This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.75000917725265:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc6 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -4.627014122903347:  root add ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.545626739854924:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.842595708090812:  root modified ^ StatementExpression expression This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.545626739854924:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.866202048957348:  root add ^ StatementExpression expression MethodInvocation qualifier loc4 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4', 'start -> unknown', 'root -> End']
copynode -5.790492884814739:  root add ^ StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -6.909437234658981:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.929242372512817:  root add ^ StatementExpression expression MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -5.212966609746218:  root modified ^ StatementExpression expression This selectors MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -6.533929523080587:  root modified ^ StatementExpression expression MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.884959707851522:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'copy-This', 'value -> Literal']
copynode -5.263179063331336:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.949890252202749:  root add ^ StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.761458515655249:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.627014122903347:  root add ^ StatementExpression expression This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
before@8 batch0 x: -6.993298526533181: root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This', 'copy-This']
after@8 batch0 x: -6.993298526533181: root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This', 'copy-This']
before@8 batch1 x: -7.030318938195705: root add ^ StatementExpression expression This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
after@8 batch1 x: -7.030318938195705: root add ^ StatementExpression expression This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -2.2719696107087657:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -3.487464593607001:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -2.2719696107087657:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This']
copynode -3.43285783554893:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -3.43285783554893:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.5992651392298285:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.43285783554893:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.487464593607001:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This']
copynode -4.503757958649658:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -2.2719696107087657:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -4.503757958649658:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> ArraySelector']
copynode -5.417611313401721:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.676620872574858:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.43285783554893:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -5.338783140905434:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.43285783554893:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -4.602912949281745:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.756849702127511:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.3142347295361105:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr']
copynode -5.737980236299336:  root modified ^ StatementExpression expression This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -4.602912949281745:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.25951150234323:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'operandr -> This']
copynode -5.043282027967507:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr']
copynode -6.143581326730782:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.083839535713196:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.043282027967507:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference']
copynode -6.1747653799830005:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> This', 'copy-This', 'operandr -> BinaryOperation']
copynode -5.2786004858789966:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> This']
copynode -6.258460402255878:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -5.043282027967507:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal']
copynode -2.2719696107087657:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MemberReference']
copynode -3.43285783554893:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -6.3774339276133105:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.7858510905643925:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal']
copynode -3.487464593607001:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -5.2786004858789966:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> BinaryOperation']
copynode -6.494062544661574:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -4.602912949281745:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.148023404181004:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.5756718831835315:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.304759572871262:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.350589290261269:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MethodInvocation arguments This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This', 'copy-This']
copynode -6.43882290169131:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> This', 'copy-This', 'arguments -> End']
copynode -6.636408718186431:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.643723785877228:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -3.43285783554893:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -4.5992651392298285:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.7574823651521:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -4.602912949281745:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -5.945374037750298:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -4.602912949281745:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -6.883984751679236:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -5.826756089343689:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MemberReference']
copynode -2.751601676340215:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -4.133896213490516:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -4.627403577324003:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.44033822871279:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation']
copynode -5.3757927641272545:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -4.741012278478593:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member seriesKeys_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.511869188398123:  root modified ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -5.667642073705792:  root add ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -4.44033822871279:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal']
copynode -4.573810640868032:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member seriesKeys_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.893029566068435:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.609367503668182:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.094936024863273:  root modified ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -4.44033822871279:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference']
copynode -5.3198581292817835:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr']
copynode -6.342772651463747:  root modified ^ StatementExpression expression This selectors MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.166299430333311:  root add ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -6.099746095016599:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -6.125626327469945:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -6.316304013947956:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.616751974448562:  root add ^ StatementExpression expression This selectors MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.606944377679611:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.3198581292817835:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr']
copynode -6.700166426599026:  root add ^ StatementExpression expression This selectors MemberReference member categoryKeys_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -4.741012278478593:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.556444406043738:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.573810640868032:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member categoryKeys_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.618140339851379:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> This', 'copy-This', 'arguments -> End']
copynode -6.789092980325222:  root add ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -4.573810640868032:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.833654772955924:  root modified ^ StatementExpression expression This selectors MemberReference member categoryKeys_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -6.6661874279379845:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member seriesKeys_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -5.265154435444856:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member seriesKeys_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.573810640868032:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -6.962273646146059:  root modified ^ StatementExpression expression This selectors MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -6.397421713132644:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.178306757938117:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -6.981781243812293:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.67149978026282:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.604824553127401:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.981029997463338:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'copy-This', 'value -> Literal', 'Literal -> value']
copynode -7.030318938195705:  root add ^ StatementExpression expression This selectors MemberReference member categoryKeys_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -6.971536036580801:  root modified ^ StatementExpression expression MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -6.074245564639568:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member seriesKeys_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.44033822871279:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value This ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> This']
copynode -6.909106247127056:  root add ^ StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -6.249167914647842:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr']
copynode -4.741012278478593:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member loc3 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -5.553249843418598:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7']
copynode -5.265154435444856:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.265154435444856:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -6.815874914522283:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -7.010547160636634:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
before@9 batch0 x: -6.938286035670899: root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MemberReference']
after@9 batch0 x: -6.938286035670899: root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MemberReference']
before@9 batch1 x: -7.458180129062384: root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
after@9 batch1 x: -7.458180129062384: root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -2.531605118769221:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.8140021729050204:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.259378725546412:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors']
copynode -4.742675388115458:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This']
copynode -4.825996125000529:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.259378725546412:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This prefix_operators ^ selectors ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> prefix_operators selectors']
copynode -5.136424625176005:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This']
copynode -5.189585851388983:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors']
copynode -5.40789759659674:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> ArraySelector', 'copy-ArraySelector']
copynode -5.201913480996154:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.859212193317944:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -4.992094974644715:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -5.2396491112886:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.41988770023454:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.0562253491953015:  root modified ^ StatementExpression expression This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.736533725517802:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This']
copynode -6.244104157813126:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.79090755773359:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -5.828841769951396:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -4.992094974644715:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -5.865307327039773:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> End']
copynode -5.41988770023454:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.201913480996154:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.858724163728766:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.385281558759743:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal', 'Literal -> value']
copynode -4.992094974644715:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -6.461778925615363:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.144366787630133:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This']
copynode -6.476895003928803:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value']
copynode -6.155962319928221:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'operandr -> This', 'copy-This']
copynode -6.348383160191588:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> This', 'copy-This', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.577585318940692:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.366679824655876:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.620401062071323:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -6.655242869514041:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -4.742675388115458:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -6.348811538773589:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> This', 'copy-This']
copynode -6.3432569463329855:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.506728561478667:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.531605118769221:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.259378725546412:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This qualifier ^ selectors ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> qualifier selectors']
copynode -6.668927773833275:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MethodInvocation arguments This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This', 'copy-This', 'arguments -> End']
copynode -4.259378725546412:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'copy-This']
copynode -6.604157971101813:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This']
copynode -4.825996125000529:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> This']
copynode -6.326829597353935:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.425250613945536:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> This']
copynode -6.227005358465249:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> ReturnStatement_ter']
copynode -5.865307327039773:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> ReturnStatement_ter']
copynode -5.715691177058034:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.2396491112886:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.755018860916607:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.167527325917035:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.695746091660112:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter']
copynode -4.167527325917035:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.755018860916607:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.503981772344559:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member seriesKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member', 'copy-member', 'type -> =_ter']
copynode -5.5438119657337666:  root modified ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -5.699698580428958:  root add ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -5.428676959127188:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.755018860916607:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.7801661238772795:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value']
copynode -5.977618622739101:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.984322978998534:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter']
copynode -2.755018860916607:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.286708389292471:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.290374253760092:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> member']
copynode -6.201586712617427:  root modified ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.381127054948593:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> End']
copynode -6.640996471862309:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter']
copynode -6.695986907143379:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.286708389292471:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.781340065877885:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'type -> =_ter']
copynode -2.755018860916607:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member loc2 ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -5.428676959127188:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.546169521287084:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -5.936621014174307:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member seriesKeys_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -6.761324579973007:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> End']
copynode -2.755018860916607:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.951609812676907:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member seriesKeys_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown']
copynode -6.772088780999184:  root add ^ StatementExpression expression This selectors MemberReference member categoryKeys_ter ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.044967673253268:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'type -> =_ter']
copynode -7.060309610213153:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter']
copynode -6.481522785499692:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -6.458229062758619:  root add ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -7.079829226131551:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'type -> =_ter']
copynode -6.982971357181668:  root modified ^ StatementExpression expression This selectors MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.846880331635475:  root add ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.755018860916607:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member loc3 ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -6.873011898715049:  root modified ^ StatementExpression expression This selectors MemberReference member categoryKeys_ter ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.203553061932325:  root modified ^ StatementExpression expression MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'start -> unknown']
copynode -5.286708389292471:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.286708389292471:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.299904130399227:  root add ^ StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'start -> unknown']
copynode -7.363701287191361:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member loc3 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'type -> =_ter']
copynode -2.755018860916607:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.105256162583828:  root add ^ StatementExpression expression This selectors MemberReference member categoryKeys_ter ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.755018860916607:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.3988256230950356:  root modified ^ StatementExpression expression This selectors MethodInvocation arguments MemberReference member seriesKeys_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.458229062758619:  root add ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'root -> StatementExpression']
copynode -2.755018860916607:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.3525772049615625:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> End']
copynode -7.012606318254257:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This']
copynode -6.201586712617427:  root modified ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
before@10 batch0 x: -7.0835326256928965: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
after@10 batch0 x: -7.0835326256928965: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
before@10 batch1 x: -7.574405182618648: root modified ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
after@10 batch1 x: -7.574405182618648: root modified ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.5718166212318465:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -2.5718166212318465:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.854353921371512:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -2.5718166212318465:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -4.920158201712184:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -2.5718166212318465:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -2.5718166212318465:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -2.5718166212318465:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -5.099826270597987:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This']
copynode -5.436792308348231:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This prefix_operators !_ter ^ ^ selectors ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter']
copynode -3.854353921371512:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.56990610237699:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.448913151281886:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This']
copynode -3.854353921371512:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -5.3778901937184855:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.5718166212318465:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -6.135157623444684:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> par0', 'selectors -> End']
copynode -3.854353921371512:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.3778901937184855:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.0598947944818065:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -5.697724704979919:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation arguments This ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This']
copynode -5.099826270597987:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors']
copynode -2.5718166212318465:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter']
copynode -5.574331765412353:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> MethodInvocation']
copynode -6.390950241242535:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -3.854353921371512:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -6.386771183140809:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -6.402085666893981:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -3.854353921371512:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -6.532782139140181:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'operandr -> This', 'copy-This', 'root -> End']
copynode -5.448913151281886:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors']
copynode -6.2223543169675395:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This', 'copy-This']
copynode -6.647531490772963:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.001279215939576:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement_ter']
copynode -6.465701621375047:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.574331765412353:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> End']
copynode -6.76142805989366:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> This', 'copy-This', 'root -> End']
copynode -6.706864798325114:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.829572552698664:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.263049419649178:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> End']
copynode -6.581703646923415:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.8931499066529796:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'copy-This', 'root -> End']
copynode -6.5026101934490725:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This']
copynode -2.5718166212318465:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator instanceof_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter']
copynode -6.658801810699515:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.4098208133655135:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.865147620439529:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MethodInvocation arguments This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This', 'copy-This', 'arguments -> End', 'start -> unknown']
copynode -6.359908306854777:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.4352254678087775:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.697724704979919:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -3.137071103672497:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -4.698232667753473:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> End']
copynode -5.266210087109357:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.510908640921116:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member seriesKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -5.50240150175523:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -4.592345871496946:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.806604535202496:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -5.987952506984584:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> End']
copynode -4.592345871496946:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -6.188625723938458:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -5.731622602790594:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.644409649423324:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> End']
copynode -6.786163862328976:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'type -> =_ter', 'root -> End']
copynode -6.811937005142681:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member loc2 ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'selectors -> End']
copynode -5.812560391495936:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -5.812560391495936:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.970102460007183:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -7.010851249098778:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member seriesKeys_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.049404217861593:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'type -> =_ter', 'root -> End']
copynode -7.063411234295927:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> End']
copynode -6.941408936079824:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member seriesKeys_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> End']
copynode -7.086963842040859:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'type -> =_ter', 'root -> End']
copynode -4.592345871496946:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.592345871496946:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This_ter']
copynode -7.190251977066509:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member loc3 ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'selectors -> End']
copynode -5.98160971669131:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.98160971669131:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.281123537570238:  root modified ^ StatementExpression expression MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -4.592345871496946:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -7.336893659085035:  root add ^ StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.370542752556503:  root modified ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member loc3 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'type -> =_ter', 'root -> End']
copynode -7.373502881149761:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -5.812560391495936:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -7.395767361740582:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -7.0984198320657015:  root modified ^ StatementExpression expression This selectors MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -7.4489213534398:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -4.592345871496946:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.592345871496946:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments This ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This']
copynode -7.431309995852644:  root add ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.54383983137086:  root modified ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -7.396866001188755:  root modified ^ StatementExpression expression This selectors MethodInvocation arguments MemberReference member seriesKeys_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -5.731622602790594:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -4.592345871496946:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> BinaryOperation']
copynode -6.699327659007395:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.040741786360741:  root add ^ StatementExpression expression This selectors MemberReference member categoryKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.309637819300406:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation qualifier loc5 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc5']
copynode -7.12701116502285:  root add ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
before@11 batch0 x: -7.008289342164062: root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
after@11 batch0 x: -7.008289342164062: root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
before@11 batch1 x: -8.040308937430382: root add ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
after@11 batch1 x: -8.040308937430382: root add ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -3.4198749045608565:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This']
copynode -4.11441296141129:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This']
copynode -5.0374980884371325:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -4.800465481239371:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This']
copynode -3.4198749045608565:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -4.954357800888829:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This']
copynode -5.684235388296656:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.273190198349766:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> This']
copynode -5.273785291123204:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.375542340683751:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> This']
copynode -5.523783827084117:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This prefix_operators !_ter ^ ^ selectors MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter', 'selectors -> MemberReference']
copynode -5.671471493202262:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This']
copynode -4.11441296141129:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.975891793030314:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -5.907686965423636:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This']
copynode -6.3452301564393565:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.33545685315039:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation arguments This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This', 'copy-This']
copynode -6.264266217011027:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -3.4198749045608565:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -5.995501218247227:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -6.411691255547339:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.1408144576707855:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> par0', 'selectors -> End', 'value -> MemberReference']
copynode -6.506597605883144:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -3.4198749045608565:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> BinaryOperation']
copynode -6.194062011200003:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.638052279013209:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -4.954357800888829:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -6.737109165318543:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement_ter', 'root -> End']
copynode -6.759795909165405:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> End', 'root -> End']
copynode -4.800465481239371:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -6.396641722996719:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference']
copynode -3.4198749045608565:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -6.381409345078282:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <=_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> This']
copynode -6.409250991302542:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> This']
copynode -6.514626281219535:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> This']
copynode -6.971627026796341:  root modified ^ MemberReference-MemberReference member startData_ter ^ ^ ^  selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MethodInvocation arguments This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This', 'copy-This', 'arguments -> End', 'start -> unknown', 'selectors -> End']
copynode -6.2168542387662455:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.503177935141139:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal']
copynode -5.503177935141139:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference']
copynode -5.273190198349766:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -6.384286587475799:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> ArraySelector', 'copy-ArraySelector', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.758224141201936:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -5.503177935141139:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr']
copynode -6.884599043871276:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -3.1403109113452956:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference']
copynode -3.1403109113452956:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation']
copynode -3.1403109113452956:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal']
copynode -5.359145276714116:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -5.7244326253421605:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.527112175594084:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference']
copynode -6.176022328902036:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -5.8342477668775246:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference']
copynode -6.630316402763128:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.198971227626316:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference']
copynode -6.836116623948328:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter']
copynode -5.527112175594084:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MethodInvocation']
copynode -6.928514194558375:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter']
copynode -3.1403109113452956:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation']
copynode -6.816709894104861:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member loc2 ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'selectors -> End', 'value -> MemberReference']
copynode -5.8342477668775246:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MethodInvocation']
copynode -7.150475420523435:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -7.274892225541407:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -7.401637983391993:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> true_ter', 'type -> =_ter']
copynode -7.24049152401858:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -7.167809166479856:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This_ter', 'arguments -> End']
copynode -6.987093665520661:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference']
copynode -7.195077929995023:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member loc3 ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'selectors -> End', 'value -> MemberReference']
copynode -5.527112175594084:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> Literal']
copynode -7.632825512904674:  root modified ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.4220064748078585:  root modified ^ StatementExpression expression This selectors MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'start -> unknown']
copynode -6.198971227626316:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MethodInvocation']
copynode -7.735937979072332:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -7.388157806242816:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference']
copynode -7.409314157324843:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference']
copynode -7.714593060314655:  root modified ^ StatementExpression expression This selectors MethodInvocation arguments MemberReference member seriesKeys_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown']
copynode -7.457090846146457:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference']
copynode -5.8342477668775246:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> Literal']
copynode -7.347300209570676:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
before@12 batch0 x: -7.136950745130889: root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
after@12 batch0 x: -7.136950745130889: root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
before@12 batch1 x: -7.983669855166227: root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
after@12 batch1 x: -7.983669855166227: root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.793513176846318:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This']
copynode -3.793513176846318:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors']
copynode -4.458942888188176:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This']
copynode -5.373257396626286:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.458942888188176:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors']
copynode -5.162205921369605:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This']
copynode -5.047141259419732:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.835778767126612:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This prefix_operators !_ter ^ ^ selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.393680570530705:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This', 'copy-This']
copynode -5.7486233989475295:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> This', 'copy-This']
copynode -5.7677153329132125:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.095911560463719:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.162205921369605:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors']
copynode -6.271194273489527:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.816470144200139:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> This', 'copy-This']
copynode -5.694127503666095:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.39772380318027:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -3.793513176846318:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This']
copynode -5.047141259419732:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.4704099538503215:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -6.002427743631415:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This']
copynode -5.393680570530705:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This', 'This -> selectors']
copynode -6.42479783797171:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation arguments This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This', 'copy-This', 'arguments -> End']
copynode -6.569145691930316:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -5.047141259419732:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.691248973715119:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.565375570789911:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> par0', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member']
copynode -6.337247686344199:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This', 'copy-This']
copynode -5.816470144200139:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> This', 'This -> selectors']
copynode -5.7486233989475295:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> This', 'This -> selectors']
copynode -4.458942888188176:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This']
copynode -6.497602103161626:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.7833569216309115:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.80642365582753:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member']
copynode -6.7438946346519515:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.015269452589564:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal', 'Literal -> value']
copynode -6.600794551777653:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.694127503666095:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.807015417027287:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.002427743631415:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors']
copynode -6.687245564418845:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.121047669905238:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'operandr -> BinaryOperation']
copynode -3.7868247906444594:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member']
copynode -4.287738470244221:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.297403005766682:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value']
copynode -5.3903427184559405:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -4.287738470244221:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.054062594543211:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member']
copynode -6.336420534993522:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member']
copynode -6.194228066597134:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.672394947032444:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member']
copynode -4.287738470244221:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.287738470244221:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.840155772748403:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter', 'root -> End']
copynode -6.931088372250088:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> End']
copynode -7.207371372147463:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member loc2 ^ ^ ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member']
copynode -3.7868247906444594:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.77903449954465:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member seriesKeys_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.371172108221799:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'selectors -> End']
copynode -7.405524536850862:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> true_ter', 'type -> =_ter', 'root -> End']
copynode -7.469475009362213:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member']
copynode -4.287738470244221:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -7.58602416922804:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member loc3 ^ ^ ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member']
copynode -4.287738470244221:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.970815328764729:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.658617664943449:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> Literal', 'Literal -> value']
copynode -7.722875760868192:  root modified ^ StatementExpression expression This selectors MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'start -> unknown', 'selectors -> End']
copynode -5.77903449954465:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -5.77903449954465:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7']
copynode -7.4682487030513585:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This_ter', 'arguments -> End', 'start -> unknown']
copynode -4.287738470244221:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.865643343771808:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member']
copynode -7.912781201303005:  root modified ^ StatementExpression expression This selectors MethodInvocation arguments MemberReference member seriesKeys_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown', 'selectors -> End']
copynode -7.906294496613555:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member']
copynode -7.953095069970004:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member']
copynode -7.9744877208722755:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> Literal', 'Literal -> value']
before@13 batch0 x: -7.216977337258868: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'operandr -> BinaryOperation']
after@13 batch0 x: -7.216977337258868: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'operandr -> BinaryOperation']
before@13 batch1 x: -8.013399931485765: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> Literal', 'Literal -> value']
after@13 batch1 x: -8.013399931485765: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> Literal', 'Literal -> value']
copynode -4.947291849064641:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -4.2908123711822554:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference']
copynode -5.62418782513123:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -4.2908123711822554:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> This']
copynode -4.2908123711822554:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr']
copynode -5.727919226395898:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -6.329818474012427:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.841998502495699:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This prefix_operators !_ter ^ ^ selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.965080020832829:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference']
copynode -6.52476417820435:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -4.2908123711822554:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal']
copynode -5.604985637473874:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.965080020832829:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr']
copynode -6.466964071500115:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -4.2908123711822554:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MethodInvocation']
copynode -4.2908123711822554:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr']
copynode -5.604985637473874:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member startData_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.756363366381265:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ value MemberReference member par0 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> par0', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.965080020832829:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'operandr -> This']
copynode -5.915960071492009:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference']
copynode -6.372991923126392:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -6.402792831766419:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.899474380421452:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.914103535818867:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.651321070152335:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference']
copynode -6.347521724062972:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.727919226395898:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -4.2908123711822554:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr']
copynode -6.6734034473774955:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member length_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -6.300697741913609:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.568809320568107:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation arguments This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This', 'copy-This', 'arguments -> End', 'start -> unknown']
copynode -4.2908123711822554:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> BinaryOperation']
copynode -5.604985637473874:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.695712460088544:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.184181379037909:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -7.014921984751709:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member par0 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.2476702014682814:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference']
copynode -4.965080020832829:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr']
copynode -7.142799077439122:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.357560036587529:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference']
copynode -5.333056094008498:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.333056094008498:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -3.8215669634519145:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.534225596580654:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -3.8215669634519145:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member loc3 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -5.214493540930562:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier loc5 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc5']
copynode -5.333056094008498:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -5.214493540930562:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -7.379008857998997:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -5.214493540930562:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -3.8215669634519145:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member loc7 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc7']
copynode -7.342945341486484:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member seriesKeys_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -5.590607313322835:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.8215669634519145:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.08812419406604:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member loc5 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -7.628013757872395:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
copynode -3.8215669634519145:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member loc1 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -7.732688901014626:  root modified ^ StatementExpression expression This selectors MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -6.730383781599812:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -7.778866891283542:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End']
copynode -6.3699784827185795:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member loc5 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -7.874097971129231:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
copynode -7.867778696585447:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This_ter', 'arguments -> End', 'start -> unknown', 'selectors -> End']
copynode -3.8215669634519145:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member loc0 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.9222945077344775:  root modified ^ StatementExpression expression This selectors MethodInvocation arguments MemberReference member seriesKeys_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -7.863778476137668:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End']
copynode -5.214493540930562:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier loc4 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4']
copynode -7.637461570906453:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -5.214493540930562:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -3.8215669634519145:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'copy-member']
before@14 batch0 x: -7.373893855023198: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference']
after@14 batch0 x: -7.373893855023198: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference']
before@14 batch1 x: -8.038951778667979: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'copy-member']
after@14 batch1 x: -8.038951778667979: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.02324604045134:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.69892456184607:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.671270726132207:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.209553478169255:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> End']
copynode -6.408360684174113:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.151133058476262:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> This', 'copy-This']
copynode -6.617304695653729:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.642109272885136:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal', 'Literal -> value']
copynode -6.281364923226647:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.769017336773686:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> End']
copynode -6.7875700945733115:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -6.815672753262334:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> End']
copynode -6.468096492695622:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.838004660443403:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ value MemberReference member par0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> par0', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> par0', 'type -> =_ter']
copynode -6.958522817003541:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -6.990714942920022:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -7.0251296813366935:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'root -> End']
copynode -7.010494066285901:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -7.061446068692021:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> End']
copynode -6.801319477963261:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.855713723110966:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'operandr -> This', 'copy-This']
copynode -7.173311044811271:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation arguments This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This', 'copy-This', 'arguments -> End', 'start -> unknown', 'selectors -> End']
copynode -6.456301316502504:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This prefix_operators !_ter ^ ^ selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -7.260424590785988:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member par0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> par0', 'type -> =_ter']
copynode -7.260230878251605:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -7.28994083206635:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'copy-operandr', 'root -> End']
copynode -7.240099264192395:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -6.926388261723332:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.281364923226647:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.014064328628592:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.94614047172945:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.456301316502504:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This prefix_operators !_ter ^ ^ selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -7.019161285716109:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This']
copynode -5.671270726132207:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference selectors ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> selectors member']
copynode -7.083251355099492:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This']
copynode -6.151133058476262:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> This', 'This -> selectors']
copynode -7.070586031186394:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.219742176937871:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.2695114890811965:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.671270726132207:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.368269564467482:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter']
copynode -6.420836092787795:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter']
copynode -6.633007908123545:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'type -> =_ter']
copynode -6.908738041180186:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member loc3 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'type -> =_ter']
copynode -6.977301241713576:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> true_ter', 'type -> =_ter']
copynode -6.714274181518704:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'start -> unknown']
copynode -7.428540134686045:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member loc7 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'type -> =_ter']
copynode -7.627485180157237:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'copy-member', 'type -> =_ter']
copynode -7.631536641041748:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member loc5 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'type -> =_ter']
copynode -7.63216608192306:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter', 'root -> End']
copynode -7.729935550945811:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member loc1 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'type -> =_ter']
copynode -7.835752872633748:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.878310190048069:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This_ter', 'arguments -> End', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -7.875119621749036:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member loc5 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'type -> =_ter']
copynode -7.483836759347469:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member seriesKeys_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown']
copynode -7.910448932903819:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member loc0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'type -> =_ter']
copynode -7.878020008443855:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter', 'root -> End']
copynode -8.038951778667979:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'copy-member', 'type -> =_ter']
copynode -6.714274181518704:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member']
copynode -7.8385879513807595:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc5 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'start -> unknown']
copynode -7.924016792792827:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc7 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'start -> unknown']
copynode -7.510002760100178:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.714274181518704:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member']
copynode -7.987561700749211:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation']
copynode -6.714274181518704:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member']
copynode -7.510002760100178:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -7.510002760100178:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
before@15 batch0 x: -7.771194098400883: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
after@15 batch0 x: -7.771194098400883: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
before@15 batch1 x: -9.289728311705403: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
after@15 batch1 x: -9.289728311705403: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -5.037739665131085:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.713133330340497:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.49641614954453:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> This', 'copy-This', 'root -> End']
copynode -5.037739665131085:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.037739665131085:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.749395822989754:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.8453026349889114:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ value MemberReference member par0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> par0', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> par0', 'type -> =_ter', 'root -> End']
copynode -6.690045015770011:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.035253194975667:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.18117007415276:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'operandr -> This', 'copy-This', 'root -> End']
copynode -7.1820906134089455:  root modified ^ IfStatement condition This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation arguments This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This', 'copy-This', 'arguments -> End', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -5.713133330340497:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.713133330340497:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.423240092466585:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.266180874896236:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member par0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> par0', 'type -> =_ter', 'root -> End']
copynode -7.104068426298909:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -7.400457367184572:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This prefix_operators !_ter ^ ^ selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'root -> End']
copynode -6.65504914696794:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.397569302353077:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.035253194975667:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.461715338635258:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> selectors member', 'copy-selectors']
copynode -7.560791967320256:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.035253194975667:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.570474689709954:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.211971208336763:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This prefix_operators !_ter ^ ^ selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.022720491397195:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.035253194975667:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.825234768795781:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.061053437995724:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.423240092466585:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.423240092466585:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.771194098400883:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -7.409756304579787:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This']
copynode -6.370936252526008:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> End']
copynode -6.424391982960515:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter', 'root -> End']
copynode -6.639490854809992:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'type -> =_ter', 'root -> End']
copynode -6.914888925733976:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member loc3 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'type -> =_ter', 'root -> End']
copynode -6.980627102893777:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> true_ter', 'type -> =_ter', 'root -> End']
copynode -7.318354977760464:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'start -> unknown', 'selectors -> End']
copynode -7.4352910433663055:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member loc7 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'type -> =_ter', 'root -> End']
copynode -7.638552221353166:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member loc5 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'type -> =_ter', 'root -> End']
copynode -7.633801062474959:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -7.736006735707633:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member loc1 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'type -> =_ter', 'root -> End']
copynode -7.894445557612926:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member seriesKeys_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown', 'selectors -> End']
copynode -7.882161853718571:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member categoryKeys_ter ^ ^ ^ ^ ^ ^ value MemberReference member loc5 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'type -> =_ter', 'root -> End']
copynode -7.915717652882449:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member loc0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'type -> =_ter', 'root -> End']
copynode -8.044251297949813:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MemberReference member categoryKeys_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MemberReference', 'MemberReference -> member', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -8.324899329338223:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member', 'selectors -> End']
copynode -8.491268825251609:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc5 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'start -> unknown', 'selectors -> End']
copynode -8.618837792892009:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc7 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'start -> unknown', 'selectors -> End']
copynode -8.749048380064778:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.95966316619888:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member', 'selectors -> End']
copynode -9.045657886657864:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member', 'selectors -> End']
copynode -9.02226710121613:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -9.289728311705403:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -6.370936252526008:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> StatementExpression']
copynode -7.876910595106892:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7']
before@16 batch0 x: -7.97070712025743: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This']
after@16 batch0 x: -7.97070712025743: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This']
before@16 batch1 x: -9.757403163122945: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7']
after@16 batch1 x: -9.757403163122945: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7']
copynode -5.819712073425762:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -6.4871702146483585:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -6.556484849075787:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -6.515386850456707:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -6.853508164989762:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -7.051490323501639:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -7.053501991438679:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -7.213493700022809:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -7.221757796476595:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -7.217875475878827:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -7.515357999014668:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -7.506962668034248:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -7.449524106341414:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -7.63706312130671:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -7.666531471419148:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -7.6759467626689:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -7.818206814932637:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -7.712314709904604:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This prefix_operators !_ter ^ ^ selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.83270525734406:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -7.817706799018197:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -7.905883815954439:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -7.901359660434537:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -7.913885143469088:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -7.36838674347382:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -7.5799842233536765:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member']
copynode -7.92505170207005:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -7.5799842233536765:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member']
copynode -7.329734347295016:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -7.904217827599496:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member seriesKeys_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -8.332546024117619:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member', 'selectors -> End', 'root -> End']
copynode -8.500630383845419:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc5 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -8.628351220395416:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments MemberReference member loc7 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -8.970178817864507:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member', 'selectors -> End', 'root -> End']
copynode -9.055414146278054:  root modified ^ StatementExpression expression This selectors MemberReference member seriesKeys_ter ^ ^ ^ MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member generateKeys_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member', 'selectors -> End', 'root -> End']
copynode -9.264758987235837:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -9.342545961844735:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -9.748845674446784:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -9.757403163122945:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End']
copynode -8.872960699605756:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7']
before@17 batch0 x: -8.747010504710488: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member']
after@17 batch0 x: -8.747010504710488: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member']
before@17 batch1 x: -10.947752846288495: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7']
after@17 batch1 x: -10.947752846288495: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7']
copynode -6.890594864147715:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -5.882361815194599:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr']
copynode -5.882361815194599:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference']
copynode -7.54221767548006:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -6.5451376241398975:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr']
copynode -7.714797185617499:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -6.616191540728323:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr']
copynode -7.8255437387852:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This prefix_operators !_ter ^ ^ selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -6.624945335905068:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr']
copynode -5.882361815194599:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> Literal']
copynode -6.616191540728323:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'operandr -> MemberReference']
copynode -6.624945335905068:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference']
copynode -8.05267596046906:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -5.882361815194599:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr This ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> This']
copynode -6.5451376241398975:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference']
copynode -8.294812476146035:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member', 'root -> End']
copynode -7.267923484439962:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr']
copynode -7.3171792280627415:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr']
copynode -7.2844996199710295:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr']
copynode -7.648668048786931:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.2844996199710295:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference']
copynode -9.330310439574532:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation']
copynode -9.68048707197886:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -9.847431175759993:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -10.947752846288495:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End']
copynode -9.330310439574532:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference']
before@18 batch0 x: -8.685637925635092: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference']
after@18 batch0 x: -8.685637925635092: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference']
before@18 batch1 x: -11.33468971203547: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference']
after@18 batch1 x: -11.33468971203547: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference']
copynode -7.155258462647907:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> End']
copynode -7.694099645013921:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> End']
copynode -7.295873687486164:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.858953987131827:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> End']
copynode -7.865569602581672:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr This prefix_operators !_ter ^ ^ selectors MemberReference member startData_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -7.888023191015236:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> End']
copynode -8.021396563271992:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> Literal', 'Literal -> value']
copynode -8.386226664180867:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'copy-operandr', 'root -> End']
copynode -8.067882702569477:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> This', 'copy-This']
copynode -8.457637811894529:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> End']
copynode -8.045080714742653:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.51473209715914:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-operandr', 'root -> End']
copynode -8.112107495660894:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.033874903689139:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.678695676731877:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -7.295873687486164:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference selectors ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> selectors member']
copynode -9.923621749388985:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -10.208041154197417:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -10.09671202849131:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getBundle_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
copynode -11.33468971203547:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -11.292927158880048:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member getBundle_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member']
before@19 batch0 x: -8.880022571305744: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference selectors ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> selectors member']
after@19 batch0 x: -8.880022571305744: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference selectors ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> selectors member']
before@19 batch1 x: -12.161428047227673: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member getBundle_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member']
after@19 batch1 x: -12.161428047227673: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member getBundle_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member']
copynode -8.445111469249241:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> This', 'copy-This', 'root -> End']
copynode -8.061280247638933:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.702425465802662:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -8.785614644992165:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ operandr This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'copy-This', 'operandr -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -7.702425465802662:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.702425465802662:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -8.880022571305744:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> selectors member', 'copy-selectors']
copynode -8.530311892624013:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -10.150631328928284:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -10.209052619873546:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This']
copynode -10.97408351849299:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getBundle_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -10.209052619873546:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -12.161428047227673:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member getBundle_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member', 'type -> =_ter']
before@20 batch0 x: -9.550819228286855: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
after@20 batch0 x: -9.550819228286855: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
before@20 batch1 x: -12.166247292305343: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member getBundle_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member', 'type -> =_ter']
after@20 batch1 x: -12.166247292305343: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member getBundle_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -8.568528887699358:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -8.68458782217931:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -9.009181723813526:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -9.274549231748097:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -9.550819228286855:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -9.296286390046589:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member']
copynode -10.226631952333264:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation']
copynode -10.716265973984264:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors']
copynode -10.975865257089026:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member getBundle_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -11.55373316758778:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -12.166247292305343:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member getBundle_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
before@21 batch0 x: -10.478641674737446: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member']
after@21 batch0 x: -10.478641674737446: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member']
before@21 batch1 x: -12.262171848560683: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member getBundle_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
after@21 batch1 x: -12.262171848560683: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier ResourceBundle_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member getBundle_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -10.478641674737446:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr This selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl This selectors MemberReference member startData_ter ^ ^ ^ ^ ^ ^ operandr MemberReference selectors MemberReference member startData_ter ^ ^ ^ ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member startData_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'operandr -> MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'copy-member', 'root -> End']
copynode -10.775321555673145:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -10.773624552297406:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -10.773624552297406:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
before@22 batch1 x: -15.177494181203656: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
after@22 batch1 x: -15.177494181203656: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -10.791797210811637:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -10.880330679821782:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -10.880330679821782:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator -_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter']
before@23 batch1 x: -13.782611964154057: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator -_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter']
after@23 batch1 x: -13.782611964154057: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator -_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter']
copynode -10.955587563919835:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation']
copynode -10.955587563919835:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference']
copynode -10.955587563919835:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> This']
before@24 batch1 x: -12.791982231545262: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> This']
after@24 batch1 x: -12.791982231545262: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> This']
copynode -11.940980551647954:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -12.620076713967137:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -12.791982231545262:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> This', 'This -> selectors']
before@25 batch1 x: -13.357752678799443: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> This', 'This -> selectors']
after@25 batch1 x: -13.357752678799443: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> This', 'This -> selectors']
copynode -12.047466596472077:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -13.357752678799443:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl This selectors MemberReference ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -12.656757658231072:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
before@26 batch1 x: -14.741858785855584: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
after@26 batch1 x: -14.741858785855584: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -12.107305282610469:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation']
copynode -13.405140982824378:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl This selectors MemberReference member ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -12.107305282610469:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> Literal']
before@27 batch1 x: -14.296065801638179: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> Literal']
after@27 batch1 x: -14.296065801638179: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> Literal']
copynode -12.595767492312007:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -14.296065801638179:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> Literal', 'Literal -> value']
copynode -13.409325088723563:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
before@28 batch1 x: -16.160895313485526: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
after@28 batch1 x: -16.160895313485526: root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl This selectors MemberReference member seriesKeys_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -12.70687111641746:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -14.30567129875999:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -12.70687111641746:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator -_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter']
6 startData_ter
6 startData_ter
method
7 
int  getSeriesCount 
int  getSeriesIndex 
Comparable  getSeriesKey 
None  setSeriesKeys 
int  getCategoryCount 
List  getColumnKeys 
None  setCategoryKeys 
Number  getValue 
Number  getValue 
Number  getStartValue 
Number  getStartValue 
Number  getEndValue 
Number  getEndValue 
None  setStartValue 
None  setEndValue 
int  getCategoryIndex 
Comparable  generateKeys 
Comparable  getColumnKey 
int  getColumnIndex 
int  getRowIndex 
List  getRowKeys 
Comparable  getRowKey 
int  getColumnCount 
int  getRowCount 
boolean  equals 
Object  clone 
boolean  equal 
Number  clone 
6 startData_ter
6 length_ter
6 startData_ter
6 startData_ter
6 startData_ter
6 startData_ter
method
categoryKeys_ter {'categoryKeys_ter': 'Comparable', 'i_ter': 'int'}
7 Comparable
6 length_ter
6 length_ter
6 length_ter
6 length_ter
6 startData_ter
method
7 
method
categoryKeys_ter {'categoryKeys_ter': 'Comparable', 'i_ter': 'int'}
7 Comparable
method
7 
6 startData_ter
method
7 
6 length_ter
6 startData_ter
method
categoryKeys_ter {'categoryKeys_ter': 'Comparable', 'i_ter': 'int'}
7 Comparable
6 startData_ter
method
7 
method
7 
int  getSeriesCount 
int  getSeriesIndex 
Comparable  getSeriesKey 
None  setSeriesKeys 
int  getCategoryCount 
List  getColumnKeys 
None  setCategoryKeys 
Number  getValue 
Number  getValue 
Number  getStartValue 
Number  getStartValue 
Number  getEndValue 
Number  getEndValue 
None  setStartValue 
None  setEndValue 
int  getCategoryIndex 
Comparable  generateKeys 
Comparable  getColumnKey 
int  getColumnIndex 
int  getRowIndex 
List  getRowKeys 
Comparable  getRowKey 
int  getColumnCount 
int  getRowCount 
boolean  equals 
Object  clone 
boolean  equal 
Number  clone 
method
7 
6 length_ter
6 startData_ter
6 startData_ter
6 startData_ter
method
7 
method
7 
method
7 
int  getSeriesCount 
int  getSeriesIndex 
Comparable  getSeriesKey 
None  setSeriesKeys 
int  getCategoryCount 
List  getColumnKeys 
None  setCategoryKeys 
Number  getValue 
Number  getValue 
Number  getStartValue 
Number  getStartValue 
Number  getEndValue 
Number  getEndValue 
None  setStartValue 
None  setEndValue 
int  getCategoryIndex 
Comparable  generateKeys 
Comparable  getColumnKey 
int  getColumnIndex 
int  getRowIndex 
List  getRowKeys 
Comparable  getRowKey 
int  getColumnCount 
int  getRowCount 
boolean  equals 
Object  clone 
boolean  equal 
Number  clone 
method
7 
6 seriesKeys_ter
6 seriesKeys_ter
6 seriesKeys_ter
method
ResourceBundle_ter {'baseName_ter': 'String', 'resources_ter': 'ResourceBundle', 'seriesCount_ter': 'int', 'errMsg_ter': 'String', 'prefix_ter': 'String', 'categoryCount_ter': 'int'}
ResourceBundle_ter seriesKeys
ResourceBundle_ter categoryKeys
ResourceBundle_ter startData
ResourceBundle_ter endData
7 
int  getSeriesCount 
int  getSeriesIndex 
Comparable  getSeriesKey 
None  setSeriesKeys 
int  getCategoryCount 
List  getColumnKeys 
None  setCategoryKeys 
Number  getValue 
Number  getValue 
Number  getStartValue 
Number  getStartValue 
Number  getEndValue 
Number  getEndValue 
None  setStartValue 
None  setEndValue 
int  getCategoryIndex 
Comparable  generateKeys 
Comparable  getColumnKey 
int  getColumnIndex 
int  getRowIndex 
List  getRowKeys 
Comparable  getRowKey 
int  getColumnCount 
int  getRowCount 
boolean  equals 
Object  clone 
boolean  equal 
Number  clone 
method
7 
6 seriesKeys_ter
6 seriesKeys_ter
method
7 
6 seriesKeys_ter
method
7 
int  getSeriesCount 
int  getSeriesIndex 
Comparable  getSeriesKey 
None  setSeriesKeys 
int  getCategoryCount 
List  getColumnKeys 
None  setCategoryKeys 
Number  getValue 
Number  getValue 
Number  getStartValue 
Number  getStartValue 
Number  getEndValue 
Number  getEndValue 
None  setStartValue 
None  setEndValue 
int  getCategoryIndex 
Comparable  generateKeys 
Comparable  getColumnKey 
int  getColumnIndex 
int  getRowIndex 
List  getRowKeys 
Comparable  getRowKey 
int  getColumnCount 
int  getRowCount 
boolean  equals 
Object  clone 
boolean  equal 
Number  clone 
method
ResourceBundle_ter {'baseName_ter': 'String', 'resources_ter': 'ResourceBundle', 'seriesCount_ter': 'int', 'errMsg_ter': 'String', 'prefix_ter': 'String', 'categoryCount_ter': 'int'}
ResourceBundle_ter seriesKeys
ResourceBundle_ter categoryKeys
ResourceBundle_ter startData
ResourceBundle_ter endData
7 
method
7 
int  getSeriesCount 
int  getSeriesIndex 
Comparable  getSeriesKey 
None  setSeriesKeys 
int  getCategoryCount 
List  getColumnKeys 
None  setCategoryKeys 
Number  getValue 
Number  getValue 
Number  getStartValue 
Number  getStartValue 
Number  getEndValue 
Number  getEndValue 
None  setStartValue 
None  setEndValue 
int  getCategoryIndex 
Comparable  generateKeys 
Comparable  getColumnKey 
int  getColumnIndex 
int  getRowIndex 
List  getRowKeys 
Comparable  getRowKey 
int  getColumnCount 
int  getRowCount 
boolean  equals 
Object  clone 
boolean  equal 
Number  clone 
6 seriesKeys_ter
method
categoryCount_ter {'baseName_ter': 'String', 'resources_ter': 'ResourceBundle', 'seriesCount_ter': 'int', 'errMsg_ter': 'String', 'prefix_ter': 'String', 'categoryCount_ter': 'int'}
7 int
6 seriesKeys_ter
method
loc3 {'baseName_ter': 'String', 'resources_ter': 'ResourceBundle', 'seriesCount_ter': 'int', 'errMsg_ter': 'String', 'prefix_ter': 'String', 'categoryCount_ter': 'int'}
loc3 seriesKeys
loc3 categoryKeys
loc3 startData
loc3 endData
7 
int  getSeriesCount 
int  getSeriesIndex 
Comparable  getSeriesKey 
None  setSeriesKeys 
int  getCategoryCount 
List  getColumnKeys 
None  setCategoryKeys 
Number  getValue 
Number  getValue 
Number  getStartValue 
Number  getStartValue 
Number  getEndValue 
Number  getEndValue 
None  setStartValue 
None  setEndValue 
int  getCategoryIndex 
Comparable  generateKeys 
Comparable  getColumnKey 
int  getColumnIndex 
int  getRowIndex 
List  getRowKeys 
Comparable  getRowKey 
int  getColumnCount 
int  getRowCount 
boolean  equals 
Object  clone 
boolean  equal 
Number  clone 
method
seriesCount_ter {'baseName_ter': 'String', 'resources_ter': 'ResourceBundle', 'seriesCount_ter': 'int', 'errMsg_ter': 'String', 'prefix_ter': 'String', 'categoryCount_ter': 'int'}
7 int
method
7 
int  getSeriesCount 
int  getSeriesIndex 
Comparable  getSeriesKey 
None  setSeriesKeys 
int  getCategoryCount 
List  getColumnKeys 
None  setCategoryKeys 
Number  getValue 
Number  getValue 
Number  getStartValue 
Number  getStartValue 
Number  getEndValue 
Number  getEndValue 
None  setStartValue 
None  setEndValue 
int  getCategoryIndex 
Comparable  generateKeys 
Comparable  getColumnKey 
int  getColumnIndex 
int  getRowIndex 
List  getRowKeys 
Comparable  getRowKey 
int  getColumnCount 
int  getRowCount 
boolean  equals 
Object  clone 
boolean  equal 
Number  clone 
method
loc4 {'baseName_ter': 'String', 'resources_ter': 'ResourceBundle', 'seriesCount_ter': 'int', 'errMsg_ter': 'String', 'prefix_ter': 'String', 'categoryCount_ter': 'int'}
loc4 seriesKeys
loc4 categoryKeys
loc4 startData
loc4 endData
7 
int  getSeriesCount 
int  getSeriesIndex 
Comparable  getSeriesKey 
None  setSeriesKeys 
int  getCategoryCount 
List  getColumnKeys 
None  setCategoryKeys 
Number  getValue 
Number  getValue 
Number  getStartValue 
Number  getStartValue 
Number  getEndValue 
Number  getEndValue 
None  setStartValue 
None  setEndValue 
int  getCategoryIndex 
Comparable  generateKeys 
Comparable  getColumnKey 
int  getColumnIndex 
int  getRowIndex 
List  getRowKeys 
Comparable  getRowKey 
int  getColumnCount 
int  getRowCount 
boolean  equals 
Object  clone 
boolean  equal 
Number  clone 
method
7 
int  getSeriesCount 
int  getSeriesIndex 
Comparable  getSeriesKey 
None  setSeriesKeys 
int  getCategoryCount 
List  getColumnKeys 
None  setCategoryKeys 
Number  getValue 
Number  getValue 
Number  getStartValue 
Number  getStartValue 
Number  getEndValue 
Number  getEndValue 
None  setStartValue 
None  setEndValue 
int  getCategoryIndex 
Comparable  generateKeys 
Comparable  getColumnKey 
int  getColumnIndex 
int  getRowIndex 
List  getRowKeys 
Comparable  getRowKey 
int  getColumnCount 
int  getRowCount 
boolean  equals 
Object  clone 
boolean  equal 
Number  clone 
method
7 
int  getSeriesCount 
int  getSeriesIndex 
Comparable  getSeriesKey 
None  setSeriesKeys 
int  getCategoryCount 
List  getColumnKeys 
None  setCategoryKeys 
Number  getValue 
Number  getValue 
Number  getStartValue 
Number  getStartValue 
Number  getEndValue 
Number  getEndValue 
None  setStartValue 
None  setEndValue 
int  getCategoryIndex 
Comparable  generateKeys 
Comparable  getColumnKey 
int  getColumnIndex 
int  getRowIndex 
List  getRowKeys 
Comparable  getRowKey 
int  getColumnCount 
int  getRowCount 
boolean  equals 
Object  clone 
boolean  equal 
Number  clone 
method
7 
stderr: Check out program version: Chart-16b....................................... OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:32<00:00, 32.78s/it]100%|██████████| 1/1 [00:32<00:00, 32.78s/it]
