stdout: StatementExpression expression MethodInvocation arguments MemberReference member ns_ter ^ ^ ^ MemberReference member ns_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(ns, ns);

StatementExpression expression MethodInvocation arguments MemberReference member recordNode_ter ^ ^ ^ MemberReference member ns_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(recordNode, ns);

StatementExpression expression MethodInvocation arguments MemberReference member parent_ter ^ ^ ^ MemberReference member ns_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(parent, ns);

StatementExpression expression MethodInvocation arguments MemberReference member recordNode_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(recordNode, parent);

StatementExpression expression MethodInvocation arguments MemberReference member loc3 ^ ^ ^ MemberReference member ns_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(, ns);


StatementExpression expression MethodInvocation arguments MemberReference member n_ter ^ ^ ^ MemberReference member ns_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(n, ns);

StatementExpression expression MethodInvocation arguments MemberReference member nameNode_ter ^ ^ ^ MemberReference member ns_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(nameNode, ns);

StatementExpression expression MethodInvocation arguments MemberReference member recordNode_ter ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(recordNode, );


StatementExpression expression MethodInvocation arguments MemberReference member ns_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(ns);

StatementExpression expression MethodInvocation member removeUnreferenced_ter ^ ^ ^ ^ ^ 
removeUnreferenced();

StatementExpression expression MethodInvocation member referenceAliases_ter ^ ^ ^ ^ ^ 
referenceAliases();

StatementExpression expression MethodInvocation member referenceParentNames_ter ^ ^ ^ ^ ^ 
referenceParentNames();

StatementExpression expression MethodInvocation member calculateReferences_ter ^ ^ ^ ^ ^ 
calculateReferences();

StatementExpression expression MethodInvocation arguments MemberReference member recordNode_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(recordNode, n);

StatementExpression expression MethodInvocation arguments MemberReference member recordNode_ter ^ ^ ^ MemberReference member nameNode_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(recordNode, nameNode);

StatementExpression expression MethodInvocation member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope();

StatementExpression expression MethodInvocation arguments MemberReference member parent_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(parent);

StatementExpression expression MethodInvocation arguments MemberReference member ns_ter ^ ^ ^ MemberReference member recordNode_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(ns, recordNode);

StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member ns_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(t, ns);

StatementExpression expression MethodInvocation arguments MemberReference member ns_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(ns, n);

StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member recordNode_ter ^ ^ ^ MemberReference member ns_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
NodeUtil.recordDepScope(recordNode, ns);

StatementExpression expression MethodInvocation arguments MemberReference member recordNode_ter ^ ^ ^ MemberReference member recordNode_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(recordNode, recordNode);

StatementExpression expression MethodInvocation arguments MemberReference member recordNode_ter ^ ^ ^ MemberReference member t_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(recordNode, t);

ReturnStatement_ter ^ 
if (true) { return;
 }

StatementExpression expression MethodInvocation arguments MemberReference member recordNode_ter ^ ^ ^ MemberReference member ns_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(recordNode, ns);

StatementExpression expression MethodInvocation arguments MemberReference member ns_ter ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(ns, );


StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member nameNode_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(t, nameNode);

StatementExpression expression MethodInvocation arguments MemberReference member nameNode_ter ^ ^ ^ MemberReference member ns_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(nameNode, ns);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ns_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((ns != null)){
continue;
}

StatementExpression expression MethodInvocation arguments MemberReference member n_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(n);

StatementExpression expression MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope();

StatementExpression expression MethodInvocation arguments MemberReference member recordNode_ter ^ ^ ^ MemberReference member ns_ter ^ ^ ^ ^ member recordAssignment_ter ^ ^ ^ ^ ^ 
recordAssignment(recordNode, ns);


StatementExpression expression MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member ns_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(, ns);


StatementExpression expression MethodInvocation qualifier ns_ter ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
ns.recordDepScope();

StatementExpression expression MethodInvocation arguments MemberReference member ns_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(ns, false);

StatementExpression expression MethodInvocation arguments MemberReference member n_ter ^ ^ ^ MemberReference member recordNode_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(n, recordNode);

StatementExpression expression MethodInvocation arguments MemberReference member n_ter ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(n, );


StatementExpression expression MethodInvocation arguments MemberReference member ns_ter ^ ^ ^ MemberReference member t_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(ns, t);

StatementExpression expression MethodInvocation arguments MemberReference member recordNode_ter ^ ^ ^ MemberReference member ns_ter ^ ^ ^ ^ member debug_ter ^ ^ ^ ^ ^ 
debug(recordNode, ns);

StatementExpression expression MethodInvocation arguments MemberReference member ns_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(ns, true);

StatementExpression expression MethodInvocation arguments MemberReference member ns_ter ^ ^ ^ MemberReference member par3 ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(ns, );


ReturnStatement_ter ^ 
return;

StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ member detachChildren_ter ^ ^ ^ ^ ^ 
parent.detachChildren();

StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ member setQuotedString_ter ^ ^ ^ ^ ^ 
parent.setQuotedString();

StatementExpression expression MethodInvocation arguments MemberReference member loc3 ^ ^ ^ MemberReference member recordNode_ter ^ ^ ^ ^ member recordDepScope_ter ^ ^ ^ ^ ^ 
recordDepScope(, recordNode);


stderr: 