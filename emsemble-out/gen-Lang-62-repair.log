stdout: IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ 
if((charAt1 == "null")){

condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >=_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((charAt1 >= "null") || (charAt1 == "null"))){
IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if((((charAt1 == "null") || (charAt1 == "null")) || (charAt1 == "null"))){

condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((charAt1 == "null") || (charAt1 == "null"))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <=_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((charAt1 <= "null") || (charAt1 == "null"))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((charAt1 > "null") || (charAt1 == "null"))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((charAt1 != "null") || (charAt1 == "null"))){


IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((charAt1 == "null") || (charAt1 == "null"))){

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((((charAt1 == "null") || (charAt1 == "null")) || (charAt1 == "null")) || (charAt1 == "null"))){

condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((charAt1 < "null") || (charAt1 == "null"))){
IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if((((charAt1 == "null") || (charAt1 == "null")) && (charAt1 == "null"))){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((charAt1 == "null") && (charAt1 == "null"))){
IfStatement condition MemberReference member charAt1_ter ^ ^ ^ ^ ^ 
if(charAt1){

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ 
if((charAt1 == "null")){


IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((charAt1 == "null") || ((charAt1 == "null") || (charAt1 == "null")))){

IfStatement condition MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation member intValue_ter ^ ^ ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ ^ 
if(Integer.valueOf(entityName.substring(2), 16).intValue()){

ReturnStatement_ter ^ 
if (true) { return;
 }

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((charAt1 == "null") && (charAt1 == "null"))){

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if((((charAt1 == "null") || (charAt1 == "null")) || ((charAt1 == "null") || (charAt1 == "null")))){

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((charAt1 != null)){


condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator -_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((charAt1 - "null") || (charAt1 == "null"))){
IfStatement condition MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ ^ 
if(entityName.length()){

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = -1;

StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ 
buf.append("null");

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if((((charAt1 == "null") || (charAt1 == "null")) || (entityName.charAt(0) == "null"))){

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((charAt1 == "null") || (((charAt1 == "null") || (charAt1 == "null")) || (charAt1 == "null")))){

StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments MemberReference member entityName_ter ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ 
buf.append(entityName);

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((((charAt1 == "null") || (charAt1 == "null")) && (charAt1 == "null")) || (charAt1 == "null"))){

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if((((charAt1 == "null") || (charAt1 == "null")) || (entityName.length() == 1))){

StatementExpression expression MethodInvocation qualifier buf_ter ^ ^ arguments Cast type BasicType name char_ter ^ ^ ^ ^ expression MemberReference member entityValue_ter ^ ^ ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ 
buf.append((char)entityValue);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityName.substring(1));

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ selectors MethodInvocation member intValue_ter ^ ^ ^ ^ arguments MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.valueOf(entityName.substring(2), 16).intValue();

IfStatement condition MemberReference prefix_operators !_ter ^ ^ member charAt1_ter ^ ^ ^ ^ ^ 
if(!charAt1){

IfStatement condition MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ ^ 
if(entityName.charAt(0)){

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member entityValue_ter ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if((((charAt1 == "null") || (charAt1 == "null")) || (entityValue == -1))){

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member entityValue_ter ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ 
if((entityValue == -1)){

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((charAt1 == null)){


IfStatement condition MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ ^ 
if(entityName.substring(2)){

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((charAt1 == "null") || (((charAt1 == "null") || (charAt1 == "null")) && (charAt1 == "null")))){

condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >>_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((charAt1 >> "null") || (charAt1 == "null"))){
IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if((((charAt1 == "null") && (charAt1 == "null")) || (charAt1 == "null"))){

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if((charAt1 || (charAt1 == "null"))){

condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >>>_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((charAt1 >>> "null") || (charAt1 == "null"))){
condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((charAt1 + "null") || (charAt1 == "null"))){
IfStatement condition MemberReference member charAt1_ter ^ ^ ^ ^ ^ 
if(charAt1){


IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if((((charAt1 == "null") || (charAt1 == "null")) || (entityName.length() == 0))){

condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member entityName_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if(((entityName == "null") || (charAt1 == "null"))){
StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member charAt1_ter ^ ^ ^ ^ ^ 
charAt1++;

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member entityValue_ter ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ 
if((entityValue == -1)){


condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member charAt1_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ 
if((( == "null") || (charAt1 == "null"))){

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entityName_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ 
if((entityName.charAt(0) == "null")){


StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.substring(2), 0);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.substring(0), 16);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.substring(2), 10);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.substring(2), 1);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.charAt(entityContent.substring(2), 16);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 10_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.substring(10), 16);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.substring(2), 16);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.substring(2), false);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.substring(1), 16);


StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.substring(2), 2);

StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
i = Integer.parseInt(entityContent.substring(2), 16);

StatementExpression expression MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ ^ 
Integer.parseInt(entityContent.substring(2), 16);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 16_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.substring(16), 16);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.substring(2), true);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.substring(2), null);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member indexOf_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.indexOf(entityContent.substring(2), 16);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier entityContent_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = entityContent.parseInt(entityContent.substring(2), 16);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier isHexChar_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(isHexChar.substring(2), 16);

ReturnStatement_ter ^ 
if (true) { return;
 }

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member entityContent_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((entityContent != null)){

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.substring(2), -1);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.charAt(2), 16);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member isHexChar_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((isHexChar != null)){

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.write(entityContent.substring(2), 16);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member debug_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.debug(entityContent.substring(2), 16);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member unescape_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.unescape(entityContent.substring(2), 16);

IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member amphersandIdx_ter ^ ^ ^ ^ operandr MemberReference member semiColonIdx_ter ^ ^ ^ ^ ^ ^ ^ 
if((amphersandIdx < semiColonIdx)){

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member amphersandIdx_ter ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ 
if((amphersandIdx != -1)){

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member length_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.length(2), 16);

StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
i = Integer.parseInt(entityContent.substring(1), 10);

StatementExpression expression Assignment expressionl MemberReference member i_ter ^ ^ ^ ^ value MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
i = entityContent.substring(2);

BreakStatement_ter ^ 
break;

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member unescape_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.unescape(2), 16);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member charAt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = entityContent.charAt(1);

StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ 
writer.write(c);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.substring(false), 16);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier writer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = writer.parseInt(entityContent.substring(2), 16);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.substring(2), "null");

StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member c_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ 
writer.write(c);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member entityContentLen_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((entityContentLen != null)){

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier isHexChar_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = isHexChar.parseInt(entityContent.substring(2), 16);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.substring(-1), 16);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContent_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 10_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContent.substring(1), 10);

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MethodInvocation qualifier entityContentLen_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member substring_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityContentLen.substring(2), 16);

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member entityValue_ter ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ ^ ^ 
if((entityValue == -1)){

StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member entityValue_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ 
writer.write(entityValue);

StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ 
writer.write("null");

StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments MemberReference member entityValue_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ 
writer.write(entityValue);

StatementExpression expression MethodInvocation qualifier writer_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member write_ter ^ ^ ^ ^ ^ 
writer.write("null");

StatementExpression expression Assignment expressionl MemberReference member entityValue_ter ^ ^ ^ ^ value MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member entityValue_ter ^ ^ ^ Literal value 16_ter ^ ^ ^ ^ member parseInt_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
entityValue = Integer.parseInt(entityValue, 16);

stderr: 