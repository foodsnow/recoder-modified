stdout: else_statement -> BlockStatement
using GPU
p
path org.apache.commons.math.estimation.AbstractEstimator
getCovariances
Position(line=158, column=12)
FOUND IT!
path org.apache.commons.math.estimation.AbstractEstimator
guessParametersErrors
Position(line=199, column=12)
FOUND IT!
[{'bugid': 'Math-100', 'treeroot': <Searchnode.Node object at 0x7f371bbab910>, 'troot': <Searchnode.Node object at 0x7f371bbab910>, 'oldcode': '        final int cols = problem.getAllParameters().length;', 'filepath': 'buggy/Math-100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java', 'subroot': <Searchnode.Node object at 0x7f371bba85d0>, 'vardic': {'getCovariances_ter': 'meth0', 'problem_ter': 'par0', 'rows_ter': 'loc0', 'cols_ter': 'loc1', 'max_ter': 'loc2', 'jTj_ter': 'loc3', 'i_ter': 'loc4', 'j_ter': 'loc5', 'sum_ter': 'loc6', 'k_ter': 'loc7'}, 'typedic': {'problem_ter': 'EstimationProblem', 'rows_ter': 'int', 'cols_ter': 'int', 'max_ter': 'int', 'jTj_ter': 'double', 'i_ter': 'int', 'j_ter': 'int', 'sum_ter': 'double', 'k_ter': 'int'}, 'idss': 'Math-100', 'classname': 'org.apache.commons.math.estimation.AbstractEstimator', 'precode': '/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the "License"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.commons.math.estimation;\n\nimport java.util.Arrays;\n\nimport org.apache.commons.math.linear.InvalidMatrixException;\nimport org.apache.commons.math.linear.RealMatrixImpl;\n\n/**\n * Base class for implementing estimators.\n * <p>This base class handles the boilerplates methods associated to thresholds\n * settings, jacobian and error estimation.</p>\n * @version $Revision$ $Date$\n * @since 1.2\n *\n */\npublic abstract class AbstractEstimator implements Estimator {\n\n    /**\n     * Build an abstract estimator for least squares problems.\n     */\n    protected AbstractEstimator() {\n    }\n\n    /**\n     * Set the maximal number of cost evaluations allowed.\n     * \n     * @param maxCostEval maximal number of cost evaluations allowed\n     * @see #estimate\n     */\n    public final void setMaxCostEval(int maxCostEval) {\n        this.maxCostEval = maxCostEval;\n    }\n\n    /**\n     * Get the number of cost evaluations.\n     * \n     * @return number of cost evaluations\n     * */\n    public final int getCostEvaluations() {\n        return costEvaluations;\n    }\n\n    /** \n     * Get the number of jacobian evaluations.\n     * \n     * @return number of jacobian evaluations\n     * */\n    public final int getJacobianEvaluations() {\n        return jacobianEvaluations;\n    }\n\n    /** \n     * Update the jacobian matrix.\n     */\n    protected void updateJacobian() {\n        incrementJacobianEvaluationsCounter();\n        Arrays.fill(jacobian, 0);\n        for (int i = 0, index = 0; i < rows; i++) {\n            WeightedMeasurement wm = measurements[i];\n            double factor = -Math.sqrt(wm.getWeight());\n            for (int j = 0; j < cols; ++j) {\n                jacobian[index++] = factor * wm.getPartial(parameters[j]);\n            }\n        }\n    }\n\n    /**\n     * Increment the jacobian evaluations counter.\n     */\n    protected final void incrementJacobianEvaluationsCounter() {\n      ++jacobianEvaluations;\n    }\n\n    /** \n     * Update the residuals array and cost function value.\n     * @exception EstimationException if the number of cost evaluations\n     * exceeds the maximum allowed\n     */\n    protected void updateResidualsAndCost()\n    throws EstimationException {\n\n        if (++costEvaluations > maxCostEval) {\n            throw new EstimationException("maximal number of evaluations exceeded ({0})",\n                                          new Object[] { new Integer(maxCostEval) });\n        }\n\n        cost = 0;\n        for (int i = 0, index = 0; i < rows; i++, index += cols) {\n            WeightedMeasurement wm = measurements[i];\n            double residual = wm.getResidual();\n            residuals[i] = Math.sqrt(wm.getWeight()) * residual;\n            cost += wm.getWeight() * residual * residual;\n        }\n        cost = Math.sqrt(cost);\n\n    }\n\n    /** \n     * Get the Root Mean Square value.\n     * Get the Root Mean Square value, i.e. the root of the arithmetic\n     * mean of the square of all weighted residuals. This is related to the\n     * criterion that is minimized by the estimator as follows: if\n     * <em>c</em> if the criterion, and <em>n</em> is the number of\n     * measurements, then the RMS is <em>sqrt (c/n)</em>.\n     * \n     * @param problem estimation problem\n     * @return RMS value\n     */\n    public double getRMS(EstimationProblem problem) {\n        WeightedMeasurement[] wm = problem.getMeasurements();\n        double criterion = 0;\n        for (int i = 0; i < wm.length; ++i) {\n            double residual = wm[i].getResidual();\n            criterion += wm[i].getWeight() * residual * residual;\n        }\n        return Math.sqrt(criterion / wm.length);\n    }\n\n    /**\n     * Get the Chi-Square value.\n     * @param problem estimation problem\n     * @return chi-square value\n     */\n    public double getChiSquare(EstimationProblem problem) {\n        WeightedMeasurement[] wm = problem.getMeasurements();\n        double chiSquare = 0;\n        for (int i = 0; i < wm.length; ++i) {\n            double residual = wm[i].getResidual();\n            chiSquare += residual * residual / wm[i].getWeight();\n        }\n        return chiSquare;\n    }\n\n    /**\n     * Get the covariance matrix of unbound estimated parameters.\n     * @param problem estimation problem\n     * @return covariance matrix\n     * @exception EstimationException if the covariance matrix\n     * cannot be computed (singular problem)\n     */\n    public double[][] getCovariances(EstimationProblem problem)\n      throws EstimationException {\n \n        // set up the jacobian\n        updateJacobian();\n\n        // compute transpose(J).J, avoiding building big intermediate matrices\n        final int rows = problem.getMeasurements().length;', 'aftercode': '        final int max  = cols * rows;\n        double[][] jTj = new double[cols][cols];\n        for (int i = 0; i < cols; ++i) {\n            for (int j = i; j < cols; ++j) {\n                double sum = 0;\n                for (int k = 0; k < max; k += cols) {\n                    sum += jacobian[k + i] * jacobian[k + j];\n                }\n                jTj[i][j] = sum;\n                jTj[j][i] = sum;\n            }\n        }\n\n        try {\n            // compute the covariances matrix\n            return new RealMatrixImpl(jTj).inverse().getData();\n        } catch (InvalidMatrixException ime) {\n            throw new EstimationException("unable to compute covariances: singular problem",\n                                          new Object[0]);\n        }\n\n    }\n\n    /**\n     * Guess the errors in unbound estimated parameters.\n     * <p>Guessing is covariance-based, it only gives rough order of magnitude.</p>\n     * @param problem estimation problem\n     * @return errors in estimated parameters\n     * @exception EstimationException if the covariances matrix cannot be computed\n     * or the number of degrees of freedom is not positive (number of measurements\n     * lesser or equal to number of parameters)\n     */\n    public double[] guessParametersErrors(EstimationProblem problem)\n      throws EstimationException {\n        int m = problem.getMeasurements().length;\n        int p = problem.getAllParameters().length;\n        if (m <= p) {\n            throw new EstimationException("no degrees of freedom ({0} measurements, {1} parameters)",\n                                          new Object[] { new Integer(m), new Integer(p)});\n        }\n        double[] errors = new double[problem.getAllParameters().length];\n        final double c = Math.sqrt(getChiSquare(problem) / (m - p));\n        double[][] covar = getCovariances(problem);\n        for (int i = 0; i < errors.length; ++i) {\n            errors[i] = Math.sqrt(covar[i][i]) * c;\n        }\n        return errors;\n    }\n\n    /**\n     * Initialization of the common parts of the estimation.\n     * <p>This method <em>must</em> be called at the start\n     * of the {@link #estimate(EstimationProblem) estimate}\n     * method.</p>\n     * @param problem estimation problem to solve\n     */\n    protected void initializeEstimate(EstimationProblem problem) {\n\n        // reset counters\n        costEvaluations     = 0;\n        jacobianEvaluations = 0;\n\n        // retrieve the equations and the parameters\n        measurements = problem.getMeasurements();\n        parameters   = problem.getUnboundParameters();\n\n        // arrays shared with the other private methods\n        rows      = measurements.length;\n        cols      = parameters.length;\n        jacobian  = new double[rows * cols];\n        residuals = new double[rows];\n\n        cost = Double.POSITIVE_INFINITY;\n\n    }\n\n    /** \n     * Solve an estimation problem.\n     *\n     * <p>The method should set the parameters of the problem to several\n     * trial values until it reaches convergence. If this method returns\n     * normally (i.e. without throwing an exception), then the best\n     * estimate of the parameters can be retrieved from the problem\n     * itself, through the {@link EstimationProblem#getAllParameters\n     * EstimationProblem.getAllParameters} method.</p>\n     *\n     * @param problem estimation problem to solve\n     * @exception EstimationException if the problem cannot be solved\n     *\n     */\n    public abstract void estimate(EstimationProblem problem)\n    throws EstimationException;\n\n    /** Array of measurements. */\n    protected WeightedMeasurement[] measurements;\n\n    /** Array of parameters. */\n    protected EstimatedParameter[] parameters;\n\n    /** \n     * Jacobian matrix.\n     * <p>This matrix is in canonical form just after the calls to\n     * {@link #updateJacobian()}, but may be modified by the solver\n     * in the derived class (the {@link LevenbergMarquardtEstimator\n     * Levenberg-Marquardt estimator} does this).</p>\n     */\n    protected double[] jacobian;\n\n    /** Number of columns of the jacobian matrix. */\n    protected int cols;\n\n    /** Number of rows of the jacobian matrix. */\n    protected int rows;\n\n    /** Residuals array.\n     * <p>This array is in canonical form just after the calls to\n     * {@link #updateJacobian()}, but may be modified by the solver\n     * in the derived class (the {@link LevenbergMarquardtEstimator\n     * Levenberg-Marquardt estimator} does this).</p>\n     */\n    protected double[] residuals;\n\n    /** Cost value (square root of the sum of the residuals). */\n    protected double cost;\n\n    /** Maximal allowed number of cost evaluations. */\n    private int maxCostEval;\n\n    /** Number of cost evaluations. */\n    private int costEvaluations;\n\n    /** Number of jacobian evaluations. */\n    private int jacobianEvaluations;\n\n}', 'tree': 'MethodDeclaration modifiers public_ter ^ ^ return_type BasicType name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ name meth0 ^ ^ parameters FormalParameter type ReferenceType name EstimationProblem_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ throws EstimationException_ter ^ ^ body StatementExpression expression MethodInvocation member updateJacobian_ter ^ ^ ^ ^ ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getMeasurements_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name double_ter ^ ^ ^ ^ dimensions MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ForStatement control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ update MemberReference prefix_operators ++_ter ^ ^ member loc4 ^ ^ ^ ^ ^ ^ body BlockStatement statements ForStatement control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc4 ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ update MemberReference prefix_operators ++_ter ^ ^ member loc5 ^ ^ ^ ^ ^ ^ body BlockStatement statements LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ForStatement control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ update Assignment expressionl MemberReference member loc7 ^ ^ ^ ^ value MemberReference member loc1 ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ body BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc6 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl MemberReference selectors ArraySelector index BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr MemberReference member loc4 ^ ^ ^ ^ ^ ^ ^ ^ member jacobian_ter ^ ^ ^ ^ operandr MemberReference selectors ArraySelector index BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr MemberReference member loc5 ^ ^ ^ ^ ^ ^ ^ ^ member jacobian_ter ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ value MemberReference member loc6 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ value MemberReference member loc6 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ TryStatement block ReturnStatement expression ClassCreator selectors MethodInvocation member inverse_ter ^ ^ ^ MethodInvocation member getData_ter ^ ^ ^ ^ type ReferenceType name RealMatrixImpl_ter ^ ^ ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ ^ ^ ^ ^ catches CatchClause parameter CatchClauseParameter types InvalidMatrixException_ter ^ ^ name ime_ter ^ ^ ^ ^ block ThrowStatement expression ClassCreator type ReferenceType name EstimationException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ArrayCreator type ReferenceType name Object_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 166, 'isa': False, 'fl_score': 1}, {'bugid': 'Math-100', 'treeroot': <Searchnode.Node object at 0x7f371bb20950>, 'troot': <Searchnode.Node object at 0x7f371bb20950>, 'oldcode': '        int p = problem.getAllParameters().length;', 'filepath': 'buggy/Math-100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java', 'subroot': <Searchnode.Node object at 0x7f371bb26410>, 'vardic': {'guessParametersErrors_ter': 'meth0', 'problem_ter': 'par0', 'm_ter': 'loc0', 'p_ter': 'loc1', 'errors_ter': 'loc2', 'c_ter': 'loc3', 'covar_ter': 'loc4', 'i_ter': 'loc5'}, 'typedic': {'problem_ter': 'EstimationProblem', 'm_ter': 'int', 'p_ter': 'int', 'errors_ter': 'double', 'c_ter': 'double', 'covar_ter': 'double', 'i_ter': 'int'}, 'idss': 'Math-100', 'classname': 'org.apache.commons.math.estimation.AbstractEstimator', 'precode': '/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the "License"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.apache.commons.math.estimation;\n\nimport java.util.Arrays;\n\nimport org.apache.commons.math.linear.InvalidMatrixException;\nimport org.apache.commons.math.linear.RealMatrixImpl;\n\n/**\n * Base class for implementing estimators.\n * <p>This base class handles the boilerplates methods associated to thresholds\n * settings, jacobian and error estimation.</p>\n * @version $Revision$ $Date$\n * @since 1.2\n *\n */\npublic abstract class AbstractEstimator implements Estimator {\n\n    /**\n     * Build an abstract estimator for least squares problems.\n     */\n    protected AbstractEstimator() {\n    }\n\n    /**\n     * Set the maximal number of cost evaluations allowed.\n     * \n     * @param maxCostEval maximal number of cost evaluations allowed\n     * @see #estimate\n     */\n    public final void setMaxCostEval(int maxCostEval) {\n        this.maxCostEval = maxCostEval;\n    }\n\n    /**\n     * Get the number of cost evaluations.\n     * \n     * @return number of cost evaluations\n     * */\n    public final int getCostEvaluations() {\n        return costEvaluations;\n    }\n\n    /** \n     * Get the number of jacobian evaluations.\n     * \n     * @return number of jacobian evaluations\n     * */\n    public final int getJacobianEvaluations() {\n        return jacobianEvaluations;\n    }\n\n    /** \n     * Update the jacobian matrix.\n     */\n    protected void updateJacobian() {\n        incrementJacobianEvaluationsCounter();\n        Arrays.fill(jacobian, 0);\n        for (int i = 0, index = 0; i < rows; i++) {\n            WeightedMeasurement wm = measurements[i];\n            double factor = -Math.sqrt(wm.getWeight());\n            for (int j = 0; j < cols; ++j) {\n                jacobian[index++] = factor * wm.getPartial(parameters[j]);\n            }\n        }\n    }\n\n    /**\n     * Increment the jacobian evaluations counter.\n     */\n    protected final void incrementJacobianEvaluationsCounter() {\n      ++jacobianEvaluations;\n    }\n\n    /** \n     * Update the residuals array and cost function value.\n     * @exception EstimationException if the number of cost evaluations\n     * exceeds the maximum allowed\n     */\n    protected void updateResidualsAndCost()\n    throws EstimationException {\n\n        if (++costEvaluations > maxCostEval) {\n            throw new EstimationException("maximal number of evaluations exceeded ({0})",\n                                          new Object[] { new Integer(maxCostEval) });\n        }\n\n        cost = 0;\n        for (int i = 0, index = 0; i < rows; i++, index += cols) {\n            WeightedMeasurement wm = measurements[i];\n            double residual = wm.getResidual();\n            residuals[i] = Math.sqrt(wm.getWeight()) * residual;\n            cost += wm.getWeight() * residual * residual;\n        }\n        cost = Math.sqrt(cost);\n\n    }\n\n    /** \n     * Get the Root Mean Square value.\n     * Get the Root Mean Square value, i.e. the root of the arithmetic\n     * mean of the square of all weighted residuals. This is related to the\n     * criterion that is minimized by the estimator as follows: if\n     * <em>c</em> if the criterion, and <em>n</em> is the number of\n     * measurements, then the RMS is <em>sqrt (c/n)</em>.\n     * \n     * @param problem estimation problem\n     * @return RMS value\n     */\n    public double getRMS(EstimationProblem problem) {\n        WeightedMeasurement[] wm = problem.getMeasurements();\n        double criterion = 0;\n        for (int i = 0; i < wm.length; ++i) {\n            double residual = wm[i].getResidual();\n            criterion += wm[i].getWeight() * residual * residual;\n        }\n        return Math.sqrt(criterion / wm.length);\n    }\n\n    /**\n     * Get the Chi-Square value.\n     * @param problem estimation problem\n     * @return chi-square value\n     */\n    public double getChiSquare(EstimationProblem problem) {\n        WeightedMeasurement[] wm = problem.getMeasurements();\n        double chiSquare = 0;\n        for (int i = 0; i < wm.length; ++i) {\n            double residual = wm[i].getResidual();\n            chiSquare += residual * residual / wm[i].getWeight();\n        }\n        return chiSquare;\n    }\n\n    /**\n     * Get the covariance matrix of unbound estimated parameters.\n     * @param problem estimation problem\n     * @return covariance matrix\n     * @exception EstimationException if the covariance matrix\n     * cannot be computed (singular problem)\n     */\n    public double[][] getCovariances(EstimationProblem problem)\n      throws EstimationException {\n \n        // set up the jacobian\n        updateJacobian();\n\n        // compute transpose(J).J, avoiding building big intermediate matrices\n        final int rows = problem.getMeasurements().length;\n        final int cols = problem.getAllParameters().length;\n        final int max  = cols * rows;\n        double[][] jTj = new double[cols][cols];\n        for (int i = 0; i < cols; ++i) {\n            for (int j = i; j < cols; ++j) {\n                double sum = 0;\n                for (int k = 0; k < max; k += cols) {\n                    sum += jacobian[k + i] * jacobian[k + j];\n                }\n                jTj[i][j] = sum;\n                jTj[j][i] = sum;\n            }\n        }\n\n        try {\n            // compute the covariances matrix\n            return new RealMatrixImpl(jTj).inverse().getData();\n        } catch (InvalidMatrixException ime) {\n            throw new EstimationException("unable to compute covariances: singular problem",\n                                          new Object[0]);\n        }\n\n    }\n\n    /**\n     * Guess the errors in unbound estimated parameters.\n     * <p>Guessing is covariance-based, it only gives rough order of magnitude.</p>\n     * @param problem estimation problem\n     * @return errors in estimated parameters\n     * @exception EstimationException if the covariances matrix cannot be computed\n     * or the number of degrees of freedom is not positive (number of measurements\n     * lesser or equal to number of parameters)\n     */\n    public double[] guessParametersErrors(EstimationProblem problem)\n      throws EstimationException {\n        int m = problem.getMeasurements().length;', 'aftercode': '        if (m <= p) {\n            throw new EstimationException("no degrees of freedom ({0} measurements, {1} parameters)",\n                                          new Object[] { new Integer(m), new Integer(p)});\n        }\n        double[] errors = new double[problem.getAllParameters().length];\n        final double c = Math.sqrt(getChiSquare(problem) / (m - p));\n        double[][] covar = getCovariances(problem);\n        for (int i = 0; i < errors.length; ++i) {\n            errors[i] = Math.sqrt(covar[i][i]) * c;\n        }\n        return errors;\n    }\n\n    /**\n     * Initialization of the common parts of the estimation.\n     * <p>This method <em>must</em> be called at the start\n     * of the {@link #estimate(EstimationProblem) estimate}\n     * method.</p>\n     * @param problem estimation problem to solve\n     */\n    protected void initializeEstimate(EstimationProblem problem) {\n\n        // reset counters\n        costEvaluations     = 0;\n        jacobianEvaluations = 0;\n\n        // retrieve the equations and the parameters\n        measurements = problem.getMeasurements();\n        parameters   = problem.getUnboundParameters();\n\n        // arrays shared with the other private methods\n        rows      = measurements.length;\n        cols      = parameters.length;\n        jacobian  = new double[rows * cols];\n        residuals = new double[rows];\n\n        cost = Double.POSITIVE_INFINITY;\n\n    }\n\n    /** \n     * Solve an estimation problem.\n     *\n     * <p>The method should set the parameters of the problem to several\n     * trial values until it reaches convergence. If this method returns\n     * normally (i.e. without throwing an exception), then the best\n     * estimate of the parameters can be retrieved from the problem\n     * itself, through the {@link EstimationProblem#getAllParameters\n     * EstimationProblem.getAllParameters} method.</p>\n     *\n     * @param problem estimation problem to solve\n     * @exception EstimationException if the problem cannot be solved\n     *\n     */\n    public abstract void estimate(EstimationProblem problem)\n    throws EstimationException;\n\n    /** Array of measurements. */\n    protected WeightedMeasurement[] measurements;\n\n    /** Array of parameters. */\n    protected EstimatedParameter[] parameters;\n\n    /** \n     * Jacobian matrix.\n     * <p>This matrix is in canonical form just after the calls to\n     * {@link #updateJacobian()}, but may be modified by the solver\n     * in the derived class (the {@link LevenbergMarquardtEstimator\n     * Levenberg-Marquardt estimator} does this).</p>\n     */\n    protected double[] jacobian;\n\n    /** Number of columns of the jacobian matrix. */\n    protected int cols;\n\n    /** Number of rows of the jacobian matrix. */\n    protected int rows;\n\n    /** Residuals array.\n     * <p>This array is in canonical form just after the calls to\n     * {@link #updateJacobian()}, but may be modified by the solver\n     * in the derived class (the {@link LevenbergMarquardtEstimator\n     * Levenberg-Marquardt estimator} does this).</p>\n     */\n    protected double[] residuals;\n\n    /** Cost value (square root of the sum of the residuals). */\n    protected double cost;\n\n    /** Maximal allowed number of cost evaluations. */\n    private int maxCostEval;\n\n    /** Number of cost evaluations. */\n    private int costEvaluations;\n\n    /** Number of jacobian evaluations. */\n    private int jacobianEvaluations;\n\n}', 'tree': 'MethodDeclaration modifiers public_ter ^ ^ return_type BasicType name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ name meth0 ^ ^ parameters FormalParameter type ReferenceType name EstimationProblem_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ throws EstimationException_ter ^ ^ body LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getMeasurements_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name EstimationException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ArrayCreator type ReferenceType name Object_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers ClassCreator type ReferenceType name Integer_ter ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ ^ ClassCreator type ReferenceType name Integer_ter ^ ^ ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ArrayCreator type BasicType name double_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier Math_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getChiSquare_ter ^ ^ ^ ^ operandr BinaryOperation operator -_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ member sqrt_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getCovariances_ter ^ ^ ^ ^ ^ ^ ^ ForStatement control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr MemberReference qualifier loc2 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ update MemberReference prefix_operators ++_ter ^ ^ member loc5 ^ ^ ^ ^ ^ ^ body BlockStatement statements StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc2 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc4 ^ ^ ^ ^ member sqrt_ter ^ ^ ^ ^ operandr MemberReference member loc3 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 202, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
before@0 batch1 x: 0: root ^  ; []
after@0 batch1 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root qualifier-qualifier par0 ^ ^  ^ ^ ; ['copy-qualifier']
copynode 0:  root LocalVariableDeclaration ^ ^ ; ['root -> LocalVariableDeclaration']
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root LocalVariableDeclaration ^ ^ ; ['root -> LocalVariableDeclaration']
copynode 0:  root member-member getAllParameters_ter ^ ^  ^ ^ ; ['copy-member']
before@1 batch0 x: -12.61275863647461: root LocalVariableDeclaration ^ ^  ; ['root -> LocalVariableDeclaration']
after@1 batch0 x: -12.61275863647461: root LocalVariableDeclaration ^ ^  ; ['root -> LocalVariableDeclaration']
before@1 batch1 x: -12.683585166931152: root member-member getAllParameters_ter ^ ^  ^ ^  ; ['copy-member']
after@1 batch1 x: -12.683585166931152: root member-member getAllParameters_ter ^ ^  ^ ^  ; ['copy-member']
copynode -0.2522394359111786:  root modified ^ member-member getAllParameters_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.2522394359111786:  root modified ^ qualifier-qualifier par0 ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -0.2522394359111786:  root modified ^ LocalVariableDeclaration ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration']
copynode -1.5035040378570557:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -0.2522394359111786:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -1.5035040378570557:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.2522394359111786:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-BasicType']
copynode -0.2522394359111786:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -1.5035040378570557:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -1.5035040378570557:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -1.5035040378570557:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -1.5035040378570557:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -0.2522394359111786:  root modified ^ control ^ ^ ; ['root -> modified', 'root -> control']
copynode -1.5035040378570557:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -0.2522394359111786:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -1.5035040378570557:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -1.5035040378570557:  root add ^ Statement_ter ^ ^ ; ['root -> add', 'root -> Statement_ter']
copynode -1.5035040378570557:  root add ^ parameters ^ ^ ; ['root -> add', 'root -> parameters']
copynode -9.111310958862305:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -0.2522394359111786:  root modified ^ parameters ^ ^ ; ['root -> modified', 'root -> parameters']
copynode -9.314136505126953:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -0.2522394359111786:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -10.32095718383789:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -10.430723190307617:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -10.700130462646484:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -9.314136505126953:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -9.111310958862305:  root ReturnStatement expression ClassCreator selectors MethodInvocation member inverse_ter ^ ^ ^ MethodInvocation member getData_ter ^ ^ ^ ^ type ReferenceType name RealMatrixImpl_ter ^ ^ ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -12.47817611694336:  root qualifier-qualifier par0 ^ ^  par0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par0']
copynode -12.61275863647461:  root LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -12.47817611694336:  root qualifier-qualifier par0 ^ ^  unknown ^ ^ ^ ; ['copy-qualifier', 'start -> unknown']
copynode -12.61275863647461:  root LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -10.430723190307617:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -12.61275863647461:  root LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -9.314136505126953:  root return_type BasicType name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'copy-return_type']
copynode -10.430723190307617:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -10.700130462646484:  root StatementExpression expression MethodInvocation member updateJacobian_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.700130462646484:  root StatementExpression expression Assignment expressionl MemberReference member loc6 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl MemberReference selectors ArraySelector index BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr MemberReference member loc4 ^ ^ ^ ^ ^ ^ ^ ^ member jacobian_ter ^ ^ ^ ^ operandr MemberReference selectors ArraySelector index BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr MemberReference member loc5 ^ ^ ^ ^ ^ ^ ^ ^ member jacobian_ter ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.47817611694336:  root qualifier-qualifier par0 ^ ^  loc0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> loc0']
copynode -10.700130462646484:  root StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ value MemberReference member loc6 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.700130462646484:  root StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ value MemberReference member loc6 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.430723190307617:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -12.47817611694336:  root qualifier-qualifier par0 ^ ^  par1 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par1']
copynode -10.430723190307617:  root parameters FormalParameter type ReferenceType name EstimationProblem_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ ^ ; ['root -> parameters', 'copy-parameters']
copynode -12.61275863647461:  root LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name double_ter ^ ^ ^ ^ dimensions MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -12.61275863647461:  root LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -12.61275863647461:  root LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -12.61275863647461:  root LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -12.47817611694336:  root qualifier-qualifier par0 ^ ^  LOG_ter ^ ^ ^ ; ['copy-qualifier', 'qualifier -> LOG_ter']
copynode -12.47817611694336:  root qualifier-qualifier par0 ^ ^  loc1 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> loc1']
copynode -12.61275863647461:  root LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getMeasurements_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.111310958862305:  root ReturnStatement par0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -12.47817611694336:  root qualifier-qualifier par0 ^ ^  Math_ter ^ ^ ^ ; ['copy-qualifier', 'qualifier -> Math_ter']
copynode -10.430723190307617:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -9.314136505126953:  root return_type par0 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -12.61275863647461:  root LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -12.47817611694336:  root qualifier-qualifier par0 ^ ^  par0 ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -12.47817611694336:  root qualifier-qualifier par0 ^ ^  Double_ter ^ ^ ^ ; ['copy-qualifier', 'qualifier -> Double_ter']
copynode -12.47817611694336:  root qualifier-qualifier par0 ^ ^  par2 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par2']
copynode -9.314136505126953:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -10.430723190307617:  root parameters loc0 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -10.430723190307617:  root parameters loc2 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -10.430723190307617:  root parameters loc3 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -10.700130462646484:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -10.430723190307617:  root parameters loc5 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -12.61275863647461:  root LocalVariableDeclaration par0 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -10.32095718383789:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -9.111310958862305:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -10.32095718383789:  root IfStatement par0 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -10.32095718383789:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -9.314136505126953:  root return_type loc2 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.314136505126953:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.314136505126953:  root return_type loc3 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.700130462646484:  root StatementExpression par0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -9.314136505126953:  root return_type loc5 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.32095718383789:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -9.314136505126953:  root return_type loc4 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.111310958862305:  root ReturnStatement loc7 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -9.111310958862305:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.700130462646484:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -9.111310958862305:  root ReturnStatement loc5 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -9.111310958862305:  root ReturnStatement loc3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -9.111310958862305:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -9.111310958862305:  root ReturnStatement loc6 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.700130462646484:  root StatementExpression loc1 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -10.700130462646484:  root StatementExpression loc7 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -10.32095718383789:  root IfStatement loc5 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -10.32095718383789:  root IfStatement loc4 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -10.32095718383789:  root IfStatement loc2 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -10.32095718383789:  root IfStatement loc7 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -10.32095718383789:  root IfStatement loc1 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -0.2359454333782196:  root modified ^ member-member getAllParameters_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.2359454333782196:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -1.5645757913589478:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -0.2359454333782196:  root modified ^ LocalVariableDeclaration ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration']
copynode -0.2359454333782196:  root modified ^ qualifier-qualifier par0 ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -1.5645757913589478:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.2359454333782196:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-BasicType']
copynode -1.5645757913589478:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -1.5645757913589478:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -0.2359454333782196:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -1.5645757913589478:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -1.5645757913589478:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -1.5645757913589478:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -1.5645757913589478:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -0.2359454333782196:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -0.2359454333782196:  root modified ^ control ^ ^ ; ['root -> modified', 'root -> control']
copynode -8.691817283630371:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -1.5645757913589478:  root add ^ parameters ^ ^ ; ['root -> add', 'root -> parameters']
copynode -1.5645757913589478:  root add ^ Statement_ter ^ ^ ; ['root -> add', 'root -> Statement_ter']
copynode -8.93749713897705:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -9.450875282287598:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -0.2359454333782196:  root modified ^ parameters ^ ^ ; ['root -> modified', 'root -> parameters']
copynode -9.684466361999512:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -9.92916202545166:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -0.2359454333782196:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -8.93749713897705:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -8.691817283630371:  root ReturnStatement expression MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -12.363984107971191:  root LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -12.683585166931152:  root member-member getAllParameters_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -9.684466361999512:  root StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc2 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc4 ^ ^ ^ ^ member sqrt_ter ^ ^ ^ ^ operandr MemberReference member loc3 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -9.92916202545166:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -12.363984107971191:  root LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -8.93749713897705:  root return_type BasicType name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'copy-return_type']
copynode -9.92916202545166:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -12.683585166931152:  root member-member getAllParameters_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -9.92916202545166:  root parameters FormalParameter type ReferenceType name EstimationProblem_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ ^ ; ['root -> parameters', 'copy-parameters']
copynode -12.683585166931152:  root member-member getAllParameters_ter ^ ^  getMeasurements_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -9.92916202545166:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -12.683585166931152:  root member-member getAllParameters_ter ^ ^  getName_ter ^ ^ ^ ; ['copy-member', 'member -> getName_ter']
copynode -12.683585166931152:  root member-member getAllParameters_ter ^ ^  getAllParameters_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.363984107971191:  root LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ArrayCreator type BasicType name double_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -12.363984107971191:  root LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier Math_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getChiSquare_ter ^ ^ ^ ^ operandr BinaryOperation operator -_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ member sqrt_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -12.363984107971191:  root LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -12.683585166931152:  root member-member getAllParameters_ter ^ ^  getChiSquare_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.683585166931152:  root member-member getAllParameters_ter ^ ^  get_ter ^ ^ ^ ; ['copy-member', 'member -> get_ter']
copynode -12.363984107971191:  root LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getCovariances_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -12.683585166931152:  root member-member getAllParameters_ter ^ ^  getAllParameters_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -9.92916202545166:  root parameters loc0 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -8.691817283630371:  root ReturnStatement par0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -12.683585166931152:  root member-member getAllParameters_ter ^ ^  getCovariances_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.683585166931152:  root member-member getAllParameters_ter ^ ^  toString_ter ^ ^ ^ ; ['copy-member', 'member -> toString_ter']
copynode -12.363984107971191:  root LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getMeasurements_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -8.93749713897705:  root return_type par0 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -8.93749713897705:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -9.92916202545166:  root parameters loc2 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.92916202545166:  root parameters loc4 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.92916202545166:  root parameters loc1 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.92916202545166:  root parameters loc3 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.450875282287598:  root IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name EstimationException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ArrayCreator type ReferenceType name Object_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers ClassCreator type ReferenceType name Integer_ter ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ ^ ClassCreator type ReferenceType name Integer_ter ^ ^ ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.363984107971191:  root LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -12.363984107971191:  root LocalVariableDeclaration unknown ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'start -> unknown']
copynode -12.363984107971191:  root LocalVariableDeclaration par0 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -9.450875282287598:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -8.93749713897705:  root return_type loc2 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.684466361999512:  root StatementExpression par0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -8.93749713897705:  root return_type loc3 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -8.93749713897705:  root return_type loc4 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.450875282287598:  root IfStatement par0 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -8.691817283630371:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -8.93749713897705:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.684466361999512:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -9.450875282287598:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -8.93749713897705:  root return_type loc5 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.450875282287598:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -8.691817283630371:  root ReturnStatement loc5 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.691817283630371:  root ReturnStatement loc4 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.691817283630371:  root ReturnStatement loc3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.691817283630371:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.691817283630371:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.691817283630371:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -9.684466361999512:  root StatementExpression loc1 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -9.684466361999512:  root StatementExpression loc5 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -9.684466361999512:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -9.684466361999512:  root StatementExpression loc4 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -9.684466361999512:  root StatementExpression loc2 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -9.684466361999512:  root StatementExpression loc3 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -9.450875282287598:  root IfStatement loc1 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -9.450875282287598:  root IfStatement loc2 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -9.450875282287598:  root IfStatement loc3 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -9.450875282287598:  root IfStatement loc4 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch0 x: -32.34395790100098: root IfStatement loc1 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch0 x: -32.34395790100098: root IfStatement loc1 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch1 x: -32.55879306793213: root IfStatement loc4 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch1 x: -32.55879306793213: root IfStatement loc4 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -1.1070397794246674:  root modified ^ member-member getAllParameters_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -1.9020321071147919:  root modified ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -1.9857353866100311:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.083840698003769:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -1.8860839307308197:  root modified ^ qualifier-qualifier par0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -2.5491585731506348:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.8860839307308197:  root modified ^ qualifier-qualifier par0 ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0']
copynode -1.8860839307308197:  root modified ^ qualifier-qualifier par0 ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0']
copynode -4.229284256696701:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name']
copynode -1.8860839307308197:  root modified ^ qualifier-qualifier par0 ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1']
copynode -1.1070397794246674:  root modified ^ member-member getAllParameters_ter ^ ^  getMeasurements_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -5.463034838438034:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.8860839307308197:  root modified ^ qualifier-qualifier par0 ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc1']
copynode -2.083840698003769:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -1.9020321071147919:  root modified ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -1.9020321071147919:  root modified ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -1.1070397794246674:  root modified ^ member-member getAllParameters_ter ^ ^  getData_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.8860839307308197:  root modified ^ qualifier-qualifier par0 ^ ^  LOG_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> LOG_ter']
copynode -1.1070397794246674:  root modified ^ member-member getAllParameters_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -1.1070397794246674:  root modified ^ member-member getAllParameters_ter ^ ^  inverse_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -6.1186182498931885:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -1.1070397794246674:  root modified ^ member-member getAllParameters_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter']
copynode -1.8860839307308197:  root modified ^ qualifier-qualifier par0 ^ ^  par2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par2']
copynode -2.083840698003769:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -4.229284256696701:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -4.229284256696701:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -2.083840698003769:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -6.94821572303772:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -1.8860839307308197:  root modified ^ qualifier-qualifier par0 ^ ^  loc3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc3']
copynode -6.81679368019104:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -1.9020321071147919:  root modified ^ LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -6.1186182498931885:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -1.8860839307308197:  root modified ^ qualifier-qualifier par0 ^ ^  Math_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> Math_ter']
copynode -1.1070397794246674:  root modified ^ member-member getAllParameters_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter']
copynode -4.229284256696701:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -7.426717013120651:  root modified ^ control ForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> ForControl']
copynode -7.487632989883423:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -1.1070397794246674:  root modified ^ member-member getAllParameters_ter ^ ^  toString_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> toString_ter']
copynode -4.229284256696701:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions']
copynode -1.8860839307308197:  root modified ^ qualifier-qualifier par0 ^ ^  par3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par3']
copynode -7.744607180356979:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -4.229284256696701:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name double_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -4.229284256696701:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -1.1070397794246674:  root modified ^ member-member getAllParameters_ter ^ ^  getAllParameters_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.083840698003769:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -2.5491585731506348:  root add ^ StatementExpression expression MethodInvocation member updateJacobian_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.1070397794246674:  root modified ^ member-member getAllParameters_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> par0']
copynode -8.152815580368042:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -2.5491585731506348:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc6 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl MemberReference selectors ArraySelector index BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr MemberReference member loc4 ^ ^ ^ ^ ^ ^ ^ ^ member jacobian_ter ^ ^ ^ ^ operandr MemberReference selectors ArraySelector index BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr MemberReference member loc5 ^ ^ ^ ^ ^ ^ ^ ^ member jacobian_ter ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.81679368019104:  root add ^ ReturnStatement expression ClassCreator selectors MethodInvocation member inverse_ter ^ ^ ^ MethodInvocation member getData_ter ^ ^ ^ ^ type ReferenceType name RealMatrixImpl_ter ^ ^ ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.1398890018463135:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ update MemberReference prefix_operators ++_ter ^ ^ member loc4 ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-control']
copynode -7.1398890018463135:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -4.229284256696701:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -2.5491585731506348:  root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ value MemberReference member loc6 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.5491585731506348:  root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ value MemberReference member loc6 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.229284256696701:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -4.229284256696701:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -8.619457483291626:  root add ^ Statement_ter ^ ^ ; ['root -> add', 'root -> Statement_ter', 'root -> End']
copynode -8.627994775772095:  root add ^ parameters FormalParameter ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter']
copynode -6.1186182498931885:  root add ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -7.1398890018463135:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -7.1398890018463135:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc4 ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ update MemberReference prefix_operators ++_ter ^ ^ member loc5 ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-control']
copynode -9.257621020078659:  root modified ^ parameters FormalParameter ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter']
copynode -1.9020321071147919:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name double_ter ^ ^ ^ ^ dimensions MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.1398890018463135:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ update Assignment expressionl MemberReference member loc7 ^ ^ ^ ^ value MemberReference member loc1 ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-control']
copynode -7.426717013120651:  root modified ^ control EnhancedForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl']
copynode -1.9020321071147919:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getMeasurements_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.785201281309128:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -1.9020321071147919:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.149983622133732:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -1.9020321071147919:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.63546147942543:  root return_type ReferenceType name EstimationProblem_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -2.083840698003769:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -9.149983622133732:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -10.321395016188035:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -9.149983622133732:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -1.9020321071147919:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -10.7142763575539:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -5.463034838438034:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc6 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl MemberReference selectors ArraySelector index BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr MemberReference member loc4 ^ ^ ^ ^ ^ ^ ^ ^ member jacobian_ter ^ ^ ^ ^ operandr MemberReference selectors ArraySelector index BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr MemberReference member loc5 ^ ^ ^ ^ ^ ^ ^ ^ member jacobian_ter ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -10.468811728060246:  root parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -9.149983622133732:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -10.86124587059021:  root return_type BasicType name int_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'copy-BasicType']
copynode -6.94821572303772:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -6.1186182498931885:  root add ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name double_ter ^ ^ ^ ^ dimensions MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -10.468811728060246:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -10.321395016188035:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -6.1186182498931885:  root add ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -5.463034838438034:  root modified ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ value MemberReference member loc6 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.1398890018463135:  root add ^ control ForControl_ter ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl_ter']
copynode -5.463034838438034:  root modified ^ StatementExpression expression MethodInvocation member updateJacobian_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.463034838438034:  root modified ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ value MemberReference member loc6 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.94821572303772:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -2.083840698003769:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -2.083840698003769:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -9.63546147942543:  root return_type ReferenceType name ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -6.1186182498931885:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.426717013120651:  root modified ^ control ForControl_ter ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> ForControl_ter']
copynode -9.63546147942543:  root return_type ReferenceType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name']
copynode -6.1186182498931885:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getMeasurements_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -0.9093253910541534:  root modified ^ member-member getAllParameters_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -1.623046725988388:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -1.945364236831665:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.2781269252300262:  root modified ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -2.8652061223983765:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -2.662450760602951:  root modified ^ qualifier-qualifier par0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -2.662450760602951:  root modified ^ qualifier-qualifier par0 ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0']
copynode -2.662450760602951:  root modified ^ qualifier-qualifier par0 ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0']
copynode -0.9093253910541534:  root modified ^ member-member getAllParameters_ter ^ ^  getMeasurements_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -4.268167227506638:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name']
copynode -0.9093253910541534:  root modified ^ member-member getAllParameters_ter ^ ^  getAllParameters_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.2781269252300262:  root modified ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -1.623046725988388:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -2.662450760602951:  root modified ^ qualifier-qualifier par0 ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1']
copynode -0.9093253910541534:  root modified ^ member-member getAllParameters_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -5.756563782691956:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -2.662450760602951:  root modified ^ qualifier-qualifier par0 ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc1']
copynode -0.9093253910541534:  root modified ^ member-member getAllParameters_ter ^ ^  getChiSquare_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -0.9093253910541534:  root modified ^ member-member getAllParameters_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter']
copynode -6.158892840147018:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.956680417060852:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -2.662450760602951:  root modified ^ qualifier-qualifier par0 ^ ^  Math_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -2.662450760602951:  root modified ^ qualifier-qualifier par0 ^ ^  Math_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -1.623046725988388:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -4.268167227506638:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -4.268167227506638:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -0.9093253910541534:  root modified ^ member-member getAllParameters_ter ^ ^  getAllParameters_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.623046725988388:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -0.9093253910541534:  root modified ^ member-member getAllParameters_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter']
copynode -0.9093253910541534:  root modified ^ member-member getAllParameters_ter ^ ^  getCovariances_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.8652061223983765:  root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc2 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc4 ^ ^ ^ ^ member sqrt_ter ^ ^ ^ ^ operandr MemberReference member loc3 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.268167227506638:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name double_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -4.268167227506638:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -0.9093253910541534:  root modified ^ member-member getAllParameters_ter ^ ^  toString_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> toString_ter']
copynode -2.662450760602951:  root modified ^ qualifier-qualifier par0 ^ ^  LOG_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> LOG_ter']
copynode -7.491605877876282:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -5.956680417060852:  root add ^ ReturnStatement expression MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.457480072975159:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -7.701887726783752:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -6.8322683572769165:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr MemberReference qualifier loc2 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ update MemberReference prefix_operators ++_ter ^ ^ member loc5 ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-control']
copynode -2.662450760602951:  root modified ^ qualifier-qualifier par0 ^ ^  par2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par2']
copynode -6.8322683572769165:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -4.268167227506638:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -5.756563782691956:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -4.268167227506638:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -1.623046725988388:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -8.479306906461716:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.662450760602951:  root modified ^ qualifier-qualifier par0 ^ ^  loc3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc3']
copynode -4.268167227506638:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -8.605682104825974:  root modified ^ control EnhancedForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl']
copynode -2.2781269252300262:  root modified ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -4.268167227506638:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions']
copynode -8.84004271030426:  root add ^ parameters FormalParameter ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter']
copynode -9.099201798439026:  root add ^ Statement_ter ^ ^ ; ['root -> add', 'root -> Statement_ter', 'root -> End']
copynode -8.731088984757662:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -9.677602499723434:  root modified ^ parameters FormalParameter ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter']
copynode -9.451169951469637:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -2.2781269252300262:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier Math_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getChiSquare_ter ^ ^ ^ ^ operandr BinaryOperation operator -_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ member sqrt_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.701443986967206:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.2781269252300262:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ArrayCreator type BasicType name double_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.8322683572769165:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -4.268167227506638:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name double_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -10.476693838834763:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -1.623046725988388:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -8.731088984757662:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -9.219064086675644:  root return_type ReferenceType name Object_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -9.978315182030201:  root parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -8.731088984757662:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -2.2781269252300262:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getCovariances_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -8.731088984757662:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -6.158892840147018:  root modified ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc2 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc4 ^ ^ ^ ^ member sqrt_ter ^ ^ ^ ^ operandr MemberReference member loc3 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -9.451169951469637:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -9.219064086675644:  root return_type ReferenceType name EstimationProblem_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -5.756563782691956:  root add ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ArrayCreator type BasicType name double_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.8322683572769165:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -9.978315182030201:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -5.756563782691956:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier Math_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getChiSquare_ter ^ ^ ^ ^ operandr BinaryOperation operator -_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ member sqrt_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.219064086675644:  root return_type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -10.643428087234497:  root return_type BasicType name int_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'copy-BasicType']
copynode -9.219064086675644:  root return_type ReferenceType name ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -9.219064086675644:  root return_type ReferenceType name EstimationException_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -2.2781269252300262:  root modified ^ LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -8.605682104825974:  root modified ^ control ForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> ForControl']
copynode -9.701443986967206:  root StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -1.623046725988388:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -5.756563782691956:  root add ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getCovariances_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -1.623046725988388:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -9.219064086675644:  root return_type ReferenceType name Integer_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -9.219064086675644:  root return_type ReferenceType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name']
copynode -12.04637598991394:  root ReturnStatement expression MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -2.2781269252300262:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getMeasurements_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -10.643428087234497:  root return_type BasicType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'BasicType -> name']
copynode -5.756563782691956:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getMeasurements_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.451169951469637:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -12.495941951870918:  root LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -7.491605877876282:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -7.491605877876282:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -7.457480072975159:  root add ^ AssertStatement condition ^ value ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition value']
copynode -5.756563782691956:  root add ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
before@3 batch0 x: -12.450074911117554: root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getMeasurements_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
after@3 batch0 x: -12.450074911117554: root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getMeasurements_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
before@3 batch1 x: -12.97726309299469: root add ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^  ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
after@3 batch1 x: -12.97726309299469: root add ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^  ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -1.1612936034798622:  root modified ^ member-member getAllParameters_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -1.9602021612226963:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers']
copynode -2.329485446214676:  root modified ^ qualifier-qualifier par0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -1.9861621873569675:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -2.1365022733807564:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -2.562004167586565:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -1.9861621873569675:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -2.1365022733807564:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.9037860333919525:  root modified ^ qualifier-qualifier par0 ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0', 'root -> End']
copynode -2.562004167586565:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -4.302208513021469:  root modified ^ qualifier-qualifier par0 ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0', 'root -> End']
copynode -2.1365022733807564:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -1.9861621873569675:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -4.959024995565414:  root modified ^ qualifier-qualifier par0 ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1', 'root -> End']
copynode -4.64192533493042:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> long_ter']
copynode -5.18652805685997:  root modified ^ member-member getAllParameters_ter ^ ^  getMeasurements_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -2.1365022733807564:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -5.509348481893539:  root modified ^ qualifier-qualifier par0 ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc1', 'root -> End']
copynode -5.618634194135666:  root modified ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -5.795683711767197:  root modified ^ member-member getAllParameters_ter ^ ^  getData_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.64192533493042:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> int_ter']
copynode -2.1365022733807564:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.4726529736071825:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -6.193981498479843:  root modified ^ qualifier-qualifier par0 ^ ^  LOG_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> LOG_ter', 'root -> End']
copynode -6.200417369604111:  root modified ^ member-member getAllParameters_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -1.9602021612226963:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers']
copynode -2.1365022733807564:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.364876598119736:  root modified ^ member-member getAllParameters_ter ^ ^  inverse_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.4726529736071825:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.562004167586565:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -5.609517186880112:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -2.1365022733807564:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.569593757390976:  root modified ^ member-member getAllParameters_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter', 'root -> End']
copynode -6.595363944768906:  root modified ^ qualifier-qualifier par0 ^ ^  par2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par2', 'root -> End']
copynode -6.715942353010178:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -5.609517186880112:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -6.911279886960983:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -2.562004167586565:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -7.0447467267513275:  root modified ^ qualifier-qualifier par0 ^ ^  loc3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc3', 'root -> End']
copynode -1.9602021612226963:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter']
copynode -5.609517186880112:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -1.9602021612226963:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers']
copynode -6.629877895116806:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors']
copynode -6.544346243143082:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers']
copynode -7.38440677523613:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators', 'copy-modifiers']
copynode -7.4303158223629:  root modified ^ qualifier-qualifier par0 ^ ^  Math_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> Math_ter', 'root -> End']
copynode -7.4393599927425385:  root modified ^ member-member getAllParameters_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter', 'root -> End']
copynode -7.424631476402283:  root add ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -7.468439310789108:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -2.1365022733807564:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member e_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> e_ter']
copynode -7.078188717365265:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.970160335302353:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -6.544346243143082:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers']
copynode -7.673937648534775:  root modified ^ member-member getAllParameters_ter ^ ^  toString_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> toString_ter', 'root -> End']
copynode -2.1365022733807564:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member jacobian_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.721670478582382:  root modified ^ qualifier-qualifier par0 ^ ^  par3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par3', 'root -> End']
copynode -2.562004167586565:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -7.798879832029343:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name double_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -2.1365022733807564:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -7.899095743894577:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -7.91565403342247:  root modified ^ member-member getAllParameters_ter ^ ^  getAllParameters_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.629877895116806:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -8.082453578710556:  root modified ^ member-member getAllParameters_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> par0', 'root -> End']
copynode -7.744798410334624:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -7.675299137830734:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name long_ter ^ ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions', 'name -> long_ter']
copynode -6.544346243143082:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers']
copynode -7.660707503557205:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -8.051653861999512:  root add ^ StatementExpression expression MethodInvocation member updateJacobian_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.600075036287308:  root modified ^ control ForControl init ^ condition ^ ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> ForControl', 'ForControl -> init condition']
copynode -8.336559265851974:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -5.4726529736071825:  root modified ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -8.304165005683899:  root add ^ ReturnStatement expression ClassCreator selectors MethodInvocation member inverse_ter ^ ^ ^ MethodInvocation member getData_ter ^ ^ ^ ^ type ReferenceType name RealMatrixImpl_ter ^ ^ ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -8.329446077346802:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -1.9861621873569675:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -8.230144023895264:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc6 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl MemberReference selectors ArraySelector index BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr MemberReference member loc4 ^ ^ ^ ^ ^ ^ ^ ^ member jacobian_ter ^ ^ ^ ^ operandr MemberReference selectors ArraySelector index BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr MemberReference member loc5 ^ ^ ^ ^ ^ ^ ^ ^ member jacobian_ter ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -1.9861621873569675:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -1.9861621873569675:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -8.606767624616623:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -8.183530354872346:  root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -8.646741837263107:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -8.31204628944397:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ update MemberReference prefix_operators ++_ter ^ ^ member loc4 ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-control', 'root -> End']
copynode -8.530840873718262:  root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ value MemberReference member loc6 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.078188717365265:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -8.591075420379639:  root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ value MemberReference member loc6 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.970160335302353:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  prefix_operators ~_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ~_ter']
copynode -6.629877895116806:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors']
copynode -7.675299137830734:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions', 'name -> int_ter']
copynode -7.600075036287308:  root modified ^ control ForControl init ^ condition ^ update ^ ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> ForControl', 'ForControl -> init condition update']
copynode -4.64192533493042:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name boolean_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> boolean_ter']
copynode -1.9861621873569675:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -6.970160335302353:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -7.744798410334624:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -5.4726529736071825:  root modified ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -8.687429621815681:  root add ^ parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -2.562004167586565:  root add ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -1.9861621873569675:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -9.465126723051071:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name double_ter ^ ^ ^ ^ dimensions MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -0.9964956715703011:  root modified ^ member-member getAllParameters_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -1.945606737936032:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -1.6688515432178974:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -2.346439443528652:  root modified ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -2.8791608195751905:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -1.6688515432178974:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -1.945606737936032:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.4254104793071747:  root modified ^ qualifier-qualifier par0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -1.6688515432178974:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.336350649595261:  root modified ^ qualifier-qualifier par0 ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0', 'root -> End']
copynode -4.360652178525925:  root modified ^ qualifier-qualifier par0 ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0', 'root -> End']
copynode -4.600183755159378:  root modified ^ member-member getAllParameters_ter ^ ^  getMeasurements_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.723558694124222:  root modified ^ member-member getAllParameters_ter ^ ^  getAllParameters_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -1.6688515432178974:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -2.8791608195751905:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -4.644840627908707:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> long_ter']
copynode -5.048994272947311:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers']
copynode -1.945606737936032:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -5.073913186788559:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -1.6688515432178974:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.803185671567917:  root modified ^ qualifier-qualifier par0 ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1', 'root -> End']
copynode -5.8068192303180695:  root modified ^ member-member getAllParameters_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -4.644840627908707:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> int_ter']
copynode -5.857268542051315:  root modified ^ qualifier-qualifier par0 ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc1', 'root -> End']
copynode -5.848171710968018:  root add ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -1.6688515432178974:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.029115945100784:  root modified ^ member-member getAllParameters_ter ^ ^  getChiSquare_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.0425088703632355:  root modified ^ member-member getAllParameters_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter', 'root -> End']
copynode -1.6688515432178974:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.311614006757736:  root modified ^ qualifier-qualifier par0 ^ ^  Math_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.375319451093674:  root modified ^ qualifier-qualifier par0 ^ ^  Math_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.175948619842529:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -5.073913186788559:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -6.168729575350881:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -6.897264450788498:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -6.953342407941818:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -6.9561465084552765:  root modified ^ member-member getAllParameters_ter ^ ^  getAllParameters_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.073913186788559:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -7.049090653657913:  root modified ^ member-member getAllParameters_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter', 'root -> End']
copynode -7.096468240022659:  root modified ^ member-member getAllParameters_ter ^ ^  getCovariances_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -2.8791608195751905:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -6.168729575350881:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.157846659421921:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name double_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -7.192867487668991:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -7.157432913780212:  root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc2 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc4 ^ ^ ^ ^ member sqrt_ter ^ ^ ^ ^ operandr MemberReference member loc3 ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -1.6688515432178974:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.390658646821976:  root modified ^ member-member getAllParameters_ter ^ ^  toString_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> toString_ter', 'root -> End']
copynode -7.393504589796066:  root modified ^ qualifier-qualifier par0 ^ ^  LOG_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> LOG_ter', 'root -> End']
copynode -6.617599338293076:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors']
copynode -7.018995136022568:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -1.6688515432178974:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -1.6688515432178974:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member e_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> e_ter']
copynode -7.642787456512451:  root add ^ ReturnStatement expression MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.617599338293076:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -2.8791608195751905:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -7.657405510544777:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -7.743982058018446:  root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -2.346439443528652:  root modified ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -8.131588906049728:  root modified ^ qualifier-qualifier par0 ^ ^  par2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par2', 'root -> End']
copynode -7.7594300508499146:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr MemberReference qualifier loc2 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ update MemberReference prefix_operators ++_ter ^ ^ member loc5 ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-control', 'root -> End']
copynode -8.215472340583801:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -8.376669138669968:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -5.048994272947311:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter']
copynode -8.41748258471489:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -8.394543051719666:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers']
copynode -6.175948619842529:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -6.617599338293076:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors']
copynode -6.175948619842529:  root add ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -1.945606737936032:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -8.61589190363884:  root modified ^ qualifier-qualifier par0 ^ ^  loc3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc3', 'root -> End']
copynode -8.6267931163311:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -8.677259683609009:  root modified ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -8.47945938675548:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -7.018995136022568:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.168729575350881:  root modified ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -4.644840627908707:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name boolean_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> boolean_ter']
copynode -6.175948619842529:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -8.702740401029587:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name long_ter ^ ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions', 'name -> long_ter']
copynode -7.018995136022568:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  prefix_operators ~_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ~_ter']
copynode -1.945606737936032:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -9.420313645154238:  root ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -8.892884112894535:  root add ^ parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -5.073913186788559:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier Math_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -7.743982058018446:  root add ^ WhileStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MethodInvocation']
copynode -7.7594300508499146:  root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr MemberReference qualifier loc2 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ update MemberReference prefix_operators ++_ter ^ ^ member loc5 ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> control', 'copy-control', 'root -> StatementExpression']
copynode -1.945606737936032:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr MemberReference qualifier loc2 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -8.446067661046982:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -2.8791608195751905:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -1.945606737936032:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -5.073913186788559:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier par1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.657405510544777:  root add ^ AssertStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MethodInvocation']
copynode -9.821750326664187:  root IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -8.702740401029587:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions', 'name -> int_ter']
copynode -9.842080801725388:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name double_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier Math_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getChiSquare_ter ^ ^ ^ ^ operandr BinaryOperation operator -_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ member sqrt_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -4.644840627908707:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name double_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name']
copynode -5.848171710968018:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -8.892884112894535:  root add ^ parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
before@4 batch0 x: -9.465983071946539: root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name double_ter ^ ^ ^ ^ dimensions MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
after@4 batch0 x: -9.465983071946539: root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name double_ter ^ ^ ^ ^ dimensions MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
before@4 batch1 x: -9.86895839124918: root add ^ parameters FormalParameter type ^ name ^ ^ ^ ^  ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
after@4 batch1 x: -9.86895839124918: root add ^ parameters FormalParameter type ^ name ^ ^ ^ ^  ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -1.9852098040282726:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType']
copynode -2.364880772132892:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.7008031085133553:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -3.7031663730740547:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -2.8122801668941975:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.8122801668941975:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.3621838109684177:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.279111344367266:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -4.367116458714008:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -2.8122801668941975:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.8122801668941975:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.053317368030548:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> long_ter', 'root -> End']
copynode -3.3621838109684177:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -5.364110238850117:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -3.3621838109684177:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.87934994866373:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -5.626887580379844:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -5.835149168968201:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> int_ter', 'root -> End']
copynode -4.87934994866373:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -6.013253457844257:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -3.3621838109684177:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.130146862939:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -3.3621838109684177:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -2.8122801668941975:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -3.3621838109684177:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.303229752928019:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType']
copynode -6.320497520267963:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.4041985888034105:  root modified ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.512304313480854:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -1.9852098040282726:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> ReferenceType']
copynode -6.502382010221481:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier unknown ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'copy-member']
copynode -6.406758863478899:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -3.3621838109684177:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -3.3621838109684177:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -7.002990324050188:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -7.06441206112504:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType']
copynode -6.831008642911911:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier loc0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -7.246659699827433:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType']
copynode -7.370074778795242:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType']
copynode -7.178340643644333:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -7.518193729221821:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member e_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> e_ter', 'root -> End']
copynode -3.3621838109684177:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.8122801668941975:  root add ^ StatementExpression expression MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -7.551106035709381:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -4.87934994866373:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.665921598672867:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType']
copynode -7.710741050541401:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member jacobian_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -2.8122801668941975:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -7.453960096463561:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -7.81152106076479:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4', 'root -> End']
copynode -6.406758863478899:  root add ^ StatementExpression expression MemberReference selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> selectors member']
copynode -7.359473377466202:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'start -> unknown']
copynode -8.109899360337295:  root modified ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -8.125445872545242:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType']
copynode -3.3621838109684177:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -8.12707445025444:  root add ^ AssertStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.992598503828049:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors ArraySelector index ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index']
copynode -6.831008642911911:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -7.5537364184856415:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  prefix_operators -_ter ^ ^ member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> loc0']
copynode -7.767961103469133:  root add ^ StatementExpression expression SuperMethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member']
copynode -8.614301467314363:  root add ^ WhileStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -8.340693296864629:  root modified ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -2.364880772132892:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr MemberReference member loc4 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -8.397719384927768:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -2.2563202973251464:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.289989221841097:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -2.3523475294932723:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -3.135007668286562:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -3.059140248224139:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.758138347417116:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -3.059140248224139:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.4008057411556365:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.797323156148195:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -4.836054859682918:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -5.059485465288162:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> long_ter', 'root -> End']
copynode -5.109426196664572:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType']
copynode -3.4008057411556365:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -3.4008057411556365:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.583923030644655:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -3.059140248224139:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.836764484643936:  root modified ^ BasicType-BasicType name int_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> int_ter', 'root -> End']
copynode -3.4008057411556365:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -5.53991237282753:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier loc0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -6.020594287663698:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -5.870697660371661:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -3.4008057411556365:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -6.13857476785779:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -5.44727638324548:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -3.059140248224139:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.44727638324548:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -3.059140248224139:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.488036960363388:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -3.4008057411556365:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.53991237282753:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -6.765075059607625:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -2.3523475294932723:  root modified ^ LocalVariableDeclaration type BasicType name ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name']
copynode -6.729102462530136:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier unknown ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'copy-member']
copynode -3.4008057411556365:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -7.152955384925008:  root modified ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -2.3523475294932723:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -7.351332355290651:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -3.4008057411556365:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.042828768491745:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -7.477235484868288:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4', 'root -> End']
copynode -3.4008057411556365:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -7.130871711298823:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -2.2563202973251464:  root add ^ IfStatement condition BinaryOperation operator -_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.646163631230593:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  member e_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> e_ter', 'root -> End']
copynode -2.3523475294932723:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -2.3523475294932723:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -7.880558906123042:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -3.059140248224139:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -7.6928320825099945:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors ArraySelector index ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index']
copynode -7.983311906456947:  root add ^ AssertStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.44727638324548:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -8.092821877449751:  root add ^ WhileStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.463106602430344:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'start -> unknown']
copynode -3.4008057411556365:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -5.870697660371661:  root add ^ LocalVariableDeclaration type BasicType name ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name']
copynode -3.059140248224139:  root add ^ StatementExpression expression MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -7.474563449621201:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  prefix_operators -_ter ^ ^ member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> loc0']
copynode -7.042828768491745:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -8.409539192914963:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType']
copynode -2.3523475294932723:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -2.3523475294932723:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -8.477116413414478:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType']
copynode -8.48659896850586:  root add ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -7.474563449621201:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  prefix_operators -_ter ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'copy-member']
copynode -8.525007247924805:  root add ^ ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.870697660371661:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -8.820214223553194:  root modified ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.3523475294932723:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
before@5 batch0 x: -8.741439640522003: root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ value MemberReference member loc6 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
after@5 batch0 x: -8.741439640522003: root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc4 ^ ^ ^ ^ ^ ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ value MemberReference member loc6 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
before@5 batch1 x: -8.855373061262071: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
after@5 batch1 x: -8.855373061262071: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -1.9967751754447818:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType']
copynode -2.369848621368874:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -2.369848621368874:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.240385653276462:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -4.2810213504126295:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -4.4592653401196:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.0091920979321:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -4.050350774079561:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -2.369848621368874:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -4.654753435403109:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.075588824052829:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -2.369848621368874:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -4.050350774079561:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -4.0091920979321:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -2.369848621368874:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -2.369848621368874:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -2.369848621368874:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -5.875131608743686:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.682351293042302:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -5.503082336683292:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.0091920979321:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.4663493650150485:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -6.17579507996561:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -1.9967751754447818:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'BasicType -> name']
copynode -6.119351150293369:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0']
copynode -6.2156722562504:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.050350774079561:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -6.316417791880667:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType']
copynode -2.369848621368874:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter']
copynode -6.136918714735657:  root modified ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -6.4596306104213:  root modified ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -5.4663493650150485:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.677049607038498:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier unknown ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'copy-member', 'root -> End']
copynode -6.181208122521639:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0']
copynode -6.899954320688266:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.503082336683292:  root add ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.931467534799594:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter']
copynode -4.2810213504126295:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc6 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -4.240385653276462:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -4.654753435403109:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.091674234718084:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType']
copynode -7.134070098400116:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier loc0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'root -> End']
copynode -1.9967751754447818:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType']
copynode -6.181208122521639:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0']
copynode -7.260013358667493:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType']
copynode -4.240385653276462:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -7.058453470468521:  root add ^ StatementExpression expression This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.682351293042302:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -4.654753435403109:  root add ^ StatementExpression expression MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -7.465609312057495:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -6.605361323803663:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name EstimationProblem_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -4.654753435403109:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -7.399230200797319:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType']
copynode -7.570927131921053:  root add ^ StatementExpression expression MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -7.7723756190389395:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -5.503082336683292:  root add ^ IfStatement condition MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.4663493650150485:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -7.695938078686595:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType']
copynode -4.2810213504126295:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc7 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -7.544026138086338:  root add ^ IfStatement condition MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -7.9288643300533295:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  selectors MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'copy-selectors', 'start -> unknown', 'root -> End']
copynode -2.369848621368874:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter']
copynode -2.388063001446426:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -2.263216496517998:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -2.263216496517998:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.720460219308734:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -2.263216496517998:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -4.285848766172421:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -4.205434126779437:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -4.837609901675023:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -2.263216496517998:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -5.128375174477696:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType']
copynode -5.231474071348202:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -2.263216496517998:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -3.720460219308734:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -4.285848766172421:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -2.263216496517998:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -3.720460219308734:  root add ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.205434126779437:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -2.263216496517998:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -5.987766474485397:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier loc0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'copy-member', 'root -> End']
copynode -2.263216496517998:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter']
copynode -6.107650710269809:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -6.13589099010278:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -5.69274072162807:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.2373002003878355:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -3.720460219308734:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.315925448740018:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.2713090475444915:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.969818383062375:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0']
copynode -4.205434126779437:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -4.205434126779437:  root add ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -2.388063001446426:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -6.65179470142175:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.759747296571732:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -5.2713090475444915:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -6.771665458101779:  root modified ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -6.529292572289705:  root add ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -4.285848766172421:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -6.920929342508316:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier unknown ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'copy-member', 'root -> End']
copynode -6.9905720051174285:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter']
copynode -6.197147279584897:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.470452589914203:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0']
copynode -4.837609901675023:  root add ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc2 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -5.2713090475444915:  root add ^ IfStatement condition MethodInvocation qualifier Math_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.2713090475444915:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -7.186278207227588:  root modified ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.197147279584897:  root add ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.969818383062375:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0']
copynode -7.453726887702942:  root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -6.841940558515489:  root modified ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'name -> boolean_ter']
copynode -7.4931567009334685:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -3.720460219308734:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -7.266709960065782:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -3.720460219308734:  root add ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -7.560181915367139:  root add ^ IfStatement condition BinaryOperation operator -_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -5.69274072162807:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.197147279584897:  root add ^ IfStatement condition MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.470452589914203:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0']
copynode -7.4354250725155:  root add ^ IfStatement condition MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -7.751248992048204:  root modified ^ LocalVariableDeclaration type BasicType name double_ter ^ ^ dimensions None_ter ^ None_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -2.263216496517998:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter']
before@6 batch0 x: -8.115047824860085: root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter']
after@6 batch0 x: -8.115047824860085: root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter']
before@6 batch1 x: -8.204043984413147: root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr MemberReference qualifier loc2 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ update MemberReference prefix_operators ++_ter ^ ^ member loc5 ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> control', 'copy-control', 'root -> End']
after@6 batch1 x: -8.204043984413147: root add ^ control ForControl init VariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr MemberReference qualifier loc2 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ update MemberReference prefix_operators ++_ter ^ ^ member loc5 ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> control', 'copy-control', 'root -> End']
copynode -2.0303749134764075:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -3.126568329811562:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -3.7334219341282733:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -4.427761131315492:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -4.4827994499355555:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -4.380049468774814:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -4.681104529649019:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -4.943317670375109:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.869606626511086:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -5.079188022820745:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0']
copynode -5.159448493272066:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -4.680158246308565:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -5.084135663986672:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -3.126568329811562:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -5.889048146083951:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -5.648388278961647:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.680158246308565:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal']
copynode -5.300761807709932:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -5.744213712692726:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
copynode -5.8807989482884295:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -6.401470771525055:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -3.7334219341282733:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -5.884053695772309:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.0564478524029255:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.300761807709932:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
copynode -6.335072140209377:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -6.369513166428078:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference']
copynode -6.036811830301303:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.179756910831202:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'qualifier -> par0']
copynode -4.869606626511086:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation']
copynode -6.1489182727527805:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -6.230136031110305:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation']
copynode -6.903420370130334:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.084135663986672:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation']
copynode -6.8387625105679035:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation']
copynode -6.182044054381549:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'BasicType -> name', 'name -> int_ter']
copynode -6.935696592845488:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter', 'qualifier -> par0']
copynode -4.380049468774814:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member isEmpty_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'member -> isEmpty_ter']
copynode -7.11017544195056:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -7.098740804940462:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.241235090245027:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -7.142759825102985:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -6.241235090245027:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -5.884053695772309:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc0']
copynode -4.680158246308565:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation']
copynode -7.065007092256565:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -6.596195341844577:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -7.20762275531888:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation']
copynode -7.352274477481842:  root add ^ StatementExpression expression This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.179756910831202:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -4.380049468774814:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -7.381371917203069:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -6.1489182727527805:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal']
copynode -7.277601972222328:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -7.402712095528841:  root add ^ StatementExpression expression MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -7.497620802372694:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name EstimationProblem_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -6.230136031110305:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ selectors MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference']
copynode -7.558255437761545:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -6.036811830301303:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.182044054381549:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name long_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'BasicType -> name', 'name -> long_ter']
copynode -6.182044054381549:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name boolean_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'BasicType -> name', 'name -> boolean_ter']
copynode -6.335072140209377:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -5.744213712692726:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MethodInvocation']
copynode -2.404226520098746:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -2.9286174784210743:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -3.8493690500763478:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -4.809252543374896:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -4.747144549692166:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -4.97537994349841:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -4.693920136502129:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -4.2950851153582335:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -2.9286174784210743:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -5.134870539885014:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -5.061424256375176:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -5.687649650499225:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -5.234022254662705:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0']
copynode -5.440956116726738:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
copynode -5.644372850263608:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -5.6484546671417775:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.2950851153582335:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
copynode -5.8591692457703175:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -5.506049199029803:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -6.25384608656168:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.23690084926784:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.693920136502129:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation']
copynode -4.2950851153582335:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -6.032459260037285:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference']
copynode -6.1136151580139995:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -3.8493690500763478:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -5.668953461572528:  root add ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.620988893322647:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -5.061424256375176:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation']
copynode -5.234022254662705:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0']
copynode -6.613766951486468:  root add ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.403477489555371:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation']
copynode -6.277905507013202:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.8569240239448845:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -6.903477627784014:  root add ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -2.9286174784210743:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getChiSquare_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -7.0213917922228575:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation']
copynode -4.2950851153582335:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments']
copynode -6.355258613431943:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.440956116726738:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MethodInvocation']
copynode -6.32054203755979:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.138774883307633:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.506049199029803:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal']
copynode -6.678522104004514:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -4.2950851153582335:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation']
copynode -6.32054203755979:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc0']
copynode -6.9934824994561495:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter', 'qualifier -> par0']
copynode -6.1136151580139995:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name']
copynode -7.495648714553681:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.506049199029803:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation']
copynode -6.032459260037285:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MethodInvocation']
copynode -4.747144549692166:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member isEmpty_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'member -> isEmpty_ter']
copynode -4.2950851153582335:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments']
copynode -6.996139436567319:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -5.234022254662705:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.794570713842404:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -6.138774883307633:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier Math_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -7.368948727453244:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation']
before@7 batch0 x: -7.751725566864479: root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MethodInvocation']
after@7 batch0 x: -7.751725566864479: root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MethodInvocation']
before@7 batch1 x: -7.746167391145718: root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation']
after@7 batch1 x: -7.746167391145718: root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation']
copynode -2.038185171317309:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -3.2873968009953387:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.8279170517926104:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.726527102291584:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -4.456955095170997:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.139471215486992:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.203939877450466:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -5.37024049210595:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.332196284085512:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.556802438397426:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement']
copynode -5.196460280625615:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'start -> unknown']
copynode -4.556802438397426:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -4.997752111405134:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.456955095170997:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.896028552670032:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1']
copynode -4.997752111405134:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.903114301443566:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.950312722474337:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value']
copynode -5.9969020311837085:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.956821132451296:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.149530065536965:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.514688027382363:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.514688027382363:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.422515212092549:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.568109143525362:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -6.562190640717745:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.638482580892742:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -6.6512093667988665:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.556802438397426:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> StatementExpression']
copynode -4.456955095170997:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.872467340726871:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.9986654771491885:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'BasicType -> name', 'name -> int_ter', 'declarators -> VariableDeclarator']
copynode -6.551046658132691:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -7.1350839622318745:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -7.15174229349941:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -7.140038099139929:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -7.243365289468784:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.5160597686772235:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.5160597686772235:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.810083520889748:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.383744105696678:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -7.383734108705539:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value']
copynode -6.785810978442896:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -6.973477614403237:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.982107598334551:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.232983697205782:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.551895897835493:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name EstimationProblem_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -7.552157873113174:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ selectors MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -4.456955095170997:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par1 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -4.556802438397426:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ContinueStatement_ter']
copynode -6.9337344111991115:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.050521230616141:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'selectors -> MethodInvocation']
copynode -6.9337344111991115:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.15303857420804:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.68959806393832:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -7.651663566939533:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'BasicType -> name', 'name -> boolean_ter', 'declarators -> VariableDeclarator']
copynode -7.641647840850055:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'BasicType -> name', 'name -> long_ter', 'declarators -> VariableDeclarator']
copynode -6.93964287271956:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -7.206552851770539:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc0', 'root -> End']
copynode -2.4090732564218342:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1']
copynode -3.114635021498543:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.9564245874789776:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.831356722861528:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -5.028043062498909:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.0292830895632505:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.149652187246829:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -5.422014684489113:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.0427606115845265:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.005617441260256:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.709979625418782:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -5.755187005808693:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.88865143021394:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -4.88865143021394:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement']
copynode -5.727965767102432:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'start -> unknown']
copynode -5.005617441260256:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.874858827402932:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.086135430261493:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -6.088165626933915:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.229545516893268:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.0427606115845265:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.391180516293389:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.58159707300365:  root add ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.351365489885211:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.674950418993831:  root add ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -5.782660677636159:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -5.782660677636159:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.6552137085964205:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0', 'start -> unknown']
copynode -6.324120880177361:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.43382343929261:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1']
copynode -6.872014624997973:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.440269471218926:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.87525754282251:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.2838838789612055:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.626753331234795:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.2838838789612055:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.113400011861813:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.093895120546222:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown']
copynode -4.88865143021394:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> StatementExpression']
copynode -7.301311416551471:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value']
copynode -3.114635021498543:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.8016100819950225:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.8016100819950225:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.14232462651853:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -7.431062383577228:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.119433404019219:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.025937081387383:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getChiSquare_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl', 'operandr -> Literal']
copynode -7.075064146891236:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.625501794740558:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown']
copynode -4.88865143021394:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ContinueStatement_ter']
copynode -6.43382343929261:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2']
copynode -5.0292830895632505:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.440269471218926:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
before@8 batch0 x: -7.728186119173188: root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc0', 'root -> End']
after@8 batch0 x: -7.728186119173188: root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc0', 'root -> End']
before@8 batch1 x: -7.786728502323967: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
after@8 batch1 x: -7.786728502323967: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -2.04113272880204:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1']
copynode -3.300173086405266:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.83622110291617:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.300173086405266:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.15233709505992:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.83622110291617:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.83622110291617:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.992865880369209:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation']
copynode -5.385353389487136:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.690500359982252:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -5.900952734518796:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation']
copynode -5.430825935502071:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator selectors MethodInvocation member inverse_ter ^ ^ ^ MethodInvocation member getData_ter ^ ^ ^ ^ type ReferenceType name RealMatrixImpl_ter ^ ^ ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -5.430825935502071:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.92805103585124:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -5.437128175108228:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -3.300173086405266:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.992865880369209:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MemberReference']
copynode -6.287978721142281:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -5.418186318129301:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.15233709505992:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.437128175108228:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement']
copynode -3.300173086405266:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.8540566166630015:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation']
copynode -4.992865880369209:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> Literal']
copynode -6.009097352914978:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.385353389487136:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.442652714729775:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal']
copynode -5.418186318129301:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.555355636868626:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation']
copynode -6.7573601471376605:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.201660321385134:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.956094966561068:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.956094966561068:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.418186318129301:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.043923396617174:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.05939484667033:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'BasicType -> name', 'name -> int_ter', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -7.155106967547908:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1']
copynode -3.300173086405266:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.97439674846828:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -6.009097352914978:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.664438899897505:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.294011784077156:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.043923396617174:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.359831882000435:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal']
copynode -6.620047207921743:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.371202719688881:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -3.83622110291617:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.97439674846828:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -5.8540566166630015:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MemberReference']
copynode -4.992865880369209:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value BinaryOperation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> BinaryOperation']
copynode -7.497887940437067:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.555998605210334:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name EstimationProblem_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1']
copynode -6.043923396617174:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.524395895481575:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -2.412706253817305:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation']
copynode -3.1294138860685052:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.1294138860685052:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.9636819149163784:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.9636819149163784:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -2.412706253817305:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation']
copynode -5.619652451088768:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -5.043697995206458:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -2.412706253817305:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference']
copynode -2.412706253817305:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This']
copynode -2.412706253817305:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast']
copynode -5.043697995206458:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.110077364370227:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.440543943157536:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.1294138860685052:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.705695451819338:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation']
copynode -5.110077364370227:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.440543943157536:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -2.412706253817305:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression']
copynode -3.9636819149163784:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.8647975321655395:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.92940455826465:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation']
copynode -5.771206484248978:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.914717848019791:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -6.32304370503698:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal']
copynode -5.110077364370227:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.771206484248978:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.139840100964648:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.9319807301071705:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.8647975321655395:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -3.1294138860685052:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.842940033486229:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.945562780907494:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -5.9319807301071705:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.408578666931135:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.105285678058863:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -6.641387345269322:  root add ^ StatementExpression expression MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.1294138860685052:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.989089975133538:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -7.126148046067101:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.969262822065502:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation']
copynode -6.65398077480495:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -7.244899807497859:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.408578666931135:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.914717848019791:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement']
copynode -7.313097059333813:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.3089656215161085:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.754679575169575:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.151374826207757:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.840296039896202:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -6.3089656215161085:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
before@9 batch0 x: -7.595581059635151: root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
after@9 batch0 x: -7.595581059635151: root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
before@9 batch1 x: -7.480350671336055: root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
after@9 batch1 x: -7.480350671336055: root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -2.046758932294324:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation']
copynode -3.7010028188233264:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -4.24082041188376:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -4.9258430426125415:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -2.046758932294324:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation']
copynode -2.046758932294324:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast']
copynode -2.046758932294324:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference']
copynode -3.7010028188233264:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -2.046758932294324:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This']
copynode -5.807547215663362:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -5.8793994228472:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal']
copynode -5.980918955057859:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -2.046758932294324:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression']
copynode -6.101678417820949:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator selectors MethodInvocation member inverse_ter ^ ^ ^ MethodInvocation member getData_ter ^ ^ ^ ^ type ReferenceType name RealMatrixImpl_ter ^ ^ ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -5.7026081889052875:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -6.187270920723677:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown']
copynode -6.335849364637397:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MemberReference', 'MemberReference -> member']
copynode -5.9569900066708215:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -5.888045807718299:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.29320077347802:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal']
copynode -6.401283632963896:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.1704495417070575:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.539401491521858:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> Literal', 'Literal -> value']
copynode -6.4748731081490405:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal']
copynode -6.647141632915009:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value']
copynode -6.754677622113377:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.412292501248885:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -6.734709154814482:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -4.9258430426125415:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -6.567525521211792:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -5.7026081889052875:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -6.441755402891431:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator selectors MethodInvocation member inverse_ter ^ ^ ^ MethodInvocation member getData_ter ^ ^ ^ ^ type ReferenceType name RealMatrixImpl_ter ^ ^ ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.894951985508669:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -6.571280303702224:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -6.926206753880251:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.805738212366123:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.94475768628763:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.064733794890344:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'BasicType -> name', 'name -> int_ter', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1']
copynode -6.5244367917766795:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.002792846411467:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -7.0207673497498035:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -4.24082041188376:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -5.9569900066708215:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -2.046758932294324:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Literal ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Literal']
copynode -6.339805850118864:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -6.441755402891431:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.162799790734425:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation']
copynode -6.068786971736699:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.068786971736699:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.339805850118864:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -7.21185950684594:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal']
copynode -7.2346111964434385:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -7.426197913766373:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value']
copynode -5.888045807718299:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.614919645478949:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.6465235185605707:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -2.614919645478949:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -2.614919645478949:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.41610185157333:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -4.333031578062219:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -2.614919645478949:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.4802707220223965:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -5.51832759170793:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.614919645478949:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.6465235185605707:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -2.614919645478949:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -5.73468386917375:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member']
copynode -5.851711151888594:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression']
copynode -5.848138926317915:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors']
copynode -2.614919645478949:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -5.723117870351416:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -6.1418372225016356:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -2.614919645478949:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.0063420953956665:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -6.261054081915063:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal']
copynode -6.433225510409102:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -4.333031578062219:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -6.319529635831714:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -6.434776046386105:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal']
copynode -6.153017514458043:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -6.537424669673783:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value']
copynode -5.71981515090738:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -6.3448414738086285:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -6.453650043418747:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -6.44219273289491:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.675538284704089:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -6.7765343185310485:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.752622162064654:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -6.299739362322725:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.771550417950493:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.71981515090738:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.732212648799759:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -6.877255482671899:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal']
copynode -5.723117870351416:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -6.449708642088808:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.030766845753533:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -7.216156551614404:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown']
copynode -7.265806330833584:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.156322989612818:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -7.20449904918496:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal']
copynode -6.0063420953956665:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -7.282195491716266:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -7.402520516887307:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
before@10 batch0 x: -7.506316920160316: root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
after@10 batch0 x: -7.506316920160316: root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
before@10 batch1 x: -7.453856715044822: root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
after@10 batch1 x: -7.453856715044822: root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -2.237302852096036:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -2.237302852096036:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.237302852096036:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.8809759591822512:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -4.304423500143457:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -2.237302852096036:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.237302852096036:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.101021048903931:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -5.229104084195569:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.237302852096036:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -5.382317585172132:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression']
copynode -5.388322872342542:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member']
copynode -2.237302852096036:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -5.658605796576012:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.847997945966199:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors']
copynode -5.866893004917074:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -2.237302852096036:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.955349434458185:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value']
copynode -6.009926982223988:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.0966303769964725:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -6.158014914311934:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -6.2112217880785465:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.4092148573254235:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -6.499837530136574:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value']
copynode -6.463121374486946:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.588065581221599:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.635589507699478:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value']
copynode -6.58623867854476:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -6.848173966922332:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -6.913502020121086:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.686404899985064:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.970753539411817:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator selectors MethodInvocation member inverse_ter ^ ^ ^ MethodInvocation member getData_ter ^ ^ ^ ^ type ReferenceType name RealMatrixImpl_ter ^ ^ ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.913491066545248:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown']
copynode -6.956347212486435:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -7.003118672699202:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.009661496907938:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.96145506791072:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.06296405318426:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.006643685803283:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -6.3745971185853705:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MemberReference member par0 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.199157003604341:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.140040596364997:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -7.071752317249775:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'BasicType -> name', 'name -> int_ter', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation']
copynode -7.21087539504515:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.258863729657605:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Literal', 'Literal -> value']
copynode -7.1861064322292805:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -6.3745971185853705:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MemberReference member loc0 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.3763680388219655:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0']
copynode -7.424468708515633:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value']
copynode -7.451686761633027:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.77956059994176:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
copynode -7.4415242951363325:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'start -> unknown']
copynode -6.589473777799867:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -3.806893406508607:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -3.968447787454352:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0']
copynode -4.202715856721625:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -3.7834768125321716:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -4.465930459162337:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -4.490535808799905:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -3.7834768125321716:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.529129353424651:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -5.368691427400336:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.737328572271508:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.866979215061292:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type BasicType ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType']
copynode -5.644034368684515:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.875561652472243:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.114833516141516:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -5.931090337922797:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'qualifier -> par0']
copynode -5.789149267366156:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -6.309839946916327:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -5.824927812209353:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.275134591385722:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -5.531264235032722:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -6.4021620285493555:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value']
copynode -6.388949525615317:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -6.500914589574677:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value']
copynode -6.461679486557841:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown']
copynode -6.449737710951013:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.544143610706669:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -5.644034368684515:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -6.723604732265812:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -6.80526292284776:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.7936950485018315:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -6.435580757912248:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition BinaryOperation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation']
copynode -6.89162287588988:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.92508550088678:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.572033246120554:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.6145451823977055:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'operandr -> Literal']
copynode -5.824927812209353:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.070472760198754:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value']
copynode -5.368691427400336:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -7.0621824721602025:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -7.1359274695423665:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.0864751758781495:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.234919060021639:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.531264235032722:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator |_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> |_ter']
copynode -6.905864001833834:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -5.789149267366156:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'copy-selectors']
copynode -7.045230881383759:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'copy-member', 'operandr -> Literal']
copynode -7.406281350253266:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value']
copynode -7.423080958425999:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
before@11 batch0 x: -7.664232665090822: root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> Literal', 'Literal -> value', 'value -> false_ter']
after@11 batch0 x: -7.664232665090822: root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> Literal', 'Literal -> value', 'value -> false_ter']
before@11 batch1 x: -7.453856715044822: root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
after@11 batch1 x: -7.453856715044822: root modified ^ MemberReference-MemberReference member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -3.529238534392789:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0']
copynode -3.763052773894742:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -3.5395955566782504:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -3.919742365658749:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.325868072279263:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -3.5395955566782504:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.138518994033802:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.991719079436734:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.3924682198558:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type BasicType ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType']
copynode -5.091645074309781:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.257050347747281:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -5.677643609466031:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'qualifier -> par0']
copynode -5.504025128902867:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.887976344965864:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.971239400329068:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -5.978149876289535:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.091645074309781:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -5.883588583441451:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.22838515631156:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -5.237444917904213:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -5.727127855003346:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.488982330367435:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.541046680242289:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.100014607422054:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition BinaryOperation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation']
copynode -4.991719079436734:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -6.58612262213137:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -6.704259444028139:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.679744811088312:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.504025128902867:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.237444917904213:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator |_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> |_ter']
copynode -6.91931772074895:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.020041484385729:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.020207643799949:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -3.529238534392789:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown']
copynode -5.257050347747281:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'copy-selectors']
copynode -3.919742365658749:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -5.727127855003346:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.086613874242175:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -3.763052773894742:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -7.097361014573835:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MemberReference member par0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MemberReference', 'MemberReference -> member', 'member -> par0', 'type -> =_ter']
copynode -6.605832131404895:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.307288218289614:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.257050347747281:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MemberReference']
copynode -7.0242840622668155:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.021382804319728:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.264220861135982:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -4.991719079436734:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -5.237444917904213:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator &_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &_ter']
copynode -7.314787374227308:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MemberReference member loc0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'type -> =_ter']
copynode -7.082747225940693:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.8434189763647737:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.486534829324228:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.0087752097751945:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation']
copynode -4.526355495749158:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.25533646135591:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -4.25533646135591:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -4.321950955083594:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -4.0087752097751945:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'copy-selectors']
copynode -4.798677427461371:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.549446695556981:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.826505226781592:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.898643258726224:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type BasicType name int_ter ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType']
copynode -4.321950955083594:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal']
copynode -4.0087752097751945:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference']
copynode -6.0944009849336:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.167036799481139:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -4.798677427461371:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -6.1754639605787816:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -4.321950955083594:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation']
copynode -6.335368400206789:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -6.3712172117084265:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.450241548081976:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.524063711127383:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.442741124032182:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.553688442334533:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.611801819017273:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -3.8434189763647737:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.723481161287054:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'root -> End']
copynode -4.0087752097751945:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors ArraySelector ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> ArraySelector']
copynode -5.8667473477107706:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.8667473477107706:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.791783944776398:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.886834440287203:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.849293847641093:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.290012283017859:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.03170667689119:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value']
copynode -7.0638279968407005:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.204996449640021:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'qualifier -> par0', 'selectors -> MethodInvocation']
copynode -4.526355495749158:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.290012283017859:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.204996449640021:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'qualifier -> par0', 'copy-selectors']
copynode -6.416522790445015:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation']
copynode -7.1120306645316305:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.118831296524149:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.81728569844563:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -4.321950955083594:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> This_ter']
copynode -4.798677427461371:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -7.3775670389441075:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'copy-member', 'operandr -> Literal', 'Literal -> value']
copynode -7.310670615755953:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
before@12 batch0 x: -7.497728769958485: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
after@12 batch0 x: -7.497728769958485: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
before@12 batch1 x: -7.405573749565519: root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
after@12 batch1 x: -7.405573749565519: root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -3.5679453362245113:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation']
copynode -3.806235992582515:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -4.347476775117684:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -3.9689094212953933:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -3.813971382798627:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -3.806235992582515:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -3.9689094212953933:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -3.5679453362245113:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'copy-selectors']
copynode -3.813971382798627:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal']
copynode -5.425408554496244:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.42769698263146:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type BasicType name int_ter ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType']
copynode -3.5679453362245113:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference']
copynode -5.620412421645597:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -5.06879706424661:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -3.813971382798627:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation']
copynode -5.8852341149467975:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -5.201540162146557:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -6.030385506572202:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'root -> End']
copynode -5.912670646153856:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.99856612860458:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.165460617514327:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -3.5679453362245113:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors ArraySelector ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> ArraySelector']
copynode -5.201540162146557:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.719673705520108:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.9689094212953933:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression']
copynode -5.06879706424661:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -5.719673705520108:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.813971382798627:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'copy-arguments']
copynode -3.813971382798627:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> This_ter']
copynode -5.822754052700475:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'qualifier -> par0', 'copy-selectors']
copynode -6.656226853840053:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.9689094212953933:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ContinueStatement_ter']
copynode -5.822754052700475:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'qualifier -> par0', 'selectors -> MethodInvocation']
copynode -3.813971382798627:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments This ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> This']
copynode -6.7399848302593455:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'type -> =_ter']
copynode -6.9450558696407825:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.298411051975563:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation']
copynode -6.294263853051234:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -4.347476775117684:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -4.347476775117684:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression']
copynode -6.491335337341297:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> ReturnStatement']
copynode -7.223035307019018:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MemberReference member par0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MemberReference', 'MemberReference -> member', 'member -> par0', 'type -> =_ter', 'root -> End']
copynode -3.813971382798627:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> BinaryOperation']
copynode -6.590781566977967:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -5.06879706424661:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -6.671485019149259:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.813971382798627:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ArrayCreator type ReferenceType name Object_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'copy-arguments']
copynode -7.3706327204126865:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.294263853051234:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> ReturnStatement']
copynode -7.335259707469959:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -4.517413049077732:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -3.909363245664281:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -4.858163712313399:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -3.909363245664281:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.127486226847395:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -5.137900693109259:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.6030450814869255:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.616639686821145:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -4.6030450814869255:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.5650728770997375:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.585884482672554:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -4.616639686821145:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.527553057065234:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'copy-selectors', 'copy-member']
copynode -5.968039793660864:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value']
copynode -6.03502151905559:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.952462974702939:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type BasicType name int_ter ^ ^ ^ ^ expression MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MethodInvocation']
copynode -6.170083059696481:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.83761924947612:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -3.909363245664281:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ContinueStatement_ter']
copynode -3.909363245664281:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression']
copynode -6.2004639932420105:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.54983006704424:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member length_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.527553057065234:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'copy-selectors', 'start -> unknown']
copynode -5.83761924947612:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.3028711506631225:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.240657174101216:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -4.616639686821145:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ContinueStatement_ter']
copynode -6.518174161275965:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -4.616639686821145:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression']
copynode -6.8111691230442375:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors ArraySelector index ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> ArraySelector', 'ArraySelector -> index']
copynode -7.329282325299573:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -7.054991838595015:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.5755056422931375:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -6.240657174101216:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> ReturnStatement']
copynode -7.405573749565519:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'type -> =_ter']
copynode -6.710692068634671:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> ReturnStatement']
copynode -6.708655842652661:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -6.973708314588293:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.902065222617239:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.5755056422931375:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.123190630925819:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.890977827904862:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> ReturnStatement']
copynode -7.067017597844824:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member ^ ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
before@13 batch0 x: -7.397156098682899: root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
after@13 batch0 x: -7.397156098682899: root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
before@13 batch1 x: -7.62186668603681: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member ^ ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
after@13 batch1 x: -7.62186668603681: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member ^ ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.300253653200343:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -4.187549864174798:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.839576089056209:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -4.739039582433179:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.187549864174798:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.695344665378798:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator selectors MethodInvocation member inverse_ter ^ ^ ^ MethodInvocation member getData_ter ^ ^ ^ ^ type ReferenceType name RealMatrixImpl_ter ^ ^ ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -5.337109786691144:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value']
copynode -5.475641583325341:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.183503006817773:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'copy-selectors', 'copy-member']
copynode -5.46745109395124:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type BasicType name int_ter ^ ^ ^ ^ expression MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MethodInvocation']
copynode -4.695344665378798:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.816548598231748:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.440472557442263:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.440472557442263:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.183503006817773:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'copy-selectors', 'start -> unknown']
copynode -5.924952556670178:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator selectors MethodInvocation member inverse_ter ^ ^ ^ MethodInvocation member getData_ter ^ ^ ^ ^ type ReferenceType name RealMatrixImpl_ter ^ ^ ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.168464071583003:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.429233231872786:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.1889575470704585:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors ArraySelector index ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> ArraySelector', 'ArraySelector -> index']
copynode -5.867697817506269:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.760476746887434:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ContinueStatement_ter', 'root -> End']
copynode -6.463895035209134:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.739039582433179:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.90633452439215:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'type -> =_ter', 'root -> End']
copynode -5.924952556670178:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.5490470950026065:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'copy-arguments', 'copy-member']
copynode -6.592909914674237:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> This_ter', 'arguments -> End']
copynode -6.395443630637601:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.395443630637601:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -5.867697817506269:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.230565602250863:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.5365092877764255:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.664731003344059:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.837205079616979:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member ^ ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.32043777150102:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.653225925983861:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'qualifier -> par0', 'copy-selectors', 'arguments -> MemberReference']
copynode -7.355329704703763:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -7.062104027019814:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.683885490594548:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -4.683885490594548:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.219334138324484:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.248742734780535:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.949319695821032:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'copy-selectors', 'copy-member', 'root -> End']
copynode -5.378012551067513:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -5.378012551067513:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.583392191445455:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.041613057954237:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.248742734780535:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -6.130216646706685:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type BasicType name int_ter ^ ^ ^ ^ expression MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.4581928011757554:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ContinueStatement_ter', 'root -> End']
copynode -5.583392191445455:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.433650588383898:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.563409781156224:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.6340310329105705:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'copy-selectors', 'start -> unknown', 'root -> End']
copynode -6.581988556077704:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.440776481060311:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member length_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -5.991449605440721:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.730486933840439:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.891722125699744:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -5.433650588383898:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -6.449230913771316:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -7.1742485296708765:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ContinueStatement_ter', 'root -> End']
copynode -5.433650588383898:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -7.2635830175859155:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.219334138324484:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.428166029625572:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'type -> =_ter', 'root -> End']
copynode -5.991449605440721:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -7.521650595357642:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -6.449230913771316:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
before@14 batch0 x: -7.5565525100100785: root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
after@14 batch0 x: -7.5565525100100785: root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
before@14 batch1 x: -7.807389382971451: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
after@14 batch1 x: -7.807389382971451: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -5.175859519571532:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator selectors MethodInvocation member inverse_ter ^ ^ ^ MethodInvocation member getData_ter ^ ^ ^ ^ type ReferenceType name RealMatrixImpl_ter ^ ^ ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -4.873281431617215:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.806982730748132:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.595991437556222:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'copy-selectors', 'copy-member', 'root -> End']
copynode -4.806982730748132:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -5.483907170826569:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.683215537399519:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -5.67851765290834:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type BasicType name int_ter ^ ^ ^ ^ expression MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.069630419136956:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.3545689538586885:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.315486763836816:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'copy-selectors', 'start -> unknown', 'root -> End']
copynode -5.838799401419237:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.3815846045617945:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator selectors MethodInvocation member inverse_ter ^ ^ ^ MethodInvocation member getData_ter ^ ^ ^ ^ type ReferenceType name RealMatrixImpl_ter ^ ^ ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.1670648597646505:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -5.069630419136956:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -6.648497564019635:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -4.873281431617215:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.3545689538586885:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -6.4155535767786205:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member length_ter ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -6.847330016316846:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -6.247879340546206:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -6.815270287217572:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.963842344703153:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'copy-arguments', 'copy-member', 'root -> End']
copynode -5.838799401419237:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.069630419136956:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -6.954051186621655:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.464436498761643:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -6.464436498761643:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.095362079562619:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -7.164726686896756:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End']
copynode -7.177581531228498:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -7.281678867759183:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.055720609845594:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments This_ter ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> This_ter', 'arguments -> End', 'copy-member']
copynode -5.3545689538586885:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -5.4130543825012865:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -5.415277874169988:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -5.801494812360033:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -5.525738877942786:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -6.0727918875199975:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.149282110927743:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.39393450669013:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type BasicType name int_ter ^ ^ ^ ^ expression MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.257621515309438:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.362594997277483:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End']
copynode -6.504611348500475:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.48519055894576:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -6.82434095046483:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -6.318780616624281:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -6.318780616624281:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -5.525738877942786:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> Literal']
copynode -6.961910431040451:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -6.5925380830449285:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -7.250558232655749:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -5.525738877942786:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -6.719448103336617:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.5925380830449285:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.180693571222946:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown']
copynode -6.997660411288962:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -7.408829701831564:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -7.494631062960252:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End']
copynode -6.719448103336617:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member length_ter ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
before@15 batch0 x: -7.513388152467087: root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
after@15 batch0 x: -7.513388152467087: root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
before@15 batch1 x: -7.612756266025826: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member length_ter ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
after@15 batch1 x: -7.612756266025826: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member length_ter ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.471125577809289:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -5.217631471576169:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -5.6862284888047725:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End']
copynode -5.883813553780783:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -5.964838577667251:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type BasicType name int_ter ^ ^ ^ ^ expression MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> BasicType', 'copy-BasicType', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.018353437306359:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.712956749135628:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End']
copynode -6.20911657367833:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -6.521649395348504:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -6.3694994889665395:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -5.712956749135628:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation']
copynode -6.804634762229398:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -6.445594056742266:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -6.851652737008408:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End']
copynode -5.217631471576169:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> Literal']
copynode -7.151328352570999:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -7.142738436639775:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -5.217631471576169:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -6.9218890212941915:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown']
copynode -6.774972480954602:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -7.073537870543078:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -5.471125577809289:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -7.435258937301114:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments This_ter ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> This_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.445594056742266:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member']
copynode -6.8849875698797405:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.513388152467087:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -7.287222584011033:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member getAllParameters_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'start -> unknown']
copynode -7.261505258502439:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -7.320866552414373:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
copynode -5.586070081291837:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -5.9885779523756355:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -6.315081564782304:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.092136187246069:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -6.617796657374129:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.470039104809985:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member getAllParameters_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'start -> unknown']
copynode -6.470039104809985:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member getAllParameters_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'copy-member']
copynode -7.197818560292944:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -7.254580651177093:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.26521554037754:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -6.092136187246069:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown']
copynode -6.961629371857271:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member']
copynode -7.275913161924109:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.094173148972914:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-member']
copynode -7.417766560567543:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.445573819568381:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End']
copynode -7.395093514351174:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.000892297131941:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.5227890440728515:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.000892297131941:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.612534533953294:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'copy-member']
copynode -7.399525249449653:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.267413707217202:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
before@16 batch0 x: -7.708376345457509: root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
after@16 batch0 x: -7.708376345457509: root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
before@16 batch1 x: -8.044927866896614: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
after@16 batch1 x: -8.044927866896614: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -5.652941097738221:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -5.658335131825879:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -5.903720452741254:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -5.8148324091453105:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member getAllParameters_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'copy-member']
copynode -6.250773273641244:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-member']
copynode -5.8148324091453105:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member getAllParameters_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'start -> unknown']
copynode -6.322482380317524:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member']
copynode -6.199634497286752:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.915300294058397:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.658335131825879:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown']
copynode -6.907400314928964:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.07926977914758:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -7.199717714684084:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.945780392037705:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'copy-member']
copynode -7.164997470797971:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.54036186193116:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.300557476701215:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End']
copynode -6.703080140287057:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.500063165323809:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.703080140287057:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.152776780596469:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -7.661293735029176:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member getAllParameters_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'start -> unknown', 'root -> End']
copynode -7.665754330577329:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'root -> End']
copynode -7.16322927485453:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.708376345457509:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.903720452741254:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.199634497286752:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.6002818719280185:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.244218220701441:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'root -> End']
copynode -6.507124019553885:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.329759896805626:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.190588509431109:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member getAllParameters_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'start -> unknown', 'root -> End']
copynode -7.203313803067431:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member getAllParameters_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'copy-member', 'root -> End']
copynode -7.281502408673987:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.322633009171113:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.374029085738584:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-member', 'root -> End']
copynode -5.6002818719280185:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.266141629210324:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -7.741423098137602:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.5357833781745285:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.095257458975539:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -7.680753632215783:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -7.974650602554902:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.337160886963829:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.6002818719280185:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -8.044927866896614:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -7.266141629210324:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc2 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -7.8391117609571666:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
before@17 batch0 x: -7.732446735026315: root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
after@17 batch0 x: -7.732446735026315: root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
before@17 batch1 x: -8.40593107114546: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
after@17 batch1 x: -8.40593107114546: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.875053619267419:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'root -> End']
copynode -6.0082915250677615:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.4981368978042156:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member getAllParameters_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'copy-member', 'root -> End']
copynode -6.457064583257306:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -6.51258321874775:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> End', 'copy-member', 'root -> End']
copynode -6.562231202842668:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member getAllParameters_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'start -> unknown', 'root -> End']
copynode -6.609862747834995:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.034179372014478:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.071588133694604:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.664897506358102:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -7.232030685292557:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.28837702726014:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -7.366533329011872:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.596028390398715:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -7.694678056344856:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -7.726277186826337:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.732446735026315:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -7.247457173885778:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.473077319795266:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.099006138043478:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.502069078618661:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.04002258933906:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -6.7670536647347035:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -7.611140169276041:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.707584238043637:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -7.793295440962538:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.858295707730576:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -8.07693163312797:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> false_ter', 'root -> End']
copynode -8.039771379670128:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -7.804481444647536:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown']
copynode -8.40593107114546:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -8.197929234942421:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'start -> unknown']
copynode -8.338576769820065:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc2 ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal']
before@18 batch0 x: -8.41822298639454: root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
after@18 batch0 x: -8.41822298639454: root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
before@18 batch1 x: -9.099451398840756: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc2 ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal']
after@18 batch1 x: -9.099451398840756: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference selectors ArraySelector index MemberReference member loc5 ^ ^ ^ ^ ^ ^ member loc2 ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal']
copynode -7.1081277776975185:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown']
copynode -7.558166553499177:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.905290571274236:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End']
copynode -7.404706816421822:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'start -> unknown']
copynode -7.635185166320298:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -8.048976324731484:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -7.404706816421822:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member']
copynode -8.33694168110378:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -7.8420241076964885:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.15681436448358:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown', 'selectors -> End']
copynode -8.131365919252858:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.742188742748112:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.742188742748112:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -8.812655659159645:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'start -> unknown', 'selectors -> End']
copynode -8.613338858587667:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
before@19 batch0 x: -8.545307417633012: root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
after@19 batch0 x: -8.545307417633012: root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
before@19 batch1 x: -8.861065939767286: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
after@19 batch1 x: -8.861065939767286: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -7.54849657905288:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown', 'selectors -> End']
copynode -8.133695583092049:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'start -> unknown', 'selectors -> End']
copynode -7.984762807609513:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member']
copynode -8.354760031448677:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member', 'selectors -> End']
copynode -8.241945825750008:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -8.545307417633012:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'selectors -> End']
copynode -8.383210099535063:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member']
copynode -8.174464984855149:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> Literal']
copynode -8.216377248754725:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -8.413230741163716:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.861065939767286:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'root -> End']
copynode -8.85619324608706:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -8.49456845819077:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation']
copynode -8.609318366638036:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation']
before@20 batch0 x: -9.199580951652024: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> Literal']
after@20 batch0 x: -9.199580951652024: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> Literal']
before@20 batch1 x: -9.826832523933263: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation']
after@20 batch1 x: -9.826832523933263: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation']
copynode -7.615853485884145:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -8.265387197257951:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ MemberReference member length_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.184554434614256:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -8.469870858127251:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MemberReference member length_ter ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MemberReference', 'MemberReference -> member', 'copy-member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'root -> End']
copynode -8.625170937972143:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.379621501313522:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member', 'selectors -> End', 'copy-member']
copynode -8.573375378968194:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'selectors -> End', 'copy-member']
copynode -9.199580951652024:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> Literal', 'Literal -> value']
copynode -8.411182975163683:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown', 'selectors -> End', 'copy-member', 'root -> End']
copynode -9.06965927942656:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'start -> unknown', 'selectors -> End', 'copy-member', 'root -> End']
copynode -9.458023896804661:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -9.826832523933263:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
before@21 batch0 x: -9.24761743383715: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> Literal', 'Literal -> value']
after@21 batch0 x: -9.24761743383715: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> Literal', 'Literal -> value']
before@21 batch1 x: -10.465597203365178: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
after@21 batch1 x: -10.465597203365178: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.796790150227025:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> End', 'start -> unknown', 'selectors -> End', 'copy-member', 'root -> End']
copynode -8.381672865943983:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'start -> unknown', 'selectors -> End', 'copy-member', 'root -> End']
copynode -8.782431240426376:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member', 'selectors -> End', 'copy-member', 'root -> End']
copynode -8.972470884444192:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ member getAllParameters_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'selectors -> End', 'copy-member', 'root -> End']
copynode -9.24761743383715:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -10.120064130416722:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -10.465597203365178:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
before@22 batch0 x: -10.489521811774466: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> Literal', 'Literal -> value', 'value -> false_ter']
after@22 batch0 x: -10.489521811774466: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> Literal', 'Literal -> value', 'value -> false_ter']
before@22 batch1 x: -10.848670652500005: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
after@22 batch1 x: -10.848670652500005: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -10.489521811774466:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter']
copynode -10.532708546510548:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -10.848670652500005:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
before@23 batch0 x: -10.569972883036826: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter']
after@23 batch0 x: -10.569972883036826: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter']
before@23 batch1 x: -10.992932519307942: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
after@23 batch1 x: -10.992932519307942: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -10.569972883036826:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter', 'root -> End']
copynode -10.670807352653355:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'type -> =_ter']
copynode -10.992932519307942:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'type -> =_ter']
before@24 batch1 x: -11.013852544492693: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'type -> =_ter']
after@24 batch1 x: -11.013852544492693: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'type -> =_ter']
copynode -10.692621637499542:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'type -> =_ter', 'root -> End']
copynode -11.013852544492693:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'type -> =_ter', 'root -> End']
method
problem_ter {'problem_ter': 'EstimationProblem', 'rows_ter': 'int', 'cols_ter': 'int', 'max_ter': 'int', 'jTj_ter': 'double', 'i_ter': 'int', 'j_ter': 'int', 'sum_ter': 'double', 'k_ter': 'int'}
7 EstimationProblem
WeightedMeasurement EstimatedParameter getMeasurements getAllParameters_ter
EstimatedParameter EstimatedParameter getUnboundParameters getAllParameters_ter
EstimatedParameter EstimatedParameter getAllParameters getAllParameters_ter
method
7 
6 length_ter
6 length_ter
6 length_ter
method
7 
None  setMaxCostEval 
int  getCostEvaluations 
int  getJacobianEvaluations 
None  updateJacobian 
None  incrementJacobianEvaluationsCounter 
None  updateResidualsAndCost 
double  getRMS 
double  getChiSquare 
double  getCovariances 
double  guessParametersErrors 
None  initializeEstimate 
None  estimate 
method
problem_ter {'problem_ter': 'EstimationProblem', 'rows_ter': 'int', 'cols_ter': 'int', 'max_ter': 'int', 'jTj_ter': 'double', 'i_ter': 'int', 'j_ter': 'int', 'sum_ter': 'double', 'k_ter': 'int'}
7 EstimationProblem
WeightedMeasurement  getMeasurements 
EstimatedParameter  getUnboundParameters 
EstimatedParameter  getAllParameters 
method
problem_ter {'problem_ter': 'EstimationProblem', 'rows_ter': 'int', 'cols_ter': 'int', 'max_ter': 'int', 'jTj_ter': 'double', 'i_ter': 'int', 'j_ter': 'int', 'sum_ter': 'double', 'k_ter': 'int'}
7 EstimationProblem
method
rows_ter {'problem_ter': 'EstimationProblem', 'rows_ter': 'int', 'cols_ter': 'int', 'max_ter': 'int', 'jTj_ter': 'double', 'i_ter': 'int', 'j_ter': 'int', 'sum_ter': 'double', 'k_ter': 'int'}
7 int
6 length_ter
method
problem_ter {'problem_ter': 'EstimationProblem', 'rows_ter': 'int', 'cols_ter': 'int', 'max_ter': 'int', 'jTj_ter': 'double', 'i_ter': 'int', 'j_ter': 'int', 'sum_ter': 'double', 'k_ter': 'int'}
7 EstimationProblem
method
7 
method
7 
6 length_ter
method
7 
None  setMaxCostEval 
int  getCostEvaluations 
int  getJacobianEvaluations 
None  updateJacobian 
None  incrementJacobianEvaluationsCounter 
None  updateResidualsAndCost 
double  getRMS 
double  getChiSquare 
double  getCovariances 
double  guessParametersErrors 
None  initializeEstimate 
None  estimate 
method
problem_ter {'problem_ter': 'EstimationProblem', 'rows_ter': 'int', 'cols_ter': 'int', 'max_ter': 'int', 'jTj_ter': 'double', 'i_ter': 'int', 'j_ter': 'int', 'sum_ter': 'double', 'k_ter': 'int'}
7 EstimationProblem
method
7 
None  setMaxCostEval 
int  getCostEvaluations 
int  getJacobianEvaluations 
None  updateJacobian 
None  incrementJacobianEvaluationsCounter 
None  updateResidualsAndCost 
double  getRMS 
double  getChiSquare 
double  getCovariances 
double  guessParametersErrors 
None  initializeEstimate 
None  estimate 
method
problem_ter {'problem_ter': 'EstimationProblem', 'rows_ter': 'int', 'cols_ter': 'int', 'max_ter': 'int', 'jTj_ter': 'double', 'i_ter': 'int', 'j_ter': 'int', 'sum_ter': 'double', 'k_ter': 'int'}
7 EstimationProblem
method
problem_ter {'problem_ter': 'EstimationProblem', 'rows_ter': 'int', 'cols_ter': 'int', 'max_ter': 'int', 'jTj_ter': 'double', 'i_ter': 'int', 'j_ter': 'int', 'sum_ter': 'double', 'k_ter': 'int'}
7 EstimationProblem
6 length_ter
method
problem_ter {'problem_ter': 'EstimationProblem', 'rows_ter': 'int', 'cols_ter': 'int', 'max_ter': 'int', 'jTj_ter': 'double', 'i_ter': 'int', 'j_ter': 'int', 'sum_ter': 'double', 'k_ter': 'int'}
7 EstimationProblem
6 length_ter
method
problem_ter {'problem_ter': 'EstimationProblem', 'rows_ter': 'int', 'cols_ter': 'int', 'max_ter': 'int', 'jTj_ter': 'double', 'i_ter': 'int', 'j_ter': 'int', 'sum_ter': 'double', 'k_ter': 'int'}
7 EstimationProblem
WeightedMeasurement  getMeasurements 
EstimatedParameter  getUnboundParameters 
EstimatedParameter  getAllParameters 
method
7 
None  setMaxCostEval 
int  getCostEvaluations 
int  getJacobianEvaluations 
None  updateJacobian 
None  incrementJacobianEvaluationsCounter 
None  updateResidualsAndCost 
double  getRMS 
double  getChiSquare 
double  getCovariances 
double  guessParametersErrors 
None  initializeEstimate 
None  estimate 
method
problem_ter {'problem_ter': 'EstimationProblem', 'rows_ter': 'int', 'cols_ter': 'int', 'max_ter': 'int', 'jTj_ter': 'double', 'i_ter': 'int', 'j_ter': 'int', 'sum_ter': 'double', 'k_ter': 'int'}
7 EstimationProblem
WeightedMeasurement  getMeasurements 
EstimatedParameter  getUnboundParameters 
EstimatedParameter  getAllParameters 
method
problem_ter {'problem_ter': 'EstimationProblem', 'rows_ter': 'int', 'cols_ter': 'int', 'max_ter': 'int', 'jTj_ter': 'double', 'i_ter': 'int', 'j_ter': 'int', 'sum_ter': 'double', 'k_ter': 'int'}
7 EstimationProblem
method
problem_ter {'problem_ter': 'EstimationProblem', 'm_ter': 'int', 'p_ter': 'int', 'errors_ter': 'double', 'c_ter': 'double', 'covar_ter': 'double', 'i_ter': 'int'}
7 EstimationProblem
WeightedMeasurement EstimatedParameter getMeasurements getAllParameters_ter
EstimatedParameter EstimatedParameter getUnboundParameters getAllParameters_ter
EstimatedParameter EstimatedParameter getAllParameters getAllParameters_ter
6 length_ter
6 length_ter
method
7 
6 length_ter
6 length_ter
method
m_ter {'problem_ter': 'EstimationProblem', 'm_ter': 'int', 'p_ter': 'int', 'errors_ter': 'double', 'c_ter': 'double', 'covar_ter': 'double', 'i_ter': 'int'}
7 int
method
problem_ter {'problem_ter': 'EstimationProblem', 'm_ter': 'int', 'p_ter': 'int', 'errors_ter': 'double', 'c_ter': 'double', 'covar_ter': 'double', 'i_ter': 'int'}
7 EstimationProblem
6 length_ter
method
problem_ter {'problem_ter': 'EstimationProblem', 'm_ter': 'int', 'p_ter': 'int', 'errors_ter': 'double', 'c_ter': 'double', 'covar_ter': 'double', 'i_ter': 'int'}
7 EstimationProblem
WeightedMeasurement  getMeasurements 
EstimatedParameter  getUnboundParameters 
EstimatedParameter  getAllParameters 
method
problem_ter {'problem_ter': 'EstimationProblem', 'm_ter': 'int', 'p_ter': 'int', 'errors_ter': 'double', 'c_ter': 'double', 'covar_ter': 'double', 'i_ter': 'int'}
7 EstimationProblem
6 length_ter
6 length_ter
method
7 
method
7 
method
7 
None  setMaxCostEval 
int  getCostEvaluations 
int  getJacobianEvaluations 
None  updateJacobian 
None  incrementJacobianEvaluationsCounter 
None  updateResidualsAndCost 
double  getRMS 
double  getChiSquare 
double  getCovariances 
double  guessParametersErrors 
None  initializeEstimate 
None  estimate 
method
problem_ter {'problem_ter': 'EstimationProblem', 'm_ter': 'int', 'p_ter': 'int', 'errors_ter': 'double', 'c_ter': 'double', 'covar_ter': 'double', 'i_ter': 'int'}
7 EstimationProblem
method
m_ter {'problem_ter': 'EstimationProblem', 'm_ter': 'int', 'p_ter': 'int', 'errors_ter': 'double', 'c_ter': 'double', 'covar_ter': 'double', 'i_ter': 'int'}
7 int
method
problem_ter {'problem_ter': 'EstimationProblem', 'm_ter': 'int', 'p_ter': 'int', 'errors_ter': 'double', 'c_ter': 'double', 'covar_ter': 'double', 'i_ter': 'int'}
7 EstimationProblem
method
Math_ter {'problem_ter': 'EstimationProblem', 'm_ter': 'int', 'p_ter': 'int', 'errors_ter': 'double', 'c_ter': 'double', 'covar_ter': 'double', 'i_ter': 'int'}
Math_ter measurements
Math_ter parameters
Math_ter jacobian
Math_ter cols
Math_ter rows
Math_ter residuals
Math_ter cost
Math_ter maxCostEval
Math_ter costEvaluations
Math_ter jacobianEvaluations
7 
None  setMaxCostEval 
int  getCostEvaluations 
int  getJacobianEvaluations 
None  updateJacobian 
None  incrementJacobianEvaluationsCounter 
None  updateResidualsAndCost 
double  getRMS 
double  getChiSquare 
double  getCovariances 
double  guessParametersErrors 
None  initializeEstimate 
None  estimate 
method
m_ter {'problem_ter': 'EstimationProblem', 'm_ter': 'int', 'p_ter': 'int', 'errors_ter': 'double', 'c_ter': 'double', 'covar_ter': 'double', 'i_ter': 'int'}
7 int
6 length_ter
method
problem_ter {'problem_ter': 'EstimationProblem', 'm_ter': 'int', 'p_ter': 'int', 'errors_ter': 'double', 'c_ter': 'double', 'covar_ter': 'double', 'i_ter': 'int'}
7 EstimationProblem
6 length_ter
stderr: Check out 876d1333 to /root/projects/Recoder-bwk/buggy/Math-100............ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 876d1333:0e9b0001..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Math-100b....................................... OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:28<00:00, 28.76s/it]100%|██████████| 1/1 [00:28<00:00, 28.76s/it]
