stdout: else_statement -> BlockStatement
using GPU
p
path org.apache.commons.lang3.ArrayUtils
addAll
Position(line=2953, column=19)
FOUND IT!
[{'bugid': 'Lang-37', 'treeroot': <Searchnode.Node object at 0x7f05f3db2250>, 'troot': <Searchnode.Node object at 0x7f05f3db2250>, 'oldcode': '            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);', 'filepath': 'buggy/Lang-37/src/java/org/apache/commons/lang3/ArrayUtils.java', 'subroot': <Searchnode.Node object at 0x7f05f3dc92d0>, 'vardic': {'addAll_ter': 'meth0', 'array1_ter': 'par0', 'array2_ter': 'par1', 'type1_ter': 'loc0', 'joinedArray_ter': 'loc1'}, 'typedic': {'array1_ter': 'T', 'array2_ter': 'T', 'type1_ter': 'Class', 'joinedArray_ter': 'T'}, 'idss': 'Lang-37', 'classname': 'org.apache.commons.lang3.ArrayUtils', 'precode': '/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the "License"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.lang3;\n\nimport java.lang.reflect.Array;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.apache.commons.lang3.builder.EqualsBuilder;\nimport org.apache.commons.lang3.builder.ToStringBuilder;\nimport org.apache.commons.lang3.builder.ToStringStyle;\n\n/**\n * <p>Operations on arrays, primitive arrays (like <code>int[]</code>) and\n * primitive wrapper arrays (like <code>Integer[]</code>).</p>\n *\n * <p>This class tries to handle <code>null</code> input gracefully.\n * An exception will not be thrown for a <code>null</code>\n * array input. However, an Object array that contains a <code>null</code>\n * element may throw an exception. Each method documents its behaviour.</p>\n *\n * @author Apache Software Foundation\n * @author Moritz Petersen\n * @author <a href="mailto:fredrik@westermarck.com">Fredrik Westermarck</a>\n * @author Nikolay Metchev\n * @author Matthew Hawthorne\n * @author Tim O\'Brien\n * @author Pete Gieser\n * @author Gary Gregory\n * @author <a href="mailto:equinus100@hotmail.com">Ashwin S</a>\n * @author Maarten Coene\n * @since 2.0\n * @version $Id$\n */\npublic class ArrayUtils {\n\n    /**\n     * An empty immutable <code>Object</code> array.\n     */\n    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];\n    /**\n     * An empty immutable <code>Class</code> array.\n     */\n    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];\n    /**\n     * An empty immutable <code>String</code> array.\n     */\n    public static final String[] EMPTY_STRING_ARRAY = new String[0];\n    /**\n     * An empty immutable <code>long</code> array.\n     */\n    public static final long[] EMPTY_LONG_ARRAY = new long[0];\n    /**\n     * An empty immutable <code>Long</code> array.\n     */\n    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];\n    /**\n     * An empty immutable <code>int</code> array.\n     */\n    public static final int[] EMPTY_INT_ARRAY = new int[0];\n    /**\n     * An empty immutable <code>Integer</code> array.\n     */\n    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];\n    /**\n     * An empty immutable <code>short</code> array.\n     */\n    public static final short[] EMPTY_SHORT_ARRAY = new short[0];\n    /**\n     * An empty immutable <code>Short</code> array.\n     */\n    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];\n    /**\n     * An empty immutable <code>byte</code> array.\n     */\n    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];\n    /**\n     * An empty immutable <code>Byte</code> array.\n     */\n    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];\n    /**\n     * An empty immutable <code>double</code> array.\n     */\n    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];\n    /**\n     * An empty immutable <code>Double</code> array.\n     */\n    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];\n    /**\n     * An empty immutable <code>float</code> array.\n     */\n    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];\n    /**\n     * An empty immutable <code>Float</code> array.\n     */\n    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];\n    /**\n     * An empty immutable <code>boolean</code> array.\n     */\n    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];\n    /**\n     * An empty immutable <code>Boolean</code> array.\n     */\n    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];\n    /**\n     * An empty immutable <code>char</code> array.\n     */\n    public static final char[] EMPTY_CHAR_ARRAY = new char[0];\n    /**\n     * An empty immutable <code>Character</code> array.\n     */\n    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];\n\n    /**\n     * The index value when an element is not found in a list or array: <code>-1</code>.\n     * This value is returned by methods in this class and can also be used in comparisons with values returned by\n     * various method from {@link java.util.List}.\n     */\n    public static final int INDEX_NOT_FOUND = -1;\n\n    /**\n     * <p>ArrayUtils instances should NOT be constructed in standard programming.\n     * Instead, the class should be used as <code>ArrayUtils.clone(new int[] {2})</code>.</p>\n     *\n     * <p>This constructor is public to permit tools that require a JavaBean instance\n     * to operate.</p>\n     */\n    public ArrayUtils() {\n      super();\n    }\n\n    // Basic methods handling multi-dimensional arrays\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Outputs an array as a String, treating <code>null</code> as an empty array.</p>\n     *\n     * <p>Multi-dimensional arrays are handled correctly, including\n     * multi-dimensional primitive arrays.</p>\n     *\n     * <p>The format is that of Java source code, for example <code>{a,b}</code>.</p>\n     *\n     * @param array  the array to get a toString for, may be <code>null</code>\n     * @return a String representation of the array, \'{}\' if null array input\n     */\n    public static String toString(Object array) {\n        return toString(array, "{}");\n    }\n\n    /**\n     * <p>Outputs an array as a String handling <code>null</code>s.</p>\n     *\n     * <p>Multi-dimensional arrays are handled correctly, including\n     * multi-dimensional primitive arrays.</p>\n     *\n     * <p>The format is that of Java source code, for example <code>{a,b}</code>.</p>\n     *\n     * @param array  the array to get a toString for, may be <code>null</code>\n     * @param stringIfNull  the String to return if the array is <code>null</code>\n     * @return a String representation of the array\n     */\n    public static String toString(Object array, String stringIfNull) {\n        if (array == null) {\n            return stringIfNull;\n        }\n        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();\n    }\n\n    /**\n     * <p>Compares two arrays, using equals(), handling multi-dimensional arrays\n     * correctly.</p>\n     *\n     * <p>Multi-dimensional primitive arrays are also handled correctly by this method.</p>\n     *\n     * @param array1  the left hand array to compare, may be <code>null</code>\n     * @param array2  the right hand array to compare, may be <code>null</code>\n     * @return <code>true</code> if the arrays are equal\n     */\n    public static boolean isEquals(Object array1, Object array2) {\n        return new EqualsBuilder().append(array1, array2).isEquals();\n    }\n\n    // To map\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Converts the given array into a {@link java.util.Map}. Each element of the array\n     * must be either a {@link java.util.Map.Entry} or an Array, containing at least two\n     * elements, where the first element is used as key and the second as\n     * value.</p>\n     *\n     * <p>This method can be used to initialize:</p>\n     * <pre>\n     * // Create a Map mapping colors.\n     * Map colorMap = MapUtils.toMap(new String[][] {{\n     *     {"RED", "#FF0000"},\n     *     {"GREEN", "#00FF00"},\n     *     {"BLUE", "#0000FF"}});\n     * </pre>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  an array whose elements are either a {@link java.util.Map.Entry} or\n     *  an Array containing at least two elements, may be <code>null</code>\n     * @return a <code>Map</code> that was created from the array\n     * @throws IllegalArgumentException  if one element of this Array is\n     *  itself an Array containing less then two elements\n     * @throws IllegalArgumentException  if the array contains elements other\n     *  than {@link java.util.Map.Entry} and an Array\n     */\n    public static Map<Object, Object> toMap(Object[] array) {\n        if (array == null) {\n            return null;\n        }\n        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));\n        for (int i = 0; i < array.length; i++) {\n            Object object = array[i];\n            if (object instanceof Map.Entry<?, ?>) {\n                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;\n                map.put(entry.getKey(), entry.getValue());\n            } else if (object instanceof Object[]) {\n                Object[] entry = (Object[]) object;\n                if (entry.length < 2) {\n                    throw new IllegalArgumentException("Array element " + i + ", \'"\n                        + object\n                        + "\', has a length less than 2");\n                }\n                map.put(entry[0], entry[1]);\n            } else {\n                throw new IllegalArgumentException("Array element " + i + ", \'"\n                        + object\n                        + "\', is neither of type Map.Entry nor an Array");\n            }\n        }\n        return map;\n    }\n\n    // Clone\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Shallow clones an array returning a typecast result and handling\n     * <code>null</code>.</p>\n     *\n     * <p>The objects in the array are not cloned, thus there is no special\n     * handling for multi-dimensional arrays.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to shallow clone, may be <code>null</code>\n     * @return the cloned array, <code>null</code> if <code>null</code> input\n     */\n    public static <T> T[] clone(T[] array) {\n        if (array == null) {\n            return null;\n        }\n        return array.clone();\n    }\n\n    /**\n     * <p>Clones an array returning a typecast result and handling\n     * <code>null</code>.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to clone, may be <code>null</code>\n     * @return the cloned array, <code>null</code> if <code>null</code> input\n     */\n    public static long[] clone(long[] array) {\n        if (array == null) {\n            return null;\n        }\n        return array.clone();\n    }\n\n    /**\n     * <p>Clones an array returning a typecast result and handling\n     * <code>null</code>.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to clone, may be <code>null</code>\n     * @return the cloned array, <code>null</code> if <code>null</code> input\n     */\n    public static int[] clone(int[] array) {\n        if (array == null) {\n            return null;\n        }\n        return array.clone();\n    }\n\n    /**\n     * <p>Clones an array returning a typecast result and handling\n     * <code>null</code>.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to clone, may be <code>null</code>\n     * @return the cloned array, <code>null</code> if <code>null</code> input\n     */\n    public static short[] clone(short[] array) {\n        if (array == null) {\n            return null;\n        }\n        return array.clone();\n    }\n\n    /**\n     * <p>Clones an array returning a typecast result and handling\n     * <code>null</code>.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to clone, may be <code>null</code>\n     * @return the cloned array, <code>null</code> if <code>null</code> input\n     */\n    public static char[] clone(char[] array) {\n        if (array == null) {\n            return null;\n        }\n        return array.clone();\n    }\n\n    /**\n     * <p>Clones an array returning a typecast result and handling\n     * <code>null</code>.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to clone, may be <code>null</code>\n     * @return the cloned array, <code>null</code> if <code>null</code> input\n     */\n    public static byte[] clone(byte[] array) {\n        if (array == null) {\n            return null;\n        }\n        return array.clone();\n    }\n\n    /**\n     * <p>Clones an array returning a typecast result and handling\n     * <code>null</code>.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to clone, may be <code>null</code>\n     * @return the cloned array, <code>null</code> if <code>null</code> input\n     */\n    public static double[] clone(double[] array) {\n        if (array == null) {\n            return null;\n        }\n        return array.clone();\n    }\n\n    /**\n     * <p>Clones an array returning a typecast result and handling\n     * <code>null</code>.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to clone, may be <code>null</code>\n     * @return the cloned array, <code>null</code> if <code>null</code> input\n     */\n    public static float[] clone(float[] array) {\n        if (array == null) {\n            return null;\n        }\n        return array.clone();\n    }\n\n    /**\n     * <p>Clones an array returning a typecast result and handling\n     * <code>null</code>.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to clone, may be <code>null</code>\n     * @return the cloned array, <code>null</code> if <code>null</code> input\n     */\n    public static boolean[] clone(boolean[] array) {\n        if (array == null) {\n            return null;\n        }\n        return array.clone();\n    }\n\n    // Subarrays\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Produces a new array containing the elements between\n     * the start and end indices.</p>\n     *\n     * <p>The start index is inclusive, the end index exclusive.\n     * Null array input produces null output.</p>\n     *\n     * <p>The component type of the subarray is always the same as\n     * that of the input array. Thus, if the input is an array of type\n     * <code>Date</code>, the following usage is envisaged:</p>\n     *\n     * <pre>\n     * Date[] someDates = (Date[])ArrayUtils.subarray(allDates, 2, 5);\n     * </pre>\n     *\n     * @param array  the array\n     * @param startIndexInclusive  the starting index. Undervalue (&lt;0)\n     *      is promoted to 0, overvalue (&gt;array.length) results\n     *      in an empty array.\n     * @param endIndexExclusive  elements up to endIndex-1 are present in the\n     *      returned subarray. Undervalue (&lt; startIndex) produces\n     *      empty array, overvalue (&gt;array.length) is demoted to\n     *      array length.\n     * @return a new array containing the elements between\n     *      the start and end indices.\n     * @since 2.1\n     */\n    @SuppressWarnings("unchecked")\n    public static <T> T[] subarray(T[] array, int startIndexInclusive, int endIndexExclusive) {\n        if (array == null) {\n            return null;\n        }\n        if (startIndexInclusive < 0) {\n            startIndexInclusive = 0;\n        }\n        if (endIndexExclusive > array.length) {\n            endIndexExclusive = array.length;\n        }\n        int newSize = endIndexExclusive - startIndexInclusive;\n        Class<?> type = array.getClass().getComponentType();\n        if (newSize <= 0) {\n            return (T[]) Array.newInstance(type, 0);\n        }\n        T[] subarray = (T[]) Array.newInstance(type, newSize);\n        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n        return subarray;\n    }\n\n    /**\n     * <p>Produces a new <code>long</code> array containing the elements\n     * between the start and end indices.</p>\n     *\n     * <p>The start index is inclusive, the end index exclusive.\n     * Null array input produces null output.</p>\n     *\n     * @param array  the array\n     * @param startIndexInclusive  the starting index. Undervalue (&lt;0)\n     *      is promoted to 0, overvalue (&gt;array.length) results\n     *      in an empty array.\n     * @param endIndexExclusive  elements up to endIndex-1 are present in the\n     *      returned subarray. Undervalue (&lt; startIndex) produces\n     *      empty array, overvalue (&gt;array.length) is demoted to\n     *      array length.\n     * @return a new array containing the elements between\n     *      the start and end indices.\n     * @since 2.1\n     */\n    public static long[] subarray(long[] array, int startIndexInclusive, int endIndexExclusive) {\n        if (array == null) {\n            return null;\n        }\n        if (startIndexInclusive < 0) {\n            startIndexInclusive = 0;\n        }\n        if (endIndexExclusive > array.length) {\n            endIndexExclusive = array.length;\n        }\n        int newSize = endIndexExclusive - startIndexInclusive;\n        if (newSize <= 0) {\n            return EMPTY_LONG_ARRAY;\n        }\n\n        long[] subarray = new long[newSize];\n        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n        return subarray;\n    }\n\n    /**\n     * <p>Produces a new <code>int</code> array containing the elements\n     * between the start and end indices.</p>\n     *\n     * <p>The start index is inclusive, the end index exclusive.\n     * Null array input produces null output.</p>\n     *\n     * @param array  the array\n     * @param startIndexInclusive  the starting index. Undervalue (&lt;0)\n     *      is promoted to 0, overvalue (&gt;array.length) results\n     *      in an empty array.\n     * @param endIndexExclusive  elements up to endIndex-1 are present in the\n     *      returned subarray. Undervalue (&lt; startIndex) produces\n     *      empty array, overvalue (&gt;array.length) is demoted to\n     *      array length.\n     * @return a new array containing the elements between\n     *      the start and end indices.\n     * @since 2.1\n     */\n    public static int[] subarray(int[] array, int startIndexInclusive, int endIndexExclusive) {\n        if (array == null) {\n            return null;\n        }\n        if (startIndexInclusive < 0) {\n            startIndexInclusive = 0;\n        }\n        if (endIndexExclusive > array.length) {\n            endIndexExclusive = array.length;\n        }\n        int newSize = endIndexExclusive - startIndexInclusive;\n        if (newSize <= 0) {\n            return EMPTY_INT_ARRAY;\n        }\n\n        int[] subarray = new int[newSize];\n        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n        return subarray;\n    }\n\n    /**\n     * <p>Produces a new <code>short</code> array containing the elements\n     * between the start and end indices.</p>\n     *\n     * <p>The start index is inclusive, the end index exclusive.\n     * Null array input produces null output.</p>\n     *\n     * @param array  the array\n     * @param startIndexInclusive  the starting index. Undervalue (&lt;0)\n     *      is promoted to 0, overvalue (&gt;array.length) results\n     *      in an empty array.\n     * @param endIndexExclusive  elements up to endIndex-1 are present in the\n     *      returned subarray. Undervalue (&lt; startIndex) produces\n     *      empty array, overvalue (&gt;array.length) is demoted to\n     *      array length.\n     * @return a new array containing the elements between\n     *      the start and end indices.\n     * @since 2.1\n     */\n    public static short[] subarray(short[] array, int startIndexInclusive, int endIndexExclusive) {\n        if (array == null) {\n            return null;\n        }\n        if (startIndexInclusive < 0) {\n            startIndexInclusive = 0;\n        }\n        if (endIndexExclusive > array.length) {\n            endIndexExclusive = array.length;\n        }\n        int newSize = endIndexExclusive - startIndexInclusive;\n        if (newSize <= 0) {\n            return EMPTY_SHORT_ARRAY;\n        }\n\n        short[] subarray = new short[newSize];\n        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n        return subarray;\n    }\n\n    /**\n     * <p>Produces a new <code>char</code> array containing the elements\n     * between the start and end indices.</p>\n     *\n     * <p>The start index is inclusive, the end index exclusive.\n     * Null array input produces null output.</p>\n     *\n     * @param array  the array\n     * @param startIndexInclusive  the starting index. Undervalue (&lt;0)\n     *      is promoted to 0, overvalue (&gt;array.length) results\n     *      in an empty array.\n     * @param endIndexExclusive  elements up to endIndex-1 are present in the\n     *      returned subarray. Undervalue (&lt; startIndex) produces\n     *      empty array, overvalue (&gt;array.length) is demoted to\n     *      array length.\n     * @return a new array containing the elements between\n     *      the start and end indices.\n     * @since 2.1\n     */\n    public static char[] subarray(char[] array, int startIndexInclusive, int endIndexExclusive) {\n        if (array == null) {\n            return null;\n        }\n        if (startIndexInclusive < 0) {\n            startIndexInclusive = 0;\n        }\n        if (endIndexExclusive > array.length) {\n            endIndexExclusive = array.length;\n        }\n        int newSize = endIndexExclusive - startIndexInclusive;\n        if (newSize <= 0) {\n            return EMPTY_CHAR_ARRAY;\n        }\n\n        char[] subarray = new char[newSize];\n        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n        return subarray;\n    }\n\n    /**\n     * <p>Produces a new <code>byte</code> array containing the elements\n     * between the start and end indices.</p>\n     *\n     * <p>The start index is inclusive, the end index exclusive.\n     * Null array input produces null output.</p>\n     *\n     * @param array  the array\n     * @param startIndexInclusive  the starting index. Undervalue (&lt;0)\n     *      is promoted to 0, overvalue (&gt;array.length) results\n     *      in an empty array.\n     * @param endIndexExclusive  elements up to endIndex-1 are present in the\n     *      returned subarray. Undervalue (&lt; startIndex) produces\n     *      empty array, overvalue (&gt;array.length) is demoted to\n     *      array length.\n     * @return a new array containing the elements between\n     *      the start and end indices.\n     * @since 2.1\n     */\n    public static byte[] subarray(byte[] array, int startIndexInclusive, int endIndexExclusive) {\n        if (array == null) {\n            return null;\n        }\n        if (startIndexInclusive < 0) {\n            startIndexInclusive = 0;\n        }\n        if (endIndexExclusive > array.length) {\n            endIndexExclusive = array.length;\n        }\n        int newSize = endIndexExclusive - startIndexInclusive;\n        if (newSize <= 0) {\n            return EMPTY_BYTE_ARRAY;\n        }\n\n        byte[] subarray = new byte[newSize];\n        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n        return subarray;\n    }\n\n    /**\n     * <p>Produces a new <code>double</code> array containing the elements\n     * between the start and end indices.</p>\n     *\n     * <p>The start index is inclusive, the end index exclusive.\n     * Null array input produces null output.</p>\n     *\n     * @param array  the array\n     * @param startIndexInclusive  the starting index. Undervalue (&lt;0)\n     *      is promoted to 0, overvalue (&gt;array.length) results\n     *      in an empty array.\n     * @param endIndexExclusive  elements up to endIndex-1 are present in the\n     *      returned subarray. Undervalue (&lt; startIndex) produces\n     *      empty array, overvalue (&gt;array.length) is demoted to\n     *      array length.\n     * @return a new array containing the elements between\n     *      the start and end indices.\n     * @since 2.1\n     */\n    public static double[] subarray(double[] array, int startIndexInclusive, int endIndexExclusive) {\n        if (array == null) {\n            return null;\n        }\n        if (startIndexInclusive < 0) {\n            startIndexInclusive = 0;\n        }\n        if (endIndexExclusive > array.length) {\n            endIndexExclusive = array.length;\n        }\n        int newSize = endIndexExclusive - startIndexInclusive;\n        if (newSize <= 0) {\n            return EMPTY_DOUBLE_ARRAY;\n        }\n\n        double[] subarray = new double[newSize];\n        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n        return subarray;\n    }\n\n    /**\n     * <p>Produces a new <code>float</code> array containing the elements\n     * between the start and end indices.</p>\n     *\n     * <p>The start index is inclusive, the end index exclusive.\n     * Null array input produces null output.</p>\n     *\n     * @param array  the array\n     * @param startIndexInclusive  the starting index. Undervalue (&lt;0)\n     *      is promoted to 0, overvalue (&gt;array.length) results\n     *      in an empty array.\n     * @param endIndexExclusive  elements up to endIndex-1 are present in the\n     *      returned subarray. Undervalue (&lt; startIndex) produces\n     *      empty array, overvalue (&gt;array.length) is demoted to\n     *      array length.\n     * @return a new array containing the elements between\n     *      the start and end indices.\n     * @since 2.1\n     */\n    public static float[] subarray(float[] array, int startIndexInclusive, int endIndexExclusive) {\n        if (array == null) {\n            return null;\n        }\n        if (startIndexInclusive < 0) {\n            startIndexInclusive = 0;\n        }\n        if (endIndexExclusive > array.length) {\n            endIndexExclusive = array.length;\n        }\n        int newSize = endIndexExclusive - startIndexInclusive;\n        if (newSize <= 0) {\n            return EMPTY_FLOAT_ARRAY;\n        }\n\n        float[] subarray = new float[newSize];\n        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n        return subarray;\n    }\n\n    /**\n     * <p>Produces a new <code>boolean</code> array containing the elements\n     * between the start and end indices.</p>\n     *\n     * <p>The start index is inclusive, the end index exclusive.\n     * Null array input produces null output.</p>\n     *\n     * @param array  the array\n     * @param startIndexInclusive  the starting index. Undervalue (&lt;0)\n     *      is promoted to 0, overvalue (&gt;array.length) results\n     *      in an empty array.\n     * @param endIndexExclusive  elements up to endIndex-1 are present in the\n     *      returned subarray. Undervalue (&lt; startIndex) produces\n     *      empty array, overvalue (&gt;array.length) is demoted to\n     *      array length.\n     * @return a new array containing the elements between\n     *      the start and end indices.\n     * @since 2.1\n     */\n    public static boolean[] subarray(boolean[] array, int startIndexInclusive, int endIndexExclusive) {\n        if (array == null) {\n            return null;\n        }\n        if (startIndexInclusive < 0) {\n            startIndexInclusive = 0;\n        }\n        if (endIndexExclusive > array.length) {\n            endIndexExclusive = array.length;\n        }\n        int newSize = endIndexExclusive - startIndexInclusive;\n        if (newSize <= 0) {\n            return EMPTY_BOOLEAN_ARRAY;\n        }\n\n        boolean[] subarray = new boolean[newSize];\n        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n        return subarray;\n    }\n\n    // Is same length\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Checks whether two arrays are the same length, treating\n     * <code>null</code> arrays as length <code>0</code>.\n     *\n     * <p>Any multi-dimensional aspects of the arrays are ignored.</p>\n     *\n     * @param array1 the first array, may be <code>null</code>\n     * @param array2 the second array, may be <code>null</code>\n     * @return <code>true</code> if length of arrays matches, treating\n     *  <code>null</code> as an empty array\n     */\n    public static boolean isSameLength(Object[] array1, Object[] array2) {\n        if ((array1 == null && array2 != null && array2.length > 0) ||\n            (array2 == null && array1 != null && array1.length > 0) ||\n            (array1 != null && array2 != null && array1.length != array2.length)) {\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * <p>Checks whether two arrays are the same length, treating\n     * <code>null</code> arrays as length <code>0</code>.</p>\n     *\n     * @param array1 the first array, may be <code>null</code>\n     * @param array2 the second array, may be <code>null</code>\n     * @return <code>true</code> if length of arrays matches, treating\n     *  <code>null</code> as an empty array\n     */\n    public static boolean isSameLength(long[] array1, long[] array2) {\n        if ((array1 == null && array2 != null && array2.length > 0) ||\n            (array2 == null && array1 != null && array1.length > 0) ||\n            (array1 != null && array2 != null && array1.length != array2.length)) {\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * <p>Checks whether two arrays are the same length, treating\n     * <code>null</code> arrays as length <code>0</code>.</p>\n     *\n     * @param array1 the first array, may be <code>null</code>\n     * @param array2 the second array, may be <code>null</code>\n     * @return <code>true</code> if length of arrays matches, treating\n     *  <code>null</code> as an empty array\n     */\n    public static boolean isSameLength(int[] array1, int[] array2) {\n        if ((array1 == null && array2 != null && array2.length > 0) ||\n            (array2 == null && array1 != null && array1.length > 0) ||\n            (array1 != null && array2 != null && array1.length != array2.length)) {\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * <p>Checks whether two arrays are the same length, treating\n     * <code>null</code> arrays as length <code>0</code>.</p>\n     *\n     * @param array1 the first array, may be <code>null</code>\n     * @param array2 the second array, may be <code>null</code>\n     * @return <code>true</code> if length of arrays matches, treating\n     *  <code>null</code> as an empty array\n     */\n    public static boolean isSameLength(short[] array1, short[] array2) {\n        if ((array1 == null && array2 != null && array2.length > 0) ||\n            (array2 == null && array1 != null && array1.length > 0) ||\n            (array1 != null && array2 != null && array1.length != array2.length)) {\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * <p>Checks whether two arrays are the same length, treating\n     * <code>null</code> arrays as length <code>0</code>.</p>\n     *\n     * @param array1 the first array, may be <code>null</code>\n     * @param array2 the second array, may be <code>null</code>\n     * @return <code>true</code> if length of arrays matches, treating\n     *  <code>null</code> as an empty array\n     */\n    public static boolean isSameLength(char[] array1, char[] array2) {\n        if ((array1 == null && array2 != null && array2.length > 0) ||\n            (array2 == null && array1 != null && array1.length > 0) ||\n            (array1 != null && array2 != null && array1.length != array2.length)) {\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * <p>Checks whether two arrays are the same length, treating\n     * <code>null</code> arrays as length <code>0</code>.</p>\n     *\n     * @param array1 the first array, may be <code>null</code>\n     * @param array2 the second array, may be <code>null</code>\n     * @return <code>true</code> if length of arrays matches, treating\n     *  <code>null</code> as an empty array\n     */\n    public static boolean isSameLength(byte[] array1, byte[] array2) {\n        if ((array1 == null && array2 != null && array2.length > 0) ||\n            (array2 == null && array1 != null && array1.length > 0) ||\n            (array1 != null && array2 != null && array1.length != array2.length)) {\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * <p>Checks whether two arrays are the same length, treating\n     * <code>null</code> arrays as length <code>0</code>.</p>\n     *\n     * @param array1 the first array, may be <code>null</code>\n     * @param array2 the second array, may be <code>null</code>\n     * @return <code>true</code> if length of arrays matches, treating\n     *  <code>null</code> as an empty array\n     */\n    public static boolean isSameLength(double[] array1, double[] array2) {\n        if ((array1 == null && array2 != null && array2.length > 0) ||\n            (array2 == null && array1 != null && array1.length > 0) ||\n            (array1 != null && array2 != null && array1.length != array2.length)) {\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * <p>Checks whether two arrays are the same length, treating\n     * <code>null</code> arrays as length <code>0</code>.</p>\n     *\n     * @param array1 the first array, may be <code>null</code>\n     * @param array2 the second array, may be <code>null</code>\n     * @return <code>true</code> if length of arrays matches, treating\n     *  <code>null</code> as an empty array\n     */\n    public static boolean isSameLength(float[] array1, float[] array2) {\n        if ((array1 == null && array2 != null && array2.length > 0) ||\n            (array2 == null && array1 != null && array1.length > 0) ||\n            (array1 != null && array2 != null && array1.length != array2.length)) {\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * <p>Checks whether two arrays are the same length, treating\n     * <code>null</code> arrays as length <code>0</code>.</p>\n     *\n     * @param array1 the first array, may be <code>null</code>\n     * @param array2 the second array, may be <code>null</code>\n     * @return <code>true</code> if length of arrays matches, treating\n     *  <code>null</code> as an empty array\n     */\n    public static boolean isSameLength(boolean[] array1, boolean[] array2) {\n        if ((array1 == null && array2 != null && array2.length > 0) ||\n            (array2 == null && array1 != null && array1.length > 0) ||\n            (array1 != null && array2 != null && array1.length != array2.length)) {\n                return false;\n        }\n        return true;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Returns the length of the specified array.\n     * This method can deal with <code>Object</code> arrays and with primitive arrays.</p>\n     *\n     * <p>If the input array is <code>null</code>, <code>0</code> is returned.</p>\n     *\n     * <pre>\n     * ArrayUtils.getLength(null)            = 0\n     * ArrayUtils.getLength([])              = 0\n     * ArrayUtils.getLength([null])          = 1\n     * ArrayUtils.getLength([true, false])   = 2\n     * ArrayUtils.getLength([1, 2, 3])       = 3\n     * ArrayUtils.getLength(["a", "b", "c"]) = 3\n     * </pre>\n     *\n     * @param array  the array to retrieve the length from, may be null\n     * @return The length of the array, or <code>0</code> if the array is <code>null</code>\n     * @throws IllegalArgumentException if the object arguement is not an array.\n     * @since 2.1\n     */\n    public static int getLength(Object array) {\n        if (array == null) {\n            return 0;\n        }\n        return Array.getLength(array);\n    }\n\n    /**\n     * <p>Checks whether two arrays are the same type taking into account\n     * multi-dimensional arrays.</p>\n     *\n     * @param array1 the first array, must not be <code>null</code>\n     * @param array2 the second array, must not be <code>null</code>\n     * @return <code>true</code> if type of arrays matches\n     * @throws IllegalArgumentException if either array is <code>null</code>\n     */\n    public static boolean isSameType(Object array1, Object array2) {\n        if (array1 == null || array2 == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        }\n        return array1.getClass().getName().equals(array2.getClass().getName());\n    }\n\n    // Reverse\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Reverses the order of the given array.</p>\n     *\n     * <p>There is no special handling for multi-dimensional arrays.</p>\n     *\n     * <p>This method does nothing for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to reverse, may be <code>null</code>\n     */\n    public static void reverse(Object[] array) {\n        if (array == null) {\n            return;\n        }\n        int i = 0;\n        int j = array.length - 1;\n        Object tmp;\n        while (j > i) {\n            tmp = array[j];\n            array[j] = array[i];\n            array[i] = tmp;\n            j--;\n            i++;\n        }\n    }\n\n    /**\n     * <p>Reverses the order of the given array.</p>\n     *\n     * <p>This method does nothing for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to reverse, may be <code>null</code>\n     */\n    public static void reverse(long[] array) {\n        if (array == null) {\n            return;\n        }\n        int i = 0;\n        int j = array.length - 1;\n        long tmp;\n        while (j > i) {\n            tmp = array[j];\n            array[j] = array[i];\n            array[i] = tmp;\n            j--;\n            i++;\n        }\n    }\n\n    /**\n     * <p>Reverses the order of the given array.</p>\n     *\n     * <p>This method does nothing for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to reverse, may be <code>null</code>\n     */\n    public static void reverse(int[] array) {\n        if (array == null) {\n            return;\n        }\n        int i = 0;\n        int j = array.length - 1;\n        int tmp;\n        while (j > i) {\n            tmp = array[j];\n            array[j] = array[i];\n            array[i] = tmp;\n            j--;\n            i++;\n        }\n    }\n\n    /**\n     * <p>Reverses the order of the given array.</p>\n     *\n     * <p>This method does nothing for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to reverse, may be <code>null</code>\n     */\n    public static void reverse(short[] array) {\n        if (array == null) {\n            return;\n        }\n        int i = 0;\n        int j = array.length - 1;\n        short tmp;\n        while (j > i) {\n            tmp = array[j];\n            array[j] = array[i];\n            array[i] = tmp;\n            j--;\n            i++;\n        }\n    }\n\n    /**\n     * <p>Reverses the order of the given array.</p>\n     *\n     * <p>This method does nothing for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to reverse, may be <code>null</code>\n     */\n    public static void reverse(char[] array) {\n        if (array == null) {\n            return;\n        }\n        int i = 0;\n        int j = array.length - 1;\n        char tmp;\n        while (j > i) {\n            tmp = array[j];\n            array[j] = array[i];\n            array[i] = tmp;\n            j--;\n            i++;\n        }\n    }\n\n    /**\n     * <p>Reverses the order of the given array.</p>\n     *\n     * <p>This method does nothing for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to reverse, may be <code>null</code>\n     */\n    public static void reverse(byte[] array) {\n        if (array == null) {\n            return;\n        }\n        int i = 0;\n        int j = array.length - 1;\n        byte tmp;\n        while (j > i) {\n            tmp = array[j];\n            array[j] = array[i];\n            array[i] = tmp;\n            j--;\n            i++;\n        }\n    }\n\n    /**\n     * <p>Reverses the order of the given array.</p>\n     *\n     * <p>This method does nothing for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to reverse, may be <code>null</code>\n     */\n    public static void reverse(double[] array) {\n        if (array == null) {\n            return;\n        }\n        int i = 0;\n        int j = array.length - 1;\n        double tmp;\n        while (j > i) {\n            tmp = array[j];\n            array[j] = array[i];\n            array[i] = tmp;\n            j--;\n            i++;\n        }\n    }\n\n    /**\n     * <p>Reverses the order of the given array.</p>\n     *\n     * <p>This method does nothing for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to reverse, may be <code>null</code>\n     */\n    public static void reverse(float[] array) {\n        if (array == null) {\n            return;\n        }\n        int i = 0;\n        int j = array.length - 1;\n        float tmp;\n        while (j > i) {\n            tmp = array[j];\n            array[j] = array[i];\n            array[i] = tmp;\n            j--;\n            i++;\n        }\n    }\n\n    /**\n     * <p>Reverses the order of the given array.</p>\n     *\n     * <p>This method does nothing for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to reverse, may be <code>null</code>\n     */\n    public static void reverse(boolean[] array) {\n        if (array == null) {\n            return;\n        }\n        int i = 0;\n        int j = array.length - 1;\n        boolean tmp;\n        while (j > i) {\n            tmp = array[j];\n            array[j] = array[i];\n            array[i] = tmp;\n            j--;\n            i++;\n        }\n    }\n\n    // IndexOf search\n    // ----------------------------------------------------------------------\n\n    // Object IndexOf\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Finds the index of the given object in the array.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param objectToFind  the object to find, may be <code>null</code>\n     * @return the index of the object within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int indexOf(Object[] array, Object objectToFind) {\n        return indexOf(array, objectToFind, 0);\n    }\n\n    /**\n     * <p>Finds the index of the given object in the array starting at the given index.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex is treated as zero. A startIndex larger than the array\n     * length will return {@link #INDEX_NOT_FOUND} (<code>-1</code>).</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param objectToFind  the object to find, may be <code>null</code>\n     * @param startIndex  the index to start searching at\n     * @return the index of the object within the array starting at the index,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int indexOf(Object[] array, Object objectToFind, int startIndex) {\n        if (array == null) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            startIndex = 0;\n        }\n        if (objectToFind == null) {\n            for (int i = startIndex; i < array.length; i++) {\n                if (array[i] == null) {\n                    return i;\n                }\n            }\n        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {\n            for (int i = startIndex; i < array.length; i++) {\n                if (objectToFind.equals(array[i])) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Finds the last index of the given object within the array.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to travers backwords looking for the object, may be <code>null</code>\n     * @param objectToFind  the object to find, may be <code>null</code>\n     * @return the last index of the object within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int lastIndexOf(Object[] array, Object objectToFind) {\n        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);\n    }\n\n    /**\n     * <p>Finds the last index of the given object in the array starting at the given index.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex will return {@link #INDEX_NOT_FOUND} (<code>-1</code>). A startIndex larger than\n     * the array length will search from the end of the array.</p>\n     *\n     * @param array  the array to traverse for looking for the object, may be <code>null</code>\n     * @param objectToFind  the object to find, may be <code>null</code>\n     * @param startIndex  the start index to travers backwards from\n     * @return the last index of the object within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int lastIndexOf(Object[] array, Object objectToFind, int startIndex) {\n        if (array == null) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            return INDEX_NOT_FOUND;\n        } else if (startIndex >= array.length) {\n            startIndex = array.length - 1;\n        }\n        if (objectToFind == null) {\n            for (int i = startIndex; i >= 0; i--) {\n                if (array[i] == null) {\n                    return i;\n                }\n            }\n        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {\n            for (int i = startIndex; i >= 0; i--) {\n                if (objectToFind.equals(array[i])) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Checks if the object is in the given array.</p>\n     *\n     * <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>\n     *\n     * @param array  the array to search through\n     * @param objectToFind  the object to find\n     * @return <code>true</code> if the array contains the object\n     */\n    public static boolean contains(Object[] array, Object objectToFind) {\n        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;\n    }\n\n    // long IndexOf\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Finds the index of the given value in the array.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int indexOf(long[] array, long valueToFind) {\n        return indexOf(array, valueToFind, 0);\n    }\n\n    /**\n     * <p>Finds the index of the given value in the array starting at the given index.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex is treated as zero. A startIndex larger than the array\n     * length will return {@link #INDEX_NOT_FOUND} (<code>-1</code>).</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param startIndex  the index to start searching at\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int indexOf(long[] array, long valueToFind, int startIndex) {\n        if (array == null) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            startIndex = 0;\n        }\n        for (int i = startIndex; i < array.length; i++) {\n            if (valueToFind == array[i]) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Finds the last index of the given value within the array.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to travers backwords looking for the object, may be <code>null</code>\n     * @param valueToFind  the object to find\n     * @return the last index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int lastIndexOf(long[] array, long valueToFind) {\n        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);\n    }\n\n    /**\n     * <p>Finds the last index of the given value in the array starting at the given index.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex will return {@link #INDEX_NOT_FOUND} (<code>-1</code>). A startIndex larger than the\n     * array length will search from the end of the array.</p>\n     *\n     * @param array  the array to traverse for looking for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param startIndex  the start index to travers backwards from\n     * @return the last index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int lastIndexOf(long[] array, long valueToFind, int startIndex) {\n        if (array == null) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            return INDEX_NOT_FOUND;\n        } else if (startIndex >= array.length) {\n            startIndex = array.length - 1;\n        }\n        for (int i = startIndex; i >= 0; i--) {\n            if (valueToFind == array[i]) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Checks if the value is in the given array.</p>\n     *\n     * <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>\n     *\n     * @param array  the array to search through\n     * @param valueToFind  the value to find\n     * @return <code>true</code> if the array contains the object\n     */\n    public static boolean contains(long[] array, long valueToFind) {\n        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;\n    }\n\n    // int IndexOf\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Finds the index of the given value in the array.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int indexOf(int[] array, int valueToFind) {\n        return indexOf(array, valueToFind, 0);\n    }\n\n    /**\n     * <p>Finds the index of the given value in the array starting at the given index.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex is treated as zero. A startIndex larger than the array\n     * length will return {@link #INDEX_NOT_FOUND} (<code>-1</code>).</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param startIndex  the index to start searching at\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int indexOf(int[] array, int valueToFind, int startIndex) {\n        if (array == null) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            startIndex = 0;\n        }\n        for (int i = startIndex; i < array.length; i++) {\n            if (valueToFind == array[i]) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Finds the last index of the given value within the array.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to travers backwords looking for the object, may be <code>null</code>\n     * @param valueToFind  the object to find\n     * @return the last index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int lastIndexOf(int[] array, int valueToFind) {\n        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);\n    }\n\n    /**\n     * <p>Finds the last index of the given value in the array starting at the given index.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex will return {@link #INDEX_NOT_FOUND} (<code>-1</code>). A startIndex larger than the\n     * array length will search from the end of the array.</p>\n     *\n     * @param array  the array to traverse for looking for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param startIndex  the start index to travers backwards from\n     * @return the last index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int lastIndexOf(int[] array, int valueToFind, int startIndex) {\n        if (array == null) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            return INDEX_NOT_FOUND;\n        } else if (startIndex >= array.length) {\n            startIndex = array.length - 1;\n        }\n        for (int i = startIndex; i >= 0; i--) {\n            if (valueToFind == array[i]) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Checks if the value is in the given array.</p>\n     *\n     * <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>\n     *\n     * @param array  the array to search through\n     * @param valueToFind  the value to find\n     * @return <code>true</code> if the array contains the object\n     */\n    public static boolean contains(int[] array, int valueToFind) {\n        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;\n    }\n\n    // short IndexOf\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Finds the index of the given value in the array.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int indexOf(short[] array, short valueToFind) {\n        return indexOf(array, valueToFind, 0);\n    }\n\n    /**\n     * <p>Finds the index of the given value in the array starting at the given index.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex is treated as zero. A startIndex larger than the array\n     * length will return {@link #INDEX_NOT_FOUND} (<code>-1</code>).</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param startIndex  the index to start searching at\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int indexOf(short[] array, short valueToFind, int startIndex) {\n        if (array == null) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            startIndex = 0;\n        }\n        for (int i = startIndex; i < array.length; i++) {\n            if (valueToFind == array[i]) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Finds the last index of the given value within the array.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to travers backwords looking for the object, may be <code>null</code>\n     * @param valueToFind  the object to find\n     * @return the last index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int lastIndexOf(short[] array, short valueToFind) {\n        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);\n    }\n\n    /**\n     * <p>Finds the last index of the given value in the array starting at the given index.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex will return {@link #INDEX_NOT_FOUND} (<code>-1</code>). A startIndex larger than the\n     * array length will search from the end of the array.</p>\n     *\n     * @param array  the array to traverse for looking for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param startIndex  the start index to travers backwards from\n     * @return the last index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int lastIndexOf(short[] array, short valueToFind, int startIndex) {\n        if (array == null) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            return INDEX_NOT_FOUND;\n        } else if (startIndex >= array.length) {\n            startIndex = array.length - 1;\n        }\n        for (int i = startIndex; i >= 0; i--) {\n            if (valueToFind == array[i]) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Checks if the value is in the given array.</p>\n     *\n     * <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>\n     *\n     * @param array  the array to search through\n     * @param valueToFind  the value to find\n     * @return <code>true</code> if the array contains the object\n     */\n    public static boolean contains(short[] array, short valueToFind) {\n        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;\n    }\n\n    // char IndexOf\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Finds the index of the given value in the array.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     * @since 2.1\n     */\n    public static int indexOf(char[] array, char valueToFind) {\n        return indexOf(array, valueToFind, 0);\n    }\n\n    /**\n     * <p>Finds the index of the given value in the array starting at the given index.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex is treated as zero. A startIndex larger than the array\n     * length will return {@link #INDEX_NOT_FOUND} (<code>-1</code>).</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param startIndex  the index to start searching at\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     * @since 2.1\n     */\n    public static int indexOf(char[] array, char valueToFind, int startIndex) {\n        if (array == null) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            startIndex = 0;\n        }\n        for (int i = startIndex; i < array.length; i++) {\n            if (valueToFind == array[i]) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Finds the last index of the given value within the array.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to travers backwords looking for the object, may be <code>null</code>\n     * @param valueToFind  the object to find\n     * @return the last index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     * @since 2.1\n     */\n    public static int lastIndexOf(char[] array, char valueToFind) {\n        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);\n    }\n\n    /**\n     * <p>Finds the last index of the given value in the array starting at the given index.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex will return {@link #INDEX_NOT_FOUND} (<code>-1</code>). A startIndex larger than the\n     * array length will search from the end of the array.</p>\n     *\n     * @param array  the array to traverse for looking for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param startIndex  the start index to travers backwards from\n     * @return the last index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     * @since 2.1\n     */\n    public static int lastIndexOf(char[] array, char valueToFind, int startIndex) {\n        if (array == null) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            return INDEX_NOT_FOUND;\n        } else if (startIndex >= array.length) {\n            startIndex = array.length - 1;\n        }\n        for (int i = startIndex; i >= 0; i--) {\n            if (valueToFind == array[i]) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Checks if the value is in the given array.</p>\n     *\n     * <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>\n     *\n     * @param array  the array to search through\n     * @param valueToFind  the value to find\n     * @return <code>true</code> if the array contains the object\n     * @since 2.1\n     */\n    public static boolean contains(char[] array, char valueToFind) {\n        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;\n    }\n\n    // byte IndexOf\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Finds the index of the given value in the array.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int indexOf(byte[] array, byte valueToFind) {\n        return indexOf(array, valueToFind, 0);\n    }\n\n    /**\n     * <p>Finds the index of the given value in the array starting at the given index.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex is treated as zero. A startIndex larger than the array\n     * length will return {@link #INDEX_NOT_FOUND} (<code>-1</code>).</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param startIndex  the index to start searching at\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int indexOf(byte[] array, byte valueToFind, int startIndex) {\n        if (array == null) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            startIndex = 0;\n        }\n        for (int i = startIndex; i < array.length; i++) {\n            if (valueToFind == array[i]) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Finds the last index of the given value within the array.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to travers backwords looking for the object, may be <code>null</code>\n     * @param valueToFind  the object to find\n     * @return the last index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int lastIndexOf(byte[] array, byte valueToFind) {\n        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);\n    }\n\n    /**\n     * <p>Finds the last index of the given value in the array starting at the given index.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex will return {@link #INDEX_NOT_FOUND} (<code>-1</code>). A startIndex larger than the\n     * array length will search from the end of the array.</p>\n     *\n     * @param array  the array to traverse for looking for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param startIndex  the start index to travers backwards from\n     * @return the last index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int lastIndexOf(byte[] array, byte valueToFind, int startIndex) {\n        if (array == null) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            return INDEX_NOT_FOUND;\n        } else if (startIndex >= array.length) {\n            startIndex = array.length - 1;\n        }\n        for (int i = startIndex; i >= 0; i--) {\n            if (valueToFind == array[i]) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Checks if the value is in the given array.</p>\n     *\n     * <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>\n     *\n     * @param array  the array to search through\n     * @param valueToFind  the value to find\n     * @return <code>true</code> if the array contains the object\n     */\n    public static boolean contains(byte[] array, byte valueToFind) {\n        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;\n    }\n\n    // double IndexOf\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Finds the index of the given value in the array.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int indexOf(double[] array, double valueToFind) {\n        return indexOf(array, valueToFind, 0);\n    }\n\n    /**\n     * <p>Finds the index of the given value within a given tolerance in the array.\n     * This method will return the index of the first value which falls between the region\n     * defined by valueToFind - tolerance and valueToFind + tolerance.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param tolerance tolerance of the search\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int indexOf(double[] array, double valueToFind, double tolerance) {\n        return indexOf(array, valueToFind, 0, tolerance);\n    }\n\n    /**\n     * <p>Finds the index of the given value in the array starting at the given index.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex is treated as zero. A startIndex larger than the array\n     * length will return {@link #INDEX_NOT_FOUND} (<code>-1</code>).</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param startIndex  the index to start searching at\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int indexOf(double[] array, double valueToFind, int startIndex) {\n        if (ArrayUtils.isEmpty(array)) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            startIndex = 0;\n        }\n        for (int i = startIndex; i < array.length; i++) {\n            if (valueToFind == array[i]) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Finds the index of the given value in the array starting at the given index.\n     * This method will return the index of the first value which falls between the region\n     * defined by valueToFind - tolerance and valueToFind + tolerance.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex is treated as zero. A startIndex larger than the array\n     * length will return {@link #INDEX_NOT_FOUND} (<code>-1</code>).</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param startIndex  the index to start searching at\n     * @param tolerance tolerance of the search\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int indexOf(double[] array, double valueToFind, int startIndex, double tolerance) {\n        if (ArrayUtils.isEmpty(array)) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            startIndex = 0;\n        }\n        double min = valueToFind - tolerance;\n        double max = valueToFind + tolerance;\n        for (int i = startIndex; i < array.length; i++) {\n            if (array[i] >= min && array[i] <= max) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Finds the last index of the given value within the array.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to travers backwords looking for the object, may be <code>null</code>\n     * @param valueToFind  the object to find\n     * @return the last index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int lastIndexOf(double[] array, double valueToFind) {\n        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);\n    }\n\n    /**\n     * <p>Finds the last index of the given value within a given tolerance in the array.\n     * This method will return the index of the last value which falls between the region\n     * defined by valueToFind - tolerance and valueToFind + tolerance.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param tolerance tolerance of the search\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int lastIndexOf(double[] array, double valueToFind, double tolerance) {\n        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);\n    }\n\n    /**\n     * <p>Finds the last index of the given value in the array starting at the given index.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex will return {@link #INDEX_NOT_FOUND} (<code>-1</code>). A startIndex larger than the\n     * array length will search from the end of the array.</p>\n     *\n     * @param array  the array to traverse for looking for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param startIndex  the start index to travers backwards from\n     * @return the last index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int lastIndexOf(double[] array, double valueToFind, int startIndex) {\n        if (ArrayUtils.isEmpty(array)) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            return INDEX_NOT_FOUND;\n        } else if (startIndex >= array.length) {\n            startIndex = array.length - 1;\n        }\n        for (int i = startIndex; i >= 0; i--) {\n            if (valueToFind == array[i]) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Finds the last index of the given value in the array starting at the given index.\n     * This method will return the index of the last value which falls between the region\n     * defined by valueToFind - tolerance and valueToFind + tolerance.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex will return {@link #INDEX_NOT_FOUND} (<code>-1</code>). A startIndex larger than the\n     * array length will search from the end of the array.</p>\n     *\n     * @param array  the array to traverse for looking for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param startIndex  the start index to travers backwards from\n     * @param tolerance  search for value within plus/minus this amount\n     * @return the last index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int lastIndexOf(double[] array, double valueToFind, int startIndex, double tolerance) {\n        if (ArrayUtils.isEmpty(array)) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            return INDEX_NOT_FOUND;\n        } else if (startIndex >= array.length) {\n            startIndex = array.length - 1;\n        }\n        double min = valueToFind - tolerance;\n        double max = valueToFind + tolerance;\n        for (int i = startIndex; i >= 0; i--) {\n            if (array[i] >= min && array[i] <= max) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Checks if the value is in the given array.</p>\n     *\n     * <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>\n     *\n     * @param array  the array to search through\n     * @param valueToFind  the value to find\n     * @return <code>true</code> if the array contains the object\n     */\n    public static boolean contains(double[] array, double valueToFind) {\n        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Checks if a value falling within the given tolerance is in the\n     * given array.  If the array contains a value within the inclusive range\n     * defined by (value - tolerance) to (value + tolerance).</p>\n     *\n     * <p>The method returns <code>false</code> if a <code>null</code> array\n     * is passed in.</p>\n     *\n     * @param array  the array to search\n     * @param valueToFind  the value to find\n     * @param tolerance  the array contains the tolerance of the search\n     * @return true if value falling within tolerance is in array\n     */\n    public static boolean contains(double[] array, double valueToFind, double tolerance) {\n        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;\n    }\n\n    // float IndexOf\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Finds the index of the given value in the array.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int indexOf(float[] array, float valueToFind) {\n        return indexOf(array, valueToFind, 0);\n    }\n\n    /**\n     * <p>Finds the index of the given value in the array starting at the given index.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex is treated as zero. A startIndex larger than the array\n     * length will return {@link #INDEX_NOT_FOUND} (<code>-1</code>).</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param startIndex  the index to start searching at\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int indexOf(float[] array, float valueToFind, int startIndex) {\n        if (ArrayUtils.isEmpty(array)) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            startIndex = 0;\n        }\n        for (int i = startIndex; i < array.length; i++) {\n            if (valueToFind == array[i]) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Finds the last index of the given value within the array.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to travers backwords looking for the object, may be <code>null</code>\n     * @param valueToFind  the object to find\n     * @return the last index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int lastIndexOf(float[] array, float valueToFind) {\n        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);\n    }\n\n    /**\n     * <p>Finds the last index of the given value in the array starting at the given index.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex will return {@link #INDEX_NOT_FOUND} (<code>-1</code>). A startIndex larger than the\n     * array length will search from the end of the array.</p>\n     *\n     * @param array  the array to traverse for looking for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param startIndex  the start index to travers backwards from\n     * @return the last index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int lastIndexOf(float[] array, float valueToFind, int startIndex) {\n        if (ArrayUtils.isEmpty(array)) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            return INDEX_NOT_FOUND;\n        } else if (startIndex >= array.length) {\n            startIndex = array.length - 1;\n        }\n        for (int i = startIndex; i >= 0; i--) {\n            if (valueToFind == array[i]) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Checks if the value is in the given array.</p>\n     *\n     * <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>\n     *\n     * @param array  the array to search through\n     * @param valueToFind  the value to find\n     * @return <code>true</code> if the array contains the object\n     */\n    public static boolean contains(float[] array, float valueToFind) {\n        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;\n    }\n\n    // boolean IndexOf\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Finds the index of the given value in the array.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int indexOf(boolean[] array, boolean valueToFind) {\n        return indexOf(array, valueToFind, 0);\n    }\n\n    /**\n     * <p>Finds the index of the given value in the array starting at the given index.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex is treated as zero. A startIndex larger than the array\n     * length will return {@link #INDEX_NOT_FOUND} (<code>-1</code>).</p>\n     *\n     * @param array  the array to search through for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param startIndex  the index to start searching at\n     * @return the index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code>\n     *  array input\n     */\n    public static int indexOf(boolean[] array, boolean valueToFind, int startIndex) {\n        if (ArrayUtils.isEmpty(array)) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            startIndex = 0;\n        }\n        for (int i = startIndex; i < array.length; i++) {\n            if (valueToFind == array[i]) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Finds the last index of the given value within the array.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) if\n     * <code>null</code> array input.</p>\n     *\n     * @param array  the array to travers backwords looking for the object, may be <code>null</code>\n     * @param valueToFind  the object to find\n     * @return the last index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int lastIndexOf(boolean[] array, boolean valueToFind) {\n        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);\n    }\n\n    /**\n     * <p>Finds the last index of the given value in the array starting at the given index.</p>\n     *\n     * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>\n     *\n     * <p>A negative startIndex will return {@link #INDEX_NOT_FOUND} (<code>-1</code>). A startIndex larger than\n     * the array length will search from the end of the array.</p>\n     *\n     * @param array  the array to traverse for looking for the object, may be <code>null</code>\n     * @param valueToFind  the value to find\n     * @param startIndex  the start index to travers backwards from\n     * @return the last index of the value within the array,\n     *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input\n     */\n    public static int lastIndexOf(boolean[] array, boolean valueToFind, int startIndex) {\n        if (ArrayUtils.isEmpty(array)) {\n            return INDEX_NOT_FOUND;\n        }\n        if (startIndex < 0) {\n            return INDEX_NOT_FOUND;\n        } else if (startIndex >= array.length) {\n            startIndex = array.length - 1;\n        }\n        for (int i = startIndex; i >= 0; i--) {\n            if (valueToFind == array[i]) {\n                return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n\n    /**\n     * <p>Checks if the value is in the given array.</p>\n     *\n     * <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>\n     *\n     * @param array  the array to search through\n     * @param valueToFind  the value to find\n     * @return <code>true</code> if the array contains the object\n     */\n    public static boolean contains(boolean[] array, boolean valueToFind) {\n        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;\n    }\n\n    // Primitive/Object array converters\n    // ----------------------------------------------------------------------\n\n    // Character array converters\n    // ----------------------------------------------------------------------\n    /**\n     * <p>Converts an array of object Characters to primitives.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>Character</code> array, may be <code>null</code>\n     * @return a <code>char</code> array, <code>null</code> if null array input\n     * @throws NullPointerException if array content is <code>null</code>\n     */\n    public static char[] toPrimitive(Character[] array) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_CHAR_ARRAY;\n        }\n        final char[] result = new char[array.length];\n        for (int i = 0; i < array.length; i++) {\n            result[i] = array[i].charValue();\n        }\n        return result;\n    }\n\n    /**\n     * <p>Converts an array of object Character to primitives handling <code>null</code>.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>Character</code> array, may be <code>null</code>\n     * @param valueForNull  the value to insert if <code>null</code> found\n     * @return a <code>char</code> array, <code>null</code> if null array input\n     */\n    public static char[] toPrimitive(Character[] array, char valueForNull) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_CHAR_ARRAY;\n        }\n        final char[] result = new char[array.length];\n        for (int i = 0; i < array.length; i++) {\n            Character b = array[i];\n            result[i] = (b == null ? valueForNull : b.charValue());\n        }\n        return result;\n    }\n\n    /**\n     * <p>Converts an array of primitive chars to objects.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array a <code>char</code> array\n     * @return a <code>Character</code> array, <code>null</code> if null array input\n     */\n    public static Character[] toObject(char[] array) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_CHARACTER_OBJECT_ARRAY;\n        }\n        final Character[] result = new Character[array.length];\n        for (int i = 0; i < array.length; i++) {\n            result[i] = Character.valueOf(array[i]);\n        }\n        return result;\n     }\n\n    // Long array converters\n    // ----------------------------------------------------------------------\n    /**\n     * <p>Converts an array of object Longs to primitives.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>Long</code> array, may be <code>null</code>\n     * @return a <code>long</code> array, <code>null</code> if null array input\n     * @throws NullPointerException if array content is <code>null</code>\n     */\n    public static long[] toPrimitive(Long[] array) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_LONG_ARRAY;\n        }\n        final long[] result = new long[array.length];\n        for (int i = 0; i < array.length; i++) {\n            result[i] = array[i].longValue();\n        }\n        return result;\n    }\n\n    /**\n     * <p>Converts an array of object Long to primitives handling <code>null</code>.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>Long</code> array, may be <code>null</code>\n     * @param valueForNull  the value to insert if <code>null</code> found\n     * @return a <code>long</code> array, <code>null</code> if null array input\n     */\n    public static long[] toPrimitive(Long[] array, long valueForNull) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_LONG_ARRAY;\n        }\n        final long[] result = new long[array.length];\n        for (int i = 0; i < array.length; i++) {\n            Long b = array[i];\n            result[i] = (b == null ? valueForNull : b.longValue());\n        }\n        return result;\n    }\n\n    /**\n     * <p>Converts an array of primitive longs to objects.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>long</code> array\n     * @return a <code>Long</code> array, <code>null</code> if null array input\n     */\n    public static Long[] toObject(long[] array) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_LONG_OBJECT_ARRAY;\n        }\n        final Long[] result = new Long[array.length];\n        for (int i = 0; i < array.length; i++) {\n            result[i] = Long.valueOf(array[i]);\n        }\n        return result;\n    }\n\n    // Int array converters\n    // ----------------------------------------------------------------------\n    /**\n     * <p>Converts an array of object Integers to primitives.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>Integer</code> array, may be <code>null</code>\n     * @return an <code>int</code> array, <code>null</code> if null array input\n     * @throws NullPointerException if array content is <code>null</code>\n     */\n    public static int[] toPrimitive(Integer[] array) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_INT_ARRAY;\n        }\n        final int[] result = new int[array.length];\n        for (int i = 0; i < array.length; i++) {\n            result[i] = array[i].intValue();\n        }\n        return result;\n    }\n\n    /**\n     * <p>Converts an array of object Integer to primitives handling <code>null</code>.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>Integer</code> array, may be <code>null</code>\n     * @param valueForNull  the value to insert if <code>null</code> found\n     * @return an <code>int</code> array, <code>null</code> if null array input\n     */\n    public static int[] toPrimitive(Integer[] array, int valueForNull) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_INT_ARRAY;\n        }\n        final int[] result = new int[array.length];\n        for (int i = 0; i < array.length; i++) {\n            Integer b = array[i];\n            result[i] = (b == null ? valueForNull : b.intValue());\n        }\n        return result;\n    }\n\n    /**\n     * <p>Converts an array of primitive ints to objects.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  an <code>int</code> array\n     * @return an <code>Integer</code> array, <code>null</code> if null array input\n     */\n    public static Integer[] toObject(int[] array) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_INTEGER_OBJECT_ARRAY;\n        }\n        final Integer[] result = new Integer[array.length];\n        for (int i = 0; i < array.length; i++) {\n            result[i] = Integer.valueOf(array[i]);\n        }\n        return result;\n    }\n\n    // Short array converters\n    // ----------------------------------------------------------------------\n    /**\n     * <p>Converts an array of object Shorts to primitives.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>Short</code> array, may be <code>null</code>\n     * @return a <code>byte</code> array, <code>null</code> if null array input\n     * @throws NullPointerException if array content is <code>null</code>\n     */\n    public static short[] toPrimitive(Short[] array) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_SHORT_ARRAY;\n        }\n        final short[] result = new short[array.length];\n        for (int i = 0; i < array.length; i++) {\n            result[i] = array[i].shortValue();\n        }\n        return result;\n    }\n\n    /**\n     * <p>Converts an array of object Short to primitives handling <code>null</code>.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>Short</code> array, may be <code>null</code>\n     * @param valueForNull  the value to insert if <code>null</code> found\n     * @return a <code>byte</code> array, <code>null</code> if null array input\n     */\n    public static short[] toPrimitive(Short[] array, short valueForNull) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_SHORT_ARRAY;\n        }\n        final short[] result = new short[array.length];\n        for (int i = 0; i < array.length; i++) {\n            Short b = array[i];\n            result[i] = (b == null ? valueForNull : b.shortValue());\n        }\n        return result;\n    }\n\n    /**\n     * <p>Converts an array of primitive shorts to objects.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>short</code> array\n     * @return a <code>Short</code> array, <code>null</code> if null array input\n     */\n    public static Short[] toObject(short[] array) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_SHORT_OBJECT_ARRAY;\n        }\n        final Short[] result = new Short[array.length];\n        for (int i = 0; i < array.length; i++) {\n            result[i] = Short.valueOf(array[i]);\n        }\n        return result;\n    }\n\n    // Byte array converters\n    // ----------------------------------------------------------------------\n    /**\n     * <p>Converts an array of object Bytes to primitives.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>Byte</code> array, may be <code>null</code>\n     * @return a <code>byte</code> array, <code>null</code> if null array input\n     * @throws NullPointerException if array content is <code>null</code>\n     */\n    public static byte[] toPrimitive(Byte[] array) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_BYTE_ARRAY;\n        }\n        final byte[] result = new byte[array.length];\n        for (int i = 0; i < array.length; i++) {\n            result[i] = array[i].byteValue();\n        }\n        return result;\n    }\n\n    /**\n     * <p>Converts an array of object Bytes to primitives handling <code>null</code>.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>Byte</code> array, may be <code>null</code>\n     * @param valueForNull  the value to insert if <code>null</code> found\n     * @return a <code>byte</code> array, <code>null</code> if null array input\n     */\n    public static byte[] toPrimitive(Byte[] array, byte valueForNull) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_BYTE_ARRAY;\n        }\n        final byte[] result = new byte[array.length];\n        for (int i = 0; i < array.length; i++) {\n            Byte b = array[i];\n            result[i] = (b == null ? valueForNull : b.byteValue());\n        }\n        return result;\n    }\n\n    /**\n     * <p>Converts an array of primitive bytes to objects.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>byte</code> array\n     * @return a <code>Byte</code> array, <code>null</code> if null array input\n     */\n    public static Byte[] toObject(byte[] array) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_BYTE_OBJECT_ARRAY;\n        }\n        final Byte[] result = new Byte[array.length];\n        for (int i = 0; i < array.length; i++) {\n            result[i] = Byte.valueOf(array[i]);\n        }\n        return result;\n    }\n\n    // Double array converters\n    // ----------------------------------------------------------------------\n    /**\n     * <p>Converts an array of object Doubles to primitives.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>Double</code> array, may be <code>null</code>\n     * @return a <code>double</code> array, <code>null</code> if null array input\n     * @throws NullPointerException if array content is <code>null</code>\n     */\n    public static double[] toPrimitive(Double[] array) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_DOUBLE_ARRAY;\n        }\n        final double[] result = new double[array.length];\n        for (int i = 0; i < array.length; i++) {\n            result[i] = array[i].doubleValue();\n        }\n        return result;\n    }\n\n    /**\n     * <p>Converts an array of object Doubles to primitives handling <code>null</code>.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>Double</code> array, may be <code>null</code>\n     * @param valueForNull  the value to insert if <code>null</code> found\n     * @return a <code>double</code> array, <code>null</code> if null array input\n     */\n    public static double[] toPrimitive(Double[] array, double valueForNull) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_DOUBLE_ARRAY;\n        }\n        final double[] result = new double[array.length];\n        for (int i = 0; i < array.length; i++) {\n            Double b = array[i];\n            result[i] = (b == null ? valueForNull : b.doubleValue());\n        }\n        return result;\n    }\n\n    /**\n     * <p>Converts an array of primitive doubles to objects.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>double</code> array\n     * @return a <code>Double</code> array, <code>null</code> if null array input\n     */\n    public static Double[] toObject(double[] array) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_DOUBLE_OBJECT_ARRAY;\n        }\n        final Double[] result = new Double[array.length];\n        for (int i = 0; i < array.length; i++) {\n            result[i] = Double.valueOf(array[i]);\n        }\n        return result;\n    }\n\n    //   Float array converters\n    // ----------------------------------------------------------------------\n    /**\n     * <p>Converts an array of object Floats to primitives.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>Float</code> array, may be <code>null</code>\n     * @return a <code>float</code> array, <code>null</code> if null array input\n     * @throws NullPointerException if array content is <code>null</code>\n     */\n    public static float[] toPrimitive(Float[] array) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_FLOAT_ARRAY;\n        }\n        final float[] result = new float[array.length];\n        for (int i = 0; i < array.length; i++) {\n            result[i] = array[i].floatValue();\n        }\n        return result;\n    }\n\n    /**\n     * <p>Converts an array of object Floats to primitives handling <code>null</code>.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>Float</code> array, may be <code>null</code>\n     * @param valueForNull  the value to insert if <code>null</code> found\n     * @return a <code>float</code> array, <code>null</code> if null array input\n     */\n    public static float[] toPrimitive(Float[] array, float valueForNull) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_FLOAT_ARRAY;\n        }\n        final float[] result = new float[array.length];\n        for (int i = 0; i < array.length; i++) {\n            Float b = array[i];\n            result[i] = (b == null ? valueForNull : b.floatValue());\n        }\n        return result;\n    }\n\n    /**\n     * <p>Converts an array of primitive floats to objects.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>float</code> array\n     * @return a <code>Float</code> array, <code>null</code> if null array input\n     */\n    public static Float[] toObject(float[] array) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_FLOAT_OBJECT_ARRAY;\n        }\n        final Float[] result = new Float[array.length];\n        for (int i = 0; i < array.length; i++) {\n            result[i] = Float.valueOf(array[i]);\n        }\n        return result;\n    }\n\n    // Boolean array converters\n    // ----------------------------------------------------------------------\n    /**\n     * <p>Converts an array of object Booleans to primitives.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>Boolean</code> array, may be <code>null</code>\n     * @return a <code>boolean</code> array, <code>null</code> if null array input\n     * @throws NullPointerException if array content is <code>null</code>\n     */\n    public static boolean[] toPrimitive(Boolean[] array) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_BOOLEAN_ARRAY;\n        }\n        final boolean[] result = new boolean[array.length];\n        for (int i = 0; i < array.length; i++) {\n            result[i] = array[i].booleanValue();\n        }\n        return result;\n    }\n\n    /**\n     * <p>Converts an array of object Booleans to primitives handling <code>null</code>.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>Boolean</code> array, may be <code>null</code>\n     * @param valueForNull  the value to insert if <code>null</code> found\n     * @return a <code>boolean</code> array, <code>null</code> if null array input\n     */\n    public static boolean[] toPrimitive(Boolean[] array, boolean valueForNull) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_BOOLEAN_ARRAY;\n        }\n        final boolean[] result = new boolean[array.length];\n        for (int i = 0; i < array.length; i++) {\n            Boolean b = array[i];\n            result[i] = (b == null ? valueForNull : b.booleanValue());\n        }\n        return result;\n    }\n\n    /**\n     * <p>Converts an array of primitive booleans to objects.</p>\n     *\n     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n     *\n     * @param array  a <code>boolean</code> array\n     * @return a <code>Boolean</code> array, <code>null</code> if null array input\n     */\n    public static Boolean[] toObject(boolean[] array) {\n        if (array == null) {\n            return null;\n        } else if (array.length == 0) {\n            return EMPTY_BOOLEAN_OBJECT_ARRAY;\n        }\n        final Boolean[] result = new Boolean[array.length];\n        for (int i = 0; i < array.length; i++) {\n            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);\n        }\n        return result;\n    }\n\n    // ----------------------------------------------------------------------\n    /**\n     * <p>Checks if an array of Objects is empty or <code>null</code>.</p>\n     *\n     * @param array  the array to test\n     * @return <code>true</code> if the array is empty or <code>null</code>\n     * @since 2.1\n     */\n    public static <T> boolean isEmpty(T[] array) {\n        if (array == null || array.length == 0) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * <p>Checks if an array of primitive longs is empty or <code>null</code>.</p>\n     *\n     * @param array  the array to test\n     * @return <code>true</code> if the array is empty or <code>null</code>\n     * @since 2.1\n     */\n    public static boolean isEmpty(long[] array) {\n        if (array == null || array.length == 0) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * <p>Checks if an array of primitive ints is empty or <code>null</code>.</p>\n     *\n     * @param array  the array to test\n     * @return <code>true</code> if the array is empty or <code>null</code>\n     * @since 2.1\n     */\n    public static boolean isEmpty(int[] array) {\n        if (array == null || array.length == 0) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * <p>Checks if an array of primitive shorts is empty or <code>null</code>.</p>\n     *\n     * @param array  the array to test\n     * @return <code>true</code> if the array is empty or <code>null</code>\n     * @since 2.1\n     */\n    public static boolean isEmpty(short[] array) {\n        if (array == null || array.length == 0) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * <p>Checks if an array of primitive chars is empty or <code>null</code>.</p>\n     *\n     * @param array  the array to test\n     * @return <code>true</code> if the array is empty or <code>null</code>\n     * @since 2.1\n     */\n    public static boolean isEmpty(char[] array) {\n        if (array == null || array.length == 0) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * <p>Checks if an array of primitive bytes is empty or <code>null</code>.</p>\n     *\n     * @param array  the array to test\n     * @return <code>true</code> if the array is empty or <code>null</code>\n     * @since 2.1\n     */\n    public static boolean isEmpty(byte[] array) {\n        if (array == null || array.length == 0) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * <p>Checks if an array of primitive doubles is empty or <code>null</code>.</p>\n     *\n     * @param array  the array to test\n     * @return <code>true</code> if the array is empty or <code>null</code>\n     * @since 2.1\n     */\n    public static boolean isEmpty(double[] array) {\n        if (array == null || array.length == 0) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * <p>Checks if an array of primitive floats is empty or <code>null</code>.</p>\n     *\n     * @param array  the array to test\n     * @return <code>true</code> if the array is empty or <code>null</code>\n     * @since 2.1\n     */\n    public static boolean isEmpty(float[] array) {\n        if (array == null || array.length == 0) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * <p>Checks if an array of primitive booleans is empty or <code>null</code>.</p>\n     *\n     * @param array  the array to test\n     * @return <code>true</code> if the array is empty or <code>null</code>\n     * @since 2.1\n     */\n    public static boolean isEmpty(boolean[] array) {\n        if (array == null || array.length == 0) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * <p>Adds all the elements of the given arrays into a new array.</p>\n     * <p>The new array contains all of the element of <code>array1</code> followed\n     * by all of the elements <code>array2</code>. When an array is returned, it is always\n     * a new array.</p>\n     *\n     * <pre>\n     * ArrayUtils.addAll(null, null)     = null\n     * ArrayUtils.addAll(array1, null)   = cloned copy of array1\n     * ArrayUtils.addAll(null, array2)   = cloned copy of array2\n     * ArrayUtils.addAll([], [])         = []\n     * ArrayUtils.addAll([null], [null]) = [null, null]\n     * ArrayUtils.addAll(["a", "b", "c"], ["1", "2", "3"]) = ["a", "b", "c", "1", "2", "3"]\n     * </pre>\n     *\n     * @param array1  the first array whose elements are added to the new array, may be <code>null</code>\n     * @param array2  the second array whose elements are added to the new array, may be <code>null</code>\n     * @return The new array, <code>null</code> if both arrays are <code>null</code>.\n     *      The type of the new array is the type of the first array,\n     *      unless the first array is null, in which case the type is the same as the second array.\n     * @since 2.1\n     */\n    @SuppressWarnings("unchecked")\n    public static <T> T[] addAll(T[] array1, T... array2) {\n        if (array1 == null) {\n            return clone(array2);\n        } else if (array2 == null) {\n            return clone(array1);\n        }\n        final Class<?> type1 = array1.getClass().getComponentType();\n        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);\n        System.arraycopy(array1, 0, joinedArray, 0, array1.length);', 'aftercode': '            // Check if problem is incompatible types\n        return joinedArray;\n    }\n\n    /**\n     * <p>Adds all the elements of the given arrays into a new array.</p>\n     * <p>The new array contains all of the element of <code>array1</code> followed\n     * by all of the elements <code>array2</code>. When an array is returned, it is always\n     * a new array.</p>\n     *\n     * <pre>\n     * ArrayUtils.addAll(array1, null)   = cloned copy of array1\n     * ArrayUtils.addAll(null, array2)   = cloned copy of array2\n     * ArrayUtils.addAll([], [])         = []\n     * </pre>\n     *\n     * @param array1  the first array whose elements are added to the new array.\n     * @param array2  the second array whose elements are added to the new array.\n     * @return The new boolean[] array.\n     * @since 2.1\n     */\n    public static boolean[] addAll(boolean[] array1, boolean... array2) {\n        if (array1 == null) {\n            return clone(array2);\n        } else if (array2 == null) {\n            return clone(array1);\n        }\n        boolean[] joinedArray = new boolean[array1.length + array2.length];\n        System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n        return joinedArray;\n    }\n\n    /**\n     * <p>Adds all the elements of the given arrays into a new array.</p>\n     * <p>The new array contains all of the element of <code>array1</code> followed\n     * by all of the elements <code>array2</code>. When an array is returned, it is always\n     * a new array.</p>\n     *\n     * <pre>\n     * ArrayUtils.addAll(array1, null)   = cloned copy of array1\n     * ArrayUtils.addAll(null, array2)   = cloned copy of array2\n     * ArrayUtils.addAll([], [])         = []\n     * </pre>\n     *\n     * @param array1  the first array whose elements are added to the new array.\n     * @param array2  the second array whose elements are added to the new array.\n     * @return The new char[] array.\n     * @since 2.1\n     */\n    public static char[] addAll(char[] array1, char... array2) {\n        if (array1 == null) {\n            return clone(array2);\n        } else if (array2 == null) {\n            return clone(array1);\n        }\n        char[] joinedArray = new char[array1.length + array2.length];\n        System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n        return joinedArray;\n    }\n\n    /**\n     * <p>Adds all the elements of the given arrays into a new array.</p>\n     * <p>The new array contains all of the element of <code>array1</code> followed\n     * by all of the elements <code>array2</code>. When an array is returned, it is always\n     * a new array.</p>\n     *\n     * <pre>\n     * ArrayUtils.addAll(array1, null)   = cloned copy of array1\n     * ArrayUtils.addAll(null, array2)   = cloned copy of array2\n     * ArrayUtils.addAll([], [])         = []\n     * </pre>\n     *\n     * @param array1  the first array whose elements are added to the new array.\n     * @param array2  the second array whose elements are added to the new array.\n     * @return The new byte[] array.\n     * @since 2.1\n     */\n    public static byte[] addAll(byte[] array1, byte... array2) {\n        if (array1 == null) {\n            return clone(array2);\n        } else if (array2 == null) {\n            return clone(array1);\n        }\n        byte[] joinedArray = new byte[array1.length + array2.length];\n        System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n        return joinedArray;\n    }\n\n    /**\n     * <p>Adds all the elements of the given arrays into a new array.</p>\n     * <p>The new array contains all of the element of <code>array1</code> followed\n     * by all of the elements <code>array2</code>. When an array is returned, it is always\n     * a new array.</p>\n     *\n     * <pre>\n     * ArrayUtils.addAll(array1, null)   = cloned copy of array1\n     * ArrayUtils.addAll(null, array2)   = cloned copy of array2\n     * ArrayUtils.addAll([], [])         = []\n     * </pre>\n     *\n     * @param array1  the first array whose elements are added to the new array.\n     * @param array2  the second array whose elements are added to the new array.\n     * @return The new short[] array.\n     * @since 2.1\n     */\n    public static short[] addAll(short[] array1, short... array2) {\n        if (array1 == null) {\n            return clone(array2);\n        } else if (array2 == null) {\n            return clone(array1);\n        }\n        short[] joinedArray = new short[array1.length + array2.length];\n        System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n        return joinedArray;\n    }\n\n    /**\n     * <p>Adds all the elements of the given arrays into a new array.</p>\n     * <p>The new array contains all of the element of <code>array1</code> followed\n     * by all of the elements <code>array2</code>. When an array is returned, it is always\n     * a new array.</p>\n     *\n     * <pre>\n     * ArrayUtils.addAll(array1, null)   = cloned copy of array1\n     * ArrayUtils.addAll(null, array2)   = cloned copy of array2\n     * ArrayUtils.addAll([], [])         = []\n     * </pre>\n     *\n     * @param array1  the first array whose elements are added to the new array.\n     * @param array2  the second array whose elements are added to the new array.\n     * @return The new int[] array.\n     * @since 2.1\n     */\n    public static int[] addAll(int[] array1, int... array2) {\n        if (array1 == null) {\n            return clone(array2);\n        } else if (array2 == null) {\n            return clone(array1);\n        }\n        int[] joinedArray = new int[array1.length + array2.length];\n        System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n        return joinedArray;\n    }\n\n    /**\n     * <p>Adds all the elements of the given arrays into a new array.</p>\n     * <p>The new array contains all of the element of <code>array1</code> followed\n     * by all of the elements <code>array2</code>. When an array is returned, it is always\n     * a new array.</p>\n     *\n     * <pre>\n     * ArrayUtils.addAll(array1, null)   = cloned copy of array1\n     * ArrayUtils.addAll(null, array2)   = cloned copy of array2\n     * ArrayUtils.addAll([], [])         = []\n     * </pre>\n     *\n     * @param array1  the first array whose elements are added to the new array.\n     * @param array2  the second array whose elements are added to the new array.\n     * @return The new long[] array.\n     * @since 2.1\n     */\n    public static long[] addAll(long[] array1, long... array2) {\n        if (array1 == null) {\n            return clone(array2);\n        } else if (array2 == null) {\n            return clone(array1);\n        }\n        long[] joinedArray = new long[array1.length + array2.length];\n        System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n        return joinedArray;\n    }\n\n    /**\n     * <p>Adds all the elements of the given arrays into a new array.</p>\n     * <p>The new array contains all of the element of <code>array1</code> followed\n     * by all of the elements <code>array2</code>. When an array is returned, it is always\n     * a new array.</p>\n     *\n     * <pre>\n     * ArrayUtils.addAll(array1, null)   = cloned copy of array1\n     * ArrayUtils.addAll(null, array2)   = cloned copy of array2\n     * ArrayUtils.addAll([], [])         = []\n     * </pre>\n     *\n     * @param array1  the first array whose elements are added to the new array.\n     * @param array2  the second array whose elements are added to the new array.\n     * @return The new float[] array.\n     * @since 2.1\n     */\n    public static float[] addAll(float[] array1, float... array2) {\n        if (array1 == null) {\n            return clone(array2);\n        } else if (array2 == null) {\n            return clone(array1);\n        }\n        float[] joinedArray = new float[array1.length + array2.length];\n        System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n        return joinedArray;\n    }\n\n    /**\n     * <p>Adds all the elements of the given arrays into a new array.</p>\n     * <p>The new array contains all of the element of <code>array1</code> followed\n     * by all of the elements <code>array2</code>. When an array is returned, it is always\n     * a new array.</p>\n     *\n     * <pre>\n     * ArrayUtils.addAll(array1, null)   = cloned copy of array1\n     * ArrayUtils.addAll(null, array2)   = cloned copy of array2\n     * ArrayUtils.addAll([], [])         = []\n     * </pre>\n     *\n     * @param array1  the first array whose elements are added to the new array.\n     * @param array2  the second array whose elements are added to the new array.\n     * @return The new double[] array.\n     * @since 2.1\n     */\n    public static double[] addAll(double[] array1, double... array2) {\n        if (array1 == null) {\n            return clone(array2);\n        } else if (array2 == null) {\n            return clone(array1);\n        }\n        double[] joinedArray = new double[array1.length + array2.length];\n        System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n        return joinedArray;\n    }\n\n    /**\n     * <p>Copies the given array and adds the given element at the end of the new array.</p>\n     *\n     * <p>The new array contains the same elements of the input\n     * array plus the given element in the last position. The component type of\n     * the new array is the same as that of the input array.</p>\n     *\n     * <p>If the input array is <code>null</code>, a new one element array is returned\n     *  whose component type is the same as the element, unless the element itself is null,\n     *  in which case the return type is Object[]</p>\n     *\n     * <pre>\n     * ArrayUtils.add(null, null)      = [null]\n     * ArrayUtils.add(null, "a")       = ["a"]\n     * ArrayUtils.add(["a"], null)     = ["a", null]\n     * ArrayUtils.add(["a"], "b")      = ["a", "b"]\n     * ArrayUtils.add(["a", "b"], "c") = ["a", "b", "c"]\n     * </pre>\n     *\n     * @param array  the array to "add" the element to, may be <code>null</code>\n     * @param element  the object to add\n     * @return A new array containing the existing elements plus the new element\n     * @since 2.1\n     */\n    @SuppressWarnings("unchecked")\n    public static <T> T[] add(T[] array, T element) {\n        Class<?> type = array != null ? array.getClass() : (element != null ? element.getClass() : Object.class);\n        T[] newArray = (T[]) copyArrayGrow1(array, type);\n        newArray[newArray.length - 1] = element;\n        return newArray;\n    }\n\n    /**\n     * <p>Copies the given array and adds the given element at the end of the new array.</p>\n     *\n     * <p>The new array contains the same elements of the input\n     * array plus the given element in the last position. The component type of\n     * the new array is the same as that of the input array.</p>\n     *\n     * <p>If the input array is <code>null</code>, a new one element array is returned\n     *  whose component type is the same as the element.</p>\n     *\n     * <pre>\n     * ArrayUtils.add(null, true)          = [true]\n     * ArrayUtils.add([true], false)       = [true, false]\n     * ArrayUtils.add([true, false], true) = [true, false, true]\n     * </pre>\n     *\n     * @param array  the array to copy and add the element to, may be <code>null</code>\n     * @param element  the object to add at the last index of the new array\n     * @return A new array containing the existing elements plus the new element\n     * @since 2.1\n     */\n    public static boolean[] add(boolean[] array, boolean element) {\n        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);\n        newArray[newArray.length - 1] = element;\n        return newArray;\n    }\n\n    /**\n     * <p>Copies the given array and adds the given element at the end of the new array.</p>\n     *\n     * <p>The new array contains the same elements of the input\n     * array plus the given element in the last position. The component type of\n     * the new array is the same as that of the input array.</p>\n     *\n     * <p>If the input array is <code>null</code>, a new one element array is returned\n     *  whose component type is the same as the element.</p>\n     *\n     * <pre>\n     * ArrayUtils.add(null, 0)   = [0]\n     * ArrayUtils.add([1], 0)    = [1, 0]\n     * ArrayUtils.add([1, 0], 1) = [1, 0, 1]\n     * </pre>\n     *\n     * @param array  the array to copy and add the element to, may be <code>null</code>\n     * @param element  the object to add at the last index of the new array\n     * @return A new array containing the existing elements plus the new element\n     * @since 2.1\n     */\n    public static byte[] add(byte[] array, byte element) {\n        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);\n        newArray[newArray.length - 1] = element;\n        return newArray;\n    }\n\n    /**\n     * <p>Copies the given array and adds the given element at the end of the new array.</p>\n     *\n     * <p>The new array contains the same elements of the input\n     * array plus the given element in the last position. The component type of\n     * the new array is the same as that of the input array.</p>\n     *\n     * <p>If the input array is <code>null</code>, a new one element array is returned\n     *  whose component type is the same as the element.</p>\n     *\n     * <pre>\n     * ArrayUtils.add(null, \'0\')       = [\'0\']\n     * ArrayUtils.add([\'1\'], \'0\')      = [\'1\', \'0\']\n     * ArrayUtils.add([\'1\', \'0\'], \'1\') = [\'1\', \'0\', \'1\']\n     * </pre>\n     *\n     * @param array  the array to copy and add the element to, may be <code>null</code>\n     * @param element  the object to add at the last index of the new array\n     * @return A new array containing the existing elements plus the new element\n     * @since 2.1\n     */\n    public static char[] add(char[] array, char element) {\n        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);\n        newArray[newArray.length - 1] = element;\n        return newArray;\n    }\n\n    /**\n     * <p>Copies the given array and adds the given element at the end of the new array.</p>\n     *\n     * <p>The new array contains the same elements of the input\n     * array plus the given element in the last position. The component type of\n     * the new array is the same as that of the input array.</p>\n     *\n     * <p>If the input array is <code>null</code>, a new one element array is returned\n     *  whose component type is the same as the element.</p>\n     *\n     * <pre>\n     * ArrayUtils.add(null, 0)   = [0]\n     * ArrayUtils.add([1], 0)    = [1, 0]\n     * ArrayUtils.add([1, 0], 1) = [1, 0, 1]\n     * </pre>\n     *\n     * @param array  the array to copy and add the element to, may be <code>null</code>\n     * @param element  the object to add at the last index of the new array\n     * @return A new array containing the existing elements plus the new element\n     * @since 2.1\n     */\n    public static double[] add(double[] array, double element) {\n        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);\n        newArray[newArray.length - 1] = element;\n        return newArray;\n    }\n\n    /**\n     * <p>Copies the given array and adds the given element at the end of the new array.</p>\n     *\n     * <p>The new array contains the same elements of the input\n     * array plus the given element in the last position. The component type of\n     * the new array is the same as that of the input array.</p>\n     *\n     * <p>If the input array is <code>null</code>, a new one element array is returned\n     *  whose component type is the same as the element.</p>\n     *\n     * <pre>\n     * ArrayUtils.add(null, 0)   = [0]\n     * ArrayUtils.add([1], 0)    = [1, 0]\n     * ArrayUtils.add([1, 0], 1) = [1, 0, 1]\n     * </pre>\n     *\n     * @param array  the array to copy and add the element to, may be <code>null</code>\n     * @param element  the object to add at the last index of the new array\n     * @return A new array containing the existing elements plus the new element\n     * @since 2.1\n     */\n    public static float[] add(float[] array, float element) {\n        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);\n        newArray[newArray.length - 1] = element;\n        return newArray;\n    }\n\n    /**\n     * <p>Copies the given array and adds the given element at the end of the new array.</p>\n     *\n     * <p>The new array contains the same elements of the input\n     * array plus the given element in the last position. The component type of\n     * the new array is the same as that of the input array.</p>\n     *\n     * <p>If the input array is <code>null</code>, a new one element array is returned\n     *  whose component type is the same as the element.</p>\n     *\n     * <pre>\n     * ArrayUtils.add(null, 0)   = [0]\n     * ArrayUtils.add([1], 0)    = [1, 0]\n     * ArrayUtils.add([1, 0], 1) = [1, 0, 1]\n     * </pre>\n     *\n     * @param array  the array to copy and add the element to, may be <code>null</code>\n     * @param element  the object to add at the last index of the new array\n     * @return A new array containing the existing elements plus the new element\n     * @since 2.1\n     */\n    public static int[] add(int[] array, int element) {\n        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);\n        newArray[newArray.length - 1] = element;\n        return newArray;\n    }\n\n    /**\n     * <p>Copies the given array and adds the given element at the end of the new array.</p>\n     *\n     * <p>The new array contains the same elements of the input\n     * array plus the given element in the last position. The component type of\n     * the new array is the same as that of the input array.</p>\n     *\n     * <p>If the input array is <code>null</code>, a new one element array is returned\n     *  whose component type is the same as the element.</p>\n     *\n     * <pre>\n     * ArrayUtils.add(null, 0)   = [0]\n     * ArrayUtils.add([1], 0)    = [1, 0]\n     * ArrayUtils.add([1, 0], 1) = [1, 0, 1]\n     * </pre>\n     *\n     * @param array  the array to copy and add the element to, may be <code>null</code>\n     * @param element  the object to add at the last index of the new array\n     * @return A new array containing the existing elements plus the new element\n     * @since 2.1\n     */\n    public static long[] add(long[] array, long element) {\n        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);\n        newArray[newArray.length - 1] = element;\n        return newArray;\n    }\n\n    /**\n     * <p>Copies the given array and adds the given element at the end of the new array.</p>\n     *\n     * <p>The new array contains the same elements of the input\n     * array plus the given element in the last position. The component type of\n     * the new array is the same as that of the input array.</p>\n     *\n     * <p>If the input array is <code>null</code>, a new one element array is returned\n     *  whose component type is the same as the element.</p>\n     *\n     * <pre>\n     * ArrayUtils.add(null, 0)   = [0]\n     * ArrayUtils.add([1], 0)    = [1, 0]\n     * ArrayUtils.add([1, 0], 1) = [1, 0, 1]\n     * </pre>\n     *\n     * @param array  the array to copy and add the element to, may be <code>null</code>\n     * @param element  the object to add at the last index of the new array\n     * @return A new array containing the existing elements plus the new element\n     * @since 2.1\n     */\n    public static short[] add(short[] array, short element) {\n        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);\n        newArray[newArray.length - 1] = element;\n        return newArray;\n    }\n\n    /**\n     * Returns a copy of the given array of size 1 greater than the argument.\n     * The last value of the array is left to the default value.\n     *\n     * @param array The array to copy, must not be <code>null</code>.\n     * @param newArrayComponentType If <code>array</code> is <code>null</code>, create a\n     * size 1 array of this type.\n     * @return A new copy of the array of size 1 greater than the input.\n     */\n    private static Object copyArrayGrow1(Object array, Class<?> newArrayComponentType) {\n        if (array != null) {\n            int arrayLength = Array.getLength(array);\n            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);\n            System.arraycopy(array, 0, newArray, 0, arrayLength);\n            return newArray;\n        }\n        return Array.newInstance(newArrayComponentType, 1);\n    }\n\n    /**\n     * <p>Inserts the specified element at the specified position in the array.\n     * Shifts the element currently at that position (if any) and any subsequent\n     * elements to the right (adds one to their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array plus the given element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, a new one element array is returned\n     *  whose component type is the same as the element.</p>\n     *\n     * <pre>\n     * ArrayUtils.add(null, 0, null)      = [null]\n     * ArrayUtils.add(null, 0, "a")       = ["a"]\n     * ArrayUtils.add(["a"], 1, null)     = ["a", null]\n     * ArrayUtils.add(["a"], 1, "b")      = ["a", "b"]\n     * ArrayUtils.add(["a", "b"], 3, "c") = ["a", "b", "c"]\n     * </pre>\n     *\n     * @param array  the array to add the element to, may be <code>null</code>\n     * @param index  the position of the new object\n     * @param element  the object to add\n     * @return A new array containing the existing elements and the new element\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index > array.length).\n     */\n    @SuppressWarnings("unchecked")\n    public static <T> T[] add(T[] array, int index, T element) {\n        Class<?> clss = null;\n        if (array != null) {\n            clss = array.getClass().getComponentType();\n        } else if (element != null) {\n            clss = element.getClass();\n        } else {\n            return (T[]) new Object[] { null };\n        }\n        return (T[]) add(array, index, element, clss);\n    }\n\n    /**\n     * <p>Inserts the specified element at the specified position in the array.\n     * Shifts the element currently at that position (if any) and any subsequent\n     * elements to the right (adds one to their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array plus the given element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, a new one element array is returned\n     *  whose component type is the same as the element.</p>\n     *\n     * <pre>\n     * ArrayUtils.add(null, 0, true)          = [true]\n     * ArrayUtils.add([true], 0, false)       = [false, true]\n     * ArrayUtils.add([false], 1, true)       = [false, true]\n     * ArrayUtils.add([true, false], 1, true) = [true, true, false]\n     * </pre>\n     *\n     * @param array  the array to add the element to, may be <code>null</code>\n     * @param index  the position of the new object\n     * @param element  the object to add\n     * @return A new array containing the existing elements and the new element\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index > array.length).\n     */\n    public static boolean[] add(boolean[] array, int index, boolean element) {\n        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);\n    }\n\n    /**\n     * <p>Inserts the specified element at the specified position in the array.\n     * Shifts the element currently at that position (if any) and any subsequent\n     * elements to the right (adds one to their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array plus the given element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, a new one element array is returned\n     *  whose component type is the same as the element.</p>\n     *\n     * <pre>\n     * ArrayUtils.add(null, 0, \'a\')            = [\'a\']\n     * ArrayUtils.add([\'a\'], 0, \'b\')           = [\'b\', \'a\']\n     * ArrayUtils.add([\'a\', \'b\'], 0, \'c\')      = [\'c\', \'a\', \'b\']\n     * ArrayUtils.add([\'a\', \'b\'], 1, \'k\')      = [\'a\', \'k\', \'b\']\n     * ArrayUtils.add([\'a\', \'b\', \'c\'], 1, \'t\') = [\'a\', \'t\', \'b\', \'c\']\n     * </pre>\n     *\n     * @param array  the array to add the element to, may be <code>null</code>\n     * @param index  the position of the new object\n     * @param element  the object to add\n     * @return A new array containing the existing elements and the new element\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index > array.length).\n     */\n    public static char[] add(char[] array, int index, char element) {\n        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);\n    }\n\n    /**\n     * <p>Inserts the specified element at the specified position in the array.\n     * Shifts the element currently at that position (if any) and any subsequent\n     * elements to the right (adds one to their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array plus the given element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, a new one element array is returned\n     *  whose component type is the same as the element.</p>\n     *\n     * <pre>\n     * ArrayUtils.add([1], 0, 2)         = [2, 1]\n     * ArrayUtils.add([2, 6], 2, 3)      = [2, 6, 3]\n     * ArrayUtils.add([2, 6], 0, 1)      = [1, 2, 6]\n     * ArrayUtils.add([2, 6, 3], 2, 1)   = [2, 6, 1, 3]\n     * </pre>\n     *\n     * @param array  the array to add the element to, may be <code>null</code>\n     * @param index  the position of the new object\n     * @param element  the object to add\n     * @return A new array containing the existing elements and the new element\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index > array.length).\n     */\n    public static byte[] add(byte[] array, int index, byte element) {\n        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);\n    }\n\n    /**\n     * <p>Inserts the specified element at the specified position in the array.\n     * Shifts the element currently at that position (if any) and any subsequent\n     * elements to the right (adds one to their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array plus the given element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, a new one element array is returned\n     *  whose component type is the same as the element.</p>\n     *\n     * <pre>\n     * ArrayUtils.add([1], 0, 2)         = [2, 1]\n     * ArrayUtils.add([2, 6], 2, 10)     = [2, 6, 10]\n     * ArrayUtils.add([2, 6], 0, -4)     = [-4, 2, 6]\n     * ArrayUtils.add([2, 6, 3], 2, 1)   = [2, 6, 1, 3]\n     * </pre>\n     *\n     * @param array  the array to add the element to, may be <code>null</code>\n     * @param index  the position of the new object\n     * @param element  the object to add\n     * @return A new array containing the existing elements and the new element\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index > array.length).\n     */\n    public static short[] add(short[] array, int index, short element) {\n        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);\n    }\n\n    /**\n     * <p>Inserts the specified element at the specified position in the array.\n     * Shifts the element currently at that position (if any) and any subsequent\n     * elements to the right (adds one to their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array plus the given element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, a new one element array is returned\n     *  whose component type is the same as the element.</p>\n     *\n     * <pre>\n     * ArrayUtils.add([1], 0, 2)         = [2, 1]\n     * ArrayUtils.add([2, 6], 2, 10)     = [2, 6, 10]\n     * ArrayUtils.add([2, 6], 0, -4)     = [-4, 2, 6]\n     * ArrayUtils.add([2, 6, 3], 2, 1)   = [2, 6, 1, 3]\n     * </pre>\n     *\n     * @param array  the array to add the element to, may be <code>null</code>\n     * @param index  the position of the new object\n     * @param element  the object to add\n     * @return A new array containing the existing elements and the new element\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index > array.length).\n     */\n    public static int[] add(int[] array, int index, int element) {\n        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);\n    }\n\n    /**\n     * <p>Inserts the specified element at the specified position in the array.\n     * Shifts the element currently at that position (if any) and any subsequent\n     * elements to the right (adds one to their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array plus the given element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, a new one element array is returned\n     *  whose component type is the same as the element.</p>\n     *\n     * <pre>\n     * ArrayUtils.add([1L], 0, 2L)           = [2L, 1L]\n     * ArrayUtils.add([2L, 6L], 2, 10L)      = [2L, 6L, 10L]\n     * ArrayUtils.add([2L, 6L], 0, -4L)      = [-4L, 2L, 6L]\n     * ArrayUtils.add([2L, 6L, 3L], 2, 1L)   = [2L, 6L, 1L, 3L]\n     * </pre>\n     *\n     * @param array  the array to add the element to, may be <code>null</code>\n     * @param index  the position of the new object\n     * @param element  the object to add\n     * @return A new array containing the existing elements and the new element\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index > array.length).\n     */\n    public static long[] add(long[] array, int index, long element) {\n        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);\n    }\n\n    /**\n     * <p>Inserts the specified element at the specified position in the array.\n     * Shifts the element currently at that position (if any) and any subsequent\n     * elements to the right (adds one to their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array plus the given element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, a new one element array is returned\n     *  whose component type is the same as the element.</p>\n     *\n     * <pre>\n     * ArrayUtils.add([1.1f], 0, 2.2f)               = [2.2f, 1.1f]\n     * ArrayUtils.add([2.3f, 6.4f], 2, 10.5f)        = [2.3f, 6.4f, 10.5f]\n     * ArrayUtils.add([2.6f, 6.7f], 0, -4.8f)        = [-4.8f, 2.6f, 6.7f]\n     * ArrayUtils.add([2.9f, 6.0f, 0.3f], 2, 1.0f)   = [2.9f, 6.0f, 1.0f, 0.3f]\n     * </pre>\n     *\n     * @param array  the array to add the element to, may be <code>null</code>\n     * @param index  the position of the new object\n     * @param element  the object to add\n     * @return A new array containing the existing elements and the new element\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index > array.length).\n     */\n    public static float[] add(float[] array, int index, float element) {\n        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);\n    }\n\n    /**\n     * <p>Inserts the specified element at the specified position in the array.\n     * Shifts the element currently at that position (if any) and any subsequent\n     * elements to the right (adds one to their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array plus the given element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, a new one element array is returned\n     *  whose component type is the same as the element.</p>\n     *\n     * <pre>\n     * ArrayUtils.add([1.1], 0, 2.2)              = [2.2, 1.1]\n     * ArrayUtils.add([2.3, 6.4], 2, 10.5)        = [2.3, 6.4, 10.5]\n     * ArrayUtils.add([2.6, 6.7], 0, -4.8)        = [-4.8, 2.6, 6.7]\n     * ArrayUtils.add([2.9, 6.0, 0.3], 2, 1.0)    = [2.9, 6.0, 1.0, 0.3]\n     * </pre>\n     *\n     * @param array  the array to add the element to, may be <code>null</code>\n     * @param index  the position of the new object\n     * @param element  the object to add\n     * @return A new array containing the existing elements and the new element\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index > array.length).\n     */\n    public static double[] add(double[] array, int index, double element) {\n        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);\n    }\n\n    /**\n     * Underlying implementation of add(array, index, element) methods.\n     * The last parameter is the class, which may not equal element.getClass\n     * for primitives.\n     *\n     * @param array  the array to add the element to, may be <code>null</code>\n     * @param index  the position of the new object\n     * @param element  the object to add\n     * @param clss the type of the element being added\n     * @return A new array containing the existing elements and the new element\n     */\n    private static Object add(Object array, int index, Object element, Class<?> clss) {\n        if (array == null) {\n            if (index != 0) {\n                throw new IndexOutOfBoundsException("Index: " + index + ", Length: 0");\n            }\n            Object joinedArray = Array.newInstance(clss, 1);\n            Array.set(joinedArray, 0, element);\n            return joinedArray;\n        }\n        int length = Array.getLength(array);\n        if (index > length || index < 0) {\n            throw new IndexOutOfBoundsException("Index: " + index + ", Length: " + length);\n        }\n        Object result = Array.newInstance(clss, length + 1);\n        System.arraycopy(array, 0, result, 0, index);\n        Array.set(result, index, element);\n        if (index < length) {\n            System.arraycopy(array, index, result, index + 1, length - index);\n        }\n        return result;\n    }\n\n    /**\n     * <p>Removes the element at the specified position from the specified array.\n     * All subsequent elements are shifted to the left (substracts one from\n     * their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, an IndexOutOfBoundsException\n     * will be thrown, because in that case no valid index can be specified.</p>\n     *\n     * <pre>\n     * ArrayUtils.remove(["a"], 0)           = []\n     * ArrayUtils.remove(["a", "b"], 0)      = ["b"]\n     * ArrayUtils.remove(["a", "b"], 1)      = ["a"]\n     * ArrayUtils.remove(["a", "b", "c"], 1) = ["a", "c"]\n     * </pre>\n     *\n     * @param array  the array to remove the element from, may not be <code>null</code>\n     * @param index  the position of the element to be removed\n     * @return A new array containing the existing elements except the element\n     *         at the specified position.\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index >= array.length), or if the array is <code>null</code>.\n     * @since 2.1\n     */\n    @SuppressWarnings("unchecked")\n    public static <T> T[] remove(T[] array, int index) {\n        return (T[]) remove((Object) array, index);\n    }\n\n    /**\n     * <p>Removes the first occurrence of the specified element from the\n     * specified array. All subsequent elements are shifted to the left\n     * (substracts one from their indices). If the array doesn\'t contains\n     * such an element, no elements are removed from the array.</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the first occurrence of the specified element. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <pre>\n     * ArrayUtils.removeElement(null, "a")            = null\n     * ArrayUtils.removeElement([], "a")              = []\n     * ArrayUtils.removeElement(["a"], "b")           = ["a"]\n     * ArrayUtils.removeElement(["a", "b"], "a")      = ["b"]\n     * ArrayUtils.removeElement(["a", "b", "a"], "a") = ["b", "a"]\n     * </pre>\n     *\n     * @param array  the array to remove the element from, may be <code>null</code>\n     * @param element  the element to be removed\n     * @return A new array containing the existing elements except the first\n     *         occurrence of the specified element.\n     * @since 2.1\n     */\n    public static <T> T[] removeElement(T[] array, Object element) {\n        int index = indexOf(array, element);\n        if (index == INDEX_NOT_FOUND) {\n            return clone(array);\n        }\n        return remove(array, index);\n    }\n\n    /**\n     * <p>Removes the element at the specified position from the specified array.\n     * All subsequent elements are shifted to the left (substracts one from\n     * their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, an IndexOutOfBoundsException\n     * will be thrown, because in that case no valid index can be specified.</p>\n     *\n     * <pre>\n     * ArrayUtils.remove([true], 0)              = []\n     * ArrayUtils.remove([true, false], 0)       = [false]\n     * ArrayUtils.remove([true, false], 1)       = [true]\n     * ArrayUtils.remove([true, true, false], 1) = [true, false]\n     * </pre>\n     *\n     * @param array  the array to remove the element from, may not be <code>null</code>\n     * @param index  the position of the element to be removed\n     * @return A new array containing the existing elements except the element\n     *         at the specified position.\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index >= array.length), or if the array is <code>null</code>.\n     * @since 2.1\n     */\n    public static boolean[] remove(boolean[] array, int index) {\n        return (boolean[]) remove((Object) array, index);\n    }\n\n    /**\n     * <p>Removes the first occurrence of the specified element from the\n     * specified array. All subsequent elements are shifted to the left\n     * (substracts one from their indices). If the array doesn\'t contains\n     * such an element, no elements are removed from the array.</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the first occurrence of the specified element. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <pre>\n     * ArrayUtils.removeElement(null, true)                = null\n     * ArrayUtils.removeElement([], true)                  = []\n     * ArrayUtils.removeElement([true], false)             = [true]\n     * ArrayUtils.removeElement([true, false], false)      = [true]\n     * ArrayUtils.removeElement([true, false, true], true) = [false, true]\n     * </pre>\n     *\n     * @param array  the array to remove the element from, may be <code>null</code>\n     * @param element  the element to be removed\n     * @return A new array containing the existing elements except the first\n     *         occurrence of the specified element.\n     * @since 2.1\n     */\n    public static boolean[] removeElement(boolean[] array, boolean element) {\n        int index = indexOf(array, element);\n        if (index == INDEX_NOT_FOUND) {\n            return clone(array);\n        }\n        return remove(array, index);\n    }\n\n    /**\n     * <p>Removes the element at the specified position from the specified array.\n     * All subsequent elements are shifted to the left (substracts one from\n     * their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, an IndexOutOfBoundsException\n     * will be thrown, because in that case no valid index can be specified.</p>\n     *\n     * <pre>\n     * ArrayUtils.remove([1], 0)          = []\n     * ArrayUtils.remove([1, 0], 0)       = [0]\n     * ArrayUtils.remove([1, 0], 1)       = [1]\n     * ArrayUtils.remove([1, 0, 1], 1)    = [1, 1]\n     * </pre>\n     *\n     * @param array  the array to remove the element from, may not be <code>null</code>\n     * @param index  the position of the element to be removed\n     * @return A new array containing the existing elements except the element\n     *         at the specified position.\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index >= array.length), or if the array is <code>null</code>.\n     * @since 2.1\n     */\n    public static byte[] remove(byte[] array, int index) {\n        return (byte[]) remove((Object) array, index);\n    }\n\n    /**\n     * <p>Removes the first occurrence of the specified element from the\n     * specified array. All subsequent elements are shifted to the left\n     * (substracts one from their indices). If the array doesn\'t contains\n     * such an element, no elements are removed from the array.</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the first occurrence of the specified element. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <pre>\n     * ArrayUtils.removeElement(null, 1)        = null\n     * ArrayUtils.removeElement([], 1)          = []\n     * ArrayUtils.removeElement([1], 0)         = [1]\n     * ArrayUtils.removeElement([1, 0], 0)      = [1]\n     * ArrayUtils.removeElement([1, 0, 1], 1)   = [0, 1]\n     * </pre>\n     *\n     * @param array  the array to remove the element from, may be <code>null</code>\n     * @param element  the element to be removed\n     * @return A new array containing the existing elements except the first\n     *         occurrence of the specified element.\n     * @since 2.1\n     */\n    public static byte[] removeElement(byte[] array, byte element) {\n        int index = indexOf(array, element);\n        if (index == INDEX_NOT_FOUND) {\n            return clone(array);\n        }\n        return remove(array, index);\n    }\n\n    /**\n     * <p>Removes the element at the specified position from the specified array.\n     * All subsequent elements are shifted to the left (substracts one from\n     * their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, an IndexOutOfBoundsException\n     * will be thrown, because in that case no valid index can be specified.</p>\n     *\n     * <pre>\n     * ArrayUtils.remove([\'a\'], 0)           = []\n     * ArrayUtils.remove([\'a\', \'b\'], 0)      = [\'b\']\n     * ArrayUtils.remove([\'a\', \'b\'], 1)      = [\'a\']\n     * ArrayUtils.remove([\'a\', \'b\', \'c\'], 1) = [\'a\', \'c\']\n     * </pre>\n     *\n     * @param array  the array to remove the element from, may not be <code>null</code>\n     * @param index  the position of the element to be removed\n     * @return A new array containing the existing elements except the element\n     *         at the specified position.\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index >= array.length), or if the array is <code>null</code>.\n     * @since 2.1\n     */\n    public static char[] remove(char[] array, int index) {\n        return (char[]) remove((Object) array, index);\n    }\n\n    /**\n     * <p>Removes the first occurrence of the specified element from the\n     * specified array. All subsequent elements are shifted to the left\n     * (substracts one from their indices). If the array doesn\'t contains\n     * such an element, no elements are removed from the array.</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the first occurrence of the specified element. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <pre>\n     * ArrayUtils.removeElement(null, \'a\')            = null\n     * ArrayUtils.removeElement([], \'a\')              = []\n     * ArrayUtils.removeElement([\'a\'], \'b\')           = [\'a\']\n     * ArrayUtils.removeElement([\'a\', \'b\'], \'a\')      = [\'b\']\n     * ArrayUtils.removeElement([\'a\', \'b\', \'a\'], \'a\') = [\'b\', \'a\']\n     * </pre>\n     *\n     * @param array  the array to remove the element from, may be <code>null</code>\n     * @param element  the element to be removed\n     * @return A new array containing the existing elements except the first\n     *         occurrence of the specified element.\n     * @since 2.1\n     */\n    public static char[] removeElement(char[] array, char element) {\n        int index = indexOf(array, element);\n        if (index == INDEX_NOT_FOUND) {\n            return clone(array);\n        }\n        return remove(array, index);\n    }\n\n    /**\n     * <p>Removes the element at the specified position from the specified array.\n     * All subsequent elements are shifted to the left (substracts one from\n     * their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, an IndexOutOfBoundsException\n     * will be thrown, because in that case no valid index can be specified.</p>\n     *\n     * <pre>\n     * ArrayUtils.remove([1.1], 0)           = []\n     * ArrayUtils.remove([2.5, 6.0], 0)      = [6.0]\n     * ArrayUtils.remove([2.5, 6.0], 1)      = [2.5]\n     * ArrayUtils.remove([2.5, 6.0, 3.8], 1) = [2.5, 3.8]\n     * </pre>\n     *\n     * @param array  the array to remove the element from, may not be <code>null</code>\n     * @param index  the position of the element to be removed\n     * @return A new array containing the existing elements except the element\n     *         at the specified position.\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index >= array.length), or if the array is <code>null</code>.\n     * @since 2.1\n     */\n    public static double[] remove(double[] array, int index) {\n        return (double[]) remove((Object) array, index);\n    }\n\n    /**\n     * <p>Removes the first occurrence of the specified element from the\n     * specified array. All subsequent elements are shifted to the left\n     * (substracts one from their indices). If the array doesn\'t contains\n     * such an element, no elements are removed from the array.</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the first occurrence of the specified element. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <pre>\n     * ArrayUtils.removeElement(null, 1.1)            = null\n     * ArrayUtils.removeElement([], 1.1)              = []\n     * ArrayUtils.removeElement([1.1], 1.2)           = [1.1]\n     * ArrayUtils.removeElement([1.1, 2.3], 1.1)      = [2.3]\n     * ArrayUtils.removeElement([1.1, 2.3, 1.1], 1.1) = [2.3, 1.1]\n     * </pre>\n     *\n     * @param array  the array to remove the element from, may be <code>null</code>\n     * @param element  the element to be removed\n     * @return A new array containing the existing elements except the first\n     *         occurrence of the specified element.\n     * @since 2.1\n     */\n    public static double[] removeElement(double[] array, double element) {\n        int index = indexOf(array, element);\n        if (index == INDEX_NOT_FOUND) {\n            return clone(array);\n        }\n        return remove(array, index);\n    }\n\n    /**\n     * <p>Removes the element at the specified position from the specified array.\n     * All subsequent elements are shifted to the left (substracts one from\n     * their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, an IndexOutOfBoundsException\n     * will be thrown, because in that case no valid index can be specified.</p>\n     *\n     * <pre>\n     * ArrayUtils.remove([1.1], 0)           = []\n     * ArrayUtils.remove([2.5, 6.0], 0)      = [6.0]\n     * ArrayUtils.remove([2.5, 6.0], 1)      = [2.5]\n     * ArrayUtils.remove([2.5, 6.0, 3.8], 1) = [2.5, 3.8]\n     * </pre>\n     *\n     * @param array  the array to remove the element from, may not be <code>null</code>\n     * @param index  the position of the element to be removed\n     * @return A new array containing the existing elements except the element\n     *         at the specified position.\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index >= array.length), or if the array is <code>null</code>.\n     * @since 2.1\n     */\n    public static float[] remove(float[] array, int index) {\n        return (float[]) remove((Object) array, index);\n    }\n\n    /**\n     * <p>Removes the first occurrence of the specified element from the\n     * specified array. All subsequent elements are shifted to the left\n     * (substracts one from their indices). If the array doesn\'t contains\n     * such an element, no elements are removed from the array.</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the first occurrence of the specified element. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <pre>\n     * ArrayUtils.removeElement(null, 1.1)            = null\n     * ArrayUtils.removeElement([], 1.1)              = []\n     * ArrayUtils.removeElement([1.1], 1.2)           = [1.1]\n     * ArrayUtils.removeElement([1.1, 2.3], 1.1)      = [2.3]\n     * ArrayUtils.removeElement([1.1, 2.3, 1.1], 1.1) = [2.3, 1.1]\n     * </pre>\n     *\n     * @param array  the array to remove the element from, may be <code>null</code>\n     * @param element  the element to be removed\n     * @return A new array containing the existing elements except the first\n     *         occurrence of the specified element.\n     * @since 2.1\n     */\n    public static float[] removeElement(float[] array, float element) {\n        int index = indexOf(array, element);\n        if (index == INDEX_NOT_FOUND) {\n            return clone(array);\n        }\n        return remove(array, index);\n    }\n\n    /**\n     * <p>Removes the element at the specified position from the specified array.\n     * All subsequent elements are shifted to the left (substracts one from\n     * their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, an IndexOutOfBoundsException\n     * will be thrown, because in that case no valid index can be specified.</p>\n     *\n     * <pre>\n     * ArrayUtils.remove([1], 0)         = []\n     * ArrayUtils.remove([2, 6], 0)      = [6]\n     * ArrayUtils.remove([2, 6], 1)      = [2]\n     * ArrayUtils.remove([2, 6, 3], 1)   = [2, 3]\n     * </pre>\n     *\n     * @param array  the array to remove the element from, may not be <code>null</code>\n     * @param index  the position of the element to be removed\n     * @return A new array containing the existing elements except the element\n     *         at the specified position.\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index >= array.length), or if the array is <code>null</code>.\n     * @since 2.1\n     */\n    public static int[] remove(int[] array, int index) {\n        return (int[]) remove((Object) array, index);\n    }\n\n    /**\n     * <p>Removes the first occurrence of the specified element from the\n     * specified array. All subsequent elements are shifted to the left\n     * (substracts one from their indices). If the array doesn\'t contains\n     * such an element, no elements are removed from the array.</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the first occurrence of the specified element. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <pre>\n     * ArrayUtils.removeElement(null, 1)      = null\n     * ArrayUtils.removeElement([], 1)        = []\n     * ArrayUtils.removeElement([1], 2)       = [1]\n     * ArrayUtils.removeElement([1, 3], 1)    = [3]\n     * ArrayUtils.removeElement([1, 3, 1], 1) = [3, 1]\n     * </pre>\n     *\n     * @param array  the array to remove the element from, may be <code>null</code>\n     * @param element  the element to be removed\n     * @return A new array containing the existing elements except the first\n     *         occurrence of the specified element.\n     * @since 2.1\n     */\n    public static int[] removeElement(int[] array, int element) {\n        int index = indexOf(array, element);\n        if (index == INDEX_NOT_FOUND) {\n            return clone(array);\n        }\n        return remove(array, index);\n    }\n\n    /**\n     * <p>Removes the element at the specified position from the specified array.\n     * All subsequent elements are shifted to the left (substracts one from\n     * their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, an IndexOutOfBoundsException\n     * will be thrown, because in that case no valid index can be specified.</p>\n     *\n     * <pre>\n     * ArrayUtils.remove([1], 0)         = []\n     * ArrayUtils.remove([2, 6], 0)      = [6]\n     * ArrayUtils.remove([2, 6], 1)      = [2]\n     * ArrayUtils.remove([2, 6, 3], 1)   = [2, 3]\n     * </pre>\n     *\n     * @param array  the array to remove the element from, may not be <code>null</code>\n     * @param index  the position of the element to be removed\n     * @return A new array containing the existing elements except the element\n     *         at the specified position.\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index >= array.length), or if the array is <code>null</code>.\n     * @since 2.1\n     */\n    public static long[] remove(long[] array, int index) {\n        return (long[]) remove((Object) array, index);\n    }\n\n    /**\n     * <p>Removes the first occurrence of the specified element from the\n     * specified array. All subsequent elements are shifted to the left\n     * (substracts one from their indices). If the array doesn\'t contains\n     * such an element, no elements are removed from the array.</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the first occurrence of the specified element. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <pre>\n     * ArrayUtils.removeElement(null, 1)      = null\n     * ArrayUtils.removeElement([], 1)        = []\n     * ArrayUtils.removeElement([1], 2)       = [1]\n     * ArrayUtils.removeElement([1, 3], 1)    = [3]\n     * ArrayUtils.removeElement([1, 3, 1], 1) = [3, 1]\n     * </pre>\n     *\n     * @param array  the array to remove the element from, may be <code>null</code>\n     * @param element  the element to be removed\n     * @return A new array containing the existing elements except the first\n     *         occurrence of the specified element.\n     * @since 2.1\n     */\n    public static long[] removeElement(long[] array, long element) {\n        int index = indexOf(array, element);\n        if (index == INDEX_NOT_FOUND) {\n            return clone(array);\n        }\n        return remove(array, index);\n    }\n\n    /**\n     * <p>Removes the element at the specified position from the specified array.\n     * All subsequent elements are shifted to the left (substracts one from\n     * their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, an IndexOutOfBoundsException\n     * will be thrown, because in that case no valid index can be specified.</p>\n     *\n     * <pre>\n     * ArrayUtils.remove([1], 0)         = []\n     * ArrayUtils.remove([2, 6], 0)      = [6]\n     * ArrayUtils.remove([2, 6], 1)      = [2]\n     * ArrayUtils.remove([2, 6, 3], 1)   = [2, 3]\n     * </pre>\n     *\n     * @param array  the array to remove the element from, may not be <code>null</code>\n     * @param index  the position of the element to be removed\n     * @return A new array containing the existing elements except the element\n     *         at the specified position.\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index >= array.length), or if the array is <code>null</code>.\n     * @since 2.1\n     */\n    public static short[] remove(short[] array, int index) {\n        return (short[]) remove((Object) array, index);\n    }\n\n    /**\n     * <p>Removes the first occurrence of the specified element from the\n     * specified array. All subsequent elements are shifted to the left\n     * (substracts one from their indices). If the array doesn\'t contains\n     * such an element, no elements are removed from the array.</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the first occurrence of the specified element. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <pre>\n     * ArrayUtils.removeElement(null, 1)      = null\n     * ArrayUtils.removeElement([], 1)        = []\n     * ArrayUtils.removeElement([1], 2)       = [1]\n     * ArrayUtils.removeElement([1, 3], 1)    = [3]\n     * ArrayUtils.removeElement([1, 3, 1], 1) = [3, 1]\n     * </pre>\n     *\n     * @param array  the array to remove the element from, may be <code>null</code>\n     * @param element  the element to be removed\n     * @return A new array containing the existing elements except the first\n     *         occurrence of the specified element.\n     * @since 2.1\n     */\n    public static short[] removeElement(short[] array, short element) {\n        int index = indexOf(array, element);\n        if (index == INDEX_NOT_FOUND) {\n            return clone(array);\n        }\n        return remove(array, index);\n    }\n\n    /**\n     * <p>Removes the element at the specified position from the specified array.\n     * All subsequent elements are shifted to the left (substracts one from\n     * their indices).</p>\n     *\n     * <p>This method returns a new array with the same elements of the input\n     * array except the element on the specified position. The component\n     * type of the returned array is always the same as that of the input\n     * array.</p>\n     *\n     * <p>If the input array is <code>null</code>, an IndexOutOfBoundsException\n     * will be thrown, because in that case no valid index can be specified.</p>\n     *\n     * @param array  the array to remove the element from, may not be <code>null</code>\n     * @param index  the position of the element to be removed\n     * @return A new array containing the existing elements except the element\n     *         at the specified position.\n     * @throws IndexOutOfBoundsException if the index is out of range\n     * (index < 0 || index >= array.length), or if the array is <code>null</code>.\n     * @since 2.1\n     */\n    private static Object remove(Object array, int index) {\n        int length = getLength(array);\n        if (index < 0 || index >= length) {\n            throw new IndexOutOfBoundsException("Index: " + index + ", Length: " + length);\n        }\n\n        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);\n        System.arraycopy(array, 0, result, 0, index);\n        if (index < length - 1) {\n            System.arraycopy(array, index + 1, result, index, length - index - 1);\n        }\n\n        return result;\n    }\n\n}', 'tree': 'MethodDeclaration modifiers public_ter ^ static_ter ^ ^ annotations Annotation name SuppressWarnings_ter ^ ^ element Literal value <string>_ter ^ ^ ^ ^ ^ ^ type_parameters TypeParameter name T_ter ^ ^ ^ ^ return_type ReferenceType name T_ter ^ ^ dimensions None_ter ^ ^ ^ ^ name meth0 ^ ^ parameters FormalParameter type ReferenceType name T_ter ^ ^ dimensions None_ter ^ ^ ^ ^ name par0 ^ ^ ^ FormalParameter type ReferenceType name T_ter ^ ^ ^ ^ name par1 ^ ^ varargs True_ter ^ ^ ^ ^ body IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member clone_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member clone_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Class_ter ^ ^ arguments TypeArgument pattern_type ?_ter ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member getComponentType_ter ^ ^ ^ ^ member getClass_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name T_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name T_ter ^ ^ dimensions None_ter ^ ^ ^ ^ expression MethodInvocation qualifier Array_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ member newInstance_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4], 'mode': 0, 'line': 2962, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root Literal-Literal value 0_ter ^ ^ ^  ^ ^ ; ['copy-Literal']
copynode 0:  root qualifier-qualifier System_ter ^ ^  ^ ^ ; ['copy-qualifier']
before@1 batch0 x: -12.643781661987305: root qualifier-qualifier System_ter ^ ^  ^ ^  ; ['copy-qualifier']
after@1 batch0 x: -12.643781661987305: root qualifier-qualifier System_ter ^ ^  ^ ^  ; ['copy-qualifier']
copynode -0.15681783854961395:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -0.15681783854961395:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-Literal']
copynode -1.9319223165512085:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.15681783854961395:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.15681783854961395:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.15681783854961395:  root modified ^ qualifier-qualifier System_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -0.15681783854961395:  root modified ^ member-member arraycopy_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -1.9319223165512085:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -0.15681783854961395:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.15681783854961395:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -1.9319223165512085:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -0.15681783854961395:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -0.15681783854961395:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -1.9319223165512085:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -1.9319223165512085:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -1.9319223165512085:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -1.9319223165512085:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -1.9319223165512085:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter']
copynode -1.9319223165512085:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -1.9319223165512085:  root add ^ ^ ; ['root -> add', 'root -> End']
copynode -10.557700157165527:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -10.248783111572266:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -10.4933443069458:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -11.534436225891113:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -11.632747650146484:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -11.885093688964844:  root Literal-Literal value 0_ter ^ ^ ^  value ^ ^ ^ ; ['copy-Literal', 'Literal -> value']
copynode -10.248783111572266:  root ReturnStatement expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member clone_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -10.248783111572266:  root ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member clone_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -10.248783111572266:  root ReturnStatement expression MemberReference member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -12.643781661987305:  root qualifier-qualifier System_ter ^ ^  unknown ^ ^ ^ ; ['copy-qualifier', 'start -> unknown']
copynode -10.4933443069458:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -11.534436225891113:  root StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.643781661987305:  root qualifier-qualifier System_ter ^ ^  par0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par0']
copynode -11.632747650146484:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -12.643781661987305:  root qualifier-qualifier System_ter ^ ^  System_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -12.643781661987305:  root qualifier-qualifier System_ter ^ ^  loc0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> loc0']
copynode -12.643781661987305:  root qualifier-qualifier System_ter ^ ^  par1 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par1']
copynode -12.643781661987305:  root qualifier-qualifier System_ter ^ ^  LOG_ter ^ ^ ^ ; ['copy-qualifier', 'qualifier -> LOG_ter']
copynode -11.885093688964844:  root Literal-Literal value 0_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['copy-Literal', 'Literal -> prefix_operators value']
copynode -12.643781661987305:  root qualifier-qualifier System_ter ^ ^  Array_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -12.643781661987305:  root qualifier-qualifier System_ter ^ ^  System_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -12.643781661987305:  root qualifier-qualifier System_ter ^ ^  par2 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par2']
copynode -11.632747650146484:  root parameters FormalParameter type ReferenceType name T_ter ^ ^ dimensions None_ter ^ ^ ^ ^ name par0 ^ ^ ^ FormalParameter type ReferenceType name T_ter ^ ^ ^ ^ name par1 ^ ^ varargs True_ter ^ ^ ^ ^ ^ ; ['root -> parameters', 'copy-parameters']
copynode -10.4933443069458:  root return_type ReferenceType name T_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'copy-return_type']
copynode -11.632747650146484:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -12.643781661987305:  root qualifier-qualifier System_ter ^ ^  Math_ter ^ ^ ^ ; ['copy-qualifier', 'qualifier -> Math_ter']
copynode -11.534436225891113:  root StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.632747650146484:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -10.4933443069458:  root return_type par0 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -11.885093688964844:  root Literal-Literal value 0_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -11.885093688964844:  root Literal-Literal value 0_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -11.885093688964844:  root Literal-Literal value 0_ter ^ ^ ^  selectors ^ value ^ ^ ^ ; ['copy-Literal', 'Literal -> selectors value']
copynode -10.4933443069458:  root return_type par1 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -11.885093688964844:  root Literal-Literal value 0_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -10.248783111572266:  root ReturnStatement par1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -11.885093688964844:  root Literal-Literal value 0_ter ^ ^ ^  prefix_operators ^ selectors ^ value ^ ^ ^ ; ['copy-Literal', 'Literal -> prefix_operators selectors value']
copynode -10.557700157165527:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member clone_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.557700157165527:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member clone_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member clone_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.248783111572266:  root ReturnStatement par0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -11.885093688964844:  root Literal-Literal value 0_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -11.885093688964844:  root Literal-Literal value 0_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -11.885093688964844:  root Literal-Literal value 0_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -11.632747650146484:  root parameters loc0 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.632747650146484:  root parameters loc1 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.632747650146484:  root parameters par0 ^ ^ ^ ; ['root -> parameters', 'copy-FormalParameter']
copynode -11.534436225891113:  root StatementExpression par1 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -11.632747650146484:  root parameters par1 ^ ^ ^ ; ['root -> parameters', 'copy-FormalParameter']
copynode -11.534436225891113:  root StatementExpression par0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -11.632747650146484:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -10.557700157165527:  root IfStatement par0 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -11.534436225891113:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -10.557700157165527:  root IfStatement par1 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -10.557700157165527:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -10.4933443069458:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.557700157165527:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -10.4933443069458:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.4933443069458:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -10.248783111572266:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -10.557700157165527:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -10.248783111572266:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.248783111572266:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.534436225891113:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -11.534436225891113:  root StatementExpression loc1 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -11.534436225891113:  root StatementExpression loc0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -10.557700157165527:  root IfStatement loc1 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -10.557700157165527:  root IfStatement loc0 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch0 x: -32.37261486053467: root IfStatement loc0 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch0 x: -32.37261486053467: root IfStatement loc0 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -1.1934974640607834:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.4367284029722214:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value']
copynode -2.347050726413727:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -2.3974475115537643:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -2.5062808245420456:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -2.815201684832573:  root modified ^ qualifier-qualifier System_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -3.2640258073806763:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -3.2422684878110886:  root modified ^ member-member arraycopy_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -2.3974475115537643:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -2.5062808245420456:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -3.9079624861478806:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -3.9802579134702682:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -2.347050726413727:  root add ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.9802579134702682:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -3.9079624861478806:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -4.844826817512512:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -2.815201684832573:  root modified ^ qualifier-qualifier System_ter ^ ^  System_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -1.1934974640607834:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.2422684878110886:  root modified ^ member-member arraycopy_ter ^ ^  arraycopy_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.815201684832573:  root modified ^ qualifier-qualifier System_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0']
copynode -2.815201684832573:  root modified ^ qualifier-qualifier System_ter ^ ^  Array_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -3.2422684878110886:  root modified ^ member-member arraycopy_ter ^ ^  newInstance_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -4.844826817512512:  root add ^ ReturnStatement expression MemberReference member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -4.844826817512512:  root add ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member clone_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.783768579363823:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -4.844826817512512:  root add ^ ReturnStatement expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member clone_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -2.815201684832573:  root modified ^ qualifier-qualifier System_ter ^ ^  LOG_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> LOG_ter']
copynode -1.4367284029722214:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value']
copynode -3.2422684878110886:  root modified ^ member-member arraycopy_ter ^ ^  clone_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.815201684832573:  root modified ^ qualifier-qualifier System_ter ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0']
copynode -3.2422684878110886:  root modified ^ member-member arraycopy_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter']
copynode -3.2422684878110886:  root modified ^ member-member arraycopy_ter ^ ^  clone_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -6.9352787733078:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -3.2422684878110886:  root modified ^ member-member arraycopy_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -7.479073405265808:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -2.815201684832573:  root modified ^ qualifier-qualifier System_ter ^ ^  Math_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> Math_ter']
copynode -3.2422684878110886:  root modified ^ member-member arraycopy_ter ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> add_ter']
copynode -7.90948760509491:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -7.775601267814636:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -6.9352787733078:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -3.2422684878110886:  root modified ^ member-member arraycopy_ter ^ ^  e_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> e_ter']
copynode -3.2422684878110886:  root modified ^ member-member arraycopy_ter ^ ^  put_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> put_ter']
copynode -1.4367284029722214:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -1.4367284029722214:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -2.3974475115537643:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -2.5062808245420456:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -2.3974475115537643:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -2.5062808245420456:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -9.23830497264862:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> End']
copynode -1.4367284029722214:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> selectors value']
copynode -9.253573775291443:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -2.3974475115537643:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -2.3974475115537643:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -2.5062808245420456:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -2.5062808245420456:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -6.9352787733078:  root add ^ LocalVariableDeclaration type ReferenceType name T_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name T_ter ^ ^ dimensions None_ter ^ ^ ^ ^ expression MethodInvocation qualifier Array_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ operandr MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ member newInstance_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -3.9079624861478806:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -3.9802579134702682:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -2.815201684832573:  root modified ^ qualifier-qualifier System_ter ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1']
copynode -6.9352787733078:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Class_ter ^ ^ arguments TypeArgument pattern_type ?_ter ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member getComponentType_ter ^ ^ ^ ^ member getClass_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -1.1934974640607834:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.9079624861478806:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -2.815201684832573:  root modified ^ qualifier-qualifier System_ter ^ ^  System_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -3.9802579134702682:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -2.815201684832573:  root modified ^ qualifier-qualifier System_ter ^ ^  Double_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> Double_ter']
copynode -1.4367284029722214:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -2.347050726413727:  root add ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.3974475115537643:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -2.5062808245420456:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -6.9352787733078:  root add ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -3.9079624861478806:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -3.9802579134702682:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -1.4367284029722214:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  prefix_operators ^ selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators selectors value']
copynode -7.479073405265808:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -7.90948760509491:  root add ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -10.587607711553574:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -7.775601267814636:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -10.558277594856918:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.9802579134702682:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -3.9079624861478806:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -7.775601267814636:  root add ^ control par1 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -6.783768579363823:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member clone_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.783768579363823:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member clone_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -11.665708810091019:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -10.558277594856918:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -1.4367284029722214:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -10.587607711553574:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -3.9079624861478806:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -1.4367284029722214:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -3.9802579134702682:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -1.4367284029722214:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -10.858666718006134:  root return_type ReferenceType name Class_ter ^ ^ arguments TypeArgument pattern_type ?_ter ^ ^ ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -7.775601267814636:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -10.558277594856918:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -10.858666718006134:  root return_type ReferenceType name T_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -2.3974475115537643:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -2.5062808245420456:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
before@3 batch0 x: -12.460693284869194: root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
after@3 batch0 x: -12.460693284869194: root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -1.2022534618154168:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -1.4422229253686965:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter']
copynode -2.492776498198509:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -1.4422229253686965:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter']
copynode -2.962381526827812:  root modified ^ qualifier-qualifier System_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -2.743458792567253:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -2.8701645880937576:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -3.44129841029644:  root modified ^ member-member arraycopy_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -1.4422229253686965:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -1.4422229253686965:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> false_ter']
copynode -3.264542236167472:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.264542236167472:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -4.369189083576202:  root add ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.743458792567253:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -3.6440457552671432:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -3.710885688662529:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -2.8701645880937576:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -3.264542236167472:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -1.4422229253686965:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> null_ter']
copynode -3.6440457552671432:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.710885688662529:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.252566561102867:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.358072713017464:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -2.492776498198509:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -5.163479134440422:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -5.168702408671379:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -1.4422229253686965:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value true_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> true_ter']
copynode -4.252566561102867:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.358072713017464:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.918965741991997:  root modified ^ qualifier-qualifier System_ter ^ ^  System_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -3.6440457552671432:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.0069344490766525:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -3.710885688662529:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.6440457552671432:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -3.710885688662529:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.442174077033997:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -3.6440457552671432:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.393190309405327:  root modified ^ member-member arraycopy_ter ^ ^  arraycopy_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -3.710885688662529:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.264542236167472:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -6.490850612521172:  root modified ^ qualifier-qualifier System_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0', 'root -> End']
copynode -4.252566561102867:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.51701657474041:  root modified ^ qualifier-qualifier System_ter ^ ^  Array_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -1.4422229253686965:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 2_ter']
copynode -4.252566561102867:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.577693864703178:  root modified ^ member-member arraycopy_ter ^ ^  newInstance_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.358072713017464:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.62660539150238:  root add ^ ReturnStatement expression MemberReference member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -4.358072713017464:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.264542236167472:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -5.442174077033997:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -2.743458792567253:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -1.2022534618154168:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -2.8701645880937576:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -6.798991680145264:  root add ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member clone_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -2.492776498198509:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -6.829587340354919:  root add ^ ReturnStatement expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member clone_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.803673591464758:  root modified ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -5.163479134440422:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier par1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -2.743458792567253:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -5.168702408671379:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  qualifier par1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -3.6440457552671432:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -7.033979341387749:  root modified ^ qualifier-qualifier System_ter ^ ^  LOG_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> LOG_ter', 'root -> End']
copynode -2.8701645880937576:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -3.710885688662529:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -4.252566561102867:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.119985982775688:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  prefix_operators -_ter ^ ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter']
copynode -5.442174077033997:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -7.168674394488335:  root modified ^ member-member arraycopy_ter ^ ^  clone_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.219568178057671:  root modified ^ qualifier-qualifier System_ter ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0', 'root -> End']
copynode -7.228979989886284:  root modified ^ member-member arraycopy_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter', 'root -> End']
copynode -4.358072713017464:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.3258113116025925:  root modified ^ member-member arraycopy_ter ^ ^  clone_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.34064257144928:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -7.364069864153862:  root modified ^ member-member arraycopy_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -4.252566561102867:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -4.369189083576202:  root add ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -2.743458792567253:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier loc1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1']
copynode -4.358072713017464:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -7.544767305254936:  root modified ^ qualifier-qualifier System_ter ^ ^  Math_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> Math_ter', 'root -> End']
copynode -2.8701645880937576:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier loc1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1']
copynode -7.631094858050346:  root modified ^ member-member arraycopy_ter ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> add_ter', 'root -> End']
copynode -3.6440457552671432:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -3.710885688662529:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -5.163479134440422:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -5.168702408671379:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -4.252566561102867:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -1.2022534618154168:  root modified ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -4.358072713017464:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -5.442174077033997:  root add ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -2.492776498198509:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -8.572301268577576:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -3.6440457552671432:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -5.163479134440422:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier loc1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1']
copynode -3.710885688662529:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -5.168702408671379:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  qualifier loc1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1']
copynode -8.630340337753296:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers']
before@4 batch0 x: -8.731404021382332: root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^  ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers']
after@4 batch0 x: -8.731404021382332: root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^  ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'copy-modifiers']
copynode -1.2078804448246956:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.1165940486826003:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -2.7012232267297804:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter', 'root -> End']
copynode -2.5737757086753845:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.5737757086753845:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.9070547544397414:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> <string>_ter', 'root -> End']
copynode -4.0871275388635695:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> false_ter', 'root -> End']
copynode -3.0029873698949814:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -3.0029873698949814:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -3.0029873698949814:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -3.131876692175865:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -3.131876692175865:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -3.131876692175865:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -4.362520232039969:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.461051806807518:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -4.533520147204399:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -5.044120641890913:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.068843767046928:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -5.128872320055962:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -5.132309719920158:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -5.2310177236795425:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -1.2078804448246956:  root modified ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.303517684340477:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -2.5737757086753845:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.289301051932853:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.529443594161421:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value true_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> true_ter', 'root -> End']
copynode -4.289301051932853:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.758758678275626:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -5.6633633226156235:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -4.455584093928337:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -4.455584093928337:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -5.766427710652351:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -4.455584093928337:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -4.578762724995613:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -2.5737757086753845:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.578762724995613:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -4.578762724995613:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -5.999561235308647:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -6.063482686877251:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -6.112070009112358:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -6.1600209921598434:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -3.0029873698949814:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -4.758758678275626:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.131876692175865:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.361356660723686:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -4.758758678275626:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -6.458435460925102:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -4.289301051932853:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -6.511595711112022:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -6.528608175460249:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 2_ter', 'root -> End']
copynode -6.569355711340904:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -6.640781119465828:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -4.289301051932853:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -6.1989858746528625:  root add ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -6.688928321003914:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -6.7298678159713745:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -3.0029873698949814:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.784354806877673:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -6.489538802939933:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -5.520313397049904:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -3.131876692175865:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -5.522011235356331:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -5.520313397049904:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -5.522011235356331:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -3.0029873698949814:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.898246068507433:  root modified ^ ReturnStatement expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.992532655596733:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -6.87238846719265:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -3.131876692175865:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -5.522011235356331:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -5.520313397049904:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -7.056663915514946:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -6.712578430015128:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -1.2078804448246956:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.1305112689733505:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -4.289301051932853:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -7.146637599915266:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter', 'value -> 1_ter']
copynode -6.1989858746528625:  root add ^ ReturnStatement expression MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member']
copynode -4.758758678275626:  root add ^ IfStatement condition MemberReference prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -3.0029873698949814:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'member -> par1']
copynode -7.238717749714851:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -3.131876692175865:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'member -> par1']
before@5 batch0 x: -7.326210384722799: root modified ^ member-member arraycopy_ter ^ ^  clone_ter ^ ^ ^  ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
after@5 batch0 x: -7.326210384722799: root modified ^ member-member arraycopy_ter ^ ^  clone_ter ^ ^ ^  ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -1.2322357259690762:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.2727968096733093:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -4.227760300040245:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -4.246369823813438:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -4.286325559020042:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -4.359777197241783:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -4.385533794760704:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -4.417134985327721:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -3.490656077861786:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -1.2322357259690762:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.4222457177820615:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.490656077861786:  root add ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.2727968096733093:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.303689837368438:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -3.490656077861786:  root add ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.490656077861786:  root add ^ StatementExpression expression MethodInvocation qualifier Array_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.4222457177820615:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.303567834198475:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.744140669703484:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'root -> End']
copynode -5.756106659770012:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'root -> End']
copynode -1.2322357259690762:  root modified ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -5.783897444605827:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'root -> End']
copynode -3.490656077861786:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -5.8704493790864944:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'root -> End']
copynode -5.571387066680472:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.2727968096733093:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.8923352509737015:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'root -> End']
copynode -5.909015968441963:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'root -> End']
copynode -3.2727968096733093:  root add ^ StatementExpression expression MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -5.8902477622032166:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -3.490656077861786:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -3.2727968096733093:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -6.161073669791222:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -1.2322357259690762:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.258716329932213:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -1.2322357259690762:  root modified ^ StatementExpression expression MethodInvocation qualifier Array_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.40833355410723:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.485943212348502:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -3.490656077861786:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -5.511154427367728:  root add ^ IfStatement condition MethodInvocation qualifier System_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.671818151313346:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -5.511154427367728:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.455818355083466:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -1.2322357259690762:  root modified ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1']
copynode -6.735307678580284:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -3.490656077861786:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1']
copynode -6.733710450353101:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.835303321480751:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -6.841640219092369:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -6.841889932751656:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -6.857728138566017:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -3.2727968096733093:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.865098550915718:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -6.94300077855587:  root modified ^ MemberReference-MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -6.951588358730078:  root modified ^ ReturnStatement expression MethodInvocation qualifier System_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.553858055907767:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -5.455818355083466:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -7.050243124365807:  root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -7.053945496678352:  root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
before@6 batch0 x: -7.054476476565469: root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  qualifier par0 ^ ^ member unknown ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
after@6 batch0 x: -7.054476476565469: root modified ^ MemberReference-MemberReference member loc1 ^ ^ ^  qualifier par0 ^ ^ member unknown ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -1.2847214601933956:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -3.8262943625450134:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -1.2847214601933956:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -1.2847214601933956:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -3.8262943625450134:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.192972696560901:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.316225230693817:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.00838965177536:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.108886297792196:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.576632118958514:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.239969313144684:  root add ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.588102377951145:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.919123113155365:  root add ^ StatementExpression expression MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -5.924265887588263:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -5.775044735521078:  root modified ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -5.879490077495575:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.414030536921928:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -5.42803567647934:  root add ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.414030536921928:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier ^ member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.025932729244232:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.87436218484072:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -5.108886297792196:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -5.513025224208832:  root add ^ StatementExpression expression MethodInvocation qualifier Array_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -1.2847214601933956:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This_ter']
copynode -5.869574725627899:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -5.96473616361618:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MemberReference']
copynode -6.252498921006918:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -1.2847214601933956:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -6.687891185283661:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -1.2847214601933956:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -6.421476419258397:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.800375637831166:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -1.2847214601933956:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation']
copynode -6.728936489671469:  root modified ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1', 'arguments -> MemberReference']
copynode -6.260988529771566:  root modified ^ StatementExpression expression MethodInvocation qualifier Array_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.862405955791473:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.00838965177536:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
before@7 batch0 x: -7.050696639722446: root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
after@7 batch0 x: -7.050696639722446: root modified ^ MemberReference-MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -1.410341139882803:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -1.410341139882803:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -4.447906341403723:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -4.338307227939367:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.905759751796722:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -5.4672080129384995:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -4.2452488243579865:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.2452488243579865:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -4.338307227939367:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.2452488243579865:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.2452488243579865:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -5.348278722900432:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.762023027986288:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.036129981279373:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.348278722900432:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.681244194507599:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.805758363741916:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.811707675457001:  root add ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.811707675457001:  root add ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.425814714282751:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments This_ter ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This_ter', 'arguments -> MemberReference']
copynode -5.965250235050917:  root modified ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.681244194507599:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.816873170435429:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.805758363741916:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.107959270477295:  root add ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.816873170435429:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.965250235050917:  root modified ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.742601525038481:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'root -> End']
copynode -6.107959270477295:  root add ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.471103131771088:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.182841583999107:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -6.580043375492096:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -4.2452488243579865:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.639875616878271:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.272613555192947:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.968790888786316:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
before@8 batch0 x: -7.006665393710136: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
after@8 batch0 x: -7.006665393710136: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -2.491573091596365:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -1.8258281908929348:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -1.8258281908929348:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -1.8258281908929348:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -1.8258281908929348:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -1.8258281908929348:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -4.858316209167242:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MethodInvocation qualifier System_ter ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.45923422742635:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.45923422742635:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -2.491573091596365:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -1.8258281908929348:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -1.8258281908929348:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -1.8258281908929348:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.799920883029699:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -5.137448117136955:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -5.137448117136955:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -5.574066668748856:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -6.097525856632274:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -4.45923422742635:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -2.491573091596365:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -5.724106460809708:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
copynode -1.8258281908929348:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -4.858316209167242:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.930123001337051:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference']
copynode -5.944830566644669:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference']
copynode -1.8258281908929348:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -6.376253075140994:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -6.6212392821908:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
copynode -6.448583543300629:  root add ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -6.744158245623112:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -6.749154191464186:  root modified ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -2.491573091596365:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier System_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
before@9 batch0 x: -7.006665393710136: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
after@9 batch0 x: -7.006665393710136: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -2.9800802432000637:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
copynode -3.065647717565298:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -2.581286173313856:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -2.581286173313856:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -3.318617459386587:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference']
copynode -4.583103772252798:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference']
copynode -5.187201138585806:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -5.2459978722035885:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MethodInvocation qualifier System_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.429802884347737:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments Literal value null_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference']
copynode -5.460045804269612:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference']
copynode -2.9800802432000637:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal']
copynode -3.065647717565298:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal']
copynode -2.581286173313856:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'member -> par1']
copynode -5.75618040189147:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.8049887381494045:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -3.318617459386587:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> Literal']
copynode -2.581286173313856:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'member -> par0']
copynode -3.065647717565298:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation']
copynode -6.085374470800161:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -2.9800802432000637:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation']
copynode -5.528221841901541:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -5.528221841901541:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.2166785560548306:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -3.318617459386587:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MethodInvocation']
copynode -6.434847821481526:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference']
copynode -2.9800802432000637:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -6.582205411046743:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference']
copynode -6.26169028878212:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.731190320104361:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> MemberReference']
copynode -6.236066624522209:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -6.254178807139397:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -6.621252324432135:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
before@10 batch0 x: -7.062047000974417: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
after@10 batch0 x: -7.062047000974417: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -3.3532579354941845:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -3.4340132288634777:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -3.135580103844404:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.216002505272627:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.135580103844404:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.216002505272627:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.4683228842914104:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.4683228842914104:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -4.734425511211157:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.734425511211157:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.627424355596304:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value']
copynode -5.756413575261831:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value']
copynode -5.349345538765192:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.3532579354941845:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> Literal']
copynode -3.4340132288634777:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> Literal']
copynode -5.597109471447766:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments Literal value null_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.339540641754866:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.99037754163146:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> Literal', 'Literal -> value']
copynode -5.622785468585789:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.8795988373458385:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'member -> par1', 'arguments -> MemberReference']
copynode -5.339540641754866:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.888400461524725:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.349345538765192:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.963215377181768:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.233393173664808:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'member -> par0', 'arguments -> MemberReference']
copynode -6.300105687230825:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -3.3532579354941845:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MethodInvocation']
copynode -6.320079501718283:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -6.404021512717009:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> MemberReference']
copynode -3.4340132288634777:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MethodInvocation']
copynode -6.243128310889006:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.622785468585789:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.597109471447766:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments Literal value null_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.888400461524725:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
before@11 batch0 x: -6.977322604507208: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
after@11 batch0 x: -6.977322604507208: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.883034985512495:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -3.5262498818337917:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.6069955341517925:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.5262498818337917:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.996704440563917:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -3.6069955341517925:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.7797519974410534:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.217507492750883:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -3.8308281116187572:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -3.8308281116187572:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -4.110919009894133:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -3.8308281116187572:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -3.996704440563917:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -4.110919009894133:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -3.7797519974410534:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -3.7797519974410534:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -4.110919009894133:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -5.495784308761358:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -5.866013567894697:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -5.946114402264357:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -3.883034985512495:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -4.217507492750883:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -6.070250730961561:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -5.6401082165539265:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -5.3660311959683895:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.375189397484064:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -3.8308281116187572:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.110919009894133:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.767565267160535:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -5.3660311959683895:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.06647277995944:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member par1 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.999184887856245:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -3.7797519974410534:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.002992647700012:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.702993889339268:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -5.974277471192181:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments Literal value null_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.06647277995944:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member par1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member']
before@12 batch0 x: -6.858162929740502: root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
after@12 batch0 x: -6.858162929740502: root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier par0 ^ ^ member length_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -4.4275613240897655:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference']
copynode -4.0449384562671185:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -4.0449384562671185:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -4.266455825418234:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -4.348301898688078:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -4.266455825418234:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -4.345794033259153:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -4.345794033259153:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -4.348301898688078:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -4.441588204354048:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -4.441588204354048:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -4.1770296059548855:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.987047355622053:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference']
copynode -4.256762515753508:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -5.022180717438459:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
copynode -5.1356239430606365:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference']
copynode -4.1770296059548855:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -4.256762515753508:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.265102665871382:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -5.4462223164737225:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
copynode -5.467951398342848:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -5.683361392468214:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
copynode -5.31641898676753:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -5.72289277240634:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -5.31641898676753:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -4.1770296059548855:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.256762515753508:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.1770296059548855:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -4.4275613240897655:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> Literal']
copynode -4.256762515753508:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -5.727247249335051:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -5.727247249335051:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.40320597961545:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference']
copynode -5.877391007728875:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -5.971978705376387:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.444367315620184:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference']
copynode -5.976111184805632:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -5.9572313176468015:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -5.976111184805632:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.5482522659003735:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -6.596005396917462:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference']
copynode -5.971978705376387:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.5696144215762615:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
before@13 batch0 x: -6.825587346393149: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
after@13 batch0 x: -6.825587346393149: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -4.799472164362669:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -4.826951336115599:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -4.723493468016386:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.113519798964262:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -5.123779486864805:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -5.21362304314971:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference']
copynode -5.204178374260664:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -5.209232967346907:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -5.29332734271884:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference']
copynode -4.723493468016386:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.4515036307275295:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
copynode -5.226788531988859:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.52147675678134:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
copynode -5.299716513603926:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.4118889681994915:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.226788531988859:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.573299121111631:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.299716513603926:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.090029891580343:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -5.090029891580343:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -4.87518423423171:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -4.87518423423171:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -5.149790834635496:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -5.149790834635496:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -5.4118889681994915:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.765840958803892:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.11448871716857:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -6.059564035385847:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -6.336288373917341:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> Literal', 'Literal -> value']
copynode -5.836301755160093:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.093062739819288:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -4.975266646593809:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -4.975266646593809:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.214303981512785:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -5.573299121111631:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.007362674921751:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.083455603569746:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.325128551572561:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -5.765840958803892:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.400461208075285:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -6.490111958235502:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -6.500165652483702:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -5.836301755160093:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.799472164362669:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> Literal']
before@14 batch0 x: -6.775312852114439: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> Literal']
after@14 batch0 x: -6.775312852114439: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> Literal']
copynode -5.067749332636595:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.094763081520796:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.25944347307086:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -5.34754629060626:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.358010824769735:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.472064983099699:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.444085773080587:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.477802973240614:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.5242202244699:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.067749332636595:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.094763081520796:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.34754629060626:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.358010824769735:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.7076770924031734:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.25944347307086:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -5.7781216613948345:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.774664532393217:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -5.444085773080587:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.877397578209639:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -5.938911031931639:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -5.5242202244699:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.256493505090475:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -6.260499056428671:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -5.472064983099699:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.244935091584921:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -6.245364364236593:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -5.477802973240614:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.608556997030973:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.306899379938841:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -6.307006191462278:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -5.7076770924031734:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.357238482683897:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -6.364902209490538:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -5.774664532393217:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -6.097338628023863:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -5.7781216613948345:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.352695774286985:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -6.318670820444822:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -6.775312852114439:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -6.320594739168882:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.353909354656935:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.877397578209639:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -6.319572504609823:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.938911031931639:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
before@15 batch0 x: -6.929880749434233: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
after@15 batch0 x: -6.929880749434233: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -5.552890073508024:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -5.577946584671736:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -5.869520019739866:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -5.881572540849447:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -5.931257199496031:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -5.939055185765028:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -5.938787396997213:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -5.729757022112608:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.019942786544561:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -5.552890073508024:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -5.729757022112608:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -5.577946584671736:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -5.938787396997213:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -6.0298035852611065:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.262339320033789:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -6.0599335841834545:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.019942786544561:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -6.262339320033789:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -5.931257199496031:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -6.334336053580046:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -5.939055185765028:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -6.315690707415342:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.47828833386302:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.478656437247992:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.515592288225889:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference']
copynode -6.4701310954988:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.474031712859869:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.334336053580046:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -6.540405105799437:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.540465783327818:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.869520019739866:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -5.881572540849447:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -6.392019849270582:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.388072144240141:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.808830749243498:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -6.5709847919642925:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.388072144240141:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.5785590671002865:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.840375285595655:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -6.392019849270582:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.315690707415342:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.446484159678221:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.391080792993307:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.446484159678221:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
before@16 batch0 x: -7.251135420054197: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
after@16 batch0 x: -7.251135420054197: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.052700888365507:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.083257716149092:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.052700888365507:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.083257716149092:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.473095308989286:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -6.549004029482603:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -6.243874024599791:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.251555975526571:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.243874024599791:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.251555975526571:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.386091839522123:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.389016073197126:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.455819245427847:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.386091839522123:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.389016073197126:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.5226766131818295:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.455819245427847:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.5427332036197186:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.558292310684919:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.5427332036197186:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.5226766131818295:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -6.558292310684919:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.942912649363279:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference']
copynode -6.968445759266615:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference']
copynode -7.034195106476545:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.036950971931219:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.0474186055362225:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.026886593550444:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -7.147928070276976:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -7.1395374946296215:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -7.170558821409941:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -7.0981337539851665:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.1006160490214825:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.190841358155012:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -7.06570827588439:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.071726527065039:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.205538224428892:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -6.891831513494253:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.950847294181585:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -7.1931578032672405:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -7.16834981366992:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.251135420054197:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -7.1780782006680965:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -6.891831513494253:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
before@17 batch0 x: -7.742554362863302: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
after@17 batch0 x: -7.742554362863302: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.944587778300047:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.020486276596785:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.831473361700773:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -6.861736159771681:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -7.0290165059268475:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -7.035109218209982:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -6.908251773566008:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -6.93903337046504:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -7.083421718329191:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -7.091425534337759:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -7.167856227606535:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -7.16971967741847:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -7.24193961545825:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -7.244546752423048:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -7.239103134721518:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -7.35770882293582:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -7.373940389603376:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -7.304866936057806:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -7.56207824870944:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.390757571905851:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -7.444043528288603:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.406426351517439:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -7.3358935080468655:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -7.471510212868452:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.401239480823278:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -7.5725301913917065:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.574850659817457:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.594463359564543:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.62535459920764:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.7291842214763165:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.685977052897215:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.7316667549312115:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.944587778300047:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.831473361700773:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal']
copynode -6.861736159771681:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal']
copynode -7.020486276596785:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.706598993390799:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -6.908251773566008:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal']
copynode -7.742554362863302:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference']
copynode -6.93903337046504:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal']
copynode -7.547352861613035:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -7.7238187454640865:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -7.547352861613035:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.542586486786604:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
before@18 batch0 x: -8.487415712326765: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
after@18 batch0 x: -8.487415712326765: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -7.398767959326506:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.428509395569563:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.323160242289305:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.474146854132414:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.5044425539672375:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.4612512700259686:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.396876614540815:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.46786218509078:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.514489900320768:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.522980060428381:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.719532381743193:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.721929889172316:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.792709302157164:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.795816462486982:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -8.128674041479826:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -7.80115931853652:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -8.159233789891005:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -7.867369081825018:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -8.20716954395175:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -7.844688665121794:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.898162838071585:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.8606577925384045:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -8.238249283283949:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -7.884003292769194:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.875783335417509:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.869657587260008:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.891216289252043:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.91018895432353:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.963910784572363:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.9728176407516:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.992904674261808:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.983029883354902:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -8.031770180910826:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -8.034367214888334:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.323160242289305:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -8.056986223906279:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.396876614540815:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -8.100604962557554:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -8.200979437679052:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.4612512700259686:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.46786218509078:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.236357625573874:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -8.334482755512:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.514489900320768:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
before@19 batch0 x: -8.68150294944644: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
after@19 batch0 x: -8.68150294944644: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.716814320534468:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.745944421738386:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.842011522501707:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.849291082471609:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.7898956052958965:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.892757099121809:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.901915695518255:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.819606106728315:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -8.057862918823957:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -8.06126893684268:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.764077167958021:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.128592800348997:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -8.132696729153395:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -8.14522596821189:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -8.212075587362051:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.842239540070295:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.239924158900976:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -8.236606072634459:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -8.30631085857749:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -8.25174368545413:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -8.265341978520155:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -8.279948633164167:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -7.764077167958021:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.142099344171584:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.172716786153615:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.716814320534468:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -7.745944421738386:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -7.842239540070295:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.220716459676623:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.7898956052958965:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -8.251855168491602:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.819606106728315:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -8.604197468608618:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -8.275105100125074:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.63771602138877:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -8.66455179080367:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -8.264341216534376:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.349156390875578:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.296703170984983:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -7.842011522501707:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -8.372601192444563:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -7.849291082471609:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -8.386615585535765:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -7.892757099121809:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
before@20 batch0 x: -9.195272248238325: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
after@20 batch0 x: -9.195272248238325: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -8.153363984078169:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.184526395052671:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.199439238756895:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.20522129163146:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.229340862482786:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.251952957361937:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.260791342705488:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.25984438881278:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.199439238756895:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.20522129163146:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.153363984078169:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.184526395052671:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.251952957361937:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.25984438881278:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.229340862482786:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.476803790777922:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.478446613997221:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.260791342705488:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.550556223839521:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.553183507174253:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.554353680461645:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.549898486584425:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -8.618452068418264:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.652245547622442:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.701777320355177:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.719138871878386:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.82032408658415:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference']
copynode -8.733284931629896:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.62642852589488:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -8.749772232025862:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.716110732406378:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.850612272508442:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference']
copynode -8.476803790777922:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.478446613997221:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.89789686910808:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference']
copynode -8.550556223839521:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.553183507174253:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.928701136261225:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference']
copynode -8.549898486584425:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal']
copynode -8.554353680461645:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -8.851728241890669:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -8.876237791031599:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -8.81352649256587:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -8.618452068418264:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
before@21 batch0 x: -9.755249496549368: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
after@21 batch0 x: -9.755249496549368: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -9.685548406094313:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -9.473447423428297:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -9.550386052578688:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -9.54214080516249:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -9.024112831801176:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -9.030210431665182:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -9.572837342508137:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -9.074939083307981:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -9.082897152751684:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -8.977379780262709:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -9.62194506637752:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -9.733885686844587:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -9.008051883429289:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -9.653189215809107:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -9.050858031958342:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -9.082138996571302:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -9.220655631273985:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -9.225982662290335:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -8.977379780262709:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal']
copynode -9.27033169195056:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -9.27762981876731:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -9.008051883429289:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal']
copynode -9.050858031958342:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal']
copynode -9.22661666199565:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -9.082138996571302:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal']
copynode -9.024112831801176:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal']
copynode -9.257861208170652:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -9.030210431665182:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal']
copynode -8.977379780262709:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -9.306969534605742:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -9.308297645300627:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -9.008051883429289:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -9.29993112012744:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -9.074939083307981:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal']
copynode -9.082897152751684:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal']
copynode -9.331589620560408:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -9.050858031958342:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -9.379503052681684:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -9.381584119051695:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference']
copynode -9.082138996571302:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -9.22661666199565:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal']
copynode -9.024112831801176:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -9.030210431665182:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -9.257861208170652:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal']
before@22 batch0 x: -10.427994918078184: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal']
after@22 batch0 x: -10.427994918078184: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal']
copynode -10.146952968090773:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -9.743674200028181:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.177412759512663:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -9.91586084291339:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -9.922322984784842:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -10.2194935195148:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -9.966366242617369:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -9.981784325093031:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -9.97468676790595:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -9.820394437760115:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.252048145979643:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -10.250569324940443:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -10.258313830941916:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -10.012146722525358:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -10.26361022517085:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.30167431756854:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -10.055333863943815:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -10.309794511646032:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -10.295035254210234:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.086310248821974:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -10.338273655623198:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.108217548578978:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -10.113900896161795:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -10.370291572064161:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.396963279694319:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -9.701389227062464:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -10.157534670084715:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -10.427994918078184:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -10.165191318839788:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -9.9114313358441:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.003234755247831:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.41606117412448:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -10.4211729131639:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -9.941462029702961:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.227047245949507:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -10.257987093180418:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -9.988764567300677:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.266434084624052:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -10.26819921657443:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -10.019366059452295:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.30039794370532:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -10.33175889775157:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -10.338835638016462:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -10.341347765177488:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
before@23 batch0 x: -10.613098572939634: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
after@23 batch0 x: -10.613098572939634: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -10.301408037543297:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -10.332797843962908:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -10.375967167317867:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -10.407954633235931:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -10.451997198164463:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -10.457128707319498:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -10.198076765984297:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.205039735883474:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.247726511210203:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.25652664527297:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.248794805258512:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.27870286628604:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.321531426161528:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.388915073126554:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.162471560761333:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -10.395064737647772:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.352075409144163:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.192976091057062:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -10.437434624880552:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.445537146180868:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.235078705474734:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -10.266199069097638:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -10.266094598919153:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -10.272324015386403:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -10.492783706635237:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.185628157109022:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.315783155150712:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -10.323867199011147:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -10.523300390690565:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.538486134260893:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.540864359587431:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.5653708986938:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.265127580612898:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.412524552084506:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -10.596326690167189:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.609997104853392:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.613098572939634:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -10.443600808270276:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -10.44856096431613:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.248794805258512:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -10.27870286628604:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -10.198076765984297:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -10.205039735883474:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -10.448025369085371:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
before@24 batch0 x: -11.312041961587965: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
after@24 batch0 x: -11.312041961587965: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -11.004225891083479:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -10.647983681410551:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.653163906186819:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.699621628969908:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.706773485988379:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -11.08288810774684:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -10.747791837900877:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.77992345020175:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -11.312041961587965:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -10.823142122477293:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.83991713449359:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.844511892646551:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.855746697634459:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.843207148835063:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -10.890151184052229:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -11.261280607432127:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -10.896812733262777:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.647983681410551:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.653163906186819:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.873204443603754:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -10.699621628969908:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.914927853271365:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -10.706773485988379:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.945558505132794:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -10.993376951664686:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -11.037736903876066:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -11.038312386721373:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -11.025868456810713:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.747791837900877:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -11.068258624523878:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.77992345020175:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.83991713449359:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.962999675422907:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -10.844511892646551:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -10.96976559329778:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -11.111596655100584:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -11.11305857822299:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -11.101051192730665:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
before@25 batch0 x: -11.976965885609388: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
after@25 batch0 x: -11.976965885609388: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member']
copynode -11.514865141361952:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -11.592481713742018:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -11.67191591206938:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -11.761940149590373:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member']
copynode -11.771688889712095:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -11.79308221116662:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member']
copynode -11.834358228370547:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member']
copynode -11.866126196458936:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member']
copynode -11.968985889106989:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member']
copynode -11.974519182927907:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member']
copynode -11.534094702452421:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.539481040090322:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.583757054060698:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.591021325439215:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.635245990008116:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.666793715208769:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.71716208383441:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.707845997065306:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.721736457198858:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.739991139620543:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.765876393765211:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.772438880056143:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.781620990484953:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.785832282155752:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.831595968455076:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.837655033916235:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.871709685772657:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.902790557593107:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.902947675436735:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.903889875859022:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.912015747278929:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.944379311054945:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.944858323782682:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.975227665156126:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.976156126707792:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.96562285348773:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.969003345817327:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.976965885609388:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
before@26 batch0 x: -12.480486255139112: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
after@26 batch0 x: -12.480486255139112: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End']
copynode -11.547788470983505:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -11.625376153737307:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -11.703122577629983:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -11.791992254555225:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -11.80449728295207:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -11.82309789210558:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -11.864323485642672:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -11.896057797595859:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.000512804836035:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.0060741500929:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.024261515587568:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.029852446168661:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.07373247668147:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.081208195537329:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.138397764414549:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.169770490378141:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.208697240799665:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.21055544540286:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.213483061641455:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.242511104792356:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.257219802588224:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.264001782983541:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.27741975709796:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.281842347234488:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.32720286771655:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.333482708781958:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.375880878418684:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.387194287031889:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.38730613514781:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.407875698059797:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.420100402086973:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.448100071400404:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.452762197703123:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.459492098540068:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.460380118340254:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.46286953613162:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.466469075530767:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.480486255139112:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
before@27 batch0 x: -12.507287429645658: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
after@27 batch0 x: -12.507287429645658: root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member']
copynode -12.051212823018432:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.056813303381205:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.100665410980582:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.108151724562049:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.165332170203328:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.196690814569592:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.23554696701467:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.237462909892201:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.240341970697045:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.2694043032825:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.284052385017276:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.290844162926078:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.3042271155864:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.308658277615905:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.353994369506836:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.360283823683858:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.402720993384719:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.415236562490463:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.415356809273362:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.434702342376113:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.44690720923245:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.474915083497763:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.47955621033907:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.487531369552016:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.488429015502334:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.489581877365708:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.493189437314868:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.507287429645658:  root modified ^ StatementExpression expression MethodInvocation qualifier System_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ MemberReference qualifier par0 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ MemberReference qualifier par1 ^ ^ member length_ter ^ ^ ^ ^ member arraycopy_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
method
7 
method
System_ter {'array1_ter': 'T', 'array2_ter': 'T', 'type1_ter': 'Class', 'joinedArray_ter': 'T'}
System_ter EMPTY_OBJECT_ARRAY
System_ter EMPTY_CLASS_ARRAY
System_ter EMPTY_STRING_ARRAY
System_ter EMPTY_LONG_ARRAY
System_ter EMPTY_LONG_OBJECT_ARRAY
System_ter EMPTY_INT_ARRAY
System_ter EMPTY_INTEGER_OBJECT_ARRAY
System_ter EMPTY_SHORT_ARRAY
System_ter EMPTY_SHORT_OBJECT_ARRAY
System_ter EMPTY_BYTE_ARRAY
System_ter EMPTY_BYTE_OBJECT_ARRAY
System_ter EMPTY_DOUBLE_ARRAY
System_ter EMPTY_DOUBLE_OBJECT_ARRAY
System_ter EMPTY_FLOAT_ARRAY
System_ter EMPTY_FLOAT_OBJECT_ARRAY
System_ter EMPTY_BOOLEAN_ARRAY
System_ter EMPTY_BOOLEAN_OBJECT_ARRAY
System_ter EMPTY_CHAR_ARRAY
System_ter EMPTY_CHARACTER_OBJECT_ARRAY
System_ter INDEX_NOT_FOUND
7 
String  toString arraycopy_ter
String  toString arraycopy_ter
boolean  isEquals arraycopy_ter
Map  toMap arraycopy_ter
T  clone arraycopy_ter
long  clone arraycopy_ter
int  clone arraycopy_ter
short  clone arraycopy_ter
char  clone arraycopy_ter
byte  clone arraycopy_ter
double  clone arraycopy_ter
float  clone arraycopy_ter
boolean  clone arraycopy_ter
T  subarray arraycopy_ter
long  subarray arraycopy_ter
int  subarray arraycopy_ter
short  subarray arraycopy_ter
char  subarray arraycopy_ter
byte  subarray arraycopy_ter
double  subarray arraycopy_ter
float  subarray arraycopy_ter
boolean  subarray arraycopy_ter
boolean  isSameLength arraycopy_ter
boolean  isSameLength arraycopy_ter
boolean  isSameLength arraycopy_ter
boolean  isSameLength arraycopy_ter
boolean  isSameLength arraycopy_ter
boolean  isSameLength arraycopy_ter
boolean  isSameLength arraycopy_ter
boolean  isSameLength arraycopy_ter
boolean  isSameLength arraycopy_ter
int  getLength arraycopy_ter
boolean  isSameType arraycopy_ter
None  reverse arraycopy_ter
None  reverse arraycopy_ter
None  reverse arraycopy_ter
None  reverse arraycopy_ter
None  reverse arraycopy_ter
None  reverse arraycopy_ter
None  reverse arraycopy_ter
None  reverse arraycopy_ter
None  reverse arraycopy_ter
int  indexOf arraycopy_ter
int  indexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
boolean  contains arraycopy_ter
int  indexOf arraycopy_ter
int  indexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
boolean  contains arraycopy_ter
int  indexOf arraycopy_ter
int  indexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
boolean  contains arraycopy_ter
int  indexOf arraycopy_ter
int  indexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
boolean  contains arraycopy_ter
int  indexOf arraycopy_ter
int  indexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
boolean  contains arraycopy_ter
int  indexOf arraycopy_ter
int  indexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
boolean  contains arraycopy_ter
int  indexOf arraycopy_ter
int  indexOf arraycopy_ter
int  indexOf arraycopy_ter
int  indexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
boolean  contains arraycopy_ter
boolean  contains arraycopy_ter
int  indexOf arraycopy_ter
int  indexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
boolean  contains arraycopy_ter
int  indexOf arraycopy_ter
int  indexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
int  lastIndexOf arraycopy_ter
boolean  contains arraycopy_ter
char  toPrimitive arraycopy_ter
char  toPrimitive arraycopy_ter
Character  toObject arraycopy_ter
long  toPrimitive arraycopy_ter
long  toPrimitive arraycopy_ter
Long  toObject arraycopy_ter
int  toPrimitive arraycopy_ter
int  toPrimitive arraycopy_ter
Integer  toObject arraycopy_ter
short  toPrimitive arraycopy_ter
short  toPrimitive arraycopy_ter
Short  toObject arraycopy_ter
byte  toPrimitive arraycopy_ter
byte  toPrimitive arraycopy_ter
Byte  toObject arraycopy_ter
double  toPrimitive arraycopy_ter
double  toPrimitive arraycopy_ter
Double  toObject arraycopy_ter
float  toPrimitive arraycopy_ter
float  toPrimitive arraycopy_ter
Float  toObject arraycopy_ter
boolean  toPrimitive arraycopy_ter
boolean  toPrimitive arraycopy_ter
Boolean  toObject arraycopy_ter
boolean  isEmpty arraycopy_ter
boolean  isEmpty arraycopy_ter
boolean  isEmpty arraycopy_ter
boolean  isEmpty arraycopy_ter
boolean  isEmpty arraycopy_ter
boolean  isEmpty arraycopy_ter
boolean  isEmpty arraycopy_ter
boolean  isEmpty arraycopy_ter
boolean  isEmpty arraycopy_ter
T  addAll arraycopy_ter
boolean  addAll arraycopy_ter
char  addAll arraycopy_ter
byte  addAll arraycopy_ter
short  addAll arraycopy_ter
int  addAll arraycopy_ter
long  addAll arraycopy_ter
float  addAll arraycopy_ter
double  addAll arraycopy_ter
T  add arraycopy_ter
boolean  add arraycopy_ter
byte  add arraycopy_ter
char  add arraycopy_ter
double  add arraycopy_ter
float  add arraycopy_ter
int  add arraycopy_ter
long  add arraycopy_ter
short  add arraycopy_ter
Object  copyArrayGrow1 arraycopy_ter
T  add arraycopy_ter
boolean  add arraycopy_ter
char  add arraycopy_ter
byte  add arraycopy_ter
short  add arraycopy_ter
int  add arraycopy_ter
long  add arraycopy_ter
float  add arraycopy_ter
double  add arraycopy_ter
Object  add arraycopy_ter
T  remove arraycopy_ter
T  removeElement arraycopy_ter
boolean  remove arraycopy_ter
boolean  removeElement arraycopy_ter
byte  remove arraycopy_ter
byte  removeElement arraycopy_ter
char  remove arraycopy_ter
char  removeElement arraycopy_ter
double  remove arraycopy_ter
double  removeElement arraycopy_ter
float  remove arraycopy_ter
float  removeElement arraycopy_ter
int  remove arraycopy_ter
int  removeElement arraycopy_ter
long  remove arraycopy_ter
long  removeElement arraycopy_ter
short  remove arraycopy_ter
short  removeElement arraycopy_ter
Object  remove arraycopy_ter
6 length_ter
6 length_ter
6 length_ter
6 length_ter
6 length_ter
6 length_ter
6 length_ter
6 length_ter
6 joinedArray_ter
6 array2_ter
method
7 
String  toString 
String  toString 
boolean  isEquals 
Map  toMap 
T  clone 
long  clone 
int  clone 
short  clone 
char  clone 
byte  clone 
double  clone 
float  clone 
boolean  clone 
T  subarray 
long  subarray 
int  subarray 
short  subarray 
char  subarray 
byte  subarray 
double  subarray 
float  subarray 
boolean  subarray 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
int  getLength 
boolean  isSameType 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
char  toPrimitive 
char  toPrimitive 
Character  toObject 
long  toPrimitive 
long  toPrimitive 
Long  toObject 
int  toPrimitive 
int  toPrimitive 
Integer  toObject 
short  toPrimitive 
short  toPrimitive 
Short  toObject 
byte  toPrimitive 
byte  toPrimitive 
Byte  toObject 
double  toPrimitive 
double  toPrimitive 
Double  toObject 
float  toPrimitive 
float  toPrimitive 
Float  toObject 
boolean  toPrimitive 
boolean  toPrimitive 
Boolean  toObject 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
T  addAll 
boolean  addAll 
char  addAll 
byte  addAll 
short  addAll 
int  addAll 
long  addAll 
float  addAll 
double  addAll 
T  add 
boolean  add 
byte  add 
char  add 
double  add 
float  add 
int  add 
long  add 
short  add 
Object  copyArrayGrow1 
T  add 
boolean  add 
char  add 
byte  add 
short  add 
int  add 
long  add 
float  add 
double  add 
Object  add 
T  remove 
T  removeElement 
boolean  remove 
boolean  removeElement 
byte  remove 
byte  removeElement 
char  remove 
char  removeElement 
double  remove 
double  removeElement 
float  remove 
float  removeElement 
int  remove 
int  removeElement 
long  remove 
long  removeElement 
short  remove 
short  removeElement 
Object  remove 
6 joinedArray_ter
6 length_ter
6 length_ter
6 array2_ter
6 length_ter
6 length_ter
method
7 
String  toString 
String  toString 
boolean  isEquals 
Map  toMap 
T  clone 
long  clone 
int  clone 
short  clone 
char  clone 
byte  clone 
double  clone 
float  clone 
boolean  clone 
T  subarray 
long  subarray 
int  subarray 
short  subarray 
char  subarray 
byte  subarray 
double  subarray 
float  subarray 
boolean  subarray 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
int  getLength 
boolean  isSameType 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
char  toPrimitive 
char  toPrimitive 
Character  toObject 
long  toPrimitive 
long  toPrimitive 
Long  toObject 
int  toPrimitive 
int  toPrimitive 
Integer  toObject 
short  toPrimitive 
short  toPrimitive 
Short  toObject 
byte  toPrimitive 
byte  toPrimitive 
Byte  toObject 
double  toPrimitive 
double  toPrimitive 
Double  toObject 
float  toPrimitive 
float  toPrimitive 
Float  toObject 
boolean  toPrimitive 
boolean  toPrimitive 
Boolean  toObject 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
T  addAll 
boolean  addAll 
char  addAll 
byte  addAll 
short  addAll 
int  addAll 
long  addAll 
float  addAll 
double  addAll 
T  add 
boolean  add 
byte  add 
char  add 
double  add 
float  add 
int  add 
long  add 
short  add 
Object  copyArrayGrow1 
T  add 
boolean  add 
char  add 
byte  add 
short  add 
int  add 
long  add 
float  add 
double  add 
Object  add 
T  remove 
T  removeElement 
boolean  remove 
boolean  removeElement 
byte  remove 
byte  removeElement 
char  remove 
char  removeElement 
double  remove 
double  removeElement 
float  remove 
float  removeElement 
int  remove 
int  removeElement 
long  remove 
long  removeElement 
short  remove 
short  removeElement 
Object  remove 
6 length_ter
6 length_ter
method
7 
String  toString 
String  toString 
boolean  isEquals 
Map  toMap 
T  clone 
long  clone 
int  clone 
short  clone 
char  clone 
byte  clone 
double  clone 
float  clone 
boolean  clone 
T  subarray 
long  subarray 
int  subarray 
short  subarray 
char  subarray 
byte  subarray 
double  subarray 
float  subarray 
boolean  subarray 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
int  getLength 
boolean  isSameType 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
char  toPrimitive 
char  toPrimitive 
Character  toObject 
long  toPrimitive 
long  toPrimitive 
Long  toObject 
int  toPrimitive 
int  toPrimitive 
Integer  toObject 
short  toPrimitive 
short  toPrimitive 
Short  toObject 
byte  toPrimitive 
byte  toPrimitive 
Byte  toObject 
double  toPrimitive 
double  toPrimitive 
Double  toObject 
float  toPrimitive 
float  toPrimitive 
Float  toObject 
boolean  toPrimitive 
boolean  toPrimitive 
Boolean  toObject 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
T  addAll 
boolean  addAll 
char  addAll 
byte  addAll 
short  addAll 
int  addAll 
long  addAll 
float  addAll 
double  addAll 
T  add 
boolean  add 
byte  add 
char  add 
double  add 
float  add 
int  add 
long  add 
short  add 
Object  copyArrayGrow1 
T  add 
boolean  add 
char  add 
byte  add 
short  add 
int  add 
long  add 
float  add 
double  add 
Object  add 
T  remove 
T  removeElement 
boolean  remove 
boolean  removeElement 
byte  remove 
byte  removeElement 
char  remove 
char  removeElement 
double  remove 
double  removeElement 
float  remove 
float  removeElement 
int  remove 
int  removeElement 
long  remove 
long  removeElement 
short  remove 
short  removeElement 
Object  remove 
6 length_ter
6 length_ter
6 length_ter
6 length_ter
6 joinedArray_ter
6 joinedArray_ter
6 array2_ter
6 array2_ter
method
joinedArray_ter {'array1_ter': 'T', 'array2_ter': 'T', 'type1_ter': 'Class', 'joinedArray_ter': 'T'}
7 T
6 array2_ter
6 joinedArray_ter
6 length_ter
method
7 
String  toString 
String  toString 
boolean  isEquals 
Map  toMap 
T  clone 
long  clone 
int  clone 
short  clone 
char  clone 
byte  clone 
double  clone 
float  clone 
boolean  clone 
T  subarray 
long  subarray 
int  subarray 
short  subarray 
char  subarray 
byte  subarray 
double  subarray 
float  subarray 
boolean  subarray 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
boolean  isSameLength 
int  getLength 
boolean  isSameType 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
None  reverse 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
int  indexOf 
int  indexOf 
int  lastIndexOf 
int  lastIndexOf 
boolean  contains 
char  toPrimitive 
char  toPrimitive 
Character  toObject 
long  toPrimitive 
long  toPrimitive 
Long  toObject 
int  toPrimitive 
int  toPrimitive 
Integer  toObject 
short  toPrimitive 
short  toPrimitive 
Short  toObject 
byte  toPrimitive 
byte  toPrimitive 
Byte  toObject 
double  toPrimitive 
double  toPrimitive 
Double  toObject 
float  toPrimitive 
float  toPrimitive 
Float  toObject 
boolean  toPrimitive 
boolean  toPrimitive 
Boolean  toObject 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
boolean  isEmpty 
T  addAll 
boolean  addAll 
char  addAll 
byte  addAll 
short  addAll 
int  addAll 
long  addAll 
float  addAll 
double  addAll 
T  add 
boolean  add 
byte  add 
char  add 
double  add 
float  add 
int  add 
long  add 
short  add 
Object  copyArrayGrow1 
T  add 
boolean  add 
char  add 
byte  add 
short  add 
int  add 
long  add 
float  add 
double  add 
Object  add 
T  remove 
T  removeElement 
boolean  remove 
boolean  removeElement 
byte  remove 
byte  removeElement 
char  remove 
char  removeElement 
double  remove 
double  removeElement 
float  remove 
float  removeElement 
int  remove 
int  removeElement 
long  remove 
long  removeElement 
short  remove 
short  removeElement 
Object  remove 
6 joinedArray_ter
6 length_ter
stderr: Check out program version: Lang-37b........................................ OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:36<00:00, 36.75s/it]100%|██████████| 1/1 [00:36<00:00, 36.75s/it]
