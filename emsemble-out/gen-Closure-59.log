stdout: else_statement -> BlockStatement
using GPU
p
path com.google.javascript.jscomp.Compiler
initOptions
Position(line=226, column=10)
FOUND IT!
[{'bugid': 'Closure-59', 'treeroot': <Searchnode.Node object at 0x7f3fa1b20e50>, 'troot': <Searchnode.Node object at 0x7f3fa1b20e50>, 'oldcode': '    if (options.checkGlobalThisLevel.isOn()) {', 'filepath': 'buggy/Closure-59/src/com/google/javascript/jscomp/Compiler.java', 'subroot': <Searchnode.Node object at 0x7f3fa1b3c810>, 'vardic': {'initOptions_ter': 'meth0', 'options_ter': 'par0', 'printer_ter': 'loc0', 'guards_ter': 'loc1', 'composedGuards_ter': 'loc2'}, 'typedic': {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}, 'idss': 'Closure-59', 'classname': 'com.google.javascript.jscomp.Compiler', 'precode': '/*\n * Copyright 2004 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.javascript.jscomp;\n\nimport com.google.common.annotations.VisibleForTesting;\nimport com.google.common.base.Preconditions;\nimport com.google.common.base.Supplier;\nimport com.google.common.collect.Lists;\nimport com.google.common.collect.Maps;\nimport com.google.javascript.jscomp.CompilerOptions.DevMode;\nimport com.google.javascript.jscomp.CompilerOptions.LanguageMode;\nimport com.google.javascript.jscomp.CompilerOptions.TracerMode;\nimport com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection;\nimport com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap;\nimport com.google.javascript.jscomp.Scope.Var;\nimport com.google.javascript.jscomp.deps.SortedDependencies.CircularDependencyException;\nimport com.google.javascript.jscomp.deps.SortedDependencies.MissingProvideException;\nimport com.google.javascript.jscomp.mozilla.rhino.ErrorReporter;\nimport com.google.javascript.jscomp.parsing.Config;\nimport com.google.javascript.jscomp.parsing.ParserRunner;\nimport com.google.javascript.rhino.JSDocInfo;\nimport com.google.javascript.rhino.Node;\nimport com.google.javascript.rhino.Token;\nimport com.google.javascript.rhino.jstype.JSTypeRegistry;\n\nimport java.io.IOException;\nimport java.io.PrintStream;\nimport java.io.Serializable;\nimport java.nio.charset.Charset;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.concurrent.Callable;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\n\n/**\n * Compiler (and the other classes in this package) does the following:\n * <ul>\n * <li>parses JS code\n * <li>checks for undefined variables\n * <li>performs optimizations such as constant folding and constants inlining\n * <li>renames variables (to short names)\n * <li>outputs compact javascript code\n * </ul>\n *\n * External variables are declared in \'externs\' files. For instance, the file\n * may include definitions for global javascript/browser objects such as\n * window, document.\n *\n */\npublic class Compiler extends AbstractCompiler {\n\n  static final DiagnosticType MODULE_DEPENDENCY_ERROR =\n      DiagnosticType.error("JSC_MODULE_DEPENDENCY_ERROR",\n          "Bad dependency: {0} -> {1}. "\n              + "Modules must be listed in dependency order.");\n\n  static final DiagnosticType MISSING_ENTRY_ERROR = DiagnosticType.error(\n      "JSC_MISSING_ENTRY_ERROR",\n      "required entry point \\"{0}\\" never provided");\n\n  CompilerOptions options = null;\n\n  private PassConfig passes = null;\n\n  // The externs inputs\n  private List<CompilerInput> externs;\n\n  // The JS source modules\n  private List<JSModule> modules;\n\n  // The graph of the JS source modules. Must be null if there are less than\n  // 2 modules, because we use this as a signal for which passes to run.\n  private JSModuleGraph moduleGraph;\n\n  // The JS source inputs\n  private List<CompilerInput> inputs;\n\n  // error manager to which error management is delegated\n  private ErrorManager errorManager;\n\n  // Warnings guard for filtering warnings.\n  private WarningsGuard warningsGuard;\n\n  // Parse tree root nodes\n  Node externsRoot;\n  Node jsRoot;\n  Node externAndJsRoot;\n\n  private Map<String, CompilerInput> inputsByName;\n\n  /** The source code map */\n  private SourceMap sourceMap;\n\n  /** The externs created from the exports.  */\n  private String externExports = null;\n\n  /**\n   * Ids for function inlining so that each declared name remains\n   * unique.\n   */\n  private int uniqueNameId = 0;\n\n  /** Whether to use threads. */\n  private boolean useThreads = true;\n\n  /**\n   * Whether to assume there are references to the RegExp Global object\n   * properties.\n   */\n  private boolean hasRegExpGlobalReferences = true;\n\n  /** The function information map */\n  private FunctionInformationMap functionInformationMap;\n\n  /** Debugging information */\n  private final StringBuilder debugLog = new StringBuilder();\n\n  /** Detects Google-specific coding conventions. */\n  CodingConvention defaultCodingConvention = new ClosureCodingConvention();\n\n  private JSTypeRegistry typeRegistry;\n  private Config parserConfig = null;\n\n  private ReverseAbstractInterpreter abstractInterpreter;\n  private TypeValidator typeValidator;\n\n  public PerformanceTracker tracker;\n\n  // The oldErrorReporter exists so we can get errors from the JSTypeRegistry.\n  private final com.google.javascript.rhino.ErrorReporter oldErrorReporter =\n      RhinoErrorReporter.forOldRhino(this);\n\n  // This error reporter gets the messages from the current Rhino parser.\n  private final ErrorReporter defaultErrorReporter =\n      RhinoErrorReporter.forNewRhino(this);\n\n  /** Error strings used for reporting JSErrors */\n  public static final DiagnosticType OPTIMIZE_LOOP_ERROR = DiagnosticType.error(\n      "JSC_OPTIMIZE_LOOP_ERROR",\n      "Exceeded max number of optimization iterations: {0}");\n  public static final DiagnosticType MOTION_ITERATIONS_ERROR =\n      DiagnosticType.error("JSC_OPTIMIZE_LOOP_ERROR",\n          "Exceeded max number of code motion iterations: {0}");\n\n  private static final long COMPILER_STACK_SIZE = 1048576L;\n\n\n  /**\n   * Logger for the whole com.google.javascript.jscomp domain -\n   * setting configuration for this logger affects all loggers\n   *  in other classes within the compiler.\n   */\n  private static final Logger logger =\n      Logger.getLogger("com.google.javascript.jscomp");\n\n  private final PrintStream outStream;\n\n  private GlobalVarReferenceMap globalRefMap = null;\n\n  /**\n   * Creates a Compiler that reports errors and warnings to its logger.\n   */\n  public Compiler() {\n    this((PrintStream) null);\n  }\n\n  /**\n   * Creates n Compiler that reports errors and warnings to an output\n   * stream.\n   */\n  public Compiler(PrintStream stream) {\n    addChangeHandler(recentChange);\n    outStream = stream;\n  }\n\n  /**\n   * Creates a Compiler that uses a custom error manager.\n   */\n  public Compiler(ErrorManager errorManager) {\n    this();\n    setErrorManager(errorManager);\n  }\n\n  /**\n   * Sets the error manager.\n   *\n   * @param errorManager the error manager, it cannot be {@code null}\n   */\n  public void setErrorManager(ErrorManager errorManager) {\n    Preconditions.checkNotNull(\n        errorManager, "the error manager cannot be null");\n    this.errorManager = errorManager;\n  }\n\n  /**\n   * Creates a message formatter instance corresponding to the value of\n   * {@link CompilerOptions}.\n   */\n  private MessageFormatter createMessageFormatter() {\n    boolean colorize = options.shouldColorizeErrorOutput();\n    return options.errorFormat.toFormatter(this, colorize);\n  }\n\n  /**\n   * Initialize the compiler options. Only necessary if you\'re not doing\n   * a normal compile() job.\n   */\n  public void initOptions(CompilerOptions options) {\n    this.options = options;\n    if (errorManager == null) {\n      if (outStream == null) {\n        setErrorManager(\n            new LoggerErrorManager(createMessageFormatter(), logger));\n      } else {\n        PrintStreamErrorManager printer =\n            new PrintStreamErrorManager(createMessageFormatter(), outStream);\n        printer.setSummaryDetailLevel(options.summaryDetailLevel);\n        setErrorManager(printer);\n      }\n    }\n\n    // DiagnosticGroups override the plain checkTypes option.\n    if (options.enables(DiagnosticGroups.CHECK_TYPES)) {\n      options.checkTypes = true;\n    } else if (options.disables(DiagnosticGroups.CHECK_TYPES)) {\n      options.checkTypes = false;\n    } else if (!options.checkTypes) {\n      // If DiagnosticGroups did not override the plain checkTypes\n      // option, and checkTypes is enabled, then turn off the\n      // parser type warnings.\n      options.setWarningLevel(\n          DiagnosticGroup.forType(\n              RhinoErrorReporter.TYPE_PARSE_ERROR),\n          CheckLevel.OFF);\n    }\n', 'aftercode': '      options.setWarningLevel(\n          DiagnosticGroups.GLOBAL_THIS,\n          options.checkGlobalThisLevel);\n    }\n\n    if (options.getLanguageIn() == LanguageMode.ECMASCRIPT5_STRICT) {\n      options.setWarningLevel(\n          DiagnosticGroups.ES5_STRICT,\n          CheckLevel.ERROR);\n    }\n\n    // Initialize the warnings guard.\n    List<WarningsGuard> guards = Lists.newArrayList();\n    guards.add(\n        new SuppressDocWarningsGuard(\n            getDiagnosticGroups().getRegisteredGroups()));\n    guards.add(options.getWarningsGuard());\n\n    ComposeWarningsGuard composedGuards = new ComposeWarningsGuard(guards);\n\n    // All passes must run the variable check. This synthesizes\n    // variables later so that the compiler doesn\'t crash. It also\n    // checks the externs file for validity. If you don\'t want to warn\n    // about missing variable declarations, we shut that specific\n    // error off.\n    if (!options.checkSymbols &&\n        !composedGuards.enables(DiagnosticGroups.CHECK_VARIABLES)) {\n      composedGuards.addGuard(new DiagnosticGroupWarningsGuard(\n          DiagnosticGroups.CHECK_VARIABLES, CheckLevel.OFF));\n    }\n\n    this.warningsGuard = composedGuards;\n  }\n\n  /**\n   * Initializes the instance state needed for a compile job.\n   */\n  public void init(JSSourceFile[] externs, JSSourceFile[] inputs,\n      CompilerOptions options) {\n    init(Lists.<JSSourceFile>newArrayList(externs),\n        Lists.<JSSourceFile>newArrayList(inputs), options);\n  }\n\n  /**\n   * Initializes the instance state needed for a compile job.\n   */\n  public void init(List<JSSourceFile> externs, List<JSSourceFile> inputs,\n      CompilerOptions options) {\n    JSModule module = new JSModule("[singleton]");\n    for (JSSourceFile input : inputs) {\n      module.add(input);\n    }\n\n    initModules(externs, Lists.newArrayList(module), options);\n  }\n\n  /**\n   * Initializes the instance state needed for a compile job if the sources\n   * are in modules.\n   */\n  public void init(JSSourceFile[] externs, JSModule[] modules,\n      CompilerOptions options) {\n    initModules(Lists.<JSSourceFile>newArrayList(externs),\n         Lists.<JSModule>newArrayList(modules), options);\n  }\n\n  /**\n   * Initializes the instance state needed for a compile job if the sources\n   * are in modules.\n   */\n  public void initModules(\n      List<JSSourceFile> externs, List<JSModule> modules,\n      CompilerOptions options) {\n    initOptions(options);\n\n    checkFirstModule(modules);\n    fillEmptyModules(modules);\n\n    this.externs = makeCompilerInput(externs, true);\n\n    // Generate the module graph, and report any errors in the module\n    // specification as errors.\n    this.modules = modules;\n    if (modules.size() > 1) {\n      try {\n        this.moduleGraph = new JSModuleGraph(modules);\n      } catch (JSModuleGraph.ModuleDependenceException e) {\n        // problems with the module format.  Report as an error.  The\n        // message gives all details.\n        report(JSError.make(MODULE_DEPENDENCY_ERROR,\n                e.getModule().getName(), e.getDependentModule().getName()));\n        return;\n      }\n    } else {\n      this.moduleGraph = null;\n    }\n\n    this.inputs = getAllInputsFromModules(modules);\n    initBasedOnOptions();\n\n    initInputsByNameMap();\n  }\n\n  /**\n   * Do any initialization that is dependent on the compiler options.\n   */\n  private void initBasedOnOptions() {\n    // Create the source map if necessary.\n    if (options.sourceMapOutputPath != null) {\n      sourceMap = options.sourceMapFormat.getInstance();\n      sourceMap.setPrefixMappings(options.sourceMapLocationMappings);\n    }\n  }\n\n  private List<CompilerInput> makeCompilerInput(\n      List<JSSourceFile> files, boolean isExtern) {\n    List<CompilerInput> inputs = Lists.newArrayList();\n    for (JSSourceFile file : files) {\n      inputs.add(new CompilerInput(file, isExtern));\n    }\n    return inputs;\n  }\n\n  private static final DiagnosticType EMPTY_MODULE_LIST_ERROR =\n      DiagnosticType.error("JSC_EMPTY_MODULE_LIST_ERROR",\n          "At least one module must be provided");\n\n  private static final DiagnosticType EMPTY_ROOT_MODULE_ERROR =\n      DiagnosticType.error("JSC_EMPTY_ROOT_MODULE_ERROR",\n          "Root module \'{0}\' must contain at least one source code input");\n\n  /**\n   * Verifies that at least one module has been provided and that the first one\n   * has at least one source code input.\n   */\n  private void checkFirstModule(List<JSModule> modules) {\n    if (modules.isEmpty()) {\n      report(JSError.make(EMPTY_MODULE_LIST_ERROR));\n    } else if (modules.get(0).getInputs().isEmpty() && modules.size() > 1) {\n      // The root module may only be empty if there is exactly 1 module.\n      report(JSError.make(EMPTY_ROOT_MODULE_ERROR,\n          modules.get(0).getName()));\n    }\n  }\n\n  /**\n   * Fill any empty modules with a place holder file. It makes any cross module\n   * motion easier.\n   */\n  private static void fillEmptyModules(List<JSModule> modules) {\n    for (JSModule module : modules) {\n      if (module.getInputs().isEmpty()) {\n        module.add(JSSourceFile.fromCode("[" + module.getName() + "]", ""));\n      }\n    }\n  }\n\n  /**\n   * Rebuilds the internal list of inputs by iterating over all modules.\n   * This is necessary if inputs have been added to or removed from a module\n   * after the {@link #init(JSSourceFile[], JSModule[], CompilerOptions)} call.\n   */\n  public void rebuildInputsFromModules() {\n    inputs = getAllInputsFromModules(modules);\n    initInputsByNameMap();\n  }\n\n  /**\n   * Builds a single list of all module inputs. Verifies that it contains no\n   * duplicates.\n   */\n  private static List<CompilerInput> getAllInputsFromModules(\n      List<JSModule> modules) {\n    List<CompilerInput> inputs = Lists.newArrayList();\n    Map<String, JSModule> inputMap = Maps.newHashMap();\n    for (JSModule module : modules) {\n      for (CompilerInput input : module.getInputs()) {\n        String inputName = input.getName();\n\n        // NOTE(nicksantos): If an input is in more than one module,\n        // it will show up twice in the inputs list, and then we\n        // will get an error down the line.\n        inputs.add(input);\n        inputMap.put(inputName, module);\n      }\n    }\n    return inputs;\n  }\n\n  static final DiagnosticType DUPLICATE_INPUT =\n      DiagnosticType.error("JSC_DUPLICATE_INPUT", "Duplicate input: {0}");\n  static final DiagnosticType DUPLICATE_EXTERN_INPUT =\n      DiagnosticType.error("JSC_DUPLICATE_EXTERN_INPUT",\n          "Duplicate extern input: {0}");\n\n  /**\n   * Creates a map to make looking up an input by name fast. Also checks for\n   * duplicate inputs.\n   */\n  void initInputsByNameMap() {\n    inputsByName = new HashMap<String, CompilerInput>();\n    for (CompilerInput input : externs) {\n      String name = input.getName();\n      if (!inputsByName.containsKey(name)) {\n        inputsByName.put(name, input);\n      } else {\n        report(JSError.make(DUPLICATE_EXTERN_INPUT, name));\n      }\n    }\n    for (CompilerInput input : inputs) {\n      String name = input.getName();\n      if (!inputsByName.containsKey(name)) {\n        inputsByName.put(name, input);\n      } else {\n        report(JSError.make(DUPLICATE_INPUT, name));\n      }\n    }\n  }\n\n  public Result compile(\n      JSSourceFile extern, JSSourceFile input, CompilerOptions options) {\n     return compile(extern, new JSSourceFile[] { input }, options);\n  }\n\n  public Result compile(\n      JSSourceFile extern, JSSourceFile[] input, CompilerOptions options) {\n     return compile(new JSSourceFile[] { extern }, input, options);\n  }\n\n  public Result compile(\n      JSSourceFile extern, JSModule[] modules, CompilerOptions options) {\n     return compile(new JSSourceFile[] { extern }, modules, options);\n  }\n\n  /**\n   * Compiles a list of inputs.\n   */\n  public Result compile(JSSourceFile[] externs,\n                        JSSourceFile[] inputs,\n                        CompilerOptions options) {\n    return compile(Lists.<JSSourceFile>newArrayList(externs),\n        Lists.<JSSourceFile>newArrayList(inputs),\n        options);\n  }\n\n  /**\n   * Compiles a list of inputs.\n   */\n  public Result compile(List<JSSourceFile> externs,\n      List<JSSourceFile> inputs, CompilerOptions options) {\n    // The compile method should only be called once.\n    Preconditions.checkState(jsRoot == null);\n\n    try {\n      init(externs, inputs, options);\n      if (hasErrors()) {\n        return getResult();\n      }\n      return compile();\n    } finally {\n      Tracer t = newTracer("generateReport");\n      errorManager.generateReport();\n      stopTracer(t, "generateReport");\n    }\n  }\n\n  /**\n   * Compiles a list of modules.\n   */\n  public Result compile(JSSourceFile[] externs,\n                        JSModule[] modules,\n                        CompilerOptions options) {\n    return compileModules(Lists.<JSSourceFile>newArrayList(externs),\n        Lists.<JSModule>newArrayList(modules),\n        options);\n  }\n\n  /**\n   * Compiles a list of modules.\n   */\n  public Result compileModules(List<JSSourceFile> externs,\n      List<JSModule> modules, CompilerOptions options) {\n    // The compile method should only be called once.\n    Preconditions.checkState(jsRoot == null);\n\n    try {\n      initModules(externs, modules, options);\n      if (hasErrors()) {\n        return getResult();\n      }\n      return compile();\n    } finally {\n      Tracer t = newTracer("generateReport");\n      errorManager.generateReport();\n      stopTracer(t, "generateReport");\n    }\n  }\n\n  private Result compile() {\n    return runInCompilerThread(new Callable<Result>() {\n      public Result call() throws Exception {\n        compileInternal();\n        return getResult();\n      }\n    });\n  }\n\n  /**\n   * Disable threads. This is for clients that run on AppEngine and\n   * don\'t have threads.\n   */\n  public void disableThreads() {\n    useThreads = false;\n  }\n\n  private <T> T runInCompilerThread(final Callable<T> callable) {\n    return runCallable(callable, useThreads, options.tracer.isOn());\n  }\n\n  static <T> T runCallableWithLargeStack(final Callable<T> callable) {\n    return runCallable(callable, true, false);\n  }\n\n  @SuppressWarnings("unchecked")\n  static <T> T runCallable(\n      final Callable<T> callable, boolean useLargeStackThread, boolean trace) {\n\n    // Under JRE 1.6, the jscompiler overflows the stack when running on some\n    // large or complex js code. Here we start a new thread with a larger\n    // stack in order to let the compiler do its thing, without having to\n    // increase the stack size for *every* thread (which is what -Xss does).\n    // Might want to add thread pool support for clients that compile a lot.\n\n    final boolean dumpTraceReport = trace;\n    final Object[] result = new Object[1];\n    final Throwable[] exception = new Throwable[1];\n    Runnable runnable = new Runnable() {\n      public void run() {\n        try {\n          if (dumpTraceReport) {\n            Tracer.initCurrentThreadTrace();\n          }\n          result[0] = callable.call();\n        } catch (Throwable e) {\n          exception[0] = e;\n        } finally {\n          if (dumpTraceReport) {\n            Tracer.logAndClearCurrentThreadTrace();\n          }\n        }\n      }\n    };\n\n    if (useLargeStackThread) {\n      Thread th = new Thread(null, runnable, "jscompiler", COMPILER_STACK_SIZE);\n      th.start();\n      while (true) {\n        try {\n          th.join();\n          break;\n        } catch (InterruptedException ignore) {\n          // ignore\n        }\n      }\n    } else {\n      runnable.run();\n    }\n\n    // Pass on any exception caught by the runnable object.\n    if (exception[0] != null) {\n      throw new RuntimeException(exception[0]);\n    }\n\n    return (T) result[0];\n  }\n\n  private void compileInternal() {\n    parse();\n    if (hasErrors()) {\n      return;\n    }\n\n    if (!precheck()) {\n      return;\n    }\n\n    if (options.nameAnonymousFunctionsOnly) {\n      // TODO(nicksantos): Move this into an instrument() phase maybe?\n      check();\n      return;\n    }\n\n    if (!options.skipAllPasses) {\n      check();\n      if (hasErrors()) {\n        return;\n      }\n\n      if (options.isExternExportsEnabled()\n          || options.externExportsPath != null) {\n        externExports();\n      }\n\n      // IDE-mode is defined to stop here, before the heavy rewriting begins.\n      if (!options.ideMode) {\n        optimize();\n      }\n    }\n\n    if (options.recordFunctionInformation) {\n      recordFunctionInformation();\n    }\n\n    if (options.devMode == DevMode.START_AND_END) {\n      runSanityCheck();\n    }\n  }\n\n  public void parse() {\n    parseInputs();\n  }\n\n  PassConfig getPassConfig() {\n    if (passes == null) {\n      passes = createPassConfigInternal();\n    }\n    return passes;\n  }\n\n  /**\n   * Create the passes object. Clients should use setPassConfig instead of\n   * overriding this.\n   */\n  PassConfig createPassConfigInternal() {\n    return new DefaultPassConfig(options);\n  }\n\n  /**\n   * @param passes The PassConfig to use with this Compiler.\n   * @throws NullPointerException if passes is null\n   * @throws IllegalStateException if this.passes has already been assigned\n   */\n  public void setPassConfig(PassConfig passes) {\n    // Important to check for null because if setPassConfig(null) is\n    // called before this.passes is set, getPassConfig() will create a\n    // new PassConfig object and use that, which is probably not what\n    // the client wanted since he or she probably meant to use their\n    // own PassConfig object.\n    Preconditions.checkNotNull(passes);\n\n    if (this.passes != null) {\n      throw new IllegalStateException("this.passes has already been assigned");\n    }\n    this.passes = passes;\n  }\n\n  /**\n   * Carry out any special checks or procedures that need to be done before\n   * proceeding with rest of the compilation process.\n   *\n   * @return true, to continue with compilation\n   */\n  boolean precheck() {\n    return true;\n  }\n\n  public void check() {\n    runCustomPasses(CustomPassExecutionTime.BEFORE_CHECKS);\n\n    PhaseOptimizer phaseOptimizer = new PhaseOptimizer(this, tracker);\n    if (options.devMode == DevMode.EVERY_PASS) {\n      phaseOptimizer.setSanityCheck(sanityCheck);\n    }\n    phaseOptimizer.consume(getPassConfig().getChecks());\n    phaseOptimizer.process(externsRoot, jsRoot);\n    if (hasErrors()) {\n      return;\n    }\n\n    // TODO(nicksantos): clean this up. The flow here is too hard to follow.\n    if (options.nameAnonymousFunctionsOnly) {\n      return;\n    }\n\n    if (options.removeTryCatchFinally) {\n      removeTryCatchFinally();\n    }\n\n    if (options.getTweakProcessing().shouldStrip() ||\n        !options.stripTypes.isEmpty() ||\n        !options.stripNameSuffixes.isEmpty() ||\n        !options.stripTypePrefixes.isEmpty() ||\n        !options.stripNamePrefixes.isEmpty()) {\n      stripCode(options.stripTypes, options.stripNameSuffixes,\n          options.stripTypePrefixes, options.stripNamePrefixes);\n    }\n\n    runCustomPasses(CustomPassExecutionTime.BEFORE_OPTIMIZATIONS);\n  }\n\n  private void externExports() {\n    logger.info("Creating extern file for exports");\n    startPass("externExports");\n\n    ExternExportsPass pass = new ExternExportsPass(this);\n    process(pass);\n\n    externExports = pass.getGeneratedExterns();\n\n    endPass();\n  }\n\n  @Override\n  void process(CompilerPass p) {\n    p.process(externsRoot, jsRoot);\n  }\n\n  private final PassFactory sanityCheck =\n      new PassFactory("sanityCheck", false) {\n    @Override\n    protected CompilerPass createInternal(AbstractCompiler compiler) {\n      return new SanityCheck(compiler);\n    }\n  };\n\n  private void maybeSanityCheck() {\n    if (options.devMode == DevMode.EVERY_PASS) {\n      runSanityCheck();\n    }\n  }\n\n  private void runSanityCheck() {\n    sanityCheck.create(this).process(externsRoot, jsRoot);\n  }\n\n  /**\n   * Removes try/catch/finally statements for easier debugging.\n   */\n  void removeTryCatchFinally() {\n    logger.info("Remove try/catch/finally");\n    startPass("removeTryCatchFinally");\n    RemoveTryCatch r = new RemoveTryCatch(this);\n    process(r);\n    endPass();\n  }\n\n  /**\n   * Strips code for smaller compiled code. This is useful for removing debug\n   * statements to prevent leaking them publicly.\n   */\n  void stripCode(Set<String> stripTypes, Set<String> stripNameSuffixes,\n      Set<String> stripTypePrefixes, Set<String> stripNamePrefixes) {\n    logger.info("Strip code");\n    startPass("stripCode");\n    StripCode r = new StripCode(this, stripTypes, stripNameSuffixes,\n        stripTypePrefixes, stripNamePrefixes);\n    if (options.getTweakProcessing().shouldStrip()) {\n      r.enableTweakStripping();\n    }\n    process(r);\n    endPass();\n  }\n\n  /**\n   * Runs custom passes that are designated to run at a particular time.\n   */\n  private void runCustomPasses(CustomPassExecutionTime executionTime) {\n    if (options.customPasses != null) {\n      Tracer t = newTracer("runCustomPasses");\n      try {\n        for (CompilerPass p : options.customPasses.get(executionTime)) {\n          process(p);\n        }\n      } finally {\n        stopTracer(t, "runCustomPasses");\n      }\n    }\n  }\n\n  private Tracer currentTracer = null;\n  private String currentPassName = null;\n\n  /**\n   * Marks the beginning of a pass.\n   */\n  void startPass(String passName) {\n    Preconditions.checkState(currentTracer == null);\n    currentPassName = passName;\n    currentTracer = newTracer(passName);\n  }\n\n  /**\n   * Marks the end of a pass.\n   */\n  void endPass() {\n    Preconditions.checkState(currentTracer != null,\n        "Tracer should not be null at the end of a pass.");\n    stopTracer(currentTracer, currentPassName);\n    String passToCheck = currentPassName;\n    currentPassName = null;\n    currentTracer = null;\n\n    maybeSanityCheck();\n  }\n\n  /**\n   * Returns a new tracer for the given pass name.\n   */\n  Tracer newTracer(String passName) {\n    String comment = passName\n        + (recentChange.hasCodeChanged() ? " on recently changed AST" : "");\n    if (options.tracer.isOn()) {\n      tracker.recordPassStart(passName);\n    }\n    return new Tracer("Compiler", comment);\n  }\n\n  void stopTracer(Tracer t, String passName) {\n    long result = t.stop();\n    if (options.tracer.isOn()) {\n      tracker.recordPassStop(passName, result);\n    }\n  }\n\n  /**\n   * Returns the result of the compilation.\n   */\n  public Result getResult() {\n    PassConfig.State state = getPassConfig().getIntermediateState();\n    return new Result(getErrors(), getWarnings(), debugLog.toString(),\n        state.variableMap, state.propertyMap,\n        state.anonymousFunctionNameMap, state.stringMap, functionInformationMap,\n        sourceMap, externExports, state.cssNames, state.idGeneratorMap);\n  }\n\n  /**\n   * Returns an array constructed from errors + temporary warnings.\n   */\n  public JSError[] getMessages() {\n    return getErrors();\n  }\n\n  /**\n   * Returns the array of errors (never null).\n   */\n  public JSError[] getErrors() {\n    return errorManager.getErrors();\n  }\n\n  /**\n   * Returns the array of warnings (never null).\n   */\n  public JSError[] getWarnings() {\n    return errorManager.getWarnings();\n  }\n\n  @Override\n  public Node getRoot() {\n    return externAndJsRoot;\n  }\n\n  /**\n   * Creates a new id for making unique names.\n   */\n  private int nextUniqueNameId() {\n    return uniqueNameId++;\n  }\n\n  /**\n   * Resets the unique name id counter\n   */\n  @VisibleForTesting\n  void resetUniqueNameId() {\n    uniqueNameId = 0;\n  }\n\n  @Override\n  Supplier<String> getUniqueNameIdSupplier() {\n    final Compiler self = this;\n    return new Supplier<String>() {\n      public String get() {\n        return String.valueOf(self.nextUniqueNameId());\n      }\n    };\n  }\n\n  @Override\n  boolean areNodesEqualForInlining(Node n1, Node n2) {\n    if (options.ambiguateProperties ||\n        options.disambiguateProperties) {\n      // The type based optimizations require that type information is preserved\n      // during other optimizations.\n      return n1.isEquivalentToTyped(n2);\n    } else {\n      return n1.isEquivalentTo(n2);\n    }\n  }\n\n  //------------------------------------------------------------------------\n  // Inputs\n  //------------------------------------------------------------------------\n\n  // TODO(nicksantos): Decide which parts of these belong in an AbstractCompiler\n  // interface, and which ones should always be injected.\n\n  @Override\n  public CompilerInput getInput(String name) {\n    return inputsByName.get(name);\n  }\n\n  /**\n   * Removes an input file from AST.\n   * @param name The name of the file to be removed.\n   */\n  protected void removeExternInput(String name) {\n    CompilerInput input = getInput(name);\n    if (input == null) {\n      return;\n    }\n    Preconditions.checkState(input.isExtern(), "Not an extern input: "\n        + input.getName());\n    inputsByName.remove(name);\n    externs.remove(input);\n    Node root = input.getAstRoot(this);\n    if (root != null) {\n      root.detachFromParent();\n    }\n  }\n\n  @Override\n  public CompilerInput newExternInput(String name) {\n    if (inputsByName.containsKey(name)) {\n      throw new IllegalArgumentException("Conflicting externs name: " + name);\n    }\n    SourceAst ast = new SyntheticAst(name);\n    CompilerInput input = new CompilerInput(ast, name, true);\n    inputsByName.put(name, input);\n    externsRoot.addChildToFront(ast.getAstRoot(this));\n    externs.add(0, input);\n    return input;\n  }\n\n  /** Add a source input dynamically. Intended for incremental compilation. */\n  void addIncrementalSourceAst(JsAst ast) {\n    String intputName = ast.getSourceFile().getName();\n    Preconditions.checkState(\n        getInput(intputName) == null,\n        "Duplicate input of name " + intputName);\n    inputsByName.put(intputName, new CompilerInput(ast));\n  }\n\n  /**\n   * Replace a source input dynamically. Intended for incremental\n   * re-compilation.\n   *\n   * If the new source input doesn\'t parse, then keep the old input\n   * in the AST and return false.\n   *\n   * @return Whether the new AST was attached successfully.\n   */\n  boolean replaceIncrementalSourceAst(JsAst ast) {\n    String inputName = ast.getSourceFile().getName();\n    CompilerInput oldInput =\n        Preconditions.checkNotNull(\n            getInput(inputName),\n            "No input to replace: " + inputName);\n    Node newRoot = ast.getAstRoot(this);\n    if (newRoot == null) {\n      return false;\n    }\n\n    Node oldRoot = oldInput.getAstRoot(this);\n    if (oldRoot != null) {\n      oldRoot.getParent().replaceChild(oldRoot, newRoot);\n    } else {\n      getRoot().getLastChild().addChildToBack(newRoot);\n    }\n\n    CompilerInput newInput = new CompilerInput(ast);\n    inputsByName.put(inputName, newInput);\n\n    JSModule module = oldInput.getModule();\n    if (module != null) {\n      module.addAfter(newInput, oldInput);\n      module.remove(oldInput);\n    }\n    return true;\n  }\n\n  @Override\n  JSModuleGraph getModuleGraph() {\n    return moduleGraph;\n  }\n\n  @Override\n  public JSTypeRegistry getTypeRegistry() {\n    if (typeRegistry == null) {\n      typeRegistry = new JSTypeRegistry(oldErrorReporter, options.looseTypes);\n    }\n    return typeRegistry;\n  }\n\n  @Override\n  MemoizedScopeCreator getTypedScopeCreator() {\n    return getPassConfig().getTypedScopeCreator();\n  }\n\n  @SuppressWarnings("unchecked")\n  DefaultPassConfig ensureDefaultPassConfig() {\n    PassConfig passes = getPassConfig().getBasePassConfig();\n    Preconditions.checkState(passes instanceof DefaultPassConfig,\n        "PassConfigs must eventually delegate to the DefaultPassConfig");\n    return (DefaultPassConfig) passes;\n  }\n\n  SymbolTable buildKnownSymbolTable() {\n    SymbolTable symbolTable = new SymbolTable();\n\n    MemoizedScopeCreator typedScopeCreator = getTypedScopeCreator();\n    if (typedScopeCreator != null) {\n      symbolTable.addSymbolsFrom(typedScopeCreator);\n    }\n\n    GlobalNamespace globalNamespace =\n        ensureDefaultPassConfig().getGlobalNamespace();\n    if (globalNamespace != null) {\n      symbolTable.addSymbolsFrom(globalNamespace);\n    }\n\n    return symbolTable;\n  }\n\n  @Override\n  public Scope getTopScope() {\n    return getPassConfig().getTopScope();\n  }\n\n  @Override\n  public ReverseAbstractInterpreter getReverseAbstractInterpreter() {\n    if (abstractInterpreter == null) {\n      ChainableReverseAbstractInterpreter interpreter =\n          new SemanticReverseAbstractInterpreter(\n              getCodingConvention(), getTypeRegistry());\n      if (options.closurePass) {\n        interpreter = new ClosureReverseAbstractInterpreter(\n            getCodingConvention(), getTypeRegistry())\n            .append(interpreter).getFirst();\n      }\n      abstractInterpreter = interpreter;\n    }\n    return abstractInterpreter;\n  }\n\n  @Override\n  TypeValidator getTypeValidator() {\n    if (typeValidator == null) {\n      typeValidator = new TypeValidator(this);\n    }\n    return typeValidator;\n  }\n\n  //------------------------------------------------------------------------\n  // Parsing\n  //------------------------------------------------------------------------\n\n  /**\n   * Parses the externs and main inputs.\n   *\n   * @return A synthetic root node whose two children are the externs root\n   *     and the main root\n   */\n  Node parseInputs() {\n    boolean devMode = options.devMode != DevMode.OFF;\n\n    // If old roots exist (we are parsing a second time), detach each of the\n    // individual file parse trees.\n    if (externsRoot != null) {\n      externsRoot.detachChildren();\n    }\n    if (jsRoot != null) {\n      jsRoot.detachChildren();\n    }\n\n    // Parse main js sources.\n    jsRoot = new Node(Token.BLOCK);\n    jsRoot.setIsSyntheticBlock(true);\n\n    externsRoot = new Node(Token.BLOCK);\n    externsRoot.setIsSyntheticBlock(true);\n\n    externAndJsRoot = new Node(Token.BLOCK, externsRoot, jsRoot);\n    externAndJsRoot.setIsSyntheticBlock(true);\n\n    if (options.tracer.isOn()) {\n      tracker = new PerformanceTracker(jsRoot,\n          options.tracer == TracerMode.ALL);\n      addChangeHandler(tracker.getCodeChangeHandler());\n    }\n\n    Tracer tracer = newTracer("parseInputs");\n\n    try {\n      // Parse externs sources.\n      for (CompilerInput input : externs) {\n        Node n = input.getAstRoot(this);\n        if (hasErrors()) {\n          return null;\n        }\n        externsRoot.addChildToBack(n);\n      }\n\n      // Check if the sources need to be re-ordered.\n      if (options.manageClosureDependencies) {\n        for (CompilerInput input : inputs) {\n          input.setCompiler(this);\n\n          // Forward-declare all the provided types, so that they\n          // are not flagged even if they are dropped from the process.\n          for (String provide : input.getProvides()) {\n            getTypeRegistry().forwardDeclareType(provide);\n          }\n        }\n\n        try {\n          inputs =\n              (moduleGraph == null ? new JSModuleGraph(modules) : moduleGraph)\n              .manageDependencies(\n                  options.manageClosureDependenciesEntryPoints, inputs);\n        } catch (CircularDependencyException e) {\n          report(JSError.make(\n              JSModule.CIRCULAR_DEPENDENCY_ERROR, e.getMessage()));\n          return null;\n        } catch (MissingProvideException e) {\n          report(JSError.make(\n              MISSING_ENTRY_ERROR, e.getMessage()));\n          return null;\n        }\n      }\n\n      // Check if inputs need to be rebuilt from modules.\n      boolean staleInputs = false;\n      for (CompilerInput input : inputs) {\n        Node n = input.getAstRoot(this);\n\n        // Inputs can have a null AST during initial parse.\n        if (n == null) {\n          continue;\n        }\n\n        if (n.getJSDocInfo() != null) {\n          JSDocInfo info = n.getJSDocInfo();\n          if (info.isExterns()) {\n            // If the input file is explicitly marked as an externs file, then\n            // assume the programmer made a mistake and throw it into\n            // the externs pile anyways.\n            externsRoot.addChildToBack(n);\n            input.setIsExtern(true);\n\n            input.getModule().remove(input);\n\n            externs.add(input);\n            staleInputs = true;\n          } else if (info.isNoCompile()) {\n            input.getModule().remove(input);\n            staleInputs = true;\n          }\n        }\n      }\n\n      if (staleInputs) {\n        fillEmptyModules(modules);\n        rebuildInputsFromModules();\n      }\n\n      // Build the AST.\n      for (CompilerInput input : inputs) {\n        Node n = input.getAstRoot(this);\n        if (n == null) {\n          continue;\n        }\n\n        if (devMode) {\n          runSanityCheck();\n          if (hasErrors()) {\n            return null;\n          }\n        }\n\n        if (options.sourceMapOutputPath != null ||\n            options.nameReferenceReportPath != null) {\n\n          // Annotate the nodes in the tree with information from the\n          // input file. This information is used to construct the SourceMap.\n          SourceInformationAnnotator sia =\n              new SourceInformationAnnotator(\n                  input.getName(), options.devMode != DevMode.OFF);\n          NodeTraversal.traverse(this, n, sia);\n        }\n\n        jsRoot.addChildToBack(n);\n      }\n\n      if (hasErrors()) {\n        return null;\n      }\n      return externAndJsRoot;\n    } finally {\n      stopTracer(tracer, "parseInputs");\n    }\n  }\n\n  public Node parse(JSSourceFile file) {\n    initCompilerOptionsIfTesting();\n    addToDebugLog("Parsing: " + file.getName());\n    return new JsAst(file).getAstRoot(this);\n  }\n\n  @Override\n  Node parseSyntheticCode(String js) {\n    CompilerInput input = new CompilerInput(\n        JSSourceFile.fromCode(" [synthetic] ", js));\n    inputsByName.put(input.getName(), input);\n    return input.getAstRoot(this);\n  }\n\n  void initCompilerOptionsIfTesting() {\n    if (options == null) {\n      // initialization for tests that don\'t initialize the compiler\n      // by the normal mechanisms.\n      initOptions(new CompilerOptions());\n    }\n  }\n\n  @Override\n  Node parseSyntheticCode(String fileName, String js) {\n    initCompilerOptionsIfTesting();\n    return parse(JSSourceFile.fromCode(fileName, js));\n  }\n\n  @Override\n  Node parseTestCode(String js) {\n    initCompilerOptionsIfTesting();\n    CompilerInput input = new CompilerInput(\n        JSSourceFile.fromCode(" [testcode] ", js));\n    if (inputsByName == null) {\n      inputsByName = Maps.newHashMap();\n    }\n    inputsByName.put(input.getName(), input);\n    return input.getAstRoot(this);\n  }\n\n  @Override\n  ErrorReporter getDefaultErrorReporter() {\n    return defaultErrorReporter;\n  }\n\n  //------------------------------------------------------------------------\n  // Convert back to source code\n  //------------------------------------------------------------------------\n\n  /**\n   * Converts the main parse tree back to js code.\n   */\n  public String toSource() {\n    return runInCompilerThread(new Callable<String>() {\n      public String call() throws Exception {\n        Tracer tracer = newTracer("toSource");\n        try {\n          CodeBuilder cb = new CodeBuilder();\n          if (jsRoot != null) {\n            int i = 0;\n            for (Node scriptNode = jsRoot.getFirstChild();\n                 scriptNode != null;\n                 scriptNode = scriptNode.getNext()) {\n              toSource(cb, i++, scriptNode);\n            }\n          }\n          return cb.toString();\n        } finally {\n          stopTracer(tracer, "toSource");\n        }\n      }\n    });\n  }\n\n  /**\n   * Converts the parse tree for each input back to js code.\n   */\n  public String[] toSourceArray() {\n    return runInCompilerThread(new Callable<String[]>() {\n      public String[] call() throws Exception {\n        Tracer tracer = newTracer("toSourceArray");\n        try {\n          int numInputs = inputs.size();\n          String[] sources = new String[numInputs];\n          CodeBuilder cb = new CodeBuilder();\n          for (int i = 0; i < numInputs; i++) {\n            Node scriptNode = inputs.get(i).getAstRoot(Compiler.this);\n            cb.reset();\n            toSource(cb, i, scriptNode);\n            sources[i] = cb.toString();\n          }\n          return sources;\n        } finally {\n          stopTracer(tracer, "toSourceArray");\n        }\n      }\n    });\n  }\n\n  /**\n   * Converts the parse tree for a module back to js code.\n   */\n  public String toSource(final JSModule module) {\n    return runInCompilerThread(new Callable<String>() {\n      public String call() throws Exception {\n        List<CompilerInput> inputs = module.getInputs();\n        int numInputs = inputs.size();\n        if (numInputs == 0) {\n          return "";\n        }\n        CodeBuilder cb = new CodeBuilder();\n        for (int i = 0; i < numInputs; i++) {\n          Node scriptNode = inputs.get(i).getAstRoot(Compiler.this);\n          if (scriptNode == null) {\n            throw new IllegalArgumentException(\n                "Bad module: " + module.getName());\n          }\n          toSource(cb, i, scriptNode);\n        }\n        return cb.toString();\n      }\n    });\n  }\n\n\n  /**\n   * Converts the parse tree for each input in a module back to js code.\n   */\n  public String[] toSourceArray(final JSModule module) {\n    return runInCompilerThread(new Callable<String[]>() {\n      public String[] call() throws Exception {\n        List<CompilerInput> inputs = module.getInputs();\n        int numInputs = inputs.size();\n        if (numInputs == 0) {\n          return new String[0];\n        }\n\n        String[] sources = new String[numInputs];\n        CodeBuilder cb = new CodeBuilder();\n        for (int i = 0; i < numInputs; i++) {\n          Node scriptNode = inputs.get(i).getAstRoot(Compiler.this);\n          if (scriptNode == null) {\n            throw new IllegalArgumentException(\n                "Bad module input: " + inputs.get(i).getName());\n          }\n\n          cb.reset();\n          toSource(cb, i, scriptNode);\n          sources[i] = cb.toString();\n        }\n        return sources;\n      }\n    });\n  }\n\n  /**\n   * Writes out js code from a root node. If printing input delimiters, this\n   * method will attach a comment to the start of the text indicating which\n   * input the output derived from. If there were any preserve annotations\n   * within the root\'s source, they will also be printed in a block comment\n   * at the beginning of the output.\n   */\n  public void toSource(final CodeBuilder cb,\n                       final int inputSeqNum,\n                       final Node root) {\n    runInCompilerThread(new Callable<Void>() {\n      public Void call() throws Exception {\n        if (options.printInputDelimiter) {\n          if ((cb.getLength() > 0) && !cb.endsWith("\\n")) {\n            cb.append("\\n");  // Make sure that the label starts on a new line\n          }\n          Preconditions.checkState(root.getType() == Token.SCRIPT);\n\n          String delimiter = options.inputDelimiter;\n\n          String sourceName = root.getSourceFileName();\n          Preconditions.checkState(sourceName != null);\n          Preconditions.checkState(!sourceName.isEmpty());\n\n          delimiter = delimiter.replaceAll("%name%", sourceName)\n            .replaceAll("%num%", String.valueOf(inputSeqNum));\n\n          cb.append(delimiter)\n            .append("\\n");\n        }\n        if (root.getJSDocInfo() != null &&\n            root.getJSDocInfo().getLicense() != null) {\n          cb.append("/*\\n")\n            .append(root.getJSDocInfo().getLicense())\n            .append("*/\\n");\n        }\n\n        // If there is a valid source map, then indicate to it that the current\n        // root node\'s mappings are offset by the given string builder buffer.\n        if (options.sourceMapOutputPath != null) {\n          sourceMap.setStartingPosition(\n              cb.getLineIndex(), cb.getColumnIndex());\n        }\n\n        // if LanguageMode is ECMASCRIPT5_STRICT, only print \'use strict\'\n        // for the first input file\n        String code = toSource(root, sourceMap, inputSeqNum == 0);\n        if (!code.isEmpty()) {\n          cb.append(code);\n\n          // In order to avoid parse ambiguity when files are concatenated\n          // together, all files should end in a semi-colon. Do a quick\n          // heuristic check if there\'s an obvious semi-colon already there.\n          int length = code.length();\n          char lastChar = code.charAt(length - 1);\n          char secondLastChar = length >= 2 ?\n              code.charAt(length - 2) : \'\\0\';\n          boolean hasSemiColon = lastChar == \';\' ||\n              (lastChar == \'\\n\' && secondLastChar == \';\');\n          if (!hasSemiColon) {\n            cb.append(";");\n          }\n        }\n        return null;\n      }\n    });\n  }\n\n  /**\n   * Generates JavaScript source code for an AST, doesn\'t generate source\n   * map info.\n   */\n  @Override\n  String toSource(Node n) {\n    initCompilerOptionsIfTesting();\n    return toSource(n, null, true);\n  }\n\n  /**\n   * Generates JavaScript source code for an AST.\n   */\n  private String toSource(Node n, SourceMap sourceMap, boolean firstOutput) {\n    CodePrinter.Builder builder = new CodePrinter.Builder(n);\n    builder.setPrettyPrint(options.prettyPrint);\n    builder.setLineBreak(options.lineBreak);\n    builder.setSourceMap(sourceMap);\n    builder.setSourceMapDetailLevel(options.sourceMapDetailLevel);\n    builder.setTagAsStrict(firstOutput &&\n        options.getLanguageOut() == LanguageMode.ECMASCRIPT5_STRICT);\n    builder.setLineLengthThreshold(options.lineLengthThreshold);\n\n    Charset charset = options.outputCharset != null ?\n        Charset.forName(options.outputCharset) : null;\n    builder.setOutputCharset(charset);\n\n    return builder.build();\n  }\n\n  /**\n   * Stores a buffer of text to which more can be appended.  This is just like a\n   * StringBuilder except that we also track the number of lines.\n   */\n  public static class CodeBuilder {\n    private final StringBuilder sb = new StringBuilder();\n    private int lineCount = 0;\n    private int colCount = 0;\n\n    /** Removes all text, but leaves the line count unchanged. */\n    void reset() {\n      sb.setLength(0);\n    }\n\n    /** Appends the given string to the text buffer. */\n    CodeBuilder append(String str) {\n      sb.append(str);\n\n      // Adjust the line and column information for the new text.\n      int index = -1;\n      int lastIndex = index;\n      while ((index = str.indexOf(\'\\n\', index + 1)) >= 0) {\n        ++lineCount;\n        lastIndex = index;\n      }\n\n      if (lastIndex == -1) {\n        // No new lines, append the new characters added.\n        colCount += str.length();\n      } else {\n        colCount = str.length() - (lastIndex + 1);\n      }\n\n      return this;\n    }\n\n    /** Returns all text in the text buffer. */\n    @Override\n    public String toString() {\n      return sb.toString();\n    }\n\n    /** Returns the length of the text buffer. */\n    public int getLength() {\n      return sb.length();\n    }\n\n    /** Returns the (zero-based) index of the last line in the text buffer. */\n    int getLineIndex() {\n      return lineCount;\n    }\n\n    /** Returns the (zero-based) index of the last column in the text buffer. */\n    int getColumnIndex() {\n      return colCount;\n    }\n\n    /** Determines whether the text ends with the given suffix. */\n    boolean endsWith(String suffix) {\n      return (sb.length() > suffix.length())\n          && suffix.equals(sb.substring(sb.length() - suffix.length()));\n    }\n  }\n\n  //------------------------------------------------------------------------\n  // Optimizations\n  //------------------------------------------------------------------------\n\n  public void optimize() {\n    // Ideally, this pass should be the first pass run, however:\n    // 1) VariableReferenceCheck reports unexpected warnings if Normalize\n    // is done first.\n    // 2) ReplaceMessages, stripCode, and potentially custom passes rely on\n    // unmodified local names.\n    normalize();\n\n    PhaseOptimizer phaseOptimizer = new PhaseOptimizer(this, tracker);\n    if (options.devMode == DevMode.EVERY_PASS) {\n      phaseOptimizer.setSanityCheck(sanityCheck);\n    }\n    phaseOptimizer.consume(getPassConfig().getOptimizations());\n    phaseOptimizer.process(externsRoot, jsRoot);\n    if (hasErrors()) {\n      return;\n    }\n  }\n\n  @Override\n  void setCssRenamingMap(CssRenamingMap map) {\n    options.cssRenamingMap = map;\n  }\n\n  @Override\n  CssRenamingMap getCssRenamingMap() {\n    return options.cssRenamingMap;\n  }\n\n  /**\n   * Reprocesses the current defines over the AST.  This is used by GwtCompiler\n   * to generate N outputs for different targets from the same (checked) AST.\n   * For each target, we apply the target-specific defines by calling\n   * {@code processDefines} and then {@code optimize} to optimize the AST\n   * specifically for that target.\n   */\n  public void processDefines() {\n    (new DefaultPassConfig(options)).processDefines.create(this)\n        .process(externsRoot, jsRoot);\n  }\n\n  boolean isInliningForbidden() {\n    return options.propertyRenaming == PropertyRenamingPolicy.HEURISTIC ||\n        options.propertyRenaming ==\n            PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC;\n  }\n\n  /** Control Flow Analysis. */\n  ControlFlowGraph<Node> computeCFG() {\n    logger.info("Computing Control Flow Graph");\n    Tracer tracer = newTracer("computeCFG");\n    ControlFlowAnalysis cfa = new ControlFlowAnalysis(this, true, false);\n    process(cfa);\n    stopTracer(tracer, "computeCFG");\n    return cfa.getCfg();\n  }\n\n  public void normalize() {\n    logger.info("Normalizing");\n    startPass("normalize");\n    process(new Normalize(this, false));\n    endPass();\n  }\n\n  @Override\n  void prepareAst(Node root) {\n    Tracer tracer = newTracer("prepareAst");\n    CompilerPass pass = new PrepareAst(this);\n    pass.process(null, root);\n    stopTracer(tracer, "prepareAst");\n  }\n\n  void recordFunctionInformation() {\n    logger.info("Recording function information");\n    startPass("recordFunctionInformation");\n    RecordFunctionInformation recordFunctionInfoPass =\n        new RecordFunctionInformation(\n            this, getPassConfig().getIntermediateState().functionNames);\n    process(recordFunctionInfoPass);\n    functionInformationMap = recordFunctionInfoPass.getMap();\n    endPass();\n  }\n\n  protected final CodeChangeHandler.RecentChange recentChange =\n      new CodeChangeHandler.RecentChange();\n  private final List<CodeChangeHandler> codeChangeHandlers =\n      Lists.<CodeChangeHandler>newArrayList();\n\n  @Override\n  void addChangeHandler(CodeChangeHandler handler) {\n    codeChangeHandlers.add(handler);\n  }\n\n  @Override\n  void removeChangeHandler(CodeChangeHandler handler) {\n    codeChangeHandlers.remove(handler);\n  }\n\n  /**\n   * All passes should call reportCodeChange() when they alter\n   * the JS tree structure. This is verified by CompilerTestCase.\n   * This allows us to optimize to a fixed point.\n   */\n  @Override\n  public void reportCodeChange() {\n    for (CodeChangeHandler handler : codeChangeHandlers) {\n      handler.reportChange();\n    }\n  }\n\n  @Override\n  public CodingConvention getCodingConvention() {\n    CodingConvention convention = options.getCodingConvention();\n    convention = convention != null ? convention : defaultCodingConvention;\n    return convention;\n  }\n\n  @Override\n  public boolean isIdeMode() {\n    return options.ideMode;\n  }\n\n  @Override\n  public boolean acceptEcmaScript5() {\n    switch (options.getLanguageIn()) {\n      case ECMASCRIPT5:\n      case ECMASCRIPT5_STRICT:\n        return true;\n    }\n    return false;\n  }\n\n  public LanguageMode languageMode() {\n    return options.getLanguageIn();\n  }\n\n  @Override\n  public boolean acceptConstKeyword() {\n    return options.acceptConstKeyword;\n  }\n\n  @Override\n  Config getParserConfig() {\n    if (parserConfig == null) {\n      Config.LanguageMode mode;\n      switch (options.getLanguageIn()) {\n        case ECMASCRIPT3:\n          mode = Config.LanguageMode.ECMASCRIPT3;\n          break;\n        case ECMASCRIPT5:\n          mode = Config.LanguageMode.ECMASCRIPT5;\n          break;\n        case ECMASCRIPT5_STRICT:\n          mode = Config.LanguageMode.ECMASCRIPT5_STRICT;\n          break;\n        default:\n          throw new IllegalStateException("unexpected language mode");\n      }\n\n      parserConfig = ParserRunner.createConfig(\n        isIdeMode(),\n        mode,\n        acceptConstKeyword(),\n        options.extraAnnotationNames);\n    }\n    return parserConfig;\n  }\n\n  @Override\n  public boolean isTypeCheckingEnabled() {\n    return options.checkTypes;\n  }\n\n\n  //------------------------------------------------------------------------\n  // Error reporting\n  //------------------------------------------------------------------------\n\n  /**\n   * The warning classes that are available from the command-line, and\n   * are suppressable by the {@code @suppress} annotation.\n   */\n  protected DiagnosticGroups getDiagnosticGroups() {\n    return new DiagnosticGroups();\n  }\n\n  @Override\n  public void report(JSError error) {\n    CheckLevel level = error.level;\n    if (warningsGuard != null) {\n      CheckLevel newLevel = warningsGuard.level(error);\n      if (newLevel != null) {\n        level = newLevel;\n      }\n    }\n\n    if (level.isOn()) {\n      errorManager.report(level, error);\n    }\n  }\n\n  @Override\n  public CheckLevel getErrorLevel(JSError error) {\n    Preconditions.checkNotNull(options);\n    return warningsGuard.level(error);\n  }\n\n  /**\n   * Report an internal error.\n   */\n  @Override\n  void throwInternalError(String message, Exception cause) {\n    String finalMessage =\n      "INTERNAL COMPILER ERROR.\\n" +\n      "Please report this problem.\\n" + message;\n\n    RuntimeException e = new RuntimeException(finalMessage, cause);\n    if (cause != null) {\n      e.setStackTrace(cause.getStackTrace());\n    }\n    throw e;\n  }\n\n\n  /**\n   * Gets the number of errors.\n   */\n  public int getErrorCount() {\n    return errorManager.getErrorCount();\n  }\n\n  /**\n   * Gets the number of warnings.\n   */\n  public int getWarningCount() {\n    return errorManager.getWarningCount();\n  }\n\n  @Override\n  boolean hasHaltingErrors() {\n    return !isIdeMode() && getErrorCount() > 0;\n  }\n\n  /**\n   * Consults the {@link ErrorManager} to see if we\'ve encountered errors\n   * that should halt compilation. <p>\n   *\n   * If {@link CompilerOptions#ideMode} is {@code true}, this function\n   * always returns {@code false} without consulting the error manager. The\n   * error manager will continue to be told about new errors and warnings, but\n   * the compiler will complete compilation of all inputs.<p>\n   */\n  public boolean hasErrors() {\n    return hasHaltingErrors();\n  }\n\n  /** Called from the compiler passes, adds debug info */\n  @Override\n  void addToDebugLog(String str) {\n    debugLog.append(str);\n    debugLog.append(\'\\n\');\n    logger.fine(str);\n  }\n\n  private SourceFile getSourceFileByName(String sourceName) {\n    if (inputsByName.containsKey(sourceName)) {\n      return inputsByName.get(sourceName).getSourceFile();\n    }\n    return null;\n  }\n\n  public String getSourceLine(String sourceName, int lineNumber) {\n    if (lineNumber < 1) {\n      return null;\n    }\n    SourceFile input = getSourceFileByName(sourceName);\n    if (input != null) {\n      return input.getLine(lineNumber);\n    }\n    return null;\n  }\n\n  public Region getSourceRegion(String sourceName, int lineNumber) {\n    if (lineNumber < 1) {\n      return null;\n    }\n    SourceFile input = getSourceFileByName(sourceName);\n    if (input != null) {\n      return input.getRegion(lineNumber);\n    }\n    return null;\n  }\n\n  //------------------------------------------------------------------------\n  // Package-private helpers\n  //------------------------------------------------------------------------\n\n  @Override\n  Node getNodeForCodeInsertion(JSModule module) {\n    if (module == null) {\n      if (inputs.isEmpty()) {\n        throw new IllegalStateException("No inputs");\n      }\n\n      return inputs.get(0).getAstRoot(this);\n    }\n\n    List<CompilerInput> moduleInputs = module.getInputs();\n    if (moduleInputs.size() > 0) {\n      return moduleInputs.get(0).getAstRoot(this);\n    }\n    throw new IllegalStateException("Root module has no inputs");\n  }\n\n  public SourceMap getSourceMap() {\n    return sourceMap;\n  }\n\n  VariableMap getVariableMap() {\n    return getPassConfig().getIntermediateState().variableMap;\n  }\n\n  VariableMap getPropertyMap() {\n    return getPassConfig().getIntermediateState().propertyMap;\n  }\n\n  CompilerOptions getOptions() {\n    return options;\n  }\n\n  FunctionInformationMap getFunctionalInformationMap() {\n    return functionInformationMap;\n  }\n\n  /**\n   * Sets the logging level for the com.google.javascript.jscomp package.\n   */\n  public static void setLoggingLevel(Level level) {\n    logger.setLevel(level);\n  }\n\n  /** Gets the DOT graph of the AST generated at the end of compilation. */\n  public String getAstDotGraph() throws IOException {\n    if (jsRoot != null) {\n      ControlFlowAnalysis cfa = new ControlFlowAnalysis(this, true, false);\n      cfa.process(null, jsRoot);\n      return DotFormatter.toDot(jsRoot, cfa.getCfg());\n    } else {\n      return "";\n    }\n  }\n\n  @Override\n  public ErrorManager getErrorManager() {\n    if (options == null) {\n      initOptions(new CompilerOptions());\n    }\n    return errorManager;\n  }\n\n  @Override\n  List<CompilerInput> getInputsInOrder() {\n    return Collections.<CompilerInput>unmodifiableList(inputs);\n  }\n\n  /**\n   * Gets the externs in the order in which they are being processed.\n   */\n  List<CompilerInput> getExternsInOrder() {\n    return Collections.<CompilerInput>unmodifiableList(externs);\n  }\n\n  /**\n   * Stores the internal compiler state just before optimization is performed.\n   * This can be saved and restored in order to efficiently optimize multiple\n   * different output targets without having to perform checking multiple times.\n   *\n   * NOTE: This does not include all parts of the compiler\'s internal state. In\n   * particular, JSSourceFiles and CompilerOptions are not recorded. In\n   * order to recreate a Compiler instance from scratch, you would need to\n   * call {@code init} with the same arguments as in the initial creation before\n   * restoring intermediate state.\n   */\n  public static class IntermediateState implements Serializable {\n    private static final long serialVersionUID = 1L;\n\n    Node externsRoot;\n    private Node jsRoot;\n    private List<CompilerInput> externs;\n    private List<CompilerInput> inputs;\n    private List<JSModule> modules;\n    private PassConfig.State passConfigState;\n    private JSTypeRegistry typeRegistry;\n    private AbstractCompiler.LifeCycleStage lifeCycleStage;\n\n    private IntermediateState() {}\n  }\n\n  /**\n   * Returns the current internal state, excluding the input files and modules.\n   */\n  public IntermediateState getState() {\n    IntermediateState state = new IntermediateState();\n    state.externsRoot = externsRoot;\n    state.jsRoot = jsRoot;\n    state.externs = externs;\n    state.inputs = inputs;\n    state.modules = modules;\n    state.passConfigState = getPassConfig().getIntermediateState();\n    state.typeRegistry = typeRegistry;\n    state.lifeCycleStage = getLifeCycleStage();\n\n    return state;\n  }\n\n  /**\n   * Sets the internal state to the capture given.  Note that this assumes that\n   * the input files are already set up.\n   */\n  public void setState(IntermediateState state) {\n    externsRoot = state.externsRoot;\n    jsRoot = state.jsRoot;\n    externs = state.externs;\n    inputs = state.inputs;\n    modules = state.modules;\n    passes = createPassConfigInternal();\n    getPassConfig().setIntermediateState(state.passConfigState);\n    typeRegistry = state.typeRegistry;\n    setLifeCycleStage(state.lifeCycleStage);\n  }\n\n  @VisibleForTesting\n  List<CompilerInput> getInputsForTesting() {\n    return inputs;\n  }\n\n  @VisibleForTesting\n  List<CompilerInput> getExternsForTesting() {\n    return externs;\n  }\n\n  @Override\n  boolean hasRegExpGlobalReferences() {\n    return hasRegExpGlobalReferences;\n  }\n\n  @Override\n  void setHasRegExpGlobalReferences(boolean references) {\n    hasRegExpGlobalReferences = references;\n  }\n\n  @Override\n  void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch,\n      Node collectionRoot) {\n    Preconditions.checkState(collectionRoot.getType() == Token.SCRIPT\n        || collectionRoot.getType() == Token.BLOCK);\n    if (globalRefMap == null) {\n      globalRefMap = new GlobalVarReferenceMap(getInputsInOrder(),\n          getExternsInOrder());\n    }\n    globalRefMap.updateGlobalVarReferences(refMapPatch, collectionRoot);\n  }\n\n  @Override\n  ReferenceMap getGlobalVarReferences() {\n    return globalRefMap;\n  }\n\n}', 'tree': 'MethodDeclaration modifiers public_ter ^ ^ name meth0 ^ ^ parameters FormalParameter type ReferenceType name CompilerOptions_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ body StatementExpression expression Assignment expressionl This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ value MemberReference member par0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member errorManager_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member outStream_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments ClassCreator type ReferenceType name LoggerErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member logger_ter ^ ^ ^ ^ ^ ^ member setErrorManager_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member outStream_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier par0 ^ ^ member summaryDetailLevel_ter ^ ^ ^ ^ member setSummaryDetailLevel_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member setErrorManager_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_TYPES_ter ^ ^ ^ ^ member enables_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_TYPES_ter ^ ^ ^ ^ member disables_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member TYPE_PARSE_ERROR_ter ^ ^ ^ ^ member forType_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member GLOBAL_THIS_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member checkGlobalThisLevel_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member getLanguageIn_ter ^ ^ ^ ^ operandr MemberReference qualifier LanguageMode_ter ^ ^ member ECMASCRIPT5_STRICT_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member ES5_STRICT_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member ERROR_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name List_ter ^ ^ arguments TypeArgument type ReferenceType name WarningsGuard_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier Lists_ter ^ ^ member newArrayList_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments ClassCreator type ReferenceType name SuppressDocWarningsGuard_ter ^ ^ ^ ^ arguments MethodInvocation selectors MethodInvocation member getRegisteredGroups_ter ^ ^ ^ ^ member getDiagnosticGroups_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member getWarningsGuard_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name ComposeWarningsGuard_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ClassCreator type ReferenceType name ComposeWarningsGuard_ter ^ ^ ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member checkSymbols_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier loc2 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_VARIABLES_ter ^ ^ ^ ^ member enables_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments ClassCreator type ReferenceType name DiagnosticGroupWarningsGuard_ter ^ ^ ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_VARIABLES_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ ^ ^ member addGuard_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl This selectors MemberReference member warningsGuard_ter ^ ^ ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 255, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  ^ ^ ; ['copy-qualifier']
copynode 0:  root member-member isOn_ter ^ ^  ^ ^ ; ['copy-member']
before@1 batch0 x: -11.478971481323242: root member-member isOn_ter ^ ^  ^ ^  ; ['copy-member']
after@1 batch0 x: -11.478971481323242: root member-member isOn_ter ^ ^  ^ ^  ; ['copy-member']
copynode -0.558294951915741:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -0.852188766002655:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.558294951915741:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -0.852188766002655:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -0.558294951915741:  root modified ^ member-member isOn_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.852188766002655:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -0.558294951915741:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -0.852188766002655:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -0.852188766002655:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -0.852188766002655:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -0.852188766002655:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -7.311485767364502:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -0.852188766002655:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter']
copynode -0.852188766002655:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -0.852188766002655:  root add ^ Statement_ter ^ ^ ; ['root -> add', 'root -> Statement_ter']
copynode -0.558294951915741:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -9.073287010192871:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -9.521018028259277:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -9.8809175491333:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -0.558294951915741:  root modified ^ BreakStatement_ter ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter']
copynode -10.134421348571777:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -10.292976379394531:  root qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  unknown ^ ^ ^ ; ['copy-qualifier', 'start -> unknown']
copynode -0.558294951915741:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -0.558294951915741:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter']
copynode -0.558294951915741:  root modified ^ WhileStatement ^ ^ ; ['root -> modified', 'root -> WhileStatement']
copynode -0.558294951915741:  root modified ^ control ^ ^ ; ['root -> modified', 'root -> control']
copynode -11.478971481323242:  root member-member isOn_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -9.073287010192871:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -9.521018028259277:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -10.292976379394531:  root qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  par0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par0']
copynode -10.134421348571777:  root StatementExpression expression MethodInvocation arguments ClassCreator type ReferenceType name LoggerErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member logger_ter ^ ^ ^ ^ ^ ^ member setErrorManager_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.292976379394531:  root qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  DiagnosticGroup_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -10.134421348571777:  root StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.134421348571777:  root StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member GLOBAL_THIS_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member checkGlobalThisLevel_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.134421348571777:  root StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member ES5_STRICT_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member ERROR_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.134421348571777:  root StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.134421348571777:  root StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member TYPE_PARSE_ERROR_ter ^ ^ ^ ^ member forType_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.134421348571777:  root StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments ClassCreator type ReferenceType name DiagnosticGroupWarningsGuard_ter ^ ^ ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_VARIABLES_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ ^ ^ member addGuard_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.134421348571777:  root StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member setErrorManager_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.134421348571777:  root StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier par0 ^ ^ member summaryDetailLevel_ter ^ ^ ^ ^ member setSummaryDetailLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.478971481323242:  root member-member isOn_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -10.292976379394531:  root qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  Lists_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.478971481323242:  root member-member isOn_ter ^ ^  newArrayList_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.478971481323242:  root member-member isOn_ter ^ ^  forType_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -9.521018028259277:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -11.478971481323242:  root member-member isOn_ter ^ ^  getRegisteredGroups_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -7.311485767364502:  root ReturnStatement par0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -11.478971481323242:  root member-member isOn_ter ^ ^  getLanguageIn_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.478971481323242:  root member-member isOn_ter ^ ^  getWarningsGuard_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -9.521018028259277:  root parameters FormalParameter type ReferenceType name CompilerOptions_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ ^ ; ['root -> parameters', 'copy-parameters']
copynode -10.292976379394531:  root qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  LOG_ter ^ ^ ^ ; ['copy-qualifier', 'qualifier -> LOG_ter']
copynode -11.478971481323242:  root member-member isOn_ter ^ ^  disables_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -10.292976379394531:  root qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  loc0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> loc0']
copynode -11.478971481323242:  root member-member isOn_ter ^ ^  getDiagnosticGroups_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.478971481323242:  root member-member isOn_ter ^ ^  enables_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -10.292976379394531:  root qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  RhinoErrorReporter_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -10.292976379394531:  root qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  CheckLevel_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -9.521018028259277:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -10.292976379394531:  root qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  par1 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par1']
copynode -10.292976379394531:  root qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  CheckLevel_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -9.521018028259277:  root parameters loc0 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.521018028259277:  root parameters loc1 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.8809175491333:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member outStream_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments ClassCreator type ReferenceType name LoggerErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member logger_ter ^ ^ ^ ^ ^ ^ member setErrorManager_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member outStream_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier par0 ^ ^ member summaryDetailLevel_ter ^ ^ ^ ^ member setSummaryDetailLevel_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member setErrorManager_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.521018028259277:  root parameters loc2 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.8809175491333:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member errorManager_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member outStream_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments ClassCreator type ReferenceType name LoggerErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member logger_ter ^ ^ ^ ^ ^ ^ member setErrorManager_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member outStream_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier par0 ^ ^ member summaryDetailLevel_ter ^ ^ ^ ^ member setSummaryDetailLevel_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member setErrorManager_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.8809175491333:  root IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member TYPE_PARSE_ERROR_ter ^ ^ ^ ^ member forType_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.521018028259277:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -9.8809175491333:  root IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_TYPES_ter ^ ^ ^ ^ member disables_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member TYPE_PARSE_ERROR_ter ^ ^ ^ ^ member forType_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.8809175491333:  root IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_TYPES_ter ^ ^ ^ ^ member enables_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_TYPES_ter ^ ^ ^ ^ member disables_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member TYPE_PARSE_ERROR_ter ^ ^ ^ ^ member forType_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.073287010192871:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -9.073287010192871:  root return_type par0 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -9.8809175491333:  root IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member GLOBAL_THIS_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member checkGlobalThisLevel_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.521018028259277:  root parameters par0 ^ ^ ^ ; ['root -> parameters', 'copy-FormalParameter']
copynode -9.8809175491333:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member getLanguageIn_ter ^ ^ ^ ^ operandr MemberReference qualifier LanguageMode_ter ^ ^ member ECMASCRIPT5_STRICT_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member ES5_STRICT_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member ERROR_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -7.311485767364502:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -7.311485767364502:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -7.311485767364502:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -7.311485767364502:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -9.8809175491333:  root IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member checkSymbols_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier loc2 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_VARIABLES_ter ^ ^ ^ ^ member enables_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments ClassCreator type ReferenceType name DiagnosticGroupWarningsGuard_ter ^ ^ ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_VARIABLES_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ ^ ^ member addGuard_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.8809175491333:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -9.073287010192871:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.073287010192871:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.073287010192871:  root return_type loc2 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
before@2 batch0 x: -27.787470817565918: root return_type loc2 ^ ^ ^  ; ['root -> return_type', 'copy-VariableDeclarator']
after@2 batch0 x: -27.787470817565918: root return_type loc2 ^ ^ ^  ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -0.9629195928573608:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -1.235628604888916:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -2.1322537064552307:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.415049135684967:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.6738666892051697:  root modified ^ member-member isOn_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -3.3038830161094666:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -0.9629195928573608:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  DiagnosticGroup_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -1.235628604888916:  root add ^ StatementExpression expression MethodInvocation arguments ClassCreator type ReferenceType name LoggerErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member logger_ter ^ ^ ^ ^ ^ ^ member setErrorManager_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.235628604888916:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.235628604888916:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member GLOBAL_THIS_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member checkGlobalThisLevel_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.235628604888916:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member TYPE_PARSE_ERROR_ter ^ ^ ^ ^ member forType_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.235628604888916:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member ES5_STRICT_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member ERROR_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.235628604888916:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member setErrorManager_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -0.9629195928573608:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  Lists_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -1.235628604888916:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.235628604888916:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier par0 ^ ^ member summaryDetailLevel_ter ^ ^ ^ ^ member setSummaryDetailLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.235628604888916:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments ClassCreator type ReferenceType name DiagnosticGroupWarningsGuard_ter ^ ^ ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_VARIABLES_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ ^ ^ member addGuard_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.046205699443817:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.543459594249725:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -6.071118056774139:  root add ^ LocalVariableDeclaration type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member outStream_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -0.9629195928573608:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0']
copynode -6.337883651256561:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -0.9629195928573608:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  RhinoErrorReporter_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -6.071118056774139:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -2.6738666892051697:  root modified ^ member-member isOn_ter ^ ^  newArrayList_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.6738666892051697:  root modified ^ member-member isOn_ter ^ ^  forType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -0.9629195928573608:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  CheckLevel_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -2.6738666892051697:  root modified ^ member-member isOn_ter ^ ^  getRegisteredGroups_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -0.9629195928573608:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  CheckLevel_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -7.568770110607147:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> End']
copynode -2.6738666892051697:  root modified ^ member-member isOn_ter ^ ^  getWarningsGuard_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -7.634253203868866:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -0.9629195928573608:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  DiagnosticGroups_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -0.9629195928573608:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  LanguageMode_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -0.9629195928573608:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  DiagnosticGroups_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -3.3038830161094666:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -2.6738666892051697:  root modified ^ member-member isOn_ter ^ ^  getLanguageIn_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -7.877499282360077:  root add ^ Statement_ter ^ ^ ; ['root -> add', 'root -> Statement_ter', 'root -> End']
copynode -2.6738666892051697:  root modified ^ member-member isOn_ter ^ ^  createMessageFormatter_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -7.1659247279167175:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -2.6738666892051697:  root modified ^ member-member isOn_ter ^ ^  disables_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -7.396836243569851:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -2.6738666892051697:  root modified ^ member-member isOn_ter ^ ^  TYPE_PARSE_ERROR_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.6738666892051697:  root modified ^ member-member isOn_ter ^ ^  isOn_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -7.396836243569851:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -7.396836243569851:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -6.071118056774139:  root add ^ LocalVariableDeclaration type ReferenceType name List_ter ^ ^ arguments TypeArgument type ReferenceType name WarningsGuard_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier Lists_ter ^ ^ member newArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.071118056774139:  root add ^ LocalVariableDeclaration type ReferenceType name ComposeWarningsGuard_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ClassCreator type ReferenceType name ComposeWarningsGuard_ter ^ ^ ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -3.3038830161094666:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -10.136481940746307:  root modified ^ BreakStatement_ter ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> End']
copynode -3.3038830161094666:  root add ^ ReturnStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement_ter']
copynode -9.578156843781471:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -9.578156843781471:  root parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -9.480617195367813:  root return_type ReferenceType name List_ter ^ ^ arguments TypeArgument type ReferenceType name WarningsGuard_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -10.291820034384727:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -3.3038830161094666:  root add ^ ReturnStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> BreakStatement_ter']
copynode -7.1659247279167175:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -10.391617931425571:  root qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  unknown ^ ^ ^ ; ['copy-qualifier', 'start -> unknown', 'root -> End']
copynode -7.396836243569851:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -6.543459594249725:  root add ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -9.881524269992951:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -9.881524269992951:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -10.972289741039276:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter', 'root -> End']
copynode -10.962705314159393:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -3.3038830161094666:  root add ^ ReturnStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ContinueStatement_ter']
copynode -7.396836243569851:  root ReturnStatement expression This ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This']
copynode -7.396836243569851:  root ReturnStatement expression This_ter ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This_ter']
copynode -6.046205699443817:  root modified ^ StatementExpression expression MethodInvocation arguments ClassCreator type ReferenceType name LoggerErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member logger_ter ^ ^ ^ ^ ^ ^ member setErrorManager_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -11.254670798778534:  root modified ^ WhileStatement condition ^ ^ ^ ; ['root -> modified', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -9.480617195367813:  root return_type ReferenceType name ComposeWarningsGuard_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -6.046205699443817:  root modified ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member GLOBAL_THIS_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member checkGlobalThisLevel_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.046205699443817:  root modified ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member ES5_STRICT_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member ERROR_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -9.881524269992951:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -6.046205699443817:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -11.501128852367401:  root modified ^ control EnhancedForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl']
copynode -6.046205699443817:  root modified ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.046205699443817:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier par0 ^ ^ member summaryDetailLevel_ter ^ ^ ^ ^ member setSummaryDetailLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.046205699443817:  root modified ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member TYPE_PARSE_ERROR_ter ^ ^ ^ ^ member forType_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.071118056774139:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -6.046205699443817:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member setErrorManager_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.046205699443817:  root modified ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments ClassCreator type ReferenceType name DiagnosticGroupWarningsGuard_ter ^ ^ ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_VARIABLES_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ ^ ^ member addGuard_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -9.480617195367813:  root return_type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -11.751074314117432:  root return_type BasicType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'BasicType -> name']
copynode -9.480617195367813:  root return_type ReferenceType name ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -9.480617195367813:  root return_type ReferenceType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name']
copynode -10.391617931425571:  root qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['copy-qualifier', 'start -> unknown', 'root -> StatementExpression']
copynode -3.3038830161094666:  root add ^ ReturnStatement_ter ^ control ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> control']
copynode -7.877499282360077:  root add ^ Statement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> Statement_ter', 'root -> StatementExpression']
copynode -7.396836243569851:  root ReturnStatement expression Assignment ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Assignment']
copynode -3.3038830161094666:  root add ^ ReturnStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement']
copynode -7.568770110607147:  root add ^ ContinueStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> StatementExpression']
copynode -6.543459594249725:  root add ^ BreakStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> IfStatement']
copynode -10.291820034384727:  root StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -11.637951791286469:  root member-member isOn_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown', 'root -> End']
copynode -11.637951791286469:  root member-member isOn_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['copy-member', 'start -> unknown', 'root -> StatementExpression']
copynode -7.1659247279167175:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -9.480617195367813:  root return_type ReferenceType name SuppressDocWarningsGuard_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -9.480617195367813:  root return_type ReferenceType name WarningsGuard_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
before@3 batch0 x: -12.609565407037735: root return_type ReferenceType name WarningsGuard_ter ^ ^ ^ ^ ^  ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
after@3 batch0 x: -12.609565407037735: root return_type ReferenceType name WarningsGuard_ter ^ ^ ^ ^ ^  ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -1.0080837830901146:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -1.3890964984893799:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.75570447742939:  root modified ^ member-member isOn_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -2.132620819233125:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -2.132620819233125:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -2.4155177976062987:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -1.3890964984893799:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -2.4155177976062987:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -2.4155177976062987:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -1.3890964984893799:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -2.132620819233125:  root modified ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -5.02020537853241:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  DiagnosticGroup_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -5.215407848358154:  root add ^ StatementExpression expression MethodInvocation arguments ClassCreator type ReferenceType name LoggerErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member logger_ter ^ ^ ^ ^ ^ ^ member setErrorManager_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.132620819233125:  root modified ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -5.4136481285095215:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.445985317230225:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member GLOBAL_THIS_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member checkGlobalThisLevel_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.486718654632568:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member TYPE_PARSE_ERROR_ter ^ ^ ^ ^ member forType_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.605141520500183:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  Lists_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -5.545854091644287:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member ES5_STRICT_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member ERROR_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.57185697555542:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member setErrorManager_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.622714519500732:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.628386974334717:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier par0 ^ ^ member summaryDetailLevel_ter ^ ^ ^ ^ member setSummaryDetailLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.744546413421631:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments ClassCreator type ReferenceType name DiagnosticGroupWarningsGuard_ter ^ ^ ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_VARIABLES_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ ^ ^ member addGuard_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -1.3890964984893799:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -6.0888466238975525:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.4155177976062987:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -1.3890964984893799:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -2.4155177976062987:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -6.786016821861267:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0', 'root -> End']
copynode -7.084189295768738:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  RhinoErrorReporter_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -7.097322881221771:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -7.1069812178611755:  root modified ^ member-member isOn_ter ^ ^  newArrayList_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -2.4155177976062987:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member getLanguageIn_ter ^ ^ ^ ^ operandr MemberReference qualifier LanguageMode_ter ^ ^ member ECMASCRIPT5_STRICT_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.2152270674705505:  root modified ^ member-member isOn_ter ^ ^  forType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.236431956291199:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  CheckLevel_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.756447851657867:  root add ^ LocalVariableDeclaration type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member outStream_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -2.4155177976062987:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_TYPES_ter ^ ^ ^ ^ member disables_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.513584077358246:  root modified ^ member-member isOn_ter ^ ^  getRegisteredGroups_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -2.4155177976062987:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member errorManager_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -6.899773180484772:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -7.5511311292648315:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  CheckLevel_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -2.4155177976062987:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member outStream_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -2.4155177976062987:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_TYPES_ter ^ ^ ^ ^ member enables_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.610374391078949:  root modified ^ member-member isOn_ter ^ ^  getWarningsGuard_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.767834544181824:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  DiagnosticGroups_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -7.791979670524597:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  LanguageMode_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -1.3890964984893799:  root add ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -7.8164108991622925:  root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  DiagnosticGroups_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -7.895881116390228:  root modified ^ member-member isOn_ter ^ ^  getLanguageIn_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.756447851657867:  root add ^ LocalVariableDeclaration type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member outStream_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> StatementExpression']
copynode -6.899773180484772:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -5.215407848358154:  root add ^ StatementExpression expression MethodInvocation arguments ClassCreator type ReferenceType name LoggerErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member logger_ter ^ ^ ^ ^ ^ ^ member setErrorManager_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -8.276243150234222:  root modified ^ member-member isOn_ter ^ ^  createMessageFormatter_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -8.284043490886688:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -8.380548417568207:  root modified ^ member-member isOn_ter ^ ^  disables_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -8.449794016778469:  root ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.838309705257416:  root add ^ ReturnStatement_ter ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.57185697555542:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member setErrorManager_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -8.504531800746918:  root modified ^ member-member isOn_ter ^ ^  TYPE_PARSE_ERROR_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.628386974334717:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier par0 ^ ^ member summaryDetailLevel_ter ^ ^ ^ ^ member setSummaryDetailLevel_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -5.4136481285095215:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -5.445985317230225:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member GLOBAL_THIS_ter ^ ^ ^ MemberReference qualifier par0 ^ ^ member checkGlobalThisLevel_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -5.545854091644287:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member ES5_STRICT_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member ERROR_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -8.619913041591644:  root modified ^ member-member isOn_ter ^ ^  isOn_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.744546413421631:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments ClassCreator type ReferenceType name DiagnosticGroupWarningsGuard_ter ^ ^ ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_VARIABLES_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ ^ ^ member addGuard_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -5.622714519500732:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -7.739654414355755:  root add ^ AssertStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MemberReference']
copynode -7.739654414355755:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -5.486718654632568:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member TYPE_PARSE_ERROR_ter ^ ^ ^ ^ member forType_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -6.0888466238975525:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -8.69603856652975:  root ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -1.3890964984893799:  root add ^ StatementExpression expression SuperConstructorInvocation_ter ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation_ter']
copynode -9.347238004207611:  root add ^ ReturnStatement_ter ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement', 'IfStatement -> condition']
copynode -7.739654414355755:  root add ^ AssertStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MethodInvocation']
copynode -2.132620819233125:  root modified ^ IfStatement condition Cast ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast']
copynode -8.729508340358734:  root add ^ LocalVariableDeclaration type ReferenceType name List_ter ^ ^ arguments TypeArgument type ReferenceType name WarningsGuard_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier Lists_ter ^ ^ member newArrayList_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> StatementExpression']
copynode -8.69603856652975:  root ReturnStatement expression MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member']
copynode -8.729508340358734:  root add ^ LocalVariableDeclaration type ReferenceType name List_ter ^ ^ arguments TypeArgument type ReferenceType name WarningsGuard_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier Lists_ter ^ ^ member newArrayList_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -6.899773180484772:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -8.891936242580414:  root add ^ LocalVariableDeclaration type ReferenceType name ComposeWarningsGuard_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ClassCreator type ReferenceType name ComposeWarningsGuard_ter ^ ^ ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> StatementExpression']
copynode -8.891936242580414:  root add ^ LocalVariableDeclaration type ReferenceType name ComposeWarningsGuard_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ClassCreator type ReferenceType name ComposeWarningsGuard_ter ^ ^ ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -8.72470410913229:  root ReturnStatement expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.132620819233125:  root modified ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -5.215407848358154:  root add ^ StatementExpression expression MethodInvocation arguments ClassCreator type ReferenceType name LoggerErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member logger_ter ^ ^ ^ ^ ^ ^ member setErrorManager_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -8.72470410913229:  root ReturnStatement expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.756447851657867:  root add ^ LocalVariableDeclaration type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member outStream_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> LocalVariableDeclaration']
copynode -2.132620819233125:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member getLanguageIn_ter ^ ^ ^ ^ operandr MemberReference qualifier LanguageMode_ter ^ ^ member ECMASCRIPT5_STRICT_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -6.0888466238975525:  root modified ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -1.3890964984893799:  root add ^ StatementExpression expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> BinaryOperation']
copynode -2.132620819233125:  root modified ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_TYPES_ter ^ ^ ^ ^ member disables_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -5.215407848358154:  root add ^ StatementExpression expression MethodInvocation arguments ClassCreator type ReferenceType name LoggerErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member logger_ter ^ ^ ^ ^ ^ ^ member setErrorManager_ter ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement_ter']
copynode -2.132620819233125:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -5.4136481285095215:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
before@4 batch0 x: -10.203767776489258: root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
after@4 batch0 x: -10.203767776489258: root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -1.5983479917049408:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.0811321813089307:  root modified ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.368216028349707:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.449979066848755:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -1.5983479917049408:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.859927483223146:  root modified ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -1.5983479917049408:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.577748537063599:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -1.5983479917049408:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.493403067725012:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.859927483223146:  root modified ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.859927483223146:  root modified ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.859927483223146:  root modified ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -4.022921075957129:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -4.022921075957129:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -3.493403067725012:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -4.61352086844272:  root modified ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -3.493403067725012:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.022921075957129:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -2.859927483223146:  root modified ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -3.493403067725012:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.330996759556001:  root modified ^ IfStatement condition This selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors']
copynode -2.859927483223146:  root modified ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -2.859927483223146:  root modified ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -4.022921075957129:  root add ^ IfStatement condition MemberReference prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -3.493403067725012:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -4.61352086844272:  root modified ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -1.5983479917049408:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -4.61352086844272:  root modified ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -3.493403067725012:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -5.881762742996216:  root add ^ StatementExpression expression SuperMethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member']
copynode -2.859927483223146:  root modified ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.859927483223146:  root modified ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -3.493403067725012:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.60650372505188:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -5.881762742996216:  root add ^ StatementExpression expression SuperMethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member']
copynode -6.512883653776953:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -6.169844150543213:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.330996759556001:  root modified ^ IfStatement condition This qualifier ^ selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> qualifier selectors']
copynode -3.493403067725012:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -4.61352086844272:  root modified ^ IfStatement condition MemberReference prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -6.635925760405371:  root add ^ IfStatement condition This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors']
copynode -5.330996759556001:  root modified ^ IfStatement condition This prefix_operators ^ selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors']
copynode -3.493403067725012:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.548383891582489:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.204175462858984:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member getLanguageIn_ter ^ ^ ^ ^ operandr MemberReference qualifier LanguageMode_ter ^ ^ member ECMASCRIPT5_STRICT_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.263696184294531:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_TYPES_ter ^ ^ ^ ^ member disables_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -6.169844150543213:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.541509142058203:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member errorManager_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.105187145061791:  root add ^ LocalVariableDeclaration type ReferenceType name List_ter ^ ^ arguments TypeArgument type ReferenceType name WarningsGuard_ter ^ ^ ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -3.493403067725012:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -7.559009065764258:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member outStream_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.567039003508398:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member CHECK_TYPES_ter ^ ^ ^ ^ member enables_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -6.169844150543213:  root modified ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.512883653776953:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> StatementExpression']
copynode -7.804059267044067:  root add ^ StatementExpression expression Cast type ^ expression ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast', 'Cast -> type expression']
copynode -2.859927483223146:  root modified ^ IfStatement condition MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -6.635925760405371:  root add ^ IfStatement condition This prefix_operators ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors']
copynode -1.5983479917049408:  root add ^ StatementExpression expression MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -1.5983479917049408:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -6.169844150543213:  root modified ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.635925760405371:  root add ^ IfStatement condition This qualifier ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> qualifier selectors']
copynode -7.204175462858984:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member getLanguageIn_ter ^ ^ ^ ^ operandr MemberReference qualifier LanguageMode_ter ^ ^ member ECMASCRIPT5_STRICT_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> StatementExpression']
copynode -3.368216028349707:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member errorManager_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -8.062133967876434:  root add ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
before@5 batch0 x: -8.659177303314209: root add ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
after@5 batch0 x: -8.659177303314209: root add ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -1.9218167960643768:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -3.0885711427254137:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -3.4503960286383517:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -3.6174438893795013:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -3.384405897842953:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.990308590553468:  root modified ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.661904186010361:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -3.384405897842953:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -4.094965785741806:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -4.839069314621156:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -3.0885711427254137:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -1.9218167960643768:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.741454907081788:  root modified ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.7635286528093275:  root modified ^ IfStatement condition MethodInvocation member isOn_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -4.599483264610171:  root add ^ StatementExpression expression This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.0323046351841185:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.286256661551306:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -1.9218167960643768:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -5.296094408171484:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -4.599483264610171:  root add ^ StatementExpression expression This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -4.694375505583594:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -5.341091998241609:  root modified ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -1.9218167960643768:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1']
copynode -3.384405897842953:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.776840038917726:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -4.094965785741806:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -4.7635286528093275:  root modified ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.798215499060461:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -3.6174438893795013:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -5.883487530372804:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -5.951883187430212:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -5.994611373083899:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -4.741454907081788:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.83195097031421:  root modified ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -4.694375505583594:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.2590303498727735:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -3.990308590553468:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -6.3432365561893675:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -3.990308590553468:  root modified ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -5.810564019106096:  root modified ^ IfStatement condition This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -3.0885711427254137:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.6174438893795013:  root add ^ StatementExpression expression MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.120150417089462:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0']
copynode -6.526336498878663:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter']
copynode -5.440471282141516:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.460482656955719:  root add ^ StatementExpression expression SuperMethodInvocation member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member', 'member -> meth0']
copynode -3.0885711427254137:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -1.9218167960643768:  root add ^ StatementExpression expression MethodInvocation qualifier DiagnosticGroup_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.384405897842953:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -5.810564019106096:  root modified ^ IfStatement condition This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -3.384405897842953:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -4.694375505583594:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -1.9218167960643768:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -3.4503960286383517:  root add ^ StatementExpression expression Assignment expressionl This ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This']
copynode -6.958636870520422:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter']
copynode -5.6765822078159545:  root add ^ IfStatement condition MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -6.068457611225313:  root modified ^ IfStatement condition MemberReference qualifier options.checkGlobalThisLevel_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -4.094965785741806:  root add ^ StatementExpression expression MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -3.4503960286383517:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member checkTypes_ter ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -1.9218167960643768:  root add ^ StatementExpression expression MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.440471282141516:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.440471282141516:  root add ^ IfStatement condition MethodInvocation qualifier DiagnosticGroup_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -7.129139907978242:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -5.440471282141516:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -4.694375505583594:  root add ^ IfStatement condition MethodInvocation qualifier DiagnosticGroup_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.094965785741806:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member TYPE_PARSE_ERROR_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.5271984244755:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -7.229711540363496:  root modified ^ IfStatement condition This prefix_operators !_ter ^ ^ selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors', 'prefix_operators -> !_ter']
copynode -3.384405897842953:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -4.094965785741806:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -3.6174438893795013:  root add ^ StatementExpression expression MethodInvocation qualifier DiagnosticGroup_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.817147433757782:  root add ^ StatementExpression expression SuperMethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.766044870018959:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -6.068457611225313:  root modified ^ IfStatement condition MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -5.6765822078159545:  root add ^ IfStatement condition MemberReference qualifier CheckLevel_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -7.142132451670477:  root add ^ IfStatement condition This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference']
before@6 batch0 x: -7.551210764242569: root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  CheckLevel_ter ^ ^ ^  ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
after@6 batch0 x: -7.551210764242569: root modified ^ qualifier-qualifier options.checkGlobalThisLevel_ter ^ ^  CheckLevel_ter ^ ^ ^  ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -2.0586428940296173:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -3.3257766480965074:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -2.0586428940296173:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation']
copynode -2.0586428940296173:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal']
copynode -3.9457962214946747:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -3.545641270757187:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -4.0398776996007655:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -3.545641270757187:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier ^ member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member']
copynode -4.26655460181064:  root modified ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -4.68142700381577:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -4.842695073777577:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -4.695379942655563:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.3257766480965074:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.190561451337999:  root modified ^ IfStatement condition MethodInvocation member isOn_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'root -> End']
copynode -5.2103062402457:  root add ^ StatementExpression expression This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.072776507906383:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation']
copynode -4.683031963097164:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.4173061753681395:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.291655895212898:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.567378945968812:  root modified ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -4.26655460181064:  root modified ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -2.0586428940296173:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> This_ter']
copynode -4.0398776996007655:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -4.683031963097164:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -4.695379942655563:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.097743481397629:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.852405973098939:  root modified ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -5.247442906635115:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -5.7806372603808995:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member isOn_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'copy-member']
copynode -2.0586428940296173:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> BinaryOperation']
copynode -5.996527291281382:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.403848780319095:  root add ^ StatementExpression expression This selectors MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.3257766480965074:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -5.292174786329269:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -5.74316863893182:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.403848780319095:  root add ^ StatementExpression expression This selectors MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.0586428940296173:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member TYPE_PARSE_ERROR_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'copy-arguments']
copynode -6.103212632559007:  root modified ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation']
copynode -5.247442906635115:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -5.88743936814717:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -5.297891612077365:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -2.0586428940296173:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'copy-arguments']
copynode -6.201727500098059:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -2.0586428940296173:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments This ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> This']
copynode -6.350378014467424:  root modified ^ IfStatement condition This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.814169615507126:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.265265919588273:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.496066987514496:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation']
copynode -5.187585838459199:  root modified ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.4931744039058685:  root add ^ StatementExpression expression MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.723155707120895:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1', 'arguments -> MemberReference']
copynode -6.54867247492075:  root add ^ StatementExpression expression SuperMethodInvocation member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member', 'member -> meth0', 'root -> End']
copynode -2.0586428940296173:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member TYPE_PARSE_ERROR_ter ^ ^ ^ ^ member forType_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'copy-arguments']
copynode -5.853530594991753:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -6.34985811295337:  root modified ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member isOn_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.529994621727383:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -5.853530594991753:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.335106678627199:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member isOn_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'copy-member']
copynode -5.187585838459199:  root modified ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -5.292174786329269:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -5.297891612077365:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0']
copynode -6.945372072339524:  root add ^ StatementExpression expression Assignment expressionl This selectors ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors']
copynode -2.0586428940296173:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier par0 ^ ^ member summaryDetailLevel_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'copy-arguments']
copynode -5.292174786329269:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
copynode -7.011026948690414:  root add ^ StatementExpression expression MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -5.097743481397629:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -5.297891612077365:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier DiagnosticGroup_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -6.742233254335588:  root modified ^ IfStatement condition This selectors MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.0398776996007655:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member getLanguageIn_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'copy-operandl']
copynode -5.097743481397629:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -5.072776507906383:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -6.5551658387703355:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -6.987283595226472:  root modified ^ IfStatement condition MemberReference qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.486337256006664:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -6.745348738419125:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -5.7806372603808995:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -7.152600517409155:  root add ^ IfStatement condition MethodInvocation qualifier DiagnosticGroup_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -7.194473594427109:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member TYPE_PARSE_ERROR_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
before@7 batch0 x: -7.259067058563232: root add ^ LocalVariableDeclaration type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member outStream_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
after@7 batch0 x: -7.259067058563232: root add ^ LocalVariableDeclaration type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name PrintStreamErrorManager_ter ^ ^ ^ ^ arguments MethodInvocation member createMessageFormatter_ter ^ ^ ^ MemberReference member outStream_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -2.8700376451015472:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.614858489803737:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.7576281130313873:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value']
copynode -2.8700376451015472:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.023332424461842:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -3.6781355440616608:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.112252858758438:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.611927576683229:  root modified ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member', 'root -> End']
copynode -4.394010947929928:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.057309092575451:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'copy-member']
copynode -4.4386192237143405:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -5.128314804605907:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.329915117792552:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.121387928724289:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.6781355440616608:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.585786111972993:  root modified ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -4.394010947929928:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.227746361866593:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.604244738817215:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> This_ter', 'arguments -> End']
copynode -5.38340233443887:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.524058875540504:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.059816535416758:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member isOn_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'copy-member', 'root -> End']
copynode -5.726040171372006:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.484123518603155:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression']
copynode -6.13211186407716:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.087397128343582:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.148735238239169:  root add ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.742640064941952:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.849111348390579:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.38340233443887:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -4.4386192237143405:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier CheckLevel_ter ^ ^ member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -6.239801998162875:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown']
copynode -6.190290277736494:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -3.6781355440616608:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.167824298143387:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member TYPE_PARSE_ERROR_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'copy-arguments', 'start -> unknown']
copynode -5.484123518603155:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.267992526292801:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'copy-arguments', 'start -> unknown']
copynode -6.480465315602487:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -3.6781355440616608:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.518718158826232:  root add ^ StatementExpression expression MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.352819949388504:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments This selectors ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> This', 'This -> selectors']
copynode -6.120324581861496:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -4.4386192237143405:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier RhinoErrorReporter_ter ^ ^ member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -6.090951591177145:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.355425416812068:  root modified ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.188053071819013:  root modified ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.682540424488252:  root modified ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member isOn_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -6.1174028630775865:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.106481803581119:  root add ^ StatementExpression expression This selectors MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.800273634813493:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member isOn_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'copy-member', 'root -> End']
copynode -6.616423159837723:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member TYPE_PARSE_ERROR_ter ^ ^ ^ ^ member forType_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'copy-arguments', 'start -> unknown']
copynode -6.661147782491753:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.849111348390579:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -4.4386192237143405:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier DiagnosticGroups_ter ^ ^ member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -6.503756292484468:  root modified ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.961231545836199:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.982629269361496:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -5.778994053602219:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -6.346807842986891:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> StatementExpression']
copynode -6.5531807243824005:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.6781355440616608:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member TYPE_PARSE_ERROR_ter ^ ^ ^ ^ member forType_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.889881844545016:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'start -> unknown']
copynode -7.063060492277145:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -6.503471901174635:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.416207581758499:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -7.1246430057508405:  root modified ^ IfStatement condition MemberReference qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -7.023245449090609:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier DiagnosticGroup_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown']
copynode -6.120324581861496:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.524058875540504:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression']
copynode -5.057309092575451:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown']
copynode -6.743591844890034:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter', 'copy-qualifier', 'selectors -> MethodInvocation']
copynode -4.4386192237143405:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier unknown ^ ^ member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -6.188053071819013:  root modified ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
before@8 batch0 x: -7.215293588466011: root modified ^ member-member isOn_ter ^ ^  forType_ter ^ ^ ^  ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
after@8 batch0 x: -7.215293588466011: root modified ^ member-member isOn_ter ^ ^  forType_ter ^ ^ ^  ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -3.669620454631513:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -3.3626134395599365:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -3.841495245695114:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.669620454631513:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation']
copynode -3.7622745828703046:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -3.3626134395599365:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier CheckLevel_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -3.7622745828703046:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -3.3626134395599365:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -3.7622745828703046:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -5.20136428027763:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'copy-member', 'root -> End']
copynode -4.277151060581673:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference']
copynode -5.216641036153305:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -4.277151060581673:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal']
copynode -4.242023915052414:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -4.277151060581673:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation']
copynode -4.242023915052414:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.72198693631799:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.4354782700538635:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -5.697600657120347:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -4.242023915052414:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -5.371357869677013:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.841495245695114:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.3626134395599365:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -5.745037481188774:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> This_ter', 'arguments -> End', 'start -> unknown']
copynode -5.3809510323626455:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -4.72198693631799:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.7622745828703046:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.220397783443332:  root add ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -4.242023915052414:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -5.533937960863113:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.191263129847357:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.21366474032402:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -6.397129416465759:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member TYPE_PARSE_ERROR_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -3.669620454631513:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MemberReference']
copynode -6.354139959352324:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.4802954494953156:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.334457841992844:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier CheckLevel_ter ^ ^ member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.3809510323626455:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation']
copynode -6.498718649148941:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -3.7622745828703046:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.212750548409531:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.276563823223114:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.533937960863113:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.606552449346054:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier RhinoErrorReporter_ter ^ ^ member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.882701979862759:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.841295823454857:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member TYPE_PARSE_ERROR_ter ^ ^ ^ ^ member forType_ter ^ ^ ^ MemberReference qualifier CheckLevel_ter ^ ^ member OFF_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.724114012293285:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.643272220477229:  root modified ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -6.337023029947886:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.864143798040459:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.968692665279377:  root add ^ StatementExpression expression Assignment expressionl This selectors MemberReference member ^ ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.558358371257782:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments This selectors MemberReference ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.671184705483029:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -6.170395182358334:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -3.841495245695114:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.915840712666977:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier DiagnosticGroups_ter ^ ^ member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.252167032944271:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -7.02062035156996:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.18759817033424:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -5.671184705483029:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier unknown ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -5.882701979862759:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
before@9 batch0 x: -7.215293588466011: root modified ^ member-member isOn_ter ^ ^  forType_ter ^ ^ ^  ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
after@9 batch0 x: -7.215293588466011: root modified ^ member-member isOn_ter ^ ^  forType_ter ^ ^ ^  ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.273143500089645:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -4.9078713062626775:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.925333936698735:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -4.951985120773315:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier CheckLevel_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -4.159744352422422:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.087561686523259:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -5.142094373703003:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.16441245842725:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -5.428371024609078:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value']
copynode -5.465672582387924:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -5.642834797501564:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -5.618001192808151:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -4.159744352422422:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -5.868797063827515:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> This_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.246339333534706:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> member']
copynode -5.864262342453003:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.246339333534706:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.860805243253708:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -5.630515681492398:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -5.7210439667105675:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.304740620136727:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'value -> MemberReference']
copynode -6.125098307617009:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -5.837898146681255:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.2631569635123014:  root add ^ StatementExpression expression This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -5.304740620136727:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'value -> Literal']
copynode -5.537524891376961:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.318709582090378:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.358265435235808:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -4.159744352422422:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.03624884961755:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -6.5891103598696645:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.5898124277591705:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
copynode -5.630515681492398:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -6.649815400131047:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -4.159744352422422:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.484673952596495:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.90959255429334:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.304740620136727:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'value -> MethodInvocation']
copynode -6.908905535325175:  root modified ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'root -> End']
copynode -5.537524891376961:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.159744352422422:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -5.7210439667105675:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.671163791703293:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.896723728947109:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MethodInvocation']
copynode -6.03624884961755:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -6.999057739973068:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments This selectors MemberReference member ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.781092703342438:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.3471658527851105:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -4.159744352422422:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -4.159744352422422:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -4.273143500089645:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference']
copynode -7.00799493669183:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -5.837898146681255:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -4.159744352422422:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -7.090982168912888:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
before@10 batch0 x: -7.227090910077095: root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
after@10 batch0 x: -7.227090910077095: root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -5.033952874131501:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown']
copynode -5.065030001103878:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier CheckLevel_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End']
copynode -5.244338949210942:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'start -> unknown']
copynode -5.267558631487191:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'start -> unknown']
copynode -4.933194041572278:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.265882894396782:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End']
copynode -5.6177968531847:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End']
copynode -5.70390859246254:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.829375833593076:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -5.736974224448204:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End']
copynode -5.185426324926084:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.004744648933411:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -5.987843252718449:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End']
copynode -4.933194041572278:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.299901736259926:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'value -> Literal', 'Literal -> value']
copynode -5.4487240121816285:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -6.256927673704922:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'start -> unknown']
copynode -4.397943876683712:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -5.915542495728005:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference member par0 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.398080453276634:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End']
copynode -5.4487240121816285:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -6.332885396957863:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.273699414305156:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.181645892560482:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.457830948667834:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.209066045761574:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ value MemberReference qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.159423934208462:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression']
copynode -5.185426324926084:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -6.808698267064756:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.585034834133694:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> End']
copynode -6.823516016738722:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -6.767301422543824:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'start -> unknown']
copynode -6.977637857518857:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.209066045761574:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> member']
copynode -7.048654746584361:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.159423934208462:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -7.116561502538389:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -5.4487240121816285:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.2140460911614355:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter']
copynode -5.185426324926084:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -5.065030001103878:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier CheckLevel_ter ^ ^ member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.033952874131501:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -7.09152889251709:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.273699414305156:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.021252984093735:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.063434051262448:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> End']
copynode -6.71853839038522:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression']
copynode -7.227090910077095:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'start -> unknown']
copynode -6.566993326268857:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.619647948391503:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.244338949210942:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
copynode -5.265882894396782:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> MemberReference']
before@11 batch0 x: -7.493476077914238: root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> MemberReference']
after@11 batch0 x: -7.493476077914238: root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.214104992337525:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.429434780962765:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.453877461142838:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.924844175897306:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.48164886268205:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -6.201982453465462:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.347601871297229:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter']
copynode -5.48164886268205:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.431223903782666:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.368671588599682:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier CheckLevel_ter ^ ^ member unknown ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.487811697006691:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference member par0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> member', 'member -> par0', 'type -> =_ter']
copynode -6.468887470662594:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.554356555745471:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> true_ter', 'type -> =_ter']
copynode -5.568396642804146:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member unknown ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -5.831789931835374:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -6.737674636679003:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -6.295184612594312:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -6.891171939991182:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.952718389220536:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.857343422161648:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.9800542861630674:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -7.089722290955251:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -7.127551059529651:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter']
copynode -6.322758036956657:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -7.3008310021832585:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.717375181615353:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.253735870443052:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -6.717375181615353:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.306863218545914:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -6.274283416569233:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member unknown ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.295184612594312:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.443855911493301:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.322758036956657:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -7.489355047233403:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.715673819184303:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.416227327572415:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.852997124195099:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ member unknown ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -5.831789931835374:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.70239929514355:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.831789931835374:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0']
copynode -5.831789931835374:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier DiagnosticGroup_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -6.945752775209257:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -7.291841648519039:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier CheckLevel_ter ^ ^ member unknown ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.322758036956657:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.291841648519039:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier CheckLevel_ter ^ ^ member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.216520835965639:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -7.493476077914238:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member unknown ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.119289330759784:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
before@12 batch0 x: -8.201110891619464: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
after@12 batch0 x: -8.201110891619464: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.049481146357721:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.349095188023057:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter', 'root -> End']
copynode -6.48412149399519:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier CheckLevel_ter ^ ^ member unknown ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.489386439265218:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference member par0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> member', 'member -> par0', 'type -> =_ter', 'root -> End']
copynode -6.5558830627123825:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> true_ter', 'type -> =_ter', 'root -> End']
copynode -6.673953607678413:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member unknown ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.685763439716538:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown']
copynode -6.233628809772199:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.359513879142469:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.058843527775025:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.991566883312771:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.128713906684425:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> End']
copynode -7.190484541759361:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter']
copynode -6.359513879142469:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.384739145956701:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -7.504888135299552:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> true_ter', 'type -> =_ter']
copynode -7.464405305683613:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier DiagnosticGroups_ter ^ ^ member unknown ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.889152288757032:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.462492883205414:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End']
copynode -7.5439062267541885:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.58231920003891:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ member unknown ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.5477820652595256:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.449191473424435:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.824445305304835:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation']
copynode -7.852973184169969:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier DiagnosticGroup_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown']
copynode -6.824445305304835:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -7.470536947570508:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.813795051159104:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'start -> unknown']
copynode -8.001311856613029:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter']
copynode -8.11847965916968:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter', 'copy-qualifier', 'selectors -> MethodInvocation']
copynode -7.470536947570508:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.824445305304835:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal']
copynode -7.724619549087947:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -7.86527714683325:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.86527714683325:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.233628809772199:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member getWarningsGuard_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
before@13 batch0 x: -8.765521586261457: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member getWarningsGuard_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
after@13 batch0 x: -8.765521586261457: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member getWarningsGuard_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.808043776632985:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -7.191961562202778:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter', 'root -> End']
copynode -7.166761802422116:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.506376079574693:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> true_ter', 'type -> =_ter', 'root -> End']
copynode -6.860864520393079:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -7.7251853513589595:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.9370971905009355:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier DiagnosticGroup_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -7.9953649701492395:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -7.821878932416439:  root add ^ StatementExpression expression This selectors MemberReference member unknown ^ ^ ^ MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -8.002448984596413:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> End']
copynode -7.221577585063642:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.542204141936963:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -7.921873984771082:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.860864520393079:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -8.455910621123621:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value']
copynode -7.965899286704371:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.912503242812818:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier CheckLevel_ter ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -6.912503242812818:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -8.482406776718562:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation']
copynode -6.912503242812818:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier unknown ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -7.965899286704371:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.912503242812818:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier RhinoErrorReporter_ter ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -8.255165865033632:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.542204141936963:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
before@14 batch0 x: -9.112306833587354: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
after@14 batch0 x: -9.112306833587354: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -7.361211778508732:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -7.595481753669446:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -7.920513452874729:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -8.252990007720655:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -8.42446565660066:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -8.663480934075778:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -8.57842016252107:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier CheckLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -8.642339468322461:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -8.092768431029981:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -8.817279339156812:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier RhinoErrorReporter_ter ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -8.83527891835547:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -8.092768431029981:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -8.372987566428492:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -9.112306833587354:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -8.460909799585352:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -8.460909799585352:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -8.372987566428492:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier DiagnosticGroup_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -8.460909799585352:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
before@15 batch0 x: -10.075265125284204: root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
after@15 batch0 x: -10.075265125284204: root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -7.453011581586907:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -8.695176720939344:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -7.777697116456693:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'copy-operandr']
copynode -8.893154561839765:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -8.018272505985806:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -7.453011581586907:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation']
copynode -7.777697116456693:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'copy-operandr']
copynode -7.453011581586907:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal']
copynode -9.075842117279535:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -9.237282157264417:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -7.777697116456693:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'operandr -> MemberReference']
copynode -8.797832027397817:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier CheckLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'copy-operandr']
copynode -8.018272505985806:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation']
copynode -9.462239460001001:  root add ^ IfStatement condition MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -8.44547511669225:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'operandr -> MemberReference']
copynode -8.018272505985806:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal']
copynode -8.662092924438184:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'copy-operandr']
copynode -8.44547511669225:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'copy-operandr']
before@16 batch0 x: -9.733049765549367: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'copy-operandr']
after@16 batch0 x: -9.733049765549367: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'copy-operandr']
copynode -8.72232595118112:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -8.339356491254875:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -9.098880559526151:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -9.115451047109673:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value']
copynode -8.339356491254875:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.908951686607907:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -9.572490588150686:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier CheckLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -9.391519934259122:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
copynode -9.00618273942382:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -9.675000058399746:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value']
copynode -9.73134481938905:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -9.733049765549367:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -9.618733540497487:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
copynode -8.908951686607907:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -9.131060962885385:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member isOn_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
before@17 batch0 x: -9.917688195913797: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member isOn_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
after@17 batch0 x: -9.917688195913797: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member isOn_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -9.917688195913797:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier options.checkGlobalThisLevel_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member isOn_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'root -> End']
copynode -9.125038069585571:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -9.125038069585571:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -9.667367765592644:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -8.812012860464165:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier CheckLevel_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -9.125038069585571:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -8.812012860464165:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference qualifier RhinoErrorReporter_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -9.684853287326405:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -9.684853287326405:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -9.645088434539502:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr MemberReference qualifier CheckLevel_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
before@18 batch0 x: -11.126445889793104: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr MemberReference qualifier CheckLevel_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
after@18 batch0 x: -11.126445889793104: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member isOn_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier options.checkGlobalThisLevel_ter ^ ^ member unknown ^ ^ ^ ^ operandr MemberReference qualifier CheckLevel_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -10.371371668676147:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -10.387063425878296:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -10.6308206738031:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -10.919583411799977:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -10.947018833743641:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -10.371371668676147:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference']
copynode -10.387063425878296:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference']
copynode -10.371371668676147:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal']
copynode -10.387063425878296:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal']
before@19 batch0 x: -13.30686752210022: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal']
after@19 batch0 x: -13.30686752210022: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal']
copynode -10.541198310354957:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
copynode -10.55071046660305:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member']
copynode -10.804300335148582:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -13.271695536473999:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value']
copynode -13.30686752210022:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value']
copynode -11.089987309562275:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
copynode -11.111156226979801:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member']
copynode -13.18614522824646:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -13.229053419927368:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
before@20 batch0 x: -13.8731661857164: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
after@20 batch0 x: -13.8731661857164: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -12.651884850958595:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.698700931767235:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -12.895655420521507:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -13.373250992881367:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -13.431168319570133:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -13.27716722470359:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -13.311636039434234:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -13.27716722470359:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -13.311636039434234:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
before@21 batch0 x: -14.735269614873687: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
after@21 batch0 x: -14.735269614873687: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -14.514026665507117:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -14.532356330571929:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -14.550974035082618:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -14.735269614873687:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
before@22 batch0 x: -14.902830222068587: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
after@22 batch0 x: -14.902830222068587: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -14.669986763416091:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member']
copynode -14.713490986643592:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
copynode -14.69783326369361:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member']
copynode -14.902830222068587:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
before@23 batch0 x: -16.80596170705394: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
after@23 batch0 x: -16.80596170705394: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -16.567547002254287:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -16.60766937714652:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -16.613579952536384:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -16.80596170705394:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value null_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member setWarningLevel_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
method
7 
method
options.checkGlobalThisLevel_ter {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}
options.checkGlobalThisLevel_ter MODULE_DEPENDENCY_ERROR
options.checkGlobalThisLevel_ter MISSING_ENTRY_ERROR
options.checkGlobalThisLevel_ter options
options.checkGlobalThisLevel_ter passes
options.checkGlobalThisLevel_ter externs
options.checkGlobalThisLevel_ter modules
options.checkGlobalThisLevel_ter moduleGraph
options.checkGlobalThisLevel_ter inputs
options.checkGlobalThisLevel_ter errorManager
options.checkGlobalThisLevel_ter warningsGuard
options.checkGlobalThisLevel_ter externsRoot
options.checkGlobalThisLevel_ter jsRoot
options.checkGlobalThisLevel_ter externAndJsRoot
options.checkGlobalThisLevel_ter inputsByName
options.checkGlobalThisLevel_ter sourceMap
options.checkGlobalThisLevel_ter externExports
options.checkGlobalThisLevel_ter uniqueNameId
options.checkGlobalThisLevel_ter useThreads
options.checkGlobalThisLevel_ter hasRegExpGlobalReferences
options.checkGlobalThisLevel_ter functionInformationMap
options.checkGlobalThisLevel_ter debugLog
options.checkGlobalThisLevel_ter defaultCodingConvention
options.checkGlobalThisLevel_ter typeRegistry
options.checkGlobalThisLevel_ter parserConfig
options.checkGlobalThisLevel_ter abstractInterpreter
options.checkGlobalThisLevel_ter typeValidator
options.checkGlobalThisLevel_ter tracker
options.checkGlobalThisLevel_ter oldErrorReporter
options.checkGlobalThisLevel_ter defaultErrorReporter
options.checkGlobalThisLevel_ter OPTIMIZE_LOOP_ERROR
options.checkGlobalThisLevel_ter MOTION_ITERATIONS_ERROR
options.checkGlobalThisLevel_ter COMPILER_STACK_SIZE
options.checkGlobalThisLevel_ter logger
options.checkGlobalThisLevel_ter outStream
options.checkGlobalThisLevel_ter globalRefMap
options.checkGlobalThisLevel_ter EMPTY_MODULE_LIST_ERROR
options.checkGlobalThisLevel_ter EMPTY_ROOT_MODULE_ERROR
options.checkGlobalThisLevel_ter DUPLICATE_INPUT
options.checkGlobalThisLevel_ter DUPLICATE_EXTERN_INPUT
options.checkGlobalThisLevel_ter sanityCheck
options.checkGlobalThisLevel_ter currentTracer
options.checkGlobalThisLevel_ter currentPassName
options.checkGlobalThisLevel_ter recentChange
options.checkGlobalThisLevel_ter codeChangeHandlers
7 
None  setErrorManager isOn_ter
MessageFormatter  createMessageFormatter isOn_ter
None  initOptions isOn_ter
None  init isOn_ter
None  init isOn_ter
None  init isOn_ter
None  initModules isOn_ter
None  initBasedOnOptions isOn_ter
List  makeCompilerInput isOn_ter
None  checkFirstModule isOn_ter
None  fillEmptyModules isOn_ter
None  rebuildInputsFromModules isOn_ter
List  getAllInputsFromModules isOn_ter
None  initInputsByNameMap isOn_ter
Result  compile isOn_ter
Result  compile isOn_ter
Result  compile isOn_ter
Result  compile isOn_ter
Result  compile isOn_ter
Result  compile isOn_ter
Result  compileModules isOn_ter
Result  compile isOn_ter
None  disableThreads isOn_ter
T  runInCompilerThread isOn_ter
T  runCallableWithLargeStack isOn_ter
T  runCallable isOn_ter
None  compileInternal isOn_ter
None  parse isOn_ter
PassConfig  getPassConfig isOn_ter
PassConfig  createPassConfigInternal isOn_ter
None  setPassConfig isOn_ter
boolean  precheck isOn_ter
None  check isOn_ter
None  externExports isOn_ter
None  process isOn_ter
None  maybeSanityCheck isOn_ter
None  runSanityCheck isOn_ter
None  removeTryCatchFinally isOn_ter
None  stripCode isOn_ter
None  runCustomPasses isOn_ter
None  startPass isOn_ter
None  endPass isOn_ter
Tracer  newTracer isOn_ter
None  stopTracer isOn_ter
Result  getResult isOn_ter
JSError  getMessages isOn_ter
JSError  getErrors isOn_ter
JSError  getWarnings isOn_ter
Node  getRoot isOn_ter
int  nextUniqueNameId isOn_ter
None  resetUniqueNameId isOn_ter
Supplier  getUniqueNameIdSupplier isOn_ter
boolean  areNodesEqualForInlining isOn_ter
CompilerInput  getInput isOn_ter
None  removeExternInput isOn_ter
CompilerInput  newExternInput isOn_ter
None  addIncrementalSourceAst isOn_ter
boolean  replaceIncrementalSourceAst isOn_ter
JSModuleGraph  getModuleGraph isOn_ter
JSTypeRegistry  getTypeRegistry isOn_ter
MemoizedScopeCreator  getTypedScopeCreator isOn_ter
DefaultPassConfig  ensureDefaultPassConfig isOn_ter
SymbolTable  buildKnownSymbolTable isOn_ter
Scope  getTopScope isOn_ter
ReverseAbstractInterpreter  getReverseAbstractInterpreter isOn_ter
TypeValidator  getTypeValidator isOn_ter
Node  parseInputs isOn_ter
Node  parse isOn_ter
Node  parseSyntheticCode isOn_ter
None  initCompilerOptionsIfTesting isOn_ter
Node  parseSyntheticCode isOn_ter
Node  parseTestCode isOn_ter
ErrorReporter  getDefaultErrorReporter isOn_ter
String  toSource isOn_ter
String  toSourceArray isOn_ter
String  toSource isOn_ter
String  toSourceArray isOn_ter
None  toSource isOn_ter
String  toSource isOn_ter
String  toSource isOn_ter
None  optimize isOn_ter
None  setCssRenamingMap isOn_ter
CssRenamingMap  getCssRenamingMap isOn_ter
None  processDefines isOn_ter
boolean  isInliningForbidden isOn_ter
ControlFlowGraph  computeCFG isOn_ter
None  normalize isOn_ter
None  prepareAst isOn_ter
None  recordFunctionInformation isOn_ter
None  addChangeHandler isOn_ter
None  removeChangeHandler isOn_ter
None  reportCodeChange isOn_ter
CodingConvention  getCodingConvention isOn_ter
boolean  isIdeMode isOn_ter
boolean  acceptEcmaScript5 isOn_ter
LanguageMode  languageMode isOn_ter
boolean  acceptConstKeyword isOn_ter
Config  getParserConfig isOn_ter
boolean  isTypeCheckingEnabled isOn_ter
DiagnosticGroups  getDiagnosticGroups isOn_ter
None  report isOn_ter
CheckLevel  getErrorLevel isOn_ter
None  throwInternalError isOn_ter
int  getErrorCount isOn_ter
int  getWarningCount isOn_ter
boolean  hasHaltingErrors isOn_ter
boolean  hasErrors isOn_ter
None  addToDebugLog isOn_ter
SourceFile  getSourceFileByName isOn_ter
String  getSourceLine isOn_ter
Region  getSourceRegion isOn_ter
Node  getNodeForCodeInsertion isOn_ter
SourceMap  getSourceMap isOn_ter
VariableMap  getVariableMap isOn_ter
VariableMap  getPropertyMap isOn_ter
CompilerOptions  getOptions isOn_ter
FunctionInformationMap  getFunctionalInformationMap isOn_ter
None  setLoggingLevel isOn_ter
String  getAstDotGraph isOn_ter
ErrorManager  getErrorManager isOn_ter
List  getInputsInOrder isOn_ter
List  getExternsInOrder isOn_ter
IntermediateState  getState isOn_ter
None  setState isOn_ter
List  getInputsForTesting isOn_ter
List  getExternsForTesting isOn_ter
boolean  hasRegExpGlobalReferences isOn_ter
None  setHasRegExpGlobalReferences isOn_ter
None  updateGlobalVarReferences isOn_ter
ReferenceMap  getGlobalVarReferences isOn_ter
method
options_ter {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}
7 CompilerOptions
None  setCheckShadowVars 
None  setAggressiveVarCheck 
None  setCheckFunctions 
None  setCheckMethods 
None  setReportMissingOverride 
None  setReportUnknownTypes 
None  setCheckRequires 
None  setCheckProvides 
None  setCheckGlobalNamesLevel 
None  setBrokenClosureRequiresLevel 
None  setCheckGlobalThisLevel 
None  setCheckMissingGetCssNameLevel 
None  setCheckUnreachableCode 
None  setCheckMissingReturn 
Map  getDefineReplacements 
Map  getTweakReplacements 
Map  getReplacementsHelper 
None  setDefineToBooleanLiteral 
None  setDefineToStringLiteral 
None  setDefineToNumberLiteral 
None  setDefineToDoubleLiteral 
None  setTweakToBooleanLiteral 
None  setTweakToStringLiteral 
None  setTweakToNumberLiteral 
None  setTweakToDoubleLiteral 
None  skipAllCompilerPasses 
boolean  enables 
boolean  disables 
None  setWarningLevel 
WarningsGuard  getWarningsGuard 
None  resetWarningsGuard 
None  useEmergencyFailSafe 
None  addWarningsGuard 
None  setRenamingPolicy 
None  setPropertyAffinity 
None  setShadowVariables 
None  setCollapsePropertiesOnExternTypes 
None  setProcessObjectPropertyString 
None  setIdGenerators 
None  setReplaceStringsConfiguration 
None  setRewriteNewDateGoogNow 
None  setRemoveAbstractMethods 
None  setRemoveClosureAsserts 
None  setNameAnonymousFunctionsOnly 
None  lineLengthThreshold 
None  setColorizeErrorOutput 
boolean  shouldColorizeErrorOutput 
None  setChainCalls 
None  setAcceptConstKeyword 
None  enableRuntimeTypeCheck 
None  disableRuntimeTypeCheck 
None  setGenerateExports 
None  setCodingConvention 
CodingConvention  getCodingConvention 
None  setManageClosureDependencies 
None  setManageClosureDependencies 
None  setSummaryDetailLevel 
None  enableExternExports 
None  setExtraAnnotationNames 
boolean  isExternExportsEnabled 
None  setOutputCharset 
None  setTweakProcessing 
TweakProcessing  getTweakProcessing 
None  setLanguageIn 
LanguageMode  getLanguageIn 
LanguageMode  getLanguageOut 
None  setLooseTypes 
Object  clone 
None  setAliasTransformationHandler 
AliasTransformationHandler  getAliasTransformationHandler 
None  setInferTypes 
boolean  getInferTypes 
boolean  isAssumeStrictThis 
None  setAssumeStrictThis 
method
7 
None  setErrorManager 
MessageFormatter  createMessageFormatter 
None  initOptions 
None  init 
None  init 
None  init 
None  initModules 
None  initBasedOnOptions 
List  makeCompilerInput 
None  checkFirstModule 
None  fillEmptyModules 
None  rebuildInputsFromModules 
List  getAllInputsFromModules 
None  initInputsByNameMap 
Result  compile 
Result  compile 
Result  compile 
Result  compile 
Result  compile 
Result  compile 
Result  compileModules 
Result  compile 
None  disableThreads 
T  runInCompilerThread 
T  runCallableWithLargeStack 
T  runCallable 
None  compileInternal 
None  parse 
PassConfig  getPassConfig 
PassConfig  createPassConfigInternal 
None  setPassConfig 
boolean  precheck 
None  check 
None  externExports 
None  process 
None  maybeSanityCheck 
None  runSanityCheck 
None  removeTryCatchFinally 
None  stripCode 
None  runCustomPasses 
None  startPass 
None  endPass 
Tracer  newTracer 
None  stopTracer 
Result  getResult 
JSError  getMessages 
JSError  getErrors 
JSError  getWarnings 
Node  getRoot 
int  nextUniqueNameId 
None  resetUniqueNameId 
Supplier  getUniqueNameIdSupplier 
boolean  areNodesEqualForInlining 
CompilerInput  getInput 
None  removeExternInput 
CompilerInput  newExternInput 
None  addIncrementalSourceAst 
boolean  replaceIncrementalSourceAst 
JSModuleGraph  getModuleGraph 
JSTypeRegistry  getTypeRegistry 
MemoizedScopeCreator  getTypedScopeCreator 
DefaultPassConfig  ensureDefaultPassConfig 
SymbolTable  buildKnownSymbolTable 
Scope  getTopScope 
ReverseAbstractInterpreter  getReverseAbstractInterpreter 
TypeValidator  getTypeValidator 
Node  parseInputs 
Node  parse 
Node  parseSyntheticCode 
None  initCompilerOptionsIfTesting 
Node  parseSyntheticCode 
Node  parseTestCode 
ErrorReporter  getDefaultErrorReporter 
String  toSource 
String  toSourceArray 
String  toSource 
String  toSourceArray 
None  toSource 
String  toSource 
String  toSource 
None  optimize 
None  setCssRenamingMap 
CssRenamingMap  getCssRenamingMap 
None  processDefines 
boolean  isInliningForbidden 
ControlFlowGraph  computeCFG 
None  normalize 
None  prepareAst 
None  recordFunctionInformation 
None  addChangeHandler 
None  removeChangeHandler 
None  reportCodeChange 
CodingConvention  getCodingConvention 
boolean  isIdeMode 
boolean  acceptEcmaScript5 
LanguageMode  languageMode 
boolean  acceptConstKeyword 
Config  getParserConfig 
boolean  isTypeCheckingEnabled 
DiagnosticGroups  getDiagnosticGroups 
None  report 
CheckLevel  getErrorLevel 
None  throwInternalError 
int  getErrorCount 
int  getWarningCount 
boolean  hasHaltingErrors 
boolean  hasErrors 
None  addToDebugLog 
SourceFile  getSourceFileByName 
String  getSourceLine 
Region  getSourceRegion 
Node  getNodeForCodeInsertion 
SourceMap  getSourceMap 
VariableMap  getVariableMap 
VariableMap  getPropertyMap 
CompilerOptions  getOptions 
FunctionInformationMap  getFunctionalInformationMap 
None  setLoggingLevel 
String  getAstDotGraph 
ErrorManager  getErrorManager 
List  getInputsInOrder 
List  getExternsInOrder 
IntermediateState  getState 
None  setState 
List  getInputsForTesting 
List  getExternsForTesting 
boolean  hasRegExpGlobalReferences 
None  setHasRegExpGlobalReferences 
None  updateGlobalVarReferences 
ReferenceMap  getGlobalVarReferences 
method
options_ter {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}
7 CompilerOptions
None  setCheckShadowVars 
None  setAggressiveVarCheck 
None  setCheckFunctions 
None  setCheckMethods 
None  setReportMissingOverride 
None  setReportUnknownTypes 
None  setCheckRequires 
None  setCheckProvides 
None  setCheckGlobalNamesLevel 
None  setBrokenClosureRequiresLevel 
None  setCheckGlobalThisLevel 
None  setCheckMissingGetCssNameLevel 
None  setCheckUnreachableCode 
None  setCheckMissingReturn 
Map  getDefineReplacements 
Map  getTweakReplacements 
Map  getReplacementsHelper 
None  setDefineToBooleanLiteral 
None  setDefineToStringLiteral 
None  setDefineToNumberLiteral 
None  setDefineToDoubleLiteral 
None  setTweakToBooleanLiteral 
None  setTweakToStringLiteral 
None  setTweakToNumberLiteral 
None  setTweakToDoubleLiteral 
None  skipAllCompilerPasses 
boolean  enables 
boolean  disables 
None  setWarningLevel 
WarningsGuard  getWarningsGuard 
None  resetWarningsGuard 
None  useEmergencyFailSafe 
None  addWarningsGuard 
None  setRenamingPolicy 
None  setPropertyAffinity 
None  setShadowVariables 
None  setCollapsePropertiesOnExternTypes 
None  setProcessObjectPropertyString 
None  setIdGenerators 
None  setReplaceStringsConfiguration 
None  setRewriteNewDateGoogNow 
None  setRemoveAbstractMethods 
None  setRemoveClosureAsserts 
None  setNameAnonymousFunctionsOnly 
None  lineLengthThreshold 
None  setColorizeErrorOutput 
boolean  shouldColorizeErrorOutput 
None  setChainCalls 
None  setAcceptConstKeyword 
None  enableRuntimeTypeCheck 
None  disableRuntimeTypeCheck 
None  setGenerateExports 
None  setCodingConvention 
CodingConvention  getCodingConvention 
None  setManageClosureDependencies 
None  setManageClosureDependencies 
None  setSummaryDetailLevel 
None  enableExternExports 
None  setExtraAnnotationNames 
boolean  isExternExportsEnabled 
None  setOutputCharset 
None  setTweakProcessing 
TweakProcessing  getTweakProcessing 
None  setLanguageIn 
LanguageMode  getLanguageIn 
LanguageMode  getLanguageOut 
None  setLooseTypes 
Object  clone 
None  setAliasTransformationHandler 
AliasTransformationHandler  getAliasTransformationHandler 
None  setInferTypes 
boolean  getInferTypes 
boolean  isAssumeStrictThis 
None  setAssumeStrictThis 
method
options_ter {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}
7 CompilerOptions
None  setCheckShadowVars 
None  setAggressiveVarCheck 
None  setCheckFunctions 
None  setCheckMethods 
None  setReportMissingOverride 
None  setReportUnknownTypes 
None  setCheckRequires 
None  setCheckProvides 
None  setCheckGlobalNamesLevel 
None  setBrokenClosureRequiresLevel 
None  setCheckGlobalThisLevel 
None  setCheckMissingGetCssNameLevel 
None  setCheckUnreachableCode 
None  setCheckMissingReturn 
Map  getDefineReplacements 
Map  getTweakReplacements 
Map  getReplacementsHelper 
None  setDefineToBooleanLiteral 
None  setDefineToStringLiteral 
None  setDefineToNumberLiteral 
None  setDefineToDoubleLiteral 
None  setTweakToBooleanLiteral 
None  setTweakToStringLiteral 
None  setTweakToNumberLiteral 
None  setTweakToDoubleLiteral 
None  skipAllCompilerPasses 
boolean  enables 
boolean  disables 
None  setWarningLevel 
WarningsGuard  getWarningsGuard 
None  resetWarningsGuard 
None  useEmergencyFailSafe 
None  addWarningsGuard 
None  setRenamingPolicy 
None  setPropertyAffinity 
None  setShadowVariables 
None  setCollapsePropertiesOnExternTypes 
None  setProcessObjectPropertyString 
None  setIdGenerators 
None  setReplaceStringsConfiguration 
None  setRewriteNewDateGoogNow 
None  setRemoveAbstractMethods 
None  setRemoveClosureAsserts 
None  setNameAnonymousFunctionsOnly 
None  lineLengthThreshold 
None  setColorizeErrorOutput 
boolean  shouldColorizeErrorOutput 
None  setChainCalls 
None  setAcceptConstKeyword 
None  enableRuntimeTypeCheck 
None  disableRuntimeTypeCheck 
None  setGenerateExports 
None  setCodingConvention 
CodingConvention  getCodingConvention 
None  setManageClosureDependencies 
None  setManageClosureDependencies 
None  setSummaryDetailLevel 
None  enableExternExports 
None  setExtraAnnotationNames 
boolean  isExternExportsEnabled 
None  setOutputCharset 
None  setTweakProcessing 
TweakProcessing  getTweakProcessing 
None  setLanguageIn 
LanguageMode  getLanguageIn 
LanguageMode  getLanguageOut 
None  setLooseTypes 
Object  clone 
None  setAliasTransformationHandler 
AliasTransformationHandler  getAliasTransformationHandler 
None  setInferTypes 
boolean  getInferTypes 
boolean  isAssumeStrictThis 
None  setAssumeStrictThis 
method
options_ter {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}
7 CompilerOptions
None  setCheckShadowVars 
None  setAggressiveVarCheck 
None  setCheckFunctions 
None  setCheckMethods 
None  setReportMissingOverride 
None  setReportUnknownTypes 
None  setCheckRequires 
None  setCheckProvides 
None  setCheckGlobalNamesLevel 
None  setBrokenClosureRequiresLevel 
None  setCheckGlobalThisLevel 
None  setCheckMissingGetCssNameLevel 
None  setCheckUnreachableCode 
None  setCheckMissingReturn 
Map  getDefineReplacements 
Map  getTweakReplacements 
Map  getReplacementsHelper 
None  setDefineToBooleanLiteral 
None  setDefineToStringLiteral 
None  setDefineToNumberLiteral 
None  setDefineToDoubleLiteral 
None  setTweakToBooleanLiteral 
None  setTweakToStringLiteral 
None  setTweakToNumberLiteral 
None  setTweakToDoubleLiteral 
None  skipAllCompilerPasses 
boolean  enables 
boolean  disables 
None  setWarningLevel 
WarningsGuard  getWarningsGuard 
None  resetWarningsGuard 
None  useEmergencyFailSafe 
None  addWarningsGuard 
None  setRenamingPolicy 
None  setPropertyAffinity 
None  setShadowVariables 
None  setCollapsePropertiesOnExternTypes 
None  setProcessObjectPropertyString 
None  setIdGenerators 
None  setReplaceStringsConfiguration 
None  setRewriteNewDateGoogNow 
None  setRemoveAbstractMethods 
None  setRemoveClosureAsserts 
None  setNameAnonymousFunctionsOnly 
None  lineLengthThreshold 
None  setColorizeErrorOutput 
boolean  shouldColorizeErrorOutput 
None  setChainCalls 
None  setAcceptConstKeyword 
None  enableRuntimeTypeCheck 
None  disableRuntimeTypeCheck 
None  setGenerateExports 
None  setCodingConvention 
CodingConvention  getCodingConvention 
None  setManageClosureDependencies 
None  setManageClosureDependencies 
None  setSummaryDetailLevel 
None  enableExternExports 
None  setExtraAnnotationNames 
boolean  isExternExportsEnabled 
None  setOutputCharset 
None  setTweakProcessing 
TweakProcessing  getTweakProcessing 
None  setLanguageIn 
LanguageMode  getLanguageIn 
LanguageMode  getLanguageOut 
None  setLooseTypes 
Object  clone 
None  setAliasTransformationHandler 
AliasTransformationHandler  getAliasTransformationHandler 
None  setInferTypes 
boolean  getInferTypes 
boolean  isAssumeStrictThis 
None  setAssumeStrictThis 
method
options.checkGlobalThisLevel_ter {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}
options.checkGlobalThisLevel_ter MODULE_DEPENDENCY_ERROR
options.checkGlobalThisLevel_ter MISSING_ENTRY_ERROR
options.checkGlobalThisLevel_ter options
options.checkGlobalThisLevel_ter passes
options.checkGlobalThisLevel_ter externs
options.checkGlobalThisLevel_ter modules
options.checkGlobalThisLevel_ter moduleGraph
options.checkGlobalThisLevel_ter inputs
options.checkGlobalThisLevel_ter errorManager
options.checkGlobalThisLevel_ter warningsGuard
options.checkGlobalThisLevel_ter externsRoot
options.checkGlobalThisLevel_ter jsRoot
options.checkGlobalThisLevel_ter externAndJsRoot
options.checkGlobalThisLevel_ter inputsByName
options.checkGlobalThisLevel_ter sourceMap
options.checkGlobalThisLevel_ter externExports
options.checkGlobalThisLevel_ter uniqueNameId
options.checkGlobalThisLevel_ter useThreads
options.checkGlobalThisLevel_ter hasRegExpGlobalReferences
options.checkGlobalThisLevel_ter functionInformationMap
options.checkGlobalThisLevel_ter debugLog
options.checkGlobalThisLevel_ter defaultCodingConvention
options.checkGlobalThisLevel_ter typeRegistry
options.checkGlobalThisLevel_ter parserConfig
options.checkGlobalThisLevel_ter abstractInterpreter
options.checkGlobalThisLevel_ter typeValidator
options.checkGlobalThisLevel_ter tracker
options.checkGlobalThisLevel_ter oldErrorReporter
options.checkGlobalThisLevel_ter defaultErrorReporter
options.checkGlobalThisLevel_ter OPTIMIZE_LOOP_ERROR
options.checkGlobalThisLevel_ter MOTION_ITERATIONS_ERROR
options.checkGlobalThisLevel_ter COMPILER_STACK_SIZE
options.checkGlobalThisLevel_ter logger
options.checkGlobalThisLevel_ter outStream
options.checkGlobalThisLevel_ter globalRefMap
options.checkGlobalThisLevel_ter EMPTY_MODULE_LIST_ERROR
options.checkGlobalThisLevel_ter EMPTY_ROOT_MODULE_ERROR
options.checkGlobalThisLevel_ter DUPLICATE_INPUT
options.checkGlobalThisLevel_ter DUPLICATE_EXTERN_INPUT
options.checkGlobalThisLevel_ter sanityCheck
options.checkGlobalThisLevel_ter currentTracer
options.checkGlobalThisLevel_ter currentPassName
options.checkGlobalThisLevel_ter recentChange
options.checkGlobalThisLevel_ter codeChangeHandlers
7 
method
7 
None  setErrorManager 
MessageFormatter  createMessageFormatter 
None  initOptions 
None  init 
None  init 
None  init 
None  initModules 
None  initBasedOnOptions 
List  makeCompilerInput 
None  checkFirstModule 
None  fillEmptyModules 
None  rebuildInputsFromModules 
List  getAllInputsFromModules 
None  initInputsByNameMap 
Result  compile 
Result  compile 
Result  compile 
Result  compile 
Result  compile 
Result  compile 
Result  compileModules 
Result  compile 
None  disableThreads 
T  runInCompilerThread 
T  runCallableWithLargeStack 
T  runCallable 
None  compileInternal 
None  parse 
PassConfig  getPassConfig 
PassConfig  createPassConfigInternal 
None  setPassConfig 
boolean  precheck 
None  check 
None  externExports 
None  process 
None  maybeSanityCheck 
None  runSanityCheck 
None  removeTryCatchFinally 
None  stripCode 
None  runCustomPasses 
None  startPass 
None  endPass 
Tracer  newTracer 
None  stopTracer 
Result  getResult 
JSError  getMessages 
JSError  getErrors 
JSError  getWarnings 
Node  getRoot 
int  nextUniqueNameId 
None  resetUniqueNameId 
Supplier  getUniqueNameIdSupplier 
boolean  areNodesEqualForInlining 
CompilerInput  getInput 
None  removeExternInput 
CompilerInput  newExternInput 
None  addIncrementalSourceAst 
boolean  replaceIncrementalSourceAst 
JSModuleGraph  getModuleGraph 
JSTypeRegistry  getTypeRegistry 
MemoizedScopeCreator  getTypedScopeCreator 
DefaultPassConfig  ensureDefaultPassConfig 
SymbolTable  buildKnownSymbolTable 
Scope  getTopScope 
ReverseAbstractInterpreter  getReverseAbstractInterpreter 
TypeValidator  getTypeValidator 
Node  parseInputs 
Node  parse 
Node  parseSyntheticCode 
None  initCompilerOptionsIfTesting 
Node  parseSyntheticCode 
Node  parseTestCode 
ErrorReporter  getDefaultErrorReporter 
String  toSource 
String  toSourceArray 
String  toSource 
String  toSourceArray 
None  toSource 
String  toSource 
String  toSource 
None  optimize 
None  setCssRenamingMap 
CssRenamingMap  getCssRenamingMap 
None  processDefines 
boolean  isInliningForbidden 
ControlFlowGraph  computeCFG 
None  normalize 
None  prepareAst 
None  recordFunctionInformation 
None  addChangeHandler 
None  removeChangeHandler 
None  reportCodeChange 
CodingConvention  getCodingConvention 
boolean  isIdeMode 
boolean  acceptEcmaScript5 
LanguageMode  languageMode 
boolean  acceptConstKeyword 
Config  getParserConfig 
boolean  isTypeCheckingEnabled 
DiagnosticGroups  getDiagnosticGroups 
None  report 
CheckLevel  getErrorLevel 
None  throwInternalError 
int  getErrorCount 
int  getWarningCount 
boolean  hasHaltingErrors 
boolean  hasErrors 
None  addToDebugLog 
SourceFile  getSourceFileByName 
String  getSourceLine 
Region  getSourceRegion 
Node  getNodeForCodeInsertion 
SourceMap  getSourceMap 
VariableMap  getVariableMap 
VariableMap  getPropertyMap 
CompilerOptions  getOptions 
FunctionInformationMap  getFunctionalInformationMap 
None  setLoggingLevel 
String  getAstDotGraph 
ErrorManager  getErrorManager 
List  getInputsInOrder 
List  getExternsInOrder 
IntermediateState  getState 
None  setState 
List  getInputsForTesting 
List  getExternsForTesting 
boolean  hasRegExpGlobalReferences 
None  setHasRegExpGlobalReferences 
None  updateGlobalVarReferences 
ReferenceMap  getGlobalVarReferences 
method
7 
method
options_ter {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}
except
method
options.checkGlobalThisLevel_ter {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}
options.checkGlobalThisLevel_ter MODULE_DEPENDENCY_ERROR
options.checkGlobalThisLevel_ter MISSING_ENTRY_ERROR
options.checkGlobalThisLevel_ter options
options.checkGlobalThisLevel_ter passes
options.checkGlobalThisLevel_ter externs
options.checkGlobalThisLevel_ter modules
options.checkGlobalThisLevel_ter moduleGraph
options.checkGlobalThisLevel_ter inputs
options.checkGlobalThisLevel_ter errorManager
options.checkGlobalThisLevel_ter warningsGuard
options.checkGlobalThisLevel_ter externsRoot
options.checkGlobalThisLevel_ter jsRoot
options.checkGlobalThisLevel_ter externAndJsRoot
options.checkGlobalThisLevel_ter inputsByName
options.checkGlobalThisLevel_ter sourceMap
options.checkGlobalThisLevel_ter externExports
options.checkGlobalThisLevel_ter uniqueNameId
options.checkGlobalThisLevel_ter useThreads
options.checkGlobalThisLevel_ter hasRegExpGlobalReferences
options.checkGlobalThisLevel_ter functionInformationMap
options.checkGlobalThisLevel_ter debugLog
options.checkGlobalThisLevel_ter defaultCodingConvention
options.checkGlobalThisLevel_ter typeRegistry
options.checkGlobalThisLevel_ter parserConfig
options.checkGlobalThisLevel_ter abstractInterpreter
options.checkGlobalThisLevel_ter typeValidator
options.checkGlobalThisLevel_ter tracker
options.checkGlobalThisLevel_ter oldErrorReporter
options.checkGlobalThisLevel_ter defaultErrorReporter
options.checkGlobalThisLevel_ter OPTIMIZE_LOOP_ERROR
options.checkGlobalThisLevel_ter MOTION_ITERATIONS_ERROR
options.checkGlobalThisLevel_ter COMPILER_STACK_SIZE
options.checkGlobalThisLevel_ter logger
options.checkGlobalThisLevel_ter outStream
options.checkGlobalThisLevel_ter globalRefMap
options.checkGlobalThisLevel_ter EMPTY_MODULE_LIST_ERROR
options.checkGlobalThisLevel_ter EMPTY_ROOT_MODULE_ERROR
options.checkGlobalThisLevel_ter DUPLICATE_INPUT
options.checkGlobalThisLevel_ter DUPLICATE_EXTERN_INPUT
options.checkGlobalThisLevel_ter sanityCheck
options.checkGlobalThisLevel_ter currentTracer
options.checkGlobalThisLevel_ter currentPassName
options.checkGlobalThisLevel_ter recentChange
options.checkGlobalThisLevel_ter codeChangeHandlers
7 
method
options_ter {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}
7 CompilerOptions
None  setCheckShadowVars 
None  setAggressiveVarCheck 
None  setCheckFunctions 
None  setCheckMethods 
None  setReportMissingOverride 
None  setReportUnknownTypes 
None  setCheckRequires 
None  setCheckProvides 
None  setCheckGlobalNamesLevel 
None  setBrokenClosureRequiresLevel 
None  setCheckGlobalThisLevel 
None  setCheckMissingGetCssNameLevel 
None  setCheckUnreachableCode 
None  setCheckMissingReturn 
Map  getDefineReplacements 
Map  getTweakReplacements 
Map  getReplacementsHelper 
None  setDefineToBooleanLiteral 
None  setDefineToStringLiteral 
None  setDefineToNumberLiteral 
None  setDefineToDoubleLiteral 
None  setTweakToBooleanLiteral 
None  setTweakToStringLiteral 
None  setTweakToNumberLiteral 
None  setTweakToDoubleLiteral 
None  skipAllCompilerPasses 
boolean  enables 
boolean  disables 
None  setWarningLevel 
WarningsGuard  getWarningsGuard 
None  resetWarningsGuard 
None  useEmergencyFailSafe 
None  addWarningsGuard 
None  setRenamingPolicy 
None  setPropertyAffinity 
None  setShadowVariables 
None  setCollapsePropertiesOnExternTypes 
None  setProcessObjectPropertyString 
None  setIdGenerators 
None  setReplaceStringsConfiguration 
None  setRewriteNewDateGoogNow 
None  setRemoveAbstractMethods 
None  setRemoveClosureAsserts 
None  setNameAnonymousFunctionsOnly 
None  lineLengthThreshold 
None  setColorizeErrorOutput 
boolean  shouldColorizeErrorOutput 
None  setChainCalls 
None  setAcceptConstKeyword 
None  enableRuntimeTypeCheck 
None  disableRuntimeTypeCheck 
None  setGenerateExports 
None  setCodingConvention 
CodingConvention  getCodingConvention 
None  setManageClosureDependencies 
None  setManageClosureDependencies 
None  setSummaryDetailLevel 
None  enableExternExports 
None  setExtraAnnotationNames 
boolean  isExternExportsEnabled 
None  setOutputCharset 
None  setTweakProcessing 
TweakProcessing  getTweakProcessing 
None  setLanguageIn 
LanguageMode  getLanguageIn 
LanguageMode  getLanguageOut 
None  setLooseTypes 
Object  clone 
None  setAliasTransformationHandler 
AliasTransformationHandler  getAliasTransformationHandler 
None  setInferTypes 
boolean  getInferTypes 
boolean  isAssumeStrictThis 
None  setAssumeStrictThis 
method
7 
None  setErrorManager 
MessageFormatter  createMessageFormatter 
None  initOptions 
None  init 
None  init 
None  init 
None  initModules 
None  initBasedOnOptions 
List  makeCompilerInput 
None  checkFirstModule 
None  fillEmptyModules 
None  rebuildInputsFromModules 
List  getAllInputsFromModules 
None  initInputsByNameMap 
Result  compile 
Result  compile 
Result  compile 
Result  compile 
Result  compile 
Result  compile 
Result  compileModules 
Result  compile 
None  disableThreads 
T  runInCompilerThread 
T  runCallableWithLargeStack 
T  runCallable 
None  compileInternal 
None  parse 
PassConfig  getPassConfig 
PassConfig  createPassConfigInternal 
None  setPassConfig 
boolean  precheck 
None  check 
None  externExports 
None  process 
None  maybeSanityCheck 
None  runSanityCheck 
None  removeTryCatchFinally 
None  stripCode 
None  runCustomPasses 
None  startPass 
None  endPass 
Tracer  newTracer 
None  stopTracer 
Result  getResult 
JSError  getMessages 
JSError  getErrors 
JSError  getWarnings 
Node  getRoot 
int  nextUniqueNameId 
None  resetUniqueNameId 
Supplier  getUniqueNameIdSupplier 
boolean  areNodesEqualForInlining 
CompilerInput  getInput 
None  removeExternInput 
CompilerInput  newExternInput 
None  addIncrementalSourceAst 
boolean  replaceIncrementalSourceAst 
JSModuleGraph  getModuleGraph 
JSTypeRegistry  getTypeRegistry 
MemoizedScopeCreator  getTypedScopeCreator 
DefaultPassConfig  ensureDefaultPassConfig 
SymbolTable  buildKnownSymbolTable 
Scope  getTopScope 
ReverseAbstractInterpreter  getReverseAbstractInterpreter 
TypeValidator  getTypeValidator 
Node  parseInputs 
Node  parse 
Node  parseSyntheticCode 
None  initCompilerOptionsIfTesting 
Node  parseSyntheticCode 
Node  parseTestCode 
ErrorReporter  getDefaultErrorReporter 
String  toSource 
String  toSourceArray 
String  toSource 
String  toSourceArray 
None  toSource 
String  toSource 
String  toSource 
None  optimize 
None  setCssRenamingMap 
CssRenamingMap  getCssRenamingMap 
None  processDefines 
boolean  isInliningForbidden 
ControlFlowGraph  computeCFG 
None  normalize 
None  prepareAst 
None  recordFunctionInformation 
None  addChangeHandler 
None  removeChangeHandler 
None  reportCodeChange 
CodingConvention  getCodingConvention 
boolean  isIdeMode 
boolean  acceptEcmaScript5 
LanguageMode  languageMode 
boolean  acceptConstKeyword 
Config  getParserConfig 
boolean  isTypeCheckingEnabled 
DiagnosticGroups  getDiagnosticGroups 
None  report 
CheckLevel  getErrorLevel 
None  throwInternalError 
int  getErrorCount 
int  getWarningCount 
boolean  hasHaltingErrors 
boolean  hasErrors 
None  addToDebugLog 
SourceFile  getSourceFileByName 
String  getSourceLine 
Region  getSourceRegion 
Node  getNodeForCodeInsertion 
SourceMap  getSourceMap 
VariableMap  getVariableMap 
VariableMap  getPropertyMap 
CompilerOptions  getOptions 
FunctionInformationMap  getFunctionalInformationMap 
None  setLoggingLevel 
String  getAstDotGraph 
ErrorManager  getErrorManager 
List  getInputsInOrder 
List  getExternsInOrder 
IntermediateState  getState 
None  setState 
List  getInputsForTesting 
List  getExternsForTesting 
boolean  hasRegExpGlobalReferences 
None  setHasRegExpGlobalReferences 
None  updateGlobalVarReferences 
ReferenceMap  getGlobalVarReferences 
method
options_ter {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}
7 CompilerOptions
None  setCheckShadowVars 
None  setAggressiveVarCheck 
None  setCheckFunctions 
None  setCheckMethods 
None  setReportMissingOverride 
None  setReportUnknownTypes 
None  setCheckRequires 
None  setCheckProvides 
None  setCheckGlobalNamesLevel 
None  setBrokenClosureRequiresLevel 
None  setCheckGlobalThisLevel 
None  setCheckMissingGetCssNameLevel 
None  setCheckUnreachableCode 
None  setCheckMissingReturn 
Map  getDefineReplacements 
Map  getTweakReplacements 
Map  getReplacementsHelper 
None  setDefineToBooleanLiteral 
None  setDefineToStringLiteral 
None  setDefineToNumberLiteral 
None  setDefineToDoubleLiteral 
None  setTweakToBooleanLiteral 
None  setTweakToStringLiteral 
None  setTweakToNumberLiteral 
None  setTweakToDoubleLiteral 
None  skipAllCompilerPasses 
boolean  enables 
boolean  disables 
None  setWarningLevel 
WarningsGuard  getWarningsGuard 
None  resetWarningsGuard 
None  useEmergencyFailSafe 
None  addWarningsGuard 
None  setRenamingPolicy 
None  setPropertyAffinity 
None  setShadowVariables 
None  setCollapsePropertiesOnExternTypes 
None  setProcessObjectPropertyString 
None  setIdGenerators 
None  setReplaceStringsConfiguration 
None  setRewriteNewDateGoogNow 
None  setRemoveAbstractMethods 
None  setRemoveClosureAsserts 
None  setNameAnonymousFunctionsOnly 
None  lineLengthThreshold 
None  setColorizeErrorOutput 
boolean  shouldColorizeErrorOutput 
None  setChainCalls 
None  setAcceptConstKeyword 
None  enableRuntimeTypeCheck 
None  disableRuntimeTypeCheck 
None  setGenerateExports 
None  setCodingConvention 
CodingConvention  getCodingConvention 
None  setManageClosureDependencies 
None  setManageClosureDependencies 
None  setSummaryDetailLevel 
None  enableExternExports 
None  setExtraAnnotationNames 
boolean  isExternExportsEnabled 
None  setOutputCharset 
None  setTweakProcessing 
TweakProcessing  getTweakProcessing 
None  setLanguageIn 
LanguageMode  getLanguageIn 
LanguageMode  getLanguageOut 
None  setLooseTypes 
Object  clone 
None  setAliasTransformationHandler 
AliasTransformationHandler  getAliasTransformationHandler 
None  setInferTypes 
boolean  getInferTypes 
boolean  isAssumeStrictThis 
None  setAssumeStrictThis 
method
options_ter {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}
7 CompilerOptions
None  setCheckShadowVars 
None  setAggressiveVarCheck 
None  setCheckFunctions 
None  setCheckMethods 
None  setReportMissingOverride 
None  setReportUnknownTypes 
None  setCheckRequires 
None  setCheckProvides 
None  setCheckGlobalNamesLevel 
None  setBrokenClosureRequiresLevel 
None  setCheckGlobalThisLevel 
None  setCheckMissingGetCssNameLevel 
None  setCheckUnreachableCode 
None  setCheckMissingReturn 
Map  getDefineReplacements 
Map  getTweakReplacements 
Map  getReplacementsHelper 
None  setDefineToBooleanLiteral 
None  setDefineToStringLiteral 
None  setDefineToNumberLiteral 
None  setDefineToDoubleLiteral 
None  setTweakToBooleanLiteral 
None  setTweakToStringLiteral 
None  setTweakToNumberLiteral 
None  setTweakToDoubleLiteral 
None  skipAllCompilerPasses 
boolean  enables 
boolean  disables 
None  setWarningLevel 
WarningsGuard  getWarningsGuard 
None  resetWarningsGuard 
None  useEmergencyFailSafe 
None  addWarningsGuard 
None  setRenamingPolicy 
None  setPropertyAffinity 
None  setShadowVariables 
None  setCollapsePropertiesOnExternTypes 
None  setProcessObjectPropertyString 
None  setIdGenerators 
None  setReplaceStringsConfiguration 
None  setRewriteNewDateGoogNow 
None  setRemoveAbstractMethods 
None  setRemoveClosureAsserts 
None  setNameAnonymousFunctionsOnly 
None  lineLengthThreshold 
None  setColorizeErrorOutput 
boolean  shouldColorizeErrorOutput 
None  setChainCalls 
None  setAcceptConstKeyword 
None  enableRuntimeTypeCheck 
None  disableRuntimeTypeCheck 
None  setGenerateExports 
None  setCodingConvention 
CodingConvention  getCodingConvention 
None  setManageClosureDependencies 
None  setManageClosureDependencies 
None  setSummaryDetailLevel 
None  enableExternExports 
None  setExtraAnnotationNames 
boolean  isExternExportsEnabled 
None  setOutputCharset 
None  setTweakProcessing 
TweakProcessing  getTweakProcessing 
None  setLanguageIn 
LanguageMode  getLanguageIn 
LanguageMode  getLanguageOut 
None  setLooseTypes 
Object  clone 
None  setAliasTransformationHandler 
AliasTransformationHandler  getAliasTransformationHandler 
None  setInferTypes 
boolean  getInferTypes 
boolean  isAssumeStrictThis 
None  setAssumeStrictThis 
method
options.checkGlobalThisLevel_ter {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}
options.checkGlobalThisLevel_ter MODULE_DEPENDENCY_ERROR
options.checkGlobalThisLevel_ter MISSING_ENTRY_ERROR
options.checkGlobalThisLevel_ter options
options.checkGlobalThisLevel_ter passes
options.checkGlobalThisLevel_ter externs
options.checkGlobalThisLevel_ter modules
options.checkGlobalThisLevel_ter moduleGraph
options.checkGlobalThisLevel_ter inputs
options.checkGlobalThisLevel_ter errorManager
options.checkGlobalThisLevel_ter warningsGuard
options.checkGlobalThisLevel_ter externsRoot
options.checkGlobalThisLevel_ter jsRoot
options.checkGlobalThisLevel_ter externAndJsRoot
options.checkGlobalThisLevel_ter inputsByName
options.checkGlobalThisLevel_ter sourceMap
options.checkGlobalThisLevel_ter externExports
options.checkGlobalThisLevel_ter uniqueNameId
options.checkGlobalThisLevel_ter useThreads
options.checkGlobalThisLevel_ter hasRegExpGlobalReferences
options.checkGlobalThisLevel_ter functionInformationMap
options.checkGlobalThisLevel_ter debugLog
options.checkGlobalThisLevel_ter defaultCodingConvention
options.checkGlobalThisLevel_ter typeRegistry
options.checkGlobalThisLevel_ter parserConfig
options.checkGlobalThisLevel_ter abstractInterpreter
options.checkGlobalThisLevel_ter typeValidator
options.checkGlobalThisLevel_ter tracker
options.checkGlobalThisLevel_ter oldErrorReporter
options.checkGlobalThisLevel_ter defaultErrorReporter
options.checkGlobalThisLevel_ter OPTIMIZE_LOOP_ERROR
options.checkGlobalThisLevel_ter MOTION_ITERATIONS_ERROR
options.checkGlobalThisLevel_ter COMPILER_STACK_SIZE
options.checkGlobalThisLevel_ter logger
options.checkGlobalThisLevel_ter outStream
options.checkGlobalThisLevel_ter globalRefMap
options.checkGlobalThisLevel_ter EMPTY_MODULE_LIST_ERROR
options.checkGlobalThisLevel_ter EMPTY_ROOT_MODULE_ERROR
options.checkGlobalThisLevel_ter DUPLICATE_INPUT
options.checkGlobalThisLevel_ter DUPLICATE_EXTERN_INPUT
options.checkGlobalThisLevel_ter sanityCheck
options.checkGlobalThisLevel_ter currentTracer
options.checkGlobalThisLevel_ter currentPassName
options.checkGlobalThisLevel_ter recentChange
options.checkGlobalThisLevel_ter codeChangeHandlers
7 
method
options_ter {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}
7 CompilerOptions
None  setCheckShadowVars 
None  setAggressiveVarCheck 
None  setCheckFunctions 
None  setCheckMethods 
None  setReportMissingOverride 
None  setReportUnknownTypes 
None  setCheckRequires 
None  setCheckProvides 
None  setCheckGlobalNamesLevel 
None  setBrokenClosureRequiresLevel 
None  setCheckGlobalThisLevel 
None  setCheckMissingGetCssNameLevel 
None  setCheckUnreachableCode 
None  setCheckMissingReturn 
Map  getDefineReplacements 
Map  getTweakReplacements 
Map  getReplacementsHelper 
None  setDefineToBooleanLiteral 
None  setDefineToStringLiteral 
None  setDefineToNumberLiteral 
None  setDefineToDoubleLiteral 
None  setTweakToBooleanLiteral 
None  setTweakToStringLiteral 
None  setTweakToNumberLiteral 
None  setTweakToDoubleLiteral 
None  skipAllCompilerPasses 
boolean  enables 
boolean  disables 
None  setWarningLevel 
WarningsGuard  getWarningsGuard 
None  resetWarningsGuard 
None  useEmergencyFailSafe 
None  addWarningsGuard 
None  setRenamingPolicy 
None  setPropertyAffinity 
None  setShadowVariables 
None  setCollapsePropertiesOnExternTypes 
None  setProcessObjectPropertyString 
None  setIdGenerators 
None  setReplaceStringsConfiguration 
None  setRewriteNewDateGoogNow 
None  setRemoveAbstractMethods 
None  setRemoveClosureAsserts 
None  setNameAnonymousFunctionsOnly 
None  lineLengthThreshold 
None  setColorizeErrorOutput 
boolean  shouldColorizeErrorOutput 
None  setChainCalls 
None  setAcceptConstKeyword 
None  enableRuntimeTypeCheck 
None  disableRuntimeTypeCheck 
None  setGenerateExports 
None  setCodingConvention 
CodingConvention  getCodingConvention 
None  setManageClosureDependencies 
None  setManageClosureDependencies 
None  setSummaryDetailLevel 
None  enableExternExports 
None  setExtraAnnotationNames 
boolean  isExternExportsEnabled 
None  setOutputCharset 
None  setTweakProcessing 
TweakProcessing  getTweakProcessing 
None  setLanguageIn 
LanguageMode  getLanguageIn 
LanguageMode  getLanguageOut 
None  setLooseTypes 
Object  clone 
None  setAliasTransformationHandler 
AliasTransformationHandler  getAliasTransformationHandler 
None  setInferTypes 
boolean  getInferTypes 
boolean  isAssumeStrictThis 
None  setAssumeStrictThis 
method
options.checkGlobalThisLevel_ter {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}
options.checkGlobalThisLevel_ter MODULE_DEPENDENCY_ERROR
options.checkGlobalThisLevel_ter MISSING_ENTRY_ERROR
options.checkGlobalThisLevel_ter options
options.checkGlobalThisLevel_ter passes
options.checkGlobalThisLevel_ter externs
options.checkGlobalThisLevel_ter modules
options.checkGlobalThisLevel_ter moduleGraph
options.checkGlobalThisLevel_ter inputs
options.checkGlobalThisLevel_ter errorManager
options.checkGlobalThisLevel_ter warningsGuard
options.checkGlobalThisLevel_ter externsRoot
options.checkGlobalThisLevel_ter jsRoot
options.checkGlobalThisLevel_ter externAndJsRoot
options.checkGlobalThisLevel_ter inputsByName
options.checkGlobalThisLevel_ter sourceMap
options.checkGlobalThisLevel_ter externExports
options.checkGlobalThisLevel_ter uniqueNameId
options.checkGlobalThisLevel_ter useThreads
options.checkGlobalThisLevel_ter hasRegExpGlobalReferences
options.checkGlobalThisLevel_ter functionInformationMap
options.checkGlobalThisLevel_ter debugLog
options.checkGlobalThisLevel_ter defaultCodingConvention
options.checkGlobalThisLevel_ter typeRegistry
options.checkGlobalThisLevel_ter parserConfig
options.checkGlobalThisLevel_ter abstractInterpreter
options.checkGlobalThisLevel_ter typeValidator
options.checkGlobalThisLevel_ter tracker
options.checkGlobalThisLevel_ter oldErrorReporter
options.checkGlobalThisLevel_ter defaultErrorReporter
options.checkGlobalThisLevel_ter OPTIMIZE_LOOP_ERROR
options.checkGlobalThisLevel_ter MOTION_ITERATIONS_ERROR
options.checkGlobalThisLevel_ter COMPILER_STACK_SIZE
options.checkGlobalThisLevel_ter logger
options.checkGlobalThisLevel_ter outStream
options.checkGlobalThisLevel_ter globalRefMap
options.checkGlobalThisLevel_ter EMPTY_MODULE_LIST_ERROR
options.checkGlobalThisLevel_ter EMPTY_ROOT_MODULE_ERROR
options.checkGlobalThisLevel_ter DUPLICATE_INPUT
options.checkGlobalThisLevel_ter DUPLICATE_EXTERN_INPUT
options.checkGlobalThisLevel_ter sanityCheck
options.checkGlobalThisLevel_ter currentTracer
options.checkGlobalThisLevel_ter currentPassName
options.checkGlobalThisLevel_ter recentChange
options.checkGlobalThisLevel_ter codeChangeHandlers
7 
None  setErrorManager 
MessageFormatter  createMessageFormatter 
None  initOptions 
None  init 
None  init 
None  init 
None  initModules 
None  initBasedOnOptions 
List  makeCompilerInput 
None  checkFirstModule 
None  fillEmptyModules 
None  rebuildInputsFromModules 
List  getAllInputsFromModules 
None  initInputsByNameMap 
Result  compile 
Result  compile 
Result  compile 
Result  compile 
Result  compile 
Result  compile 
Result  compileModules 
Result  compile 
None  disableThreads 
T  runInCompilerThread 
T  runCallableWithLargeStack 
T  runCallable 
None  compileInternal 
None  parse 
PassConfig  getPassConfig 
PassConfig  createPassConfigInternal 
None  setPassConfig 
boolean  precheck 
None  check 
None  externExports 
None  process 
None  maybeSanityCheck 
None  runSanityCheck 
None  removeTryCatchFinally 
None  stripCode 
None  runCustomPasses 
None  startPass 
None  endPass 
Tracer  newTracer 
None  stopTracer 
Result  getResult 
JSError  getMessages 
JSError  getErrors 
JSError  getWarnings 
Node  getRoot 
int  nextUniqueNameId 
None  resetUniqueNameId 
Supplier  getUniqueNameIdSupplier 
boolean  areNodesEqualForInlining 
CompilerInput  getInput 
None  removeExternInput 
CompilerInput  newExternInput 
None  addIncrementalSourceAst 
boolean  replaceIncrementalSourceAst 
JSModuleGraph  getModuleGraph 
JSTypeRegistry  getTypeRegistry 
MemoizedScopeCreator  getTypedScopeCreator 
DefaultPassConfig  ensureDefaultPassConfig 
SymbolTable  buildKnownSymbolTable 
Scope  getTopScope 
ReverseAbstractInterpreter  getReverseAbstractInterpreter 
TypeValidator  getTypeValidator 
Node  parseInputs 
Node  parse 
Node  parseSyntheticCode 
None  initCompilerOptionsIfTesting 
Node  parseSyntheticCode 
Node  parseTestCode 
ErrorReporter  getDefaultErrorReporter 
String  toSource 
String  toSourceArray 
String  toSource 
String  toSourceArray 
None  toSource 
String  toSource 
String  toSource 
None  optimize 
None  setCssRenamingMap 
CssRenamingMap  getCssRenamingMap 
None  processDefines 
boolean  isInliningForbidden 
ControlFlowGraph  computeCFG 
None  normalize 
None  prepareAst 
None  recordFunctionInformation 
None  addChangeHandler 
None  removeChangeHandler 
None  reportCodeChange 
CodingConvention  getCodingConvention 
boolean  isIdeMode 
boolean  acceptEcmaScript5 
LanguageMode  languageMode 
boolean  acceptConstKeyword 
Config  getParserConfig 
boolean  isTypeCheckingEnabled 
DiagnosticGroups  getDiagnosticGroups 
None  report 
CheckLevel  getErrorLevel 
None  throwInternalError 
int  getErrorCount 
int  getWarningCount 
boolean  hasHaltingErrors 
boolean  hasErrors 
None  addToDebugLog 
SourceFile  getSourceFileByName 
String  getSourceLine 
Region  getSourceRegion 
Node  getNodeForCodeInsertion 
SourceMap  getSourceMap 
VariableMap  getVariableMap 
VariableMap  getPropertyMap 
CompilerOptions  getOptions 
FunctionInformationMap  getFunctionalInformationMap 
None  setLoggingLevel 
String  getAstDotGraph 
ErrorManager  getErrorManager 
List  getInputsInOrder 
List  getExternsInOrder 
IntermediateState  getState 
None  setState 
List  getInputsForTesting 
List  getExternsForTesting 
boolean  hasRegExpGlobalReferences 
None  setHasRegExpGlobalReferences 
None  updateGlobalVarReferences 
ReferenceMap  getGlobalVarReferences 
method
7 
method
7 
method
7 
method
options.checkGlobalThisLevel_ter {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}
options.checkGlobalThisLevel_ter MODULE_DEPENDENCY_ERROR
options.checkGlobalThisLevel_ter MISSING_ENTRY_ERROR
options.checkGlobalThisLevel_ter options
options.checkGlobalThisLevel_ter passes
options.checkGlobalThisLevel_ter externs
options.checkGlobalThisLevel_ter modules
options.checkGlobalThisLevel_ter moduleGraph
options.checkGlobalThisLevel_ter inputs
options.checkGlobalThisLevel_ter errorManager
options.checkGlobalThisLevel_ter warningsGuard
options.checkGlobalThisLevel_ter externsRoot
options.checkGlobalThisLevel_ter jsRoot
options.checkGlobalThisLevel_ter externAndJsRoot
options.checkGlobalThisLevel_ter inputsByName
options.checkGlobalThisLevel_ter sourceMap
options.checkGlobalThisLevel_ter externExports
options.checkGlobalThisLevel_ter uniqueNameId
options.checkGlobalThisLevel_ter useThreads
options.checkGlobalThisLevel_ter hasRegExpGlobalReferences
options.checkGlobalThisLevel_ter functionInformationMap
options.checkGlobalThisLevel_ter debugLog
options.checkGlobalThisLevel_ter defaultCodingConvention
options.checkGlobalThisLevel_ter typeRegistry
options.checkGlobalThisLevel_ter parserConfig
options.checkGlobalThisLevel_ter abstractInterpreter
options.checkGlobalThisLevel_ter typeValidator
options.checkGlobalThisLevel_ter tracker
options.checkGlobalThisLevel_ter oldErrorReporter
options.checkGlobalThisLevel_ter defaultErrorReporter
options.checkGlobalThisLevel_ter OPTIMIZE_LOOP_ERROR
options.checkGlobalThisLevel_ter MOTION_ITERATIONS_ERROR
options.checkGlobalThisLevel_ter COMPILER_STACK_SIZE
options.checkGlobalThisLevel_ter logger
options.checkGlobalThisLevel_ter outStream
options.checkGlobalThisLevel_ter globalRefMap
options.checkGlobalThisLevel_ter EMPTY_MODULE_LIST_ERROR
options.checkGlobalThisLevel_ter EMPTY_ROOT_MODULE_ERROR
options.checkGlobalThisLevel_ter DUPLICATE_INPUT
options.checkGlobalThisLevel_ter DUPLICATE_EXTERN_INPUT
options.checkGlobalThisLevel_ter sanityCheck
options.checkGlobalThisLevel_ter currentTracer
options.checkGlobalThisLevel_ter currentPassName
options.checkGlobalThisLevel_ter recentChange
options.checkGlobalThisLevel_ter codeChangeHandlers
7 
method
options_ter {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}
except
method
7 
method
options.checkGlobalThisLevel_ter {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}
options.checkGlobalThisLevel_ter MODULE_DEPENDENCY_ERROR
options.checkGlobalThisLevel_ter MISSING_ENTRY_ERROR
options.checkGlobalThisLevel_ter options
options.checkGlobalThisLevel_ter passes
options.checkGlobalThisLevel_ter externs
options.checkGlobalThisLevel_ter modules
options.checkGlobalThisLevel_ter moduleGraph
options.checkGlobalThisLevel_ter inputs
options.checkGlobalThisLevel_ter errorManager
options.checkGlobalThisLevel_ter warningsGuard
options.checkGlobalThisLevel_ter externsRoot
options.checkGlobalThisLevel_ter jsRoot
options.checkGlobalThisLevel_ter externAndJsRoot
options.checkGlobalThisLevel_ter inputsByName
options.checkGlobalThisLevel_ter sourceMap
options.checkGlobalThisLevel_ter externExports
options.checkGlobalThisLevel_ter uniqueNameId
options.checkGlobalThisLevel_ter useThreads
options.checkGlobalThisLevel_ter hasRegExpGlobalReferences
options.checkGlobalThisLevel_ter functionInformationMap
options.checkGlobalThisLevel_ter debugLog
options.checkGlobalThisLevel_ter defaultCodingConvention
options.checkGlobalThisLevel_ter typeRegistry
options.checkGlobalThisLevel_ter parserConfig
options.checkGlobalThisLevel_ter abstractInterpreter
options.checkGlobalThisLevel_ter typeValidator
options.checkGlobalThisLevel_ter tracker
options.checkGlobalThisLevel_ter oldErrorReporter
options.checkGlobalThisLevel_ter defaultErrorReporter
options.checkGlobalThisLevel_ter OPTIMIZE_LOOP_ERROR
options.checkGlobalThisLevel_ter MOTION_ITERATIONS_ERROR
options.checkGlobalThisLevel_ter COMPILER_STACK_SIZE
options.checkGlobalThisLevel_ter logger
options.checkGlobalThisLevel_ter outStream
options.checkGlobalThisLevel_ter globalRefMap
options.checkGlobalThisLevel_ter EMPTY_MODULE_LIST_ERROR
options.checkGlobalThisLevel_ter EMPTY_ROOT_MODULE_ERROR
options.checkGlobalThisLevel_ter DUPLICATE_INPUT
options.checkGlobalThisLevel_ter DUPLICATE_EXTERN_INPUT
options.checkGlobalThisLevel_ter sanityCheck
options.checkGlobalThisLevel_ter currentTracer
options.checkGlobalThisLevel_ter currentPassName
options.checkGlobalThisLevel_ter recentChange
options.checkGlobalThisLevel_ter codeChangeHandlers
7 
method
options_ter {'options_ter': 'CompilerOptions', 'printer_ter': 'PrintStreamErrorManager', 'guards_ter': 'List', 'composedGuards_ter': 'ComposeWarningsGuard'}
7 CompilerOptions
None  setCheckShadowVars 
None  setAggressiveVarCheck 
None  setCheckFunctions 
None  setCheckMethods 
None  setReportMissingOverride 
None  setReportUnknownTypes 
None  setCheckRequires 
None  setCheckProvides 
None  setCheckGlobalNamesLevel 
None  setBrokenClosureRequiresLevel 
None  setCheckGlobalThisLevel 
None  setCheckMissingGetCssNameLevel 
None  setCheckUnreachableCode 
None  setCheckMissingReturn 
Map  getDefineReplacements 
Map  getTweakReplacements 
Map  getReplacementsHelper 
None  setDefineToBooleanLiteral 
None  setDefineToStringLiteral 
None  setDefineToNumberLiteral 
None  setDefineToDoubleLiteral 
None  setTweakToBooleanLiteral 
None  setTweakToStringLiteral 
None  setTweakToNumberLiteral 
None  setTweakToDoubleLiteral 
None  skipAllCompilerPasses 
boolean  enables 
boolean  disables 
None  setWarningLevel 
WarningsGuard  getWarningsGuard 
None  resetWarningsGuard 
None  useEmergencyFailSafe 
None  addWarningsGuard 
None  setRenamingPolicy 
None  setPropertyAffinity 
None  setShadowVariables 
None  setCollapsePropertiesOnExternTypes 
None  setProcessObjectPropertyString 
None  setIdGenerators 
None  setReplaceStringsConfiguration 
None  setRewriteNewDateGoogNow 
None  setRemoveAbstractMethods 
None  setRemoveClosureAsserts 
None  setNameAnonymousFunctionsOnly 
None  lineLengthThreshold 
None  setColorizeErrorOutput 
boolean  shouldColorizeErrorOutput 
None  setChainCalls 
None  setAcceptConstKeyword 
None  enableRuntimeTypeCheck 
None  disableRuntimeTypeCheck 
None  setGenerateExports 
None  setCodingConvention 
CodingConvention  getCodingConvention 
None  setManageClosureDependencies 
None  setManageClosureDependencies 
None  setSummaryDetailLevel 
None  enableExternExports 
None  setExtraAnnotationNames 
boolean  isExternExportsEnabled 
None  setOutputCharset 
None  setTweakProcessing 
TweakProcessing  getTweakProcessing 
None  setLanguageIn 
LanguageMode  getLanguageIn 
LanguageMode  getLanguageOut 
None  setLooseTypes 
Object  clone 
None  setAliasTransformationHandler 
AliasTransformationHandler  getAliasTransformationHandler 
None  setInferTypes 
boolean  getInferTypes 
boolean  isAssumeStrictThis 
None  setAssumeStrictThis 
method
7 
stderr: Check out program version: Closure-59b..................................... OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:27<00:00, 27.63s/it]100%|██████████| 1/1 [00:27<00:00, 27.63s/it]
