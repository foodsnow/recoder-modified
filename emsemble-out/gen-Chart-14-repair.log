stdout: LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member markers_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(markers);

StatementExpression expression Assignment expressionl MemberReference member markers_ter ^ ^ ^ ^ value Cast type ReferenceType name ArrayList_ter ^ ^ ^ ^ expression This selectors MemberReference member foregroundDomainMarkers_ter ^ ^ ^ MethodInvocation arguments ClassCreator type ReferenceType name Integer_ter ^ ^ ^ ^ arguments MemberReference member index_ter ^ ^ ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
arg 
arg 
arg 
arg 
markers = (ArrayList)this.foregroundDomainMarkers.get(new Integer(index));

StatementExpression expression MethodInvocation member fireChangeEvent_ter ^ ^ ^ ^ ^ 
fireChangeEvent();

StatementExpression expression Assignment expressionl MemberReference member markers_ter ^ ^ ^ ^ value Cast type ReferenceType name ArrayList_ter ^ ^ ^ ^ expression This selectors MemberReference member backgroundDomainMarkers_ter ^ ^ ^ MethodInvocation arguments ClassCreator type ReferenceType name Integer_ter ^ ^ ^ ^ arguments MemberReference member index_ter ^ ^ ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
arg 
arg 
arg 
arg 
markers = (ArrayList)this.backgroundDomainMarkers.get(new Integer(index));

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member layer_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(layer);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member notify_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(notify);

ReturnStatement_ter ^ 
if (true) { return;
 }

ReturnStatement expression MemberReference member removed_ter ^ ^ ^ ^ ^ 
if (true) { return removed; }

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ ^ ^ ^ 
boolean removed = ;


LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
long removed = markers.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member backgroundDomainMarkers_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(backgroundDomainMarkers);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member index_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(index);

StatementExpression expression MethodInvocation member clearDomainAxes_ter ^ ^ ^ ^ ^ 
clearDomainAxes();

StatementExpression expression MethodInvocation member configureDomainAxes_ter ^ ^ ^ ^ ^ 
configureDomainAxes();

StatementExpression expression MethodInvocation member clearRangeAxes_ter ^ ^ ^ ^ ^ 
clearRangeAxes();

StatementExpression expression MethodInvocation member configureRangeAxes_ter ^ ^ ^ ^ ^ 
configureRangeAxes();

StatementExpression expression MethodInvocation member clearDomainMarkers_ter ^ ^ ^ ^ ^ 
clearDomainMarkers();

StatementExpression expression MethodInvocation member clearRangeMarkers_ter ^ ^ ^ ^ ^ 
clearRangeMarkers();

StatementExpression expression MethodInvocation member clearAnnotations_ter ^ ^ ^ ^ ^ 
clearAnnotations();

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier marker_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = marker.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier index_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = index.remove(marker);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
final boolean removed = markers.remove(marker);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member marker_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((marker != null)){

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier layer_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = layer.remove(marker);

BreakStatement_ter ^ 
break;

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier notify_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = notify.remove(marker);

ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ 
if (true) { return false; }

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member par4 ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove();

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member foregroundDomainMarkers_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(foregroundDomainMarkers);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier Layer_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = Layer.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer Cast type BasicType name boolean_ter ^ ^ ^ ^ expression MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
boolean removed = (boolean)markers.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ MemberReference member layer_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(marker, layer);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation arguments MemberReference member marker_ter ^ ^ ^ ^ member addRangeMarker_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = addRangeMarker(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MemberReference member marker_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = marker;

LocalVariableDeclaration type ReferenceType name ArrayList_ter ^ ^ ^ ^ declarators VariableDeclarator name markers_ter ^ ^ ^ ^ ^ 
arg 
arg 
ArrayList markers = ;


LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member removed_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(removed);

ReturnStatement expression Literal value true_ter ^ ^ ^ ^ ^ 
if (true) { return true; }

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member removeDomainMarker_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.removeDomainMarker(marker);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member markers_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((markers != null)){

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member layer_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((layer != null)){

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(false);

StatementExpression expression MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ 
markers.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MemberReference member index_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = index;

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(marker, false);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(marker, true);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member fireChangeEvent_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.fireChangeEvent(marker);

StatementExpression expression MethodInvocation qualifier Layer_ter ^ ^ member clearDomainAxes_ter ^ ^ ^ ^ ^ 
Layer.clearDomainAxes();

StatementExpression expression MethodInvocation qualifier Layer_ter ^ ^ member configureDomainAxes_ter ^ ^ ^ ^ ^ 
Layer.configureDomainAxes();

StatementExpression expression MethodInvocation qualifier Layer_ter ^ ^ member clearRangeAxes_ter ^ ^ ^ ^ ^ 
Layer.clearRangeAxes();

StatementExpression expression MethodInvocation qualifier Layer_ter ^ ^ member configureRangeAxes_ter ^ ^ ^ ^ ^ 
Layer.configureRangeAxes();

StatementExpression expression MethodInvocation qualifier Layer_ter ^ ^ member clearDomainMarkers_ter ^ ^ ^ ^ ^ 
Layer.clearDomainMarkers();

StatementExpression expression MethodInvocation qualifier Layer_ter ^ ^ member clearRangeMarkers_ter ^ ^ ^ ^ ^ 
Layer.clearRangeMarkers();

StatementExpression expression MethodInvocation qualifier Layer_ter ^ ^ member clearAnnotations_ter ^ ^ ^ ^ ^ 
Layer.clearAnnotations();

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(true);

StatementExpression expression Assignment expressionl MemberReference member markers_ter ^ ^ ^ ^ value Cast type ReferenceType name ArrayList_ter ^ ^ ^ ^ expression This selectors MemberReference member foregroundRangeMarkers_ter ^ ^ ^ MethodInvocation arguments ClassCreator type ReferenceType name Integer_ter ^ ^ ^ ^ arguments MemberReference member index_ter ^ ^ ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
arg 
arg 
arg 
arg 
markers = (ArrayList)this.foregroundRangeMarkers.get(new Integer(index));

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member markers_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(markers);

StatementExpression expression MethodInvocation member fireChangeEvent_ter ^ ^ ^ ^ ^ 
fireChangeEvent();

ReturnStatement expression MemberReference member removed_ter ^ ^ ^ ^ ^ 
if (true) { return removed; }

ReturnStatement_ter ^ 
if (true) { return;
 }

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ ^ ^ ^ 
boolean removed = ;


ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ 
if (true) { return false; }

StatementExpression expression Assignment expressionl MemberReference member markers_ter ^ ^ ^ ^ value Cast type ReferenceType name ArrayList_ter ^ ^ ^ ^ expression This selectors MemberReference member backgroundRangeMarkers_ter ^ ^ ^ MethodInvocation arguments ClassCreator type ReferenceType name Integer_ter ^ ^ ^ ^ arguments MemberReference member index_ter ^ ^ ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
arg 
arg 
arg 
arg 
markers = (ArrayList)this.backgroundRangeMarkers.get(new Integer(index));

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(marker);

BreakStatement_ter ^ 
break;

ReturnStatement expression Literal value true_ter ^ ^ ^ ^ ^ 
if (true) { return true; }

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member layer_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(layer);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier marker_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = marker.remove(marker);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
final boolean removed = markers.remove(marker);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member marker_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((marker != null)){

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member notify_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(notify);

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
long removed = markers.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier index_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = index.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier layer_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = layer.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member backgroundRangeMarkers_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(backgroundRangeMarkers);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member index_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(index);

StatementExpression expression MethodInvocation member clearDomainAxes_ter ^ ^ ^ ^ ^ 
clearDomainAxes();

StatementExpression expression MethodInvocation member configureDomainAxes_ter ^ ^ ^ ^ ^ 
configureDomainAxes();

StatementExpression expression MethodInvocation member clearRangeAxes_ter ^ ^ ^ ^ ^ 
clearRangeAxes();

StatementExpression expression MethodInvocation member configureRangeAxes_ter ^ ^ ^ ^ ^ 
configureRangeAxes();

StatementExpression expression MethodInvocation member clearDomainMarkers_ter ^ ^ ^ ^ ^ 
clearDomainMarkers();

StatementExpression expression MethodInvocation member clearRangeMarkers_ter ^ ^ ^ ^ ^ 
clearRangeMarkers();

StatementExpression expression MethodInvocation member clearAnnotations_ter ^ ^ ^ ^ ^ 
clearAnnotations();

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier notify_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = notify.remove(marker);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member markers_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((markers != null)){


ContinueStatement_ter ^ 
continue;

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer Cast type BasicType name boolean_ter ^ ^ ^ ^ expression MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
boolean removed = (boolean)markers.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member foregroundRangeMarkers_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(foregroundRangeMarkers);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = remove(marker);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member layer_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((layer != null)){

ReturnStatement expression This_ter ^ ^ ^ 
if (true) { return this; }

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(false);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MemberReference member marker_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = marker;

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ MemberReference member layer_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(marker, layer);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MemberReference member index_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = index;

StatementExpression expression MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ 
markers.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation arguments MemberReference member marker_ter ^ ^ ^ ^ member addRangeMarker_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = addRangeMarker(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier removed_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = removed.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member par4 ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove();

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member index_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((index != null)){

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member removed_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(removed);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member removeRangeMarker_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.removeRangeMarker(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(true);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member markers_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(markers);

StatementExpression expression Assignment expressionl MemberReference member markers_ter ^ ^ ^ ^ value Cast type ReferenceType name ArrayList_ter ^ ^ ^ ^ expression This selectors MemberReference member foregroundDomainMarkers_ter ^ ^ ^ MethodInvocation arguments ClassCreator type ReferenceType name Integer_ter ^ ^ ^ ^ arguments MemberReference member index_ter ^ ^ ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
arg 
arg 
arg 
arg 
markers = (ArrayList)this.foregroundDomainMarkers.get(new Integer(index));

StatementExpression expression MethodInvocation member fireChangeEvent_ter ^ ^ ^ ^ ^ 
fireChangeEvent();

StatementExpression expression Assignment expressionl MemberReference member markers_ter ^ ^ ^ ^ value Cast type ReferenceType name ArrayList_ter ^ ^ ^ ^ expression This selectors MemberReference member backgroundDomainMarkers_ter ^ ^ ^ MethodInvocation arguments ClassCreator type ReferenceType name Integer_ter ^ ^ ^ ^ arguments MemberReference member index_ter ^ ^ ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
arg 
arg 
arg 
arg 
markers = (ArrayList)this.backgroundDomainMarkers.get(new Integer(index));

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member layer_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(layer);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member notify_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(notify);

ReturnStatement_ter ^ 
if (true) { return;
 }

ReturnStatement expression MemberReference member removed_ter ^ ^ ^ ^ ^ 
if (true) { return removed; }

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ ^ ^ ^ 
boolean removed = ;


LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
long removed = markers.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member backgroundDomainMarkers_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(backgroundDomainMarkers);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member index_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(index);

StatementExpression expression MethodInvocation member clearDomainAxes_ter ^ ^ ^ ^ ^ 
clearDomainAxes();

StatementExpression expression MethodInvocation member configureDomainAxes_ter ^ ^ ^ ^ ^ 
configureDomainAxes();

StatementExpression expression MethodInvocation member clearRangeAxes_ter ^ ^ ^ ^ ^ 
clearRangeAxes();

StatementExpression expression MethodInvocation member configureRangeAxes_ter ^ ^ ^ ^ ^ 
configureRangeAxes();

StatementExpression expression MethodInvocation member clearDomainMarkers_ter ^ ^ ^ ^ ^ 
clearDomainMarkers();

StatementExpression expression MethodInvocation member clearRangeMarkers_ter ^ ^ ^ ^ ^ 
clearRangeMarkers();

StatementExpression expression MethodInvocation member clearAnnotations_ter ^ ^ ^ ^ ^ 
clearAnnotations();

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier marker_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = marker.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier index_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = index.remove(marker);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
final boolean removed = markers.remove(marker);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member marker_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((marker != null)){

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier layer_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = layer.remove(marker);

BreakStatement_ter ^ 
break;

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier notify_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = notify.remove(marker);

ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ 
if (true) { return false; }

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member par4 ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove();

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member foregroundDomainMarkers_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(foregroundDomainMarkers);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier Layer_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = Layer.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer Cast type BasicType name boolean_ter ^ ^ ^ ^ expression MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
boolean removed = (boolean)markers.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ MemberReference member layer_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(marker, layer);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation arguments MemberReference member marker_ter ^ ^ ^ ^ member addDomainMarker_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = addDomainMarker(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation arguments MemberReference member marker_ter ^ ^ ^ ^ member addRangeMarker_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = addRangeMarker(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MemberReference member marker_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = marker;

LocalVariableDeclaration type ReferenceType name ArrayList_ter ^ ^ ^ ^ declarators VariableDeclarator name markers_ter ^ ^ ^ ^ ^ 
arg 
arg 
ArrayList markers = ;


LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member removed_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(removed);

ReturnStatement expression Literal value true_ter ^ ^ ^ ^ ^ 
if (true) { return true; }

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member removeDomainMarker_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.removeDomainMarker(marker);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member markers_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((markers != null)){

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member layer_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((layer != null)){

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(false);

StatementExpression expression MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ 
markers.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MemberReference member index_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = index;

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(marker, false);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(marker, true);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member fireChangeEvent_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.fireChangeEvent(marker);

StatementExpression expression MethodInvocation qualifier Layer_ter ^ ^ member clearDomainAxes_ter ^ ^ ^ ^ ^ 
Layer.clearDomainAxes();

StatementExpression expression MethodInvocation qualifier Layer_ter ^ ^ member configureDomainAxes_ter ^ ^ ^ ^ ^ 
Layer.configureDomainAxes();

StatementExpression expression MethodInvocation qualifier Layer_ter ^ ^ member clearRangeAxes_ter ^ ^ ^ ^ ^ 
Layer.clearRangeAxes();

StatementExpression expression MethodInvocation qualifier Layer_ter ^ ^ member configureRangeAxes_ter ^ ^ ^ ^ ^ 
Layer.configureRangeAxes();

StatementExpression expression MethodInvocation qualifier Layer_ter ^ ^ member clearDomainMarkers_ter ^ ^ ^ ^ ^ 
Layer.clearDomainMarkers();

StatementExpression expression MethodInvocation qualifier Layer_ter ^ ^ member clearRangeMarkers_ter ^ ^ ^ ^ ^ 
Layer.clearRangeMarkers();

StatementExpression expression MethodInvocation qualifier Layer_ter ^ ^ member clearAnnotations_ter ^ ^ ^ ^ ^ 
Layer.clearAnnotations();

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(true);

StatementExpression expression Assignment expressionl MemberReference member markers_ter ^ ^ ^ ^ value Cast type ReferenceType name ArrayList_ter ^ ^ ^ ^ expression This selectors MemberReference member foregroundRangeMarkers_ter ^ ^ ^ MethodInvocation arguments ClassCreator type ReferenceType name Integer_ter ^ ^ ^ ^ arguments MemberReference member index_ter ^ ^ ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
arg 
arg 
arg 
arg 
markers = (ArrayList)this.foregroundRangeMarkers.get(new Integer(index));

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member markers_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(markers);

StatementExpression expression MethodInvocation member fireChangeEvent_ter ^ ^ ^ ^ ^ 
fireChangeEvent();

ReturnStatement expression MemberReference member removed_ter ^ ^ ^ ^ ^ 
if (true) { return removed; }

ReturnStatement_ter ^ 
if (true) { return;
 }

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ ^ ^ ^ 
boolean removed = ;


ReturnStatement expression Literal value false_ter ^ ^ ^ ^ ^ 
if (true) { return false; }

StatementExpression expression Assignment expressionl MemberReference member markers_ter ^ ^ ^ ^ value Cast type ReferenceType name ArrayList_ter ^ ^ ^ ^ expression This selectors MemberReference member backgroundRangeMarkers_ter ^ ^ ^ MethodInvocation arguments ClassCreator type ReferenceType name Integer_ter ^ ^ ^ ^ arguments MemberReference member index_ter ^ ^ ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
arg 
arg 
arg 
arg 
markers = (ArrayList)this.backgroundRangeMarkers.get(new Integer(index));

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(marker);

BreakStatement_ter ^ 
break;

ReturnStatement expression Literal value true_ter ^ ^ ^ ^ ^ 
if (true) { return true; }

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member layer_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(layer);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier marker_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = marker.remove(marker);

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
final boolean removed = markers.remove(marker);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member marker_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((marker != null)){

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member notify_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(notify);

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
long removed = markers.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier index_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = index.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier layer_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = layer.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member backgroundRangeMarkers_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(backgroundRangeMarkers);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member index_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(index);

StatementExpression expression MethodInvocation member clearDomainAxes_ter ^ ^ ^ ^ ^ 
clearDomainAxes();

StatementExpression expression MethodInvocation member configureDomainAxes_ter ^ ^ ^ ^ ^ 
configureDomainAxes();

StatementExpression expression MethodInvocation member clearRangeAxes_ter ^ ^ ^ ^ ^ 
clearRangeAxes();

StatementExpression expression MethodInvocation member configureRangeAxes_ter ^ ^ ^ ^ ^ 
configureRangeAxes();

StatementExpression expression MethodInvocation member clearDomainMarkers_ter ^ ^ ^ ^ ^ 
clearDomainMarkers();

StatementExpression expression MethodInvocation member clearRangeMarkers_ter ^ ^ ^ ^ ^ 
clearRangeMarkers();

StatementExpression expression MethodInvocation member clearAnnotations_ter ^ ^ ^ ^ ^ 
clearAnnotations();

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier notify_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = notify.remove(marker);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member markers_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((markers != null)){


ContinueStatement_ter ^ 
continue;

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer Cast type BasicType name boolean_ter ^ ^ ^ ^ expression MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
boolean removed = (boolean)markers.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member foregroundRangeMarkers_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(foregroundRangeMarkers);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = remove(marker);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member layer_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((layer != null)){

ReturnStatement expression This_ter ^ ^ ^ 
if (true) { return this; }

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(false);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MemberReference member marker_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = marker;

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ MemberReference member layer_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(marker, layer);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MemberReference member index_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = index;

StatementExpression expression MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ 
markers.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation arguments MemberReference member marker_ter ^ ^ ^ ^ member addDomainMarker_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = addDomainMarker(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation arguments MemberReference member marker_ter ^ ^ ^ ^ member addRangeMarker_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = addRangeMarker(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier removed_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = removed.remove(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member par4 ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove();

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member index_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((index != null)){

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member removed_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(removed);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments MemberReference member marker_ter ^ ^ ^ ^ member removeRangeMarker_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.removeRangeMarker(marker);

LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name removed_ter ^ ^ initializer MethodInvocation qualifier markers_ter ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member remove_ter ^ ^ ^ ^ ^ ^ ^ 
boolean removed = markers.remove(true);

stderr: 